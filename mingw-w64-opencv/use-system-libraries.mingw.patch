diff -Naur opencv-2.4.8/cmake/OpenCVFindLibsVideo.cmake opencv-2.4.8-p/cmake/OpenCVFindLibsVideo.cmake
--- opencv-2.4.8/cmake/OpenCVFindLibsVideo.cmake	2013-12-27 21:09:18.000000000 +0400
+++ opencv-2.4.8-p/cmake/OpenCVFindLibsVideo.cmake	2014-04-22 15:10:52.691800000 +0400
@@ -151,7 +151,7 @@
 # --- FFMPEG ---
 ocv_clear_vars(HAVE_FFMPEG HAVE_FFMPEG_CODEC HAVE_FFMPEG_FORMAT HAVE_FFMPEG_UTIL HAVE_FFMPEG_SWSCALE HAVE_GENTOO_FFMPEG HAVE_FFMPEG_FFMPEG)
 if(WITH_FFMPEG)
-  if(WIN32 AND NOT ARM)
+  if(WIN32 AND NOT ARM AND NOT MINGW)
     include("${OpenCV_SOURCE_DIR}/3rdparty/ffmpeg/ffmpeg_version.cmake")
   elseif(UNIX)
     CHECK_MODULE(libavcodec HAVE_FFMPEG_CODEC)
diff -Naur opencv-2.4.8/cmake/OpenCVFindOpenEXR.cmake opencv-2.4.8-p/cmake/OpenCVFindOpenEXR.cmake
--- opencv-2.4.8/cmake/OpenCVFindOpenEXR.cmake	2013-12-27 21:09:18.000000000 +0400
+++ opencv-2.4.8-p/cmake/OpenCVFindOpenEXR.cmake	2014-04-22 15:07:19.721000000 +0400
@@ -13,7 +13,7 @@
 SET(OPENEXR_LIBSEARCH_SUFFIXES "")
 file(TO_CMAKE_PATH "$ENV{ProgramFiles}" ProgramFiles_ENV_PATH)
 
-if(WIN32)
+if(WIN32 AND NOT MINGW)
     SET(OPENEXR_ROOT "C:/Deploy" CACHE STRING "Path to the OpenEXR \"Deploy\" folder")
     if(CMAKE_CL_64)
         SET(OPENEXR_LIBSEARCH_SUFFIXES x64/Release x64 x64/Debug)
diff -Naur opencv-2.4.8/CMakeLists.txt opencv-2.4.8-p/CMakeLists.txt
--- opencv-2.4.8/CMakeLists.txt	2013-12-27 21:09:18.000000000 +0400
+++ opencv-2.4.8-p/CMakeLists.txt	2014-04-22 15:14:18.752200000 +0400
@@ -182,12 +182,12 @@
 OCV_OPTION(BUILD_ANDROID_PACKAGE    "Build platform-specific package for Google Play" OFF IF ANDROID )
 
 # 3rd party libs
-OCV_OPTION(BUILD_ZLIB               "Build zlib from source"             WIN32 OR APPLE )
-OCV_OPTION(BUILD_TIFF               "Build libtiff from source"          WIN32 OR ANDROID OR APPLE )
-OCV_OPTION(BUILD_JASPER             "Build libjasper from source"        WIN32 OR ANDROID OR APPLE )
-OCV_OPTION(BUILD_JPEG               "Build libjpeg from source"          WIN32 OR ANDROID OR APPLE )
-OCV_OPTION(BUILD_PNG                "Build libpng from source"           WIN32 OR ANDROID OR APPLE )
-OCV_OPTION(BUILD_OPENEXR            "Build openexr from source"          WIN32 OR ANDROID OR APPLE )
+OCV_OPTION(BUILD_ZLIB               "Build zlib from source"             WIN32 AND NOT MINGW OR APPLE )
+OCV_OPTION(BUILD_TIFF               "Build libtiff from source"          WIN32 AND NOT MINGW OR ANDROID OR APPLE )
+OCV_OPTION(BUILD_JASPER             "Build libjasper from source"        WIN32 AND NOT MINGW OR ANDROID OR APPLE )
+OCV_OPTION(BUILD_JPEG               "Build libjpeg from source"          WIN32 AND NOT MINGW OR ANDROID OR APPLE )
+OCV_OPTION(BUILD_PNG                "Build libpng from source"           WIN32 AND NOT MINGW OR ANDROID OR APPLE )
+OCV_OPTION(BUILD_OPENEXR            "Build openexr from source"          WIN32 AND NOT MINGW OR ANDROID OR APPLE )
 OCV_OPTION(BUILD_TBB                "Download and build TBB from source" ANDROID )
 
 # OpenCV installation options
