# Maintainer: @naveen521kk on Github, Naveen M K <naveen521kk@gmail.com>

_perlname=Specio
_realname="${_perlname,,}"
pkgbase=mingw-w64-perl-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-perl-${_realname}")
pkgver=0.47
pkgrel=1
pkgdesc="Type constraints and coercions for Perl (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32')
url="https://metacpan.org/release/${_perlname}"
groups=("${MINGW_PACKAGE_PREFIX}-perl-modules")
provides=(
  "${MINGW_PACKAGE_PREFIX}-perl-specio-coercion"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-constraint-anycan"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-constraint-anydoes"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-constraint-anyisa"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-constraint-enum"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-constraint-intersection"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-constraint-objectcan"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-constraint-objectdoes"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-constraint-objectisa"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-constraint-parameterizable"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-constraint-parameterized"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-constraint-role-cantype"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-constraint-role-doestype"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-constraint-role-interface"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-constraint-role-isatype"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-constraint-simple"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-constraint-structurable"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-constraint-structured"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-constraint-union"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-declare"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-declaredat"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-exception"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-exporter"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-helpers"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-library-builtins"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-library-numeric"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-library-perl"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-library-string"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-library-structured"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-library-structured-dict"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-library-structured-map"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-library-structured-tuple"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-oo"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-partialdump"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-registry"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-role-inlinable"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-subs"
  "${MINGW_PACKAGE_PREFIX}-perl-specio-typechecks"
  "${MINGW_PACKAGE_PREFIX}-perl-test-specio"
)
depends=(
  "${MINGW_PACKAGE_PREFIX}-perl"
  "${MINGW_PACKAGE_PREFIX}-perl-mro-compat"
  "${MINGW_PACKAGE_PREFIX}-perl-role-tiny-with"
  "${MINGW_PACKAGE_PREFIX}-perl-role-tiny"
  "${MINGW_PACKAGE_PREFIX}-perl-scalar-util"
  "${MINGW_PACKAGE_PREFIX}-perl-test-fatal"
  "${MINGW_PACKAGE_PREFIX}-perl-strict"
  "${MINGW_PACKAGE_PREFIX}-perl-version"
  "${MINGW_PACKAGE_PREFIX}-perl-list-util"
  "${MINGW_PACKAGE_PREFIX}-perl-module-runtime"
  "${MINGW_PACKAGE_PREFIX}-perl-eval-closure"
  "${MINGW_PACKAGE_PREFIX}-perl-warnings"
  "${MINGW_PACKAGE_PREFIX}-perl-exporter"
  "${MINGW_PACKAGE_PREFIX}-perl-sub-quote"
  "${MINGW_PACKAGE_PREFIX}-perl-try-tiny"
  "${MINGW_PACKAGE_PREFIX}-perl-storable"
  "${MINGW_PACKAGE_PREFIX}-perl-io-file"
  "${MINGW_PACKAGE_PREFIX}-perl-b"
  "${MINGW_PACKAGE_PREFIX}-perl-overload"
  "${MINGW_PACKAGE_PREFIX}-perl-carp"
  "${MINGW_PACKAGE_PREFIX}-perl-test-more"
  "${MINGW_PACKAGE_PREFIX}-perl-re"
  "${MINGW_PACKAGE_PREFIX}-perl-devel-stacktrace"
  "${MINGW_PACKAGE_PREFIX}-perl-parent"
  "${MINGW_PACKAGE_PREFIX}-perl-sub-util"
  "${MINGW_PACKAGE_PREFIX}-perl-ref-util"
)
options=('!emptydirs')
makedepends=(
  "${MINGW_PACKAGE_PREFIX}-python"
  "${MINGW_PACKAGE_PREFIX}-cc"
  $([[ ${MINGW_PACKAGE_PREFIX} != *-clang-* ]] || \
    echo "${MINGW_PACKAGE_PREFIX}-gcc-compat")
)
license=('artistic_2')
source=(
  'https://cpan.metacpan.org/authors/id/D/DR/DROLSKY/Specio-0.47.tar.gz'
  'patchmakefile.py'
)
sha256sums=('f41307f14444f8777e572f27eeb6a964084399e7e382c47c577827ad8a286a1c'
            '00fe5ced42aa635714909a8eba1347a6c132011a9bce68e9c75b27ebd64628f2')

build() {
  cd "$srcdir/${_perlname}-${pkgver}"
  PERL_MM_USE_DEFAULT=1 perl Makefile.PL
  export pkgdir=$pkgdir
  python $srcdir/patchmakefile.py
  mingw32-make
}

package() {
  cd "$srcdir/${_perlname}-${pkgver}"
  mingw32-make DESTDIR="${pkgdir}/" install
}
