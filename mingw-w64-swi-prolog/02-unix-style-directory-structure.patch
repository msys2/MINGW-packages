--- swipl-8.4.3/CMakeLists.txt.old	2022-06-17 10:48:26 +0000
+++ swipl-8.4.3/CMakeLists.txt	2022-06-17 10:49:01 +0000
@@ -120,7 +120,7 @@
 ################
 # Installation directories
 
-if(WIN32)
+if(WIN32 AND NOT MSYS2)
 
   set(SWIPL_INSTALL_DIR "."
       CACHE STRING "Directory below <prefix> for installation")
@@ -134,7 +134,7 @@
   set(SWIPL_TMP_DIR "c:/tmp" CACHE STRING
       "Directory to be used if the environment variable TEMP is not set")
 
-else(WIN32)
+else()
 
   if(SWIPL_VERSIONED_DIR)
     set(SWIPL_INSTALL_DIR_DEF  swipl-${SWIPL_VERSION_STRING})
@@ -169,7 +169,7 @@
 
   set(SWIPL_INSTALL_MODULES  ${SWIPL_INSTALL_PREFIX}/lib/${SWIPL_ARCH})
 
-endif(WIN32)
+endif()
 
 set(SWIPL_CMAKE_NAMESPACE swipl::)
 set(SWIPL_INSTALL_CMAKE_CONFIG_DIR lib/cmake/swipl)
--- swipl-8.4.3/src/CMakeLists.txt.old	2022-06-17 12:01:22 +0000
+++ swipl-8.4.3/src/CMakeLists.txt	2022-06-17 12:00:52 +0000
@@ -702,16 +702,17 @@
	    FILES ${CMAKE_CURRENT_SOURCE_DIR}/swipl.ico
	    DESTINATION ${SWIPL_INSTALL_PREFIX})

-else(WIN32)
+endif()

 if(NOT BUILD_MACOS_BUNDLE)
 # Create symbolic link from public installation dir to executables
 install(DIRECTORY DESTINATION bin)
-ilink(${CMAKE_INSTALL_PREFIX}/${SWIPL_INSTALL_ARCH_EXE}/swipl
-      ${CMAKE_INSTALL_PREFIX}/bin/swipl)
-ilink(${CMAKE_INSTALL_PREFIX}/${SWIPL_INSTALL_ARCH_EXE}/swipl-ld
-      ${CMAKE_INSTALL_PREFIX}/bin/swipl-ld)
+file(WRITE ${CMAKE_CURRENT_SOURCE_DIR}/swipl
+     "#!/usr/bin/bash\n${CMAKE_INSTALL_PREFIX}/${SWIPL_INSTALL_ARCH_EXE}/swipl $@\n")
+file(WRITE ${CMAKE_CURRENT_SOURCE_DIR}/swipl-ld
+     "#!/usr/bin/bash\n${CMAKE_INSTALL_PREFIX}/${SWIPL_INSTALL_ARCH_EXE}/swipl-ld $@\n")
+install(PROGRAMS ${CMAKE_CURRENT_SOURCE_DIR}/swipl DESTINATION bin)
+install(PROGRAMS ${CMAKE_CURRENT_SOURCE_DIR}/swipl-ld DESTINATION bin)
 endif()

-endif(WIN32)

--- swipl-8.4.3/boot/init.pl	2022-06-21 13:08:37 +0000
+++ src/swipl-8.4.3/boot/init.pl	2022-07-20 14:05:33 +0000
@@ -1069,10 +1069,10 @@
     ArchLib = 'lib/fat-darwin'.
 user:file_search_path(foreign, swi(ArchLib)) :-
-    \+ current_prolog_flag(windows, true),
     current_prolog_flag(arch, Arch),
     atom_concat('lib/', Arch, ArchLib).
 user:file_search_path(foreign, swi(SoLib)) :-
     (   current_prolog_flag(windows, true)
-    ->  SoLib = bin
+    ->  current_prolog_flag(arch, Arch),
+        atom_concat('bin/', Arch, SoLib)
     ;   SoLib = lib
     ).
--- swipl-8.4.3/library/prolog_config.pl	2022-08-09 07:31:18 +0000
+++ swipl-8.4.3/library/prolog_config.pl.new	2022-08-09 07:31:11 +0000
@@ -91,7 +91,8 @@
     (   current_prolog_flag(c_libdir, Rel)
     ->  atomic_list_concat([Home, Rel], /, Value)
     ;   current_prolog_flag(windows, true)
-    ->  atomic_list_concat([Home, bin], /, Value)
+    ->  current_prolog_flag(arch, Arch),
+        atomic_list_concat([Home, bin, Arch], /, Value)
     ;   apple_bundle_libdir(LibDir)
     ->  Value = LibDir
     ;   current_prolog_flag(arch, Arch)
--- swipl-9.0.0/library/build/tools.pl    2022-11-24 12:05:19 +0000
+++ swipl-9.0.0/library/build/tools.pl.new        2022-11-26 09:42:23 +0000
@@ -376,11 +376,11 @@
 prolog_library_dir(Dir) :-
     prolog:runtime_config(c_libdir, Dir),
     !.
-prolog_library_dir(Dir) :-
-    current_prolog_flag(windows, true),
-    current_prolog_flag(home, Home),
-    !,
-    atomic_list_concat([Home, bin], /, Dir).
+%prolog_library_dir(Dir) :-
+%    current_prolog_flag(windows, true),
+%    current_prolog_flag(home, Home),
+%    !,
+%    atomic_list_concat([Home, bin], /, Dir).
 prolog_library_dir(Dir) :-
     current_prolog_flag(home, Home),
     (   current_prolog_flag(c_libdir, Rel)
