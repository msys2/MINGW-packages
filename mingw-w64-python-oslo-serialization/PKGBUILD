# Maintainer: J. Peter Mugaas <jpmugaas@suddenlink.net>

_realname=oslo-serialization
pkgbase=mingw-w64-python-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-python2-${_realname}"  "${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
pkgver=2.28.1
pkgrel=1
pkgdesc="Oslo Serialization library (mingw-w64)"
arch=('any')
url='http://docs.openstack.org/developer/oslo.serialization'
license=('Apache')
makedepends=("${MINGW_PACKAGE_PREFIX}-python2"
             "${MINGW_PACKAGE_PREFIX}-python3"
             "${MINGW_PACKAGE_PREFIX}-python3-setuptools"
             "${MINGW_PACKAGE_PREFIX}-python2-setuptools"
             "${MINGW_PACKAGE_PREFIX}-python3-pbr"
             "${MINGW_PACKAGE_PREFIX}-python2-pbr"
             "${MINGW_PACKAGE_PREFIX}-python3-babel"
             "${MINGW_PACKAGE_PREFIX}-python2-babel"
             "${MINGW_PACKAGE_PREFIX}-python3-msgpack"
             "${MINGW_PACKAGE_PREFIX}-python2-msgpack"
             "${MINGW_PACKAGE_PREFIX}-python3-oslo-utils"
             "${MINGW_PACKAGE_PREFIX}-python2-oslo-utils"
             "${MINGW_PACKAGE_PREFIX}-python3-pytz"
             "${MINGW_PACKAGE_PREFIX}-python2-pytz")
checkdepends=("${MINGW_PACKAGE_PREFIX}-python3-oslotest"
              "${MINGW_PACKAGE_PREFIX}-python2-oslotest"
              "${MINGW_PACKAGE_PREFIX}-python2-ipaddress"
              "${MINGW_PACKAGE_PREFIX}-python3-testrepository"
              "${MINGW_PACKAGE_PREFIX}-python2-testrepository")
options=('staticlibs' 'strip' '!debug')
source=("${_realname}-$pkgver.tar.gz"::"https://github.com/openstack/oslo.serialization/archive/$pkgver.tar.gz")
sha512sums=('fc140db1fe3ae76ae9b6ccfb3ea186f86d6fae090776c20c3f1753c6b13753361b68f35cb881c529e454ec149bf4fedb00261a08ae4092dd0fb92089cc551b1c')

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying $_patch"
    patch -Nbp1 -i "${srcdir}/$_patch"
  done
}

del_file_exists() {
  for _fname in "$@"
  do
    if [ -f $_fname ]; then
      rm -rf $_fname
    fi
  done
}
# =========================================== #

prepare() {
  cd "${srcdir}"
  for builddir in python{2,3}-build-${CARCH}; do
    rm -rf ${builddir} | true
    cp -r "oslo.serialization-${pkgver}" "${builddir}"
  done
  # Set version for setuptools_scm
  export SETUPTOOLS_SCM_PRETEND_VERSION=$pkgver
  # set version for pbr
  export PBR_VERSION=$pkgver
}

# Note that build() is sometimes skipped because it's done in 
# the packages setup.py install for simplicity if you can do so.
# but sometimes, you want to do a check before install which would
# also trigger the build.
build() {
  for pver in {2,3}; do  
    msg "Python ${pver} build for ${CARCH}"  
    cd "${srcdir}/python${pver}-build-${CARCH}"
    ${MINGW_PREFIX}/bin/python${pver} setup.py build
  done  
}

check() {
  for pver in {2,3}; do
    msg "Python ${pver} test for ${CARCH}"
    cd "${srcdir}/python${pver}-build-${CARCH}"
    ${MINGW_PREFIX}/bin/python${pver} setup.py testr || warning "Tests failed"
  done
}

package_python3-oslo-serialization() {
  depends=("${MINGW_PACKAGE_PREFIX}-python3"
           "${MINGW_PACKAGE_PREFIX}-python3-six" 
           "${MINGW_PACKAGE_PREFIX}-python3-pbr"
           "${MINGW_PACKAGE_PREFIX}-python3-babel"
           "${MINGW_PACKAGE_PREFIX}-python3-msgpack"
           "${MINGW_PACKAGE_PREFIX}-python3-oslo-utils"
           "${MINGW_PACKAGE_PREFIX}-python3-pytz")

  cd "${srcdir}/python3-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python3 setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build

}

package_python2-oslo-serialization() {
  depends=("${MINGW_PACKAGE_PREFIX}-python2"
           "${MINGW_PACKAGE_PREFIX}-python2-six"
           "${MINGW_PACKAGE_PREFIX}-python2-pbr"
           "${MINGW_PACKAGE_PREFIX}-python2-babel" 
           "${MINGW_PACKAGE_PREFIX}-python2-msgpack"
           "${MINGW_PACKAGE_PREFIX}-python2-oslo-utils"
           "${MINGW_PACKAGE_PREFIX}-python2-pytz")

  cd "${srcdir}/python2-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python2 setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build
}

package_mingw-w64-i686-python2-oslo-serialization() {
  package_python2-oslo-serialization
}

package_mingw-w64-i686-python3-oslo-serialization() {
  package_python3-oslo-serialization
}

package_mingw-w64-x86_64-python2-oslo-serialization() {
  package_python2-oslo-serialization
}

package_mingw-w64-x86_64-python3-oslo-serialization() {
  package_python3-oslo-serialization
}
