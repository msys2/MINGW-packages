# Maintainer: Diego Sogari <diego.sogari@falker.com.br>

_realname=nanodbc
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=2.12.1
pkgrel=2
pkgdesc="A small C++ wrapper for the native C ODBC API (mingw-w64)"
arch=('any')
url="http://lexicalunit.github.io/nanodbc/"
license=('MIT')
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc" "${MINGW_PACKAGE_PREFIX}-cmake")
source=("${_realname}-${pkgver}.tar.gz::https://codeload.github.com/lexicalunit/nanodbc/tar.gz/v${pkgver}"
        "${_realname}-${pkgver}.patch")
sha256sums=('92734da7af16d08d5c7b59d74e9601f633b509b6dd1cd732de04ee7a7c318554'
            '0c71a705508ca0ac19740943d6ba253603d2dcaff1ae80727bf257b6838c1506')

prepare() {
  cd "${srcdir}/${_realname}-${pkgver}"
  patch -Np1 -i "../${_realname}-${pkgver}.patch"
}

build() {
  rm -rf "${srcdir}/build-${MINGW_CHOST}"
  mkdir "${srcdir}/build-${MINGW_CHOST}"
  cd "${srcdir}/build-${MINGW_CHOST}"

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake.exe \
    -G"MSYS Makefiles" \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    "../${_realname}-${pkgver}"

  make
}

#check() {
#  Note: to run the tests it would be necessary to have installed at least the
#  SQLite ODBC drivers for both 32- and 64-bit. In our local Windows machine,
#  all tests passed. The drivers used were:
#    - SQLite3 ODBC Driver 32-bit (version 0.9993.00.00)
#    - SQLite3 ODBC Driver 64-bit (version 0.9993.00.00)
#    - MySQL ODBC 5.3 ANSI Driver 32-bit (version 5.03.04.00)
#    - MySQL ODBC 5.3 ANSI Driver 64-bit (version 5.03.04.00)
#    - MySQL ODBC 5.3 Unicode Driver 32-bit (version 5.03.04.00)
#    - MySQL ODBC 5.3 Unicode Driver 64-bit (version 5.03.04.00)
#
#  cd "${srcdir}/build-${MINGW_CHOST}"
#  export NANODBC_TEST_CONNSTR=`cat ../../connection_string.txt`
#  SAVED_PATH=${PATH}
#  PATH=`pwd`:${PATH}
#  make test
#  PATH=${SAVED_PATH}
#}

package() {
  cd "${srcdir}/build-${MINGW_CHOST}"
  make DESTDIR="${pkgdir}" install
}
