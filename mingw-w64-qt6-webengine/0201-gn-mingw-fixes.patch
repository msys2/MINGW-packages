diff --git a/src/3rdparty/gn/build/build_mingw.ninja.template b/src/3rdparty/gn/build/build_mingw.ninja.template
index b1bf9ff..27339a7 100644
--- a/src/3rdparty/gn/build/build_mingw.ninja.template
+++ b/src/3rdparty/gn/build/build_mingw.ninja.template
@@ -5,7 +5,7 @@ rule cxx
   deps = gcc
 
 rule alink_thin
-  command = cmd /c del $out && $ar rcsT $out $in
+  command = $ar rcsT $out $in
   description = AR $out
 
 rule link
diff --git a/src/3rdparty/gn/build/gen.py b/src/3rdparty/gn/build/gen.py
index 4730836..81e9302 100755
--- a/src/3rdparty/gn/build/gen.py
+++ b/src/3rdparty/gn/build/gen.py
@@ -40,7 +40,10 @@ class Platform(object):
     elif self._platform.startswith('msys'):
       self._platform = 'msys'
     elif self._platform.startswith('win'):
-      self._platform = 'msvc'
+      if 'MSC' in sys.version:
+        self._platform = 'msvc'
+      else:
+        self._platform = 'mingw'
     elif self._platform.startswith('aix'):
       self._platform = 'aix'
     elif self._platform.startswith('fuchsia'):
@@ -338,10 +341,14 @@ def WriteGenericNinja(path, static_libraries, executables,
   with open(template_filename) as f:
     ninja_template = f.read()
 
-  if platform.is_windows():
+  if platform.is_msvc():
     executable_ext = '.exe'
     library_ext = '.lib'
     object_ext = '.obj'
+  elif platform.is_mingw():
+    executable_ext = '.exe'
+    library_ext = '.a'
+    object_ext = '.obj'
   else:
     executable_ext = ''
     library_ext = '.a'
@@ -443,6 +450,9 @@ def WriteGNNinja(path, platform, host, options, args_list):
   ld = options.ld
   ar = options.ar
 
+  if platform.is_mingw():
+    ld = options.cxx
+
   if not ar:
      if platform.is_msvc():
         ar = os.environ.get('AR', 'lib.exe')
@@ -484,7 +494,8 @@ def WriteGNNinja(path, platform, host, options, args_list):
       # or data item into its own section so --gc-sections can eliminate any
       # unused functions and data items.
       cflags.extend(['-fdata-sections', '-ffunction-sections'])
-      ldflags.extend(['-fdata-sections', '-ffunction-sections'])
+      if not platform.is_mingw():
+        ldflags.extend(['-fdata-sections', '-ffunction-sections'])
       if platform.is_darwin():
         ldflags.append('-Wl,-dead_strip')
       elif not platform.is_aix() and not platform.is_solaris() and not platform.is_zos():
diff --git a/src/3rdparty/gn/src/gn/ninja_binary_target_writer.cc b/src/3rdparty/gn/src/gn/ninja_binary_target_writer.cc
index e4f713c..557e50d 100644
--- a/src/3rdparty/gn/src/gn/ninja_binary_target_writer.cc
+++ b/src/3rdparty/gn/src/gn/ninja_binary_target_writer.cc
@@ -364,7 +364,11 @@ void NinjaBinaryTargetWriter::WriteLinkerFlags(
   WriteLibrarySearchPath(out, tool);
 
   if (optional_def_file) {
+#ifdef _MSC_VER
     out_ << " /DEF:";
+#else
+    out_ << " ";
+#endif
     path_output_.WriteFile(out, *optional_def_file);
   }
 }
