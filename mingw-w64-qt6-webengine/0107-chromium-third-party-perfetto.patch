diff --git a/src/3rdparty/chromium/third_party/perfetto/gn/BUILD.gn b/src/3rdparty/chromium/third_party/perfetto/gn/BUILD.gn
index 6c1775a..d75b0c9 100644
--- a/src/3rdparty/chromium/third_party/perfetto/gn/BUILD.gn
+++ b/src/3rdparty/chromium/third_party/perfetto/gn/BUILD.gn
@@ -290,7 +290,7 @@ config("protobuf_gen_config") {
     "GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER",
   ]
   cflags = []
-  if (!is_clang && !is_win) {
+  if (!is_clang && !is_msvc) {
     cflags += [ "-Wno-deprecated-declarations" ]
   }
   if (is_clang && is_win) {
diff --git a/src/3rdparty/chromium/third_party/perfetto/gn/standalone/BUILD.gn b/src/3rdparty/chromium/third_party/perfetto/gn/standalone/BUILD.gn
index 1fb8196..e4d3d7c 100644
--- a/src/3rdparty/chromium/third_party/perfetto/gn/standalone/BUILD.gn
+++ b/src/3rdparty/chromium/third_party/perfetto/gn/standalone/BUILD.gn
@@ -40,7 +40,7 @@ hermetic_clang_suppressions = [ "-Wno-c99-designator" ]
 # is_clang -> could be clang-on-linux, clang-on-mac or clang-cl.exe.
 
 config("extra_warnings") {
-  if (is_win) {
+  if (is_msvc) {
     cflags = [
       "/W2",
       "/wd4244",  # conversion from 'float' to 'int', possible loss of data
@@ -87,7 +87,7 @@ config("extra_warnings") {
       "-Wno-unknown-warning-option",
       "-Wno-unsafe-buffer-usage",
     ]
-  } else if (!is_clang && !is_win) {
+  } else if (!is_clang && !is_msvc) {
     # Use return std::move(...) for compatibility with old GCC compilers.
     cflags_cc = [ "-Wno-redundant-move" ]
 
@@ -123,7 +123,7 @@ config("no_exceptions") {
 }
 
 config("no_rtti") {
-  if (is_win) {
+  if (is_msvc) {
     cflags_cc = [ "/GR-" ]
   } else {
     cflags_cc = [ "-fno-rtti" ]
@@ -132,7 +132,7 @@ config("no_rtti") {
 
 # Used in buildtools dependencies for standalone builds.
 config("c++17") {
-  if (is_win) {
+  if (is_msvc) {
     cflags_cc = [ "/std:c++17" ]
   } else {
     cflags_cc = [ "-std=c++17" ]
@@ -150,7 +150,7 @@ config("c++20") {
 }
 
 config("visibility_hidden") {
-  if (!is_win) {
+  if (!is_msvc) {
     cflags = [ "-fvisibility=hidden" ]
   }
 }
@@ -178,7 +178,7 @@ config("default") {
     ]
   }
 
-  if (is_clang || !is_win) {  # Clang or GCC, but not MSVC.
+  if (is_clang || !is_msvc) {  # Clang or GCC, but not MSVC.
     cflags += [
       "-fstrict-aliasing",
       "-Wformat",
@@ -192,7 +192,7 @@ config("default") {
     cflags += [ "-Wno-deprecated" ]
   }
 
-  if (is_win) {
+  if (is_msvc) {
     cflags += [
       "/bigobj",  # Some of our files are bigger than the regular limits.
       "/Gy",  # Enable function-level linking.
@@ -220,7 +220,7 @@ config("default") {
 
   # Treat warnings as errors, but give up on fuzzer builds.
   if (!is_fuzzer) {
-    if (is_win) {
+    if (is_msvc) {
       cflags += [ "/WX" ]
     } else {
       cflags += [ "-Werror" ]
@@ -229,7 +229,7 @@ config("default") {
 
   if (is_clang) {
     cflags += [ "-fcolor-diagnostics" ]
-    if (!is_win) {
+    if (!is_msvc) {
       cflags += [ "-fdiagnostics-show-template-tree" ]
     }
   }
@@ -315,23 +315,25 @@ config("default") {
     ]
   }
 
-  if (is_win && !is_clang) {
+  if (is_msvc && !is_clang) {
     # When using MSVC we need to manually pass the include dirs. clang-cl.exe
     # doesn't need them because it's smart enough to figure out the right path
     # by querying the registry on its own.
     include_dirs = win_msvc_inc_dirs  # Defined in msvc.gni.
   }
 
-  if (is_win) {
+  if (is_msvc) {
     cflags += [ "/Zi" ]
   }
   if (is_debug) {
-    if (is_win) {
+    if (is_msvc) {
       if (is_clang) {
         # Required to see symbols in windbg when building with clang-cl.exe.
         cflags += [ "-gcodeview-ghash" ]
         ldflags = [ "/DEBUG:GHASH" ]
       }
+    } else if (is_mingw) {
+      cflags += [ "-g" ]
     } else {
       libs += [ "dl" ]
     }
@@ -401,7 +403,7 @@ config("default") {
 
 config("debug_noopt") {
   cflags = []
-  if (is_win) {
+  if (is_msvc) {
     cflags = [ "/Od" ]
   } else {
     cflags = [ "-O0" ]
@@ -413,7 +415,7 @@ config("debug_noopt") {
 
 config("release") {
   # Compiler flags for release builds.
-  if (is_win) {
+  if (is_msvc) {
     cflags = [
       "/O2",
       "/Zc:inline",
@@ -425,7 +427,7 @@ config("release") {
   } else {
     cflags = [ "-O3" ]
   }
-  if (!is_win) {
+  if (!is_msvc) {
     cflags += [
       "-fdata-sections",
       "-ffunction-sections",
@@ -433,13 +435,15 @@ config("release") {
   }
 
   # Linker flags for release builds.
-  if (is_win) {
+  if (is_msvc) {
     ldflags = [
       "/OPT:REF",
       "/OPT:ICF",
       "/INCREMENTAL:NO",
       "/FIXED:NO",
     ]
+  } else if (is_mingw) {
+    ldflags = [ "-Wl,--gc-sections" ]
   } else if (is_mac) {
     ldflags = [ "-dead_strip" ]
   } else if (!is_win && !is_wasm) {
diff --git a/src/3rdparty/chromium/third_party/perfetto/gn/standalone/toolchain/llvm.gni b/src/3rdparty/chromium/third_party/perfetto/gn/standalone/toolchain/llvm.gni
index 13bae47..8d924f4 100644
--- a/src/3rdparty/chromium/third_party/perfetto/gn/standalone/toolchain/llvm.gni
+++ b/src/3rdparty/chromium/third_party/perfetto/gn/standalone/toolchain/llvm.gni
@@ -45,7 +45,7 @@ if (is_linux_host) {
 
   # _mac_toolchain_dirs[0] contains the mac toolchain dir.
   mac_clangrt_dir = _mac_toolchain_dirs[1]
-} else if (is_win_host) {
+} else if (is_msvc) {
   if (is_hermetic_clang) {
     # Use the toolchain pulled by //tools/install-build-deps. This tracks
     # chromium's llvm dist.
diff --git a/src/3rdparty/chromium/third_party/perfetto/gn/standalone/toolchain/msvc.gni b/src/3rdparty/chromium/third_party/perfetto/gn/standalone/toolchain/msvc.gni
index 7ec7313..d809c14 100644
--- a/src/3rdparty/chromium/third_party/perfetto/gn/standalone/toolchain/msvc.gni
+++ b/src/3rdparty/chromium/third_party/perfetto/gn/standalone/toolchain/msvc.gni
@@ -15,7 +15,7 @@
 # We should never get in here by accident from the Chromium tree.
 assert(!defined(build_with_chromium) || !build_with_chromium)
 
-if (is_win_host) {
+if (is_msvc) {
   _find_msvc_out = exec_script("win_find_msvc.py", [], "list lines")
 
   # The output looks like this (without the line number "N:" part):
diff --git a/src/3rdparty/chromium/third_party/perfetto/include/perfetto/ext/base/sys_types.h b/src/3rdparty/chromium/third_party/perfetto/include/perfetto/ext/base/sys_types.h
index 40cf92d..333b623 100644
--- a/src/3rdparty/chromium/third_party/perfetto/include/perfetto/ext/base/sys_types.h
+++ b/src/3rdparty/chromium/third_party/perfetto/include/perfetto/ext/base/sys_types.h
@@ -27,7 +27,7 @@
 
 #if PERFETTO_BUILDFLAG(PERFETTO_OS_WIN)
 
-#if !PERFETTO_BUILDFLAG(PERFETTO_COMPILER_GCC)
+#if PERFETTO_BUILDFLAG(PERFETTO_COMPILER_MSVC)
 // MinGW has these. clang-cl and MSVC, which use just the Windows SDK, don't.
 using uid_t = unsigned int;
 using pid_t = int;
