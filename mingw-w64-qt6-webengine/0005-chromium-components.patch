diff --git a/src/3rdparty/chromium/components/download/internal/common/base_file.cc b/src/3rdparty/chromium/components/download/internal/common/base_file.cc
index 6609908..5e0b205 100644
--- a/src/3rdparty/chromium/components/download/internal/common/base_file.cc
+++ b/src/3rdparty/chromium/components/download/internal/common/base_file.cc
@@ -265,7 +265,11 @@ DownloadInterruptReason BaseFile::Rename(const base::FilePath& new_path) {
 
     // A simple rename wouldn't work here since we want the file to have
     // permissions / security descriptors that makes sense in the new directory.
+#if BUILDFLAG(IS_MINGW)
+    return DOWNLOAD_INTERRUPT_REASON_NONE;
+#else
     rename_result = MoveFileAndAdjustPermissions(new_path);
+#endif
   }
 
   CONDITIONAL_TRACE(END0("download", "DownloadFileRename"));
diff --git a/src/3rdparty/chromium/components/download/internal/common/base_file_win.cc b/src/3rdparty/chromium/components/download/internal/common/base_file_win.cc
index 1db03ae..99ad2e8 100644
--- a/src/3rdparty/chromium/components/download/internal/common/base_file_win.cc
+++ b/src/3rdparty/chromium/components/download/internal/common/base_file_win.cc
@@ -10,7 +10,9 @@
 #include <shellapi.h>
 #include <shobjidl.h>
 #include <wrl/client.h>
+#if defined(COMPILER_MSVC)
 #include <wrl/implements.h>
+#endif
 
 #include "base/threading/scoped_blocking_call.h"
 #include "base/win/com_init_util.h"
@@ -143,9 +145,13 @@ DownloadInterruptReason HRESULTToDownloadInterruptReason(HRESULT hr) {
 }
 
 class FileOperationProgressSink
+#if defined(COMPILER_MSVC)
     : public Microsoft::WRL::RuntimeClass<
           Microsoft::WRL::RuntimeClassFlags<Microsoft::WRL::ClassicCom>,
           IFileOperationProgressSink> {
+#else
+    : public IFileOperationProgressSink {
+#endif
  public:
   FileOperationProgressSink() = default;
 
@@ -228,7 +234,7 @@ class FileOperationProgressSink
   IFACEMETHODIMP UpdateProgress(UINT, UINT) override { return S_OK; }
 
  protected:
-  ~FileOperationProgressSink() override = default;
+  ~FileOperationProgressSink() = default;
 
  private:
   HRESULT result_ = S_OK;
@@ -236,6 +242,7 @@ class FileOperationProgressSink
 
 }  // namespace
 
+#if defined(COMPILER_MSVC)
 // Renames a file using IFileOperation::MoveItem() to ensure that the target
 // file gets the correct default security descriptor in the new path.
 // Returns a network error, or net::OK for success.
@@ -304,5 +311,6 @@ DownloadInterruptReason BaseFile::MoveFileAndAdjustPermissions(
 
   return interrupt_reason;
 }
+#endif
 
 }  // namespace download
diff --git a/src/3rdparty/chromium/components/history/core/browser/web_history_service.cc b/src/3rdparty/chromium/components/history/core/browser/web_history_service.cc
index 89511f2..524324d 100644
--- a/src/3rdparty/chromium/components/history/core/browser/web_history_service.cc
+++ b/src/3rdparty/chromium/components/history/core/browser/web_history_service.cc
@@ -61,11 +61,12 @@ const char kHistoryAudioHistoryChangeUrl[] =
 const char kQueryWebAndAppActivityUrl[] =
     "https://history.google.com/history/api/lookup?client=web_app";
 
-const char kQueryOtherFormsOfBrowsingHistoryUrlSuffix[] = "/historystatus";
-
 const char kPostDataMimeType[] = "text/plain";
 
+#if !defined(TOOLKIT_QT)
+const char kQueryOtherFormsOfBrowsingHistoryUrlSuffix[] = "/historystatus";
 const char kSyncProtoMimeType[] = "application/octet-stream";
+#endif
 
 // The maximum number of retries for the SimpleURLLoader requests.
 const size_t kMaxRetries = 1;
diff --git a/src/3rdparty/chromium/components/metrics/BUILD.gn b/src/3rdparty/chromium/components/metrics/BUILD.gn
index 93fc43e..c21bdbf 100644
--- a/src/3rdparty/chromium/components/metrics/BUILD.gn
+++ b/src/3rdparty/chromium/components/metrics/BUILD.gn
@@ -283,7 +283,7 @@ if (!is_cronet_build || is_ios) {
         "system_session_analyzer/system_session_analyzer_win.cc",
         "system_session_analyzer/system_session_analyzer_win.h",
       ]
-      libs = [ "wevtapi.lib" ]
+      libs = [ "wevtapi" ]
     } else {
       sources += [ "machine_id_provider_nonwin.cc" ]
     }
diff --git a/src/3rdparty/chromium/components/metrics/metrics_state_manager.cc b/src/3rdparty/chromium/components/metrics/metrics_state_manager.cc
index 08c6f2a..793dec3 100644
--- a/src/3rdparty/chromium/components/metrics/metrics_state_manager.cc
+++ b/src/3rdparty/chromium/components/metrics/metrics_state_manager.cc
@@ -83,12 +83,14 @@ std::unique_ptr<metrics::ClientInfo> NoOpLoadClientInfoBackup() {
   return nullptr;
 }
 
+#if !defined(TOOLKIT_QT)
 // Exits the browser with a helpful error message if an invalid,
 // field-trial-related command-line flag was specified.
 void ExitWithMessage(const std::string& message) {
   puts(message.c_str());
   exit(1);
 }
+#endif
 
 // Returns a log normal distribution based on the feature params of
 // |kNonUniformityValidationFeature|.
diff --git a/src/3rdparty/chromium/components/os_crypt/sync/BUILD.gn b/src/3rdparty/chromium/components/os_crypt/sync/BUILD.gn
index db26459..07937f5 100644
--- a/src/3rdparty/chromium/components/os_crypt/sync/BUILD.gn
+++ b/src/3rdparty/chromium/components/os_crypt/sync/BUILD.gn
@@ -53,7 +53,7 @@ component("os_crypt") {
   if (is_win) {
     sources += [ "os_crypt_win.cc" ]
     deps += [ "//components/version_info" ]
-    libs = [ "crypt32.lib" ]
+    libs = [ "crypt32" ]
   }
 
   if (is_linux && !is_castos) {
diff --git a/src/3rdparty/chromium/components/policy/core/common/BUILD.gn b/src/3rdparty/chromium/components/policy/core/common/BUILD.gn
index 2b0e927..231dd39 100644
--- a/src/3rdparty/chromium/components/policy/core/common/BUILD.gn
+++ b/src/3rdparty/chromium/components/policy/core/common/BUILD.gn
@@ -291,11 +291,11 @@ jumbo_source_set("internal") {
       "scoped_critical_policy_section.h",
     ]
     libs = [
-      "netapi32.lib",
-      "ntdsapi.lib",
-      "secur32.lib",
-      "shlwapi.lib",
-      "userenv.lib",
+      "netapi32",
+      "ntdsapi",
+      "secur32",
+      "shlwapi",
+      "userenv",
     ]
   }
 
diff --git a/src/3rdparty/chromium/components/signin/public/identity_manager/identity_manager_builder.cc b/src/3rdparty/chromium/components/signin/public/identity_manager/identity_manager_builder.cc
index 5c36444..7c40012 100644
--- a/src/3rdparty/chromium/components/signin/public/identity_manager/identity_manager_builder.cc
+++ b/src/3rdparty/chromium/components/signin/public/identity_manager/identity_manager_builder.cc
@@ -81,6 +81,7 @@ std::unique_ptr<AccountsMutator> BuildAccountsMutator(
 #endif
 }
 
+#if !defined(TOOLKIT_QT)
 std::unique_ptr<AccountFetcherService> BuildAccountFetcherService(
     SigninClient* signin_client,
     ProfileOAuth2TokenService* token_service,
@@ -95,6 +96,7 @@ std::unique_ptr<AccountFetcherService> BuildAccountFetcherService(
       std::move(account_capabilities_fetcher_factory));
   return account_fetcher_service;
 }
+#endif
 
 }  // anonymous namespace
 
diff --git a/src/3rdparty/chromium/components/storage_monitor/portable_device_watcher_win.cc b/src/3rdparty/chromium/components/storage_monitor/portable_device_watcher_win.cc
index 629e3c4..07ad101 100644
--- a/src/3rdparty/chromium/components/storage_monitor/portable_device_watcher_win.cc
+++ b/src/3rdparty/chromium/components/storage_monitor/portable_device_watcher_win.cc
@@ -10,6 +10,7 @@
 
 #include <dbt.h>
 #include <objbase.h>
+#include <initguid.h> // for WPD_* inits
 #include <portabledevice.h>
 #include <wrl/client.h>
 
diff --git a/src/3rdparty/chromium/components/system_media_controls/BUILD.gn b/src/3rdparty/chromium/components/system_media_controls/BUILD.gn
index 0feed4e..1bf8eba 100644
--- a/src/3rdparty/chromium/components/system_media_controls/BUILD.gn
+++ b/src/3rdparty/chromium/components/system_media_controls/BUILD.gn
@@ -22,7 +22,7 @@ component("system_media_controls") {
 
   public_deps = [ "//skia" ]
 
-  if (is_win) {
+  if (is_msvc) {
     sources = [
       "win/system_media_controls_win.cc",
       "win/system_media_controls_win.h",
diff --git a/src/3rdparty/chromium/components/variations/seed_response.h b/src/3rdparty/chromium/components/variations/seed_response.h
index 6f7b586..7a53f65 100644
--- a/src/3rdparty/chromium/components/variations/seed_response.h
+++ b/src/3rdparty/chromium/components/variations/seed_response.h
@@ -5,6 +5,7 @@
 #ifndef COMPONENTS_VARIATIONS_SEED_RESPONSE_H_
 #define COMPONENTS_VARIATIONS_SEED_RESPONSE_H_
 
+#include <cstdint>
 #include <string>
 
 #include "base/component_export.h"
diff --git a/src/3rdparty/chromium/components/viz/service/gl/gpu_service_impl.cc b/src/3rdparty/chromium/components/viz/service/gl/gpu_service_impl.cc
index dc9b56f..49f4f96 100644
--- a/src/3rdparty/chromium/components/viz/service/gl/gpu_service_impl.cc
+++ b/src/3rdparty/chromium/components/viz/service/gl/gpu_service_impl.cc
@@ -529,7 +529,7 @@ void GpuServiceImpl::UpdateGPUInfo() {
         image_decode_accelerator_worker_->GetSupportedProfiles();
   }
 
-#if BUILDFLAG(IS_WIN)
+#if BUILDFLAG(IS_MSVC)
   gpu_info_.shared_image_d3d =
       gpu::D3DImageBackingFactory::IsD3DSharedImageSupported(gpu_preferences_);
 #endif
diff --git a/src/3rdparty/chromium/components/wifi/BUILD.gn b/src/3rdparty/chromium/components/wifi/BUILD.gn
index 61361ec..2b0c4ac 100644
--- a/src/3rdparty/chromium/components/wifi/BUILD.gn
+++ b/src/3rdparty/chromium/components/wifi/BUILD.gn
@@ -23,7 +23,7 @@ jumbo_component("wifi") {
 
   if (is_win) {
     sources += [ "wifi_service_win.cc" ]
-    libs = [ "iphlpapi.lib" ]
+    libs = [ "iphlpapi" ]
     deps += [
       "//third_party/libxml:xml_reader",  # Safe, data come from system.
       "//third_party/libxml:xml_writer",
diff --git a/src/3rdparty/chromium/components/winhttp/BUILD.gn b/src/3rdparty/chromium/components/winhttp/BUILD.gn
index 29b98aa..689b120 100644
--- a/src/3rdparty/chromium/components/winhttp/BUILD.gn
+++ b/src/3rdparty/chromium/components/winhttp/BUILD.gn
@@ -30,7 +30,7 @@ static_library("winhttp") {
 
   defines = [ "SECURITY_WIN32" ]
 
-  libs = [ "winhttp.lib" ]
+  libs = [ "winhttp" ]
 }
 
 source_set("unit_tests") {
