diff -ur a/src/3rdparty/chromium/components/download/internal/common/BUILD.gn b/src/3rdparty/chromium/components/download/internal/common/BUILD.gn
--- a/src/3rdparty/chromium/components/download/internal/common/BUILD.gn	2023-10-04 03:49:54.000000000 +0800
+++ b/src/3rdparty/chromium/components/download/internal/common/BUILD.gn	2023-12-14 02:25:06.991447200 +0800
@@ -98,7 +98,7 @@
     deps += [ ":jni_headers" ]
   }
 
-  if (is_win) {
+  if (is_win && !is_mingw) {
     sources += [ "base_file_win.cc" ]
   }
 
diff -ur a/src/3rdparty/chromium/components/history/core/browser/web_history_service.cc b/src/3rdparty/chromium/components/history/core/browser/web_history_service.cc
--- a/src/3rdparty/chromium/components/history/core/browser/web_history_service.cc	2023-10-04 03:49:54.000000000 +0800
+++ b/src/3rdparty/chromium/components/history/core/browser/web_history_service.cc	2023-12-14 02:25:07.163330700 +0800
@@ -64,11 +64,13 @@
 const char kQueryWebAndAppActivityUrl[] =
     "https://history.google.com/history/api/lookup?client=web_app";
 
-const char kQueryOtherFormsOfBrowsingHistoryUrlSuffix[] = "/historystatus";
-
 const char kPostDataMimeType[] = "text/plain";
 
+#if !defined(TOOLKIT_QT)
+const char kQueryOtherFormsOfBrowsingHistoryUrlSuffix[] = "/historystatus";
+
 const char kSyncProtoMimeType[] = "application/octet-stream";
+#endif
 
 // The maximum number of retries for the SimpleURLLoader requests.
 const size_t kMaxRetries = 1;
diff -ur a/src/3rdparty/chromium/components/metrics/BUILD.gn b/src/3rdparty/chromium/components/metrics/BUILD.gn
--- a/src/3rdparty/chromium/components/metrics/BUILD.gn	2023-10-04 03:49:54.000000000 +0800
+++ b/src/3rdparty/chromium/components/metrics/BUILD.gn	2023-12-14 02:26:23.942615900 +0800
@@ -237,7 +237,7 @@
       "system_session_analyzer/system_session_analyzer_win.cc",
       "system_session_analyzer/system_session_analyzer_win.h",
     ]
-    libs = [ "wevtapi.lib" ]
+    libs = [ "wevtapi" ]
   } else {
     sources += [ "machine_id_provider_nonwin.cc" ]
   }
diff -ur a/src/3rdparty/chromium/components/metrics/metrics_state_manager.cc b/src/3rdparty/chromium/components/metrics/metrics_state_manager.cc
--- a/src/3rdparty/chromium/components/metrics/metrics_state_manager.cc	2023-10-04 03:49:54.000000000 +0800
+++ b/src/3rdparty/chromium/components/metrics/metrics_state_manager.cc	2023-12-14 02:25:07.460128700 +0800
@@ -83,12 +83,14 @@
   return nullptr;
 }
 
+#if !defined(TOOLKIT_QT)
 // Exits the browser with a helpful error message if an invalid,
 // field-trial-related command-line flag was specified.
 void ExitWithMessage(const std::string& message) {
   puts(message.c_str());
   exit(1);
 }
+#endif
 
 // Returns a log normal distribution based on the feature params of
 // |kNonUniformityValidationFeature|.
diff -ur a/src/3rdparty/chromium/components/os_crypt/BUILD.gn b/src/3rdparty/chromium/components/os_crypt/BUILD.gn
--- a/src/3rdparty/chromium/components/os_crypt/BUILD.gn	2023-10-04 03:49:54.000000000 +0800
+++ b/src/3rdparty/chromium/components/os_crypt/BUILD.gn	2023-12-14 02:25:07.553949100 +0800
@@ -69,7 +69,7 @@
 
   if (is_win) {
     sources += [ "os_crypt_win.cc" ]
-    libs = [ "crypt32.lib" ]
+    libs = [ "crypt32" ]
   }
 
   if (is_linux && !is_castos) {
diff -ur a/src/3rdparty/chromium/components/policy/core/common/BUILD.gn b/src/3rdparty/chromium/components/policy/core/common/BUILD.gn
--- a/src/3rdparty/chromium/components/policy/core/common/BUILD.gn	2023-10-04 03:49:54.000000000 +0800
+++ b/src/3rdparty/chromium/components/policy/core/common/BUILD.gn	2023-12-14 02:25:07.710200900 +0800
@@ -271,11 +271,11 @@
       "policy_loader_win.h",
     ]
     libs = [
-      "netapi32.lib",
-      "ntdsapi.lib",
-      "secur32.lib",
-      "shlwapi.lib",
-      "userenv.lib",
+      "netapi32",
+      "ntdsapi",
+      "secur32",
+      "shlwapi",
+      "userenv",
     ]
   }
 
diff -ur a/src/3rdparty/chromium/components/signin/public/identity_manager/identity_manager_builder.cc b/src/3rdparty/chromium/components/signin/public/identity_manager/identity_manager_builder.cc
--- a/src/3rdparty/chromium/components/signin/public/identity_manager/identity_manager_builder.cc	2023-10-04 03:49:54.000000000 +0800
+++ b/src/3rdparty/chromium/components/signin/public/identity_manager/identity_manager_builder.cc	2023-12-14 02:25:08.147618200 +0800
@@ -82,6 +82,7 @@
 #endif
 }
 
+#if !defined(TOOLKIT_QT)
 std::unique_ptr<AccountFetcherService> BuildAccountFetcherService(
     SigninClient* signin_client,
     ProfileOAuth2TokenService* token_service,
@@ -96,6 +97,7 @@
       std::move(account_capabilities_fetcher_factory));
   return account_fetcher_service;
 }
+#endif
 
 }  // anonymous namespace
 
diff -ur a/src/3rdparty/chromium/components/storage_monitor/BUILD.gn b/src/3rdparty/chromium/components/storage_monitor/BUILD.gn
--- a/src/3rdparty/chromium/components/storage_monitor/BUILD.gn	2023-10-04 03:49:54.000000000 +0800
+++ b/src/3rdparty/chromium/components/storage_monitor/BUILD.gn	2023-12-14 02:25:08.257073000 +0800
@@ -39,6 +39,14 @@
       "volume_mount_watcher_win.cc",
       "volume_mount_watcher_win.h",
     ]
+    if (!is_mingw) {
+      sources -= [
+        "portable_device_watcher_win.cc",
+        "portable_device_watcher_win.h",
+        "storage_monitor_win.cc",
+        "storage_monitor_win.h",
+      ]
+    }
   } else if (is_mac) {
     sources += [
       "image_capture_device.h",
diff -ur a/src/3rdparty/chromium/components/system_media_controls/BUILD.gn b/src/3rdparty/chromium/components/system_media_controls/BUILD.gn
--- a/src/3rdparty/chromium/components/system_media_controls/BUILD.gn	2023-10-04 03:49:54.000000000 +0800
+++ b/src/3rdparty/chromium/components/system_media_controls/BUILD.gn	2023-12-14 02:25:08.319492000 +0800
@@ -22,7 +22,7 @@
 
   public_deps = [ "//skia" ]
 
-  if (is_win) {
+  if (is_win && !is_mingw) {
     sources = [
       "win/system_media_controls_win.cc",
       "win/system_media_controls_win.h",
diff -ur a/src/3rdparty/chromium/components/variations/seed_response.h b/src/3rdparty/chromium/components/variations/seed_response.h
--- a/src/3rdparty/chromium/components/variations/seed_response.h	2023-10-04 03:49:54.000000000 +0800
+++ b/src/3rdparty/chromium/components/variations/seed_response.h	2023-12-14 02:25:08.413243100 +0800
@@ -5,6 +5,7 @@
 #ifndef COMPONENTS_VARIATIONS_SEED_RESPONSE_H_
 #define COMPONENTS_VARIATIONS_SEED_RESPONSE_H_
 
+#include <cstdint>
 #include <string>
 
 #include "base/component_export.h"
diff -ur a/src/3rdparty/chromium/components/wifi/BUILD.gn b/src/3rdparty/chromium/components/wifi/BUILD.gn
--- a/src/3rdparty/chromium/components/wifi/BUILD.gn	2023-10-04 03:49:54.000000000 +0800
+++ b/src/3rdparty/chromium/components/wifi/BUILD.gn	2023-12-14 02:25:08.460197800 +0800
@@ -23,7 +23,7 @@
 
   if (is_win) {
     sources += [ "wifi_service_win.cc" ]
-    libs = [ "iphlpapi.lib" ]
+    libs = [ "iphlpapi" ]
     deps += [
       "//third_party/libxml:xml_reader",  # Safe, data come from system.
       "//third_party/libxml:xml_writer",
diff -ur a/src/3rdparty/chromium/components/winhttp/BUILD.gn b/src/3rdparty/chromium/components/winhttp/BUILD.gn
--- a/src/3rdparty/chromium/components/winhttp/BUILD.gn	2023-10-04 03:49:54.000000000 +0800
+++ b/src/3rdparty/chromium/components/winhttp/BUILD.gn	2023-12-14 02:25:08.475740500 +0800
@@ -30,7 +30,7 @@
 
   defines = [ "SECURITY_WIN32" ]
 
-  libs = [ "winhttp.lib" ]
+  libs = [ "winhttp" ]
 }
 
 source_set("unit_tests") {
