--- a/cmake/Functions.cmake
+++ b/cmake/Functions.cmake
@@ -918,7 +918,7 @@
         endif()
     endif()
 
-    if(WIN32)
+    if(MSVC)
         get_filename_component(windowsSdkPath $ENV{WINDOWSSDKDIR} ABSOLUTE)
         get_filename_component(visualStudioPath $ENV{VSINSTALLDIR} ABSOLUTE)
         list(APPEND gnArgArg
--- a/configure.cmake
+++ b/configure.cmake
@@ -538,7 +538,7 @@
 )
 add_check_for_support(
    MODULES QtWebEngine QtPdf
-   CONDITION NOT WIN32 OR TEST_winversion
+   CONDITION NOT MSVC OR TEST_winversion
    MESSAGE "Build requires Visual Studio 2019 or higher."
 )
 add_check_for_support(
@@ -546,6 +546,8 @@
    CONDITION
        (LINUX AND CMAKE_CXX_COMPILER_ID STREQUAL GNU) OR
        (LINUX AND CMAKE_CXX_COMPILER_ID STREQUAL Clang) OR
+       (WIN32 AND CMAKE_CXX_COMPILER_ID STREQUAL GNU) OR
+       (WIN32 AND CMAKE_CXX_COMPILER_ID STREQUAL Clang) OR
        (WIN32 AND CMAKE_CXX_COMPILER_ID STREQUAL MSVC) OR
        (WIN32 AND CMAKE_CXX_COMPILER_ID STREQUAL Clang AND
           CMAKE_CXX_SIMULATE_ID STREQUAL MSVC) OR
@@ -554,7 +556,7 @@
    MESSAGE "${CMAKE_CXX_COMPILER_ID} compiler is not supported."
 )
 
-if(WIN32)
+if(MSVC)
     if(CMAKE_CXX_COMPILER_ID STREQUAL MSVC)
         add_check_for_support(
             MODULES QtWebEngine QtPdf
--- a/src/gn/CMakeLists.txt
+++ b/src/gn/CMakeLists.txt
@@ -23,7 +23,7 @@
 
 if(WIN32)
     set(GN_EXECUTABLE gn.exe)
-    if (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
+    if (MSVC AND CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
         # Use lld-link instead of clang-cl.
         set(GN_LINKER ${CMAKE_LINKER})
     endif()
@@ -45,6 +45,7 @@
         --qt-version "${QT_REPO_MODULE_VERSION}.qtwebengine.qt.io"
         $<$<PLATFORM_ID:Darwin>:--isysroot>
         $<$<PLATFORM_ID:Darwin>:${CMAKE_OSX_SYSROOT}>
+        --platform mingw
     COMMAND Ninja::ninja -C ${GN_BINARY_DIR}/$<CONFIG> ${GN_EXECUTABLE}
     VERBATIM
     USES_TERMINAL
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -136,6 +136,7 @@
                    -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
                    -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
                    -DCMAKE_PREFIX_PATH:PATH=<INSTALL_DIR>
+                   -DPython3_EXECUTABLE=${Python3_EXECUTABLE}
                    -DWEBENGINE_ROOT_BUILD_DIR=${PROJECT_BINARY_DIR}
     )
     if(QT_FEATURE_qtwebengine_core_build)
--- a/src/3rdparty/gn/build/build_linux.ninja.template
+++ b/src/3rdparty/gn/build/build_linux.ninja.template
@@ -5,7 +5,7 @@
   deps = gcc
 
 rule alink_thin
-  command = rm -f $out && $ar rcsT $out $in
+  command = $ar rcsT $out $in
   description = AR $out
 
 rule link
