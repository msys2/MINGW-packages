diff -ur a/src/3rdparty/chromium/ui/accessibility/ax_text_attributes.h b/src/3rdparty/chromium/ui/accessibility/ax_text_attributes.h
--- a/src/3rdparty/chromium/ui/accessibility/ax_text_attributes.h	2023-11-21 00:08:07.000000000 +0800
+++ b/src/3rdparty/chromium/ui/accessibility/ax_text_attributes.h	2024-01-03 02:38:01.064308600 +0800
@@ -5,6 +5,7 @@
 #ifndef UI_ACCESSIBILITY_AX_TEXT_ATTRIBUTES_H_
 #define UI_ACCESSIBILITY_AX_TEXT_ATTRIBUTES_H_
 
+#include <cstdint>
 #include <string>
 #include <vector>
 
diff -ur a/src/3rdparty/chromium/ui/aura/BUILD.gn b/src/3rdparty/chromium/ui/aura/BUILD.gn
--- a/src/3rdparty/chromium/ui/aura/BUILD.gn	2023-11-21 00:08:07.000000000 +0800
+++ b/src/3rdparty/chromium/ui/aura/BUILD.gn	2024-01-02 19:53:11.126935700 +0800
@@ -168,8 +168,8 @@
 
   if (is_win) {
     libs = [
-      "wtsapi32.lib",
-      "dwmapi.lib",
+      "wtsapi32",
+      "dwmapi",
     ]
   }
 
@@ -311,7 +311,7 @@
 
   if (is_win) {
     sources += [ "native_window_occlusion_tracker_unittest.cc" ]
-    libs = [ "dwmapi.lib" ]
+    libs = [ "dwmapi" ]
   }
 
   deps = [
diff -ur a/src/3rdparty/chromium/ui/base/BUILD.gn b/src/3rdparty/chromium/ui/base/BUILD.gn
--- a/src/3rdparty/chromium/ui/base/BUILD.gn	2023-11-21 00:08:07.000000000 +0800
+++ b/src/3rdparty/chromium/ui/base/BUILD.gn	2024-01-02 19:53:11.158107700 +0800
@@ -280,10 +280,12 @@
       "win/window_event_target.cc",
       "win/window_event_target.h",
     ]
-    ldflags = [ "/DELAYLOAD:dwmapi.dll" ]
+    if (!is_mingw) {
+      ldflags = [ "/DELAYLOAD:dwmapi.dll" ]
+    }
     libs += [
-      "dwmapi.lib",
-      "wtsapi32.lib",
+      "dwmapi",
+      "wtsapi32",
     ]
   }
 
diff -ur a/src/3rdparty/chromium/ui/base/ime/win/BUILD.gn b/src/3rdparty/chromium/ui/base/ime/win/BUILD.gn
--- a/src/3rdparty/chromium/ui/base/ime/win/BUILD.gn	2023-11-21 00:08:07.000000000 +0800
+++ b/src/3rdparty/chromium/ui/base/ime/win/BUILD.gn	2024-01-02 19:53:11.204988100 +0800
@@ -34,7 +34,24 @@
     "virtual_keyboard_debounce_timer.cc",
     "virtual_keyboard_debounce_timer.h",
   ]
-  jumbo_excluded_sources = [ "tsf_text_store.cc" ]
+  if (is_mingw) {
+    sources -= [
+      "input_method_win_tsf.cc",
+      "input_method_win_tsf.h",
+      "on_screen_keyboard_display_manager_input_pane.cc", # requires <wrl/event.h>
+      "on_screen_keyboard_display_manager_input_pane.h",
+      "tsf_bridge.cc",
+      "tsf_bridge.h",
+      "tsf_event_router.cc",
+      "tsf_event_router.h",
+      "tsf_input_scope.cc",
+      "tsf_input_scope.h",
+      "tsf_text_store.cc",
+      "tsf_text_store.h",
+    ]
+  } else {
+    jumbo_excluded_sources = [ "tsf_text_store.cc" ]
+  }
 
   defines = [ "IS_UI_BASE_IME_WIN_IMPL" ]
 
@@ -45,7 +62,9 @@
     "//ui/display",
   ]
 
-  libs = [ "imm32.lib" ]
+  libs = [ "imm32" ]
 
-  ldflags = [ "/DELAYLOAD:imm32.dll" ]
+  if (!is_mingw) {
+    ldflags = [ "/DELAYLOAD:imm32.dll" ]
+  }
 }
diff -ur a/src/3rdparty/chromium/ui/base/ime/win/input_method_win_base.cc b/src/3rdparty/chromium/ui/base/ime/win/input_method_win_base.cc
--- a/src/3rdparty/chromium/ui/base/ime/win/input_method_win_base.cc	2023-11-21 00:08:07.000000000 +0800
+++ b/src/3rdparty/chromium/ui/base/ime/win/input_method_win_base.cc	2024-01-02 19:53:11.220686600 +0800
@@ -36,11 +36,15 @@
 
 std::unique_ptr<VirtualKeyboardController> CreateKeyboardController(
     HWND attached_window_handle) {
+#if defined(COMPILER_MSVC)
   if (base::FeatureList::IsEnabled(features::kInputPaneOnScreenKeyboard) &&
       base::win::GetVersion() >= base::win::Version::WIN10_RS4) {
     return std::make_unique<OnScreenKeyboardDisplayManagerInputPane>(
         attached_window_handle);
   } else {
+#else
+  if (base::win::GetVersion() >= base::win::Version::WIN8) {
+#endif
     return std::make_unique<OnScreenKeyboardDisplayManagerTabTip>(
         attached_window_handle);
   }
diff -ur a/src/3rdparty/chromium/ui/base/ime/win/on_screen_keyboard_display_manager_input_pane.h b/src/3rdparty/chromium/ui/base/ime/win/on_screen_keyboard_display_manager_input_pane.h
--- a/src/3rdparty/chromium/ui/base/ime/win/on_screen_keyboard_display_manager_input_pane.h	2023-11-21 00:08:07.000000000 +0800
+++ b/src/3rdparty/chromium/ui/base/ime/win/on_screen_keyboard_display_manager_input_pane.h	2024-01-02 19:53:11.236272700 +0800
@@ -5,6 +5,8 @@
 #ifndef UI_BASE_IME_WIN_ON_SCREEN_KEYBOARD_DISPLAY_MANAGER_INPUT_PANE_H_
 #define UI_BASE_IME_WIN_ON_SCREEN_KEYBOARD_DISPLAY_MANAGER_INPUT_PANE_H_
 
+#if defined(COMPILER_MSVC)
+
 #include <inputpaneinterop.h>
 #include <windows.ui.viewmanagement.h>
 #include <wrl/client.h>
@@ -83,4 +85,6 @@
 
 }  // namespace ui
 
+#endif
+
 #endif  // UI_BASE_IME_WIN_ON_SCREEN_KEYBOARD_DISPLAY_MANAGER_INPUT_PANE_H_
diff -ur a/src/3rdparty/chromium/ui/base/win/lock_state.cc b/src/3rdparty/chromium/ui/base/win/lock_state.cc
--- a/src/3rdparty/chromium/ui/base/win/lock_state.cc	2023-11-21 00:08:07.000000000 +0800
+++ b/src/3rdparty/chromium/ui/base/win/lock_state.cc	2024-01-02 19:53:11.251942400 +0800
@@ -19,6 +19,7 @@
 bool IsSessionLocked() {
   bool is_locked = false;
   LPWSTR buffer = nullptr;
+#if defined(COMPILER_MSVC)
   DWORD buffer_length = 0;
   if (::WTSQuerySessionInformation(WTS_CURRENT_SERVER, WTS_CURRENT_SESSION,
                                    WTSSessionInfoEx, &buffer, &buffer_length) &&
@@ -27,6 +28,7 @@
     is_locked =
         info->Data.WTSInfoExLevel1.SessionFlags == WTS_SESSIONSTATE_LOCK;
   }
+#endif
   if (buffer)
     ::WTSFreeMemory(buffer);
   return is_locked;
diff -ur a/src/3rdparty/chromium/ui/display/BUILD.gn b/src/3rdparty/chromium/ui/display/BUILD.gn
--- a/src/3rdparty/chromium/ui/display/BUILD.gn	2023-11-21 00:08:07.000000000 +0800
+++ b/src/3rdparty/chromium/ui/display/BUILD.gn	2024-01-02 19:53:11.283191300 +0800
@@ -82,6 +82,12 @@
       "win/uwp_text_scale_factor.cc",
       "win/uwp_text_scale_factor.h",
     ]
+    if (is_mingw) {
+      sources -= [
+        "win/uwp_text_scale_factor.cc",
+        "win/uwp_text_scale_factor.h",
+      ]
+    }
   }
 
   if (is_ios) {
@@ -111,8 +117,10 @@
     # Don't conflict with Windows' "display.dll".
     output_name = "ui_display"
     deps += [ "//ui/gfx/mojom:dxgi_info" ]
-    libs = [ "shcore.lib" ]
-    ldflags = [ "/DELAYLOAD:shcore.dll" ]
+    libs = [ "shcore" ]
+    if (!is_mingw) {
+      ldflags = [ "/DELAYLOAD:shcore.dll" ]
+    }
   }
 
   if (use_aura) {
diff -ur a/src/3rdparty/chromium/ui/gfx/BUILD.gn b/src/3rdparty/chromium/ui/gfx/BUILD.gn
--- a/src/3rdparty/chromium/ui/gfx/BUILD.gn	2023-11-21 00:08:07.000000000 +0800
+++ b/src/3rdparty/chromium/ui/gfx/BUILD.gn	2024-01-02 19:53:11.314393100 +0800
@@ -223,6 +223,12 @@
       "win/window_impl.cc",
       "win/window_impl.h",
     ]
+    if (is_mingw) {
+      sources -= [
+        "win/text_analysis_source.cc",
+        "win/text_analysis_source.h"
+      ]
+    }
   }
   if (is_ios) {
     sources += [
@@ -378,9 +384,9 @@
   # Windows.
   if (is_win) {
     libs = [
-      "setupapi.lib",
-      "dwmapi.lib",
-      "dwrite.lib",
+      "setupapi",
+      "dwmapi",
+      "dwrite",
     ]
     public_deps += [ "//components/crash/core/common" ]
   } else {
diff -ur a/src/3rdparty/chromium/ui/gfx/codec/BUILD.gn b/src/3rdparty/chromium/ui/gfx/codec/BUILD.gn
--- a/src/3rdparty/chromium/ui/gfx/codec/BUILD.gn	2023-11-21 00:08:07.000000000 +0800
+++ b/src/3rdparty/chromium/ui/gfx/codec/BUILD.gn	2024-01-02 19:53:11.345596300 +0800
@@ -37,7 +37,7 @@
     deps += [ "//third_party:jpeg" ]
   }
 
-  if (is_win) {
+  if (is_win && !is_mingw) {
     cflags = [ "/wd4324" ]  # Structure was padded due to __declspec(align()),
                             # which is uninteresting.
   }
diff -ur a/src/3rdparty/chromium/ui/gl/BUILD.gn b/src/3rdparty/chromium/ui/gl/BUILD.gn
--- a/src/3rdparty/chromium/ui/gl/BUILD.gn	2023-11-21 00:08:07.000000000 +0800
+++ b/src/3rdparty/chromium/ui/gl/BUILD.gn	2024-01-02 19:53:11.486311900 +0800
@@ -398,13 +398,18 @@
     ]
 
     libs = [
-      "dxgi.lib",
-      "dwmapi.lib",
-    ]
-    ldflags = [
-      "/DELAYLOAD:dwmapi.dll",
-      "/DELAYLOAD:dxgi.dll",
+      "dxgi",
+      "dwmapi",
     ]
+    if (!is_mingw) {
+      ldflags = [
+        "/DELAYLOAD:dwmapi.dll",
+        "/DELAYLOAD:dxgi.dll",
+      ]
+    } else {
+      configs -= [ "//build/config/compiler:no_rtti" ]
+      configs += [ "//build/config/compiler:rtti" ]
+    }
     deps += [
       "//media/base/win:media_foundation_util",
       "//ui/gfx/mojom:dxgi_info",
diff -ur a/src/3rdparty/chromium/ui/gl/init/BUILD.gn b/src/3rdparty/chromium/ui/gl/init/BUILD.gn
--- a/src/3rdparty/chromium/ui/gl/init/BUILD.gn	2023-11-21 00:08:07.000000000 +0800
+++ b/src/3rdparty/chromium/ui/gl/init/BUILD.gn	2024-01-02 19:53:11.501865100 +0800
@@ -52,8 +52,10 @@
       "gl_initializer_win.cc",
     ]
 
-    libs = [ "dwmapi.lib" ]
-    ldflags = [ "/DELAYLOAD:dwmapi.dll" ]
+    libs = [ "dwmapi" ]
+    if (!is_mingw) {
+      ldflags = [ "/DELAYLOAD:dwmapi.dll" ]
+    }
   } else if (is_mac) {
     sources += [
       "gl_factory_mac.cc",
diff -ur a/src/3rdparty/chromium/ui/native_theme/BUILD.gn b/src/3rdparty/chromium/ui/native_theme/BUILD.gn
--- a/src/3rdparty/chromium/ui/native_theme/BUILD.gn	2023-11-21 00:08:07.000000000 +0800
+++ b/src/3rdparty/chromium/ui/native_theme/BUILD.gn	2024-01-02 19:53:11.517516700 +0800
@@ -134,7 +134,7 @@
       "//ui/gfx",
     ]
 
-    libs = [ "uxtheme.lib" ]
+    libs = [ "uxtheme" ]
   }
 } else {
   source_set("native_theme_browser") {
