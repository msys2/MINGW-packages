diff --git a/Makefile b/Makefile
index 9b888e7..cc14663 100644
--- a/Makefile
+++ b/Makefile
@@ -131,7 +131,7 @@ endif
 
 .PHONY: binary-dist
 binary-dist: binary-dist-prep
-	mv bindistprep/*.tar.$(TAR_COMP_EXT) .
+	#mv bindistprep/*.tar.$(TAR_COMP_EXT) .
 
 .PHONY: binary-dist-prep
 binary-dist-prep:
diff --git a/configure.ac b/configure.ac
index 0fceb16..03b7574 100644
--- a/configure.ac
+++ b/configure.ac
@@ -298,10 +298,10 @@ set_up_tarballs() {
     else
         action="download"
     fi
-    mk/get-win32-tarballs.sh $action $HostArch > missing-win32-tarballs
+    #mk/get-win32-tarballs.sh $action $HostArch > missing-win32-tarballs
     case $? in
         0)
-           rm missing-win32-tarballs
+           #rm missing-win32-tarballs
            ;;
         2)
            echo
@@ -325,28 +325,28 @@ set_up_tarballs() {
     esac
 
     # Extract all the tarballs in one go
-    if ! test -d inplace/mingw
-    then
-        AC_MSG_NOTICE([Extracting Windows toolchain from archives (may take a while)...])
-        rm -rf inplace/mingw
-        local base_dir="../ghc-tarballs/${tarball_dest_dir}"
-        ( cd inplace &&
-        find "${base_dir}" -name "*.tar.xz" -exec tar xfJ {} \; &&
-        rm ".MTREE" &&
-        rm ".PKGINFO" &&
-        cd .. ) || fail "Error: Could not extract Windows toolchains."
-
-        mv "inplace/${tarball_mingw_dir}" inplace/mingw &&
-        touch inplace/mingw
-
-        # NB. Now since the GCC is hardcoded to use /mingw32 we need to
-        # make a wrapper around it to give it the proper paths
-        mv inplace/mingw/bin/gcc.exe inplace/mingw/bin/realgcc.exe
-        PATH=`pwd`/inplace/mingw/bin:$PATH
-        inplace/mingw/bin/realgcc.exe driver/gcc/gcc.c driver/utils/cwrapper.c driver/utils/getLocation.c -Idriver/utils -o inplace/mingw/bin/gcc.exe
-
-        AC_MSG_NOTICE([In-tree MingW-w64 tree created])
-    fi
+    #if ! test -d inplace/mingw
+    #then
+    #    AC_MSG_NOTICE([Extracting Windows toolchain from archives (may take a while)...])
+    #    rm -rf inplace/mingw
+    #    local base_dir="../ghc-tarballs/${tarball_dest_dir}"
+    #    ( cd inplace &&
+    #    find "${base_dir}" -name "*.tar.xz" -exec tar xfJ {} \; &&
+    #    rm ".MTREE" &&
+    #    rm ".PKGINFO" &&
+    #    cd .. ) || fail "Error: Could not extract Windows toolchains."
+
+    #    mv "inplace/${tarball_mingw_dir}" inplace/mingw &&
+    #    touch inplace/mingw
+
+    #    # NB. Now since the GCC is hardcoded to use /mingw32 we need to
+    #    # make a wrapper around it to give it the proper paths
+    #    #mv inplace/mingw/bin/gcc.exe inplace/mingw/bin/realgcc.exe
+    #    #PATH=`pwd`/inplace/mingw/bin:$PATH
+    #    #gcc.exe driver/gcc/gcc.c driver/utils/cwrapper.c driver/utils/getLocation.c -Idriver/utils -o inplace/mingw/bin/gcc.exe
+
+    #    AC_MSG_NOTICE([In-tree MingW-w64 tree created])
+    #fi
 }
 
 if test "$HostOS" = "mingw32"
@@ -356,7 +356,8 @@ then
     # NB. Download and extract the MingW-w64 distribution if required
     set_up_tarballs
 
-    mingwbin="$hardtop/inplace/mingw/bin/"
+    mingwbin=""
+    #"$hardtop/inplace/mingw/bin/"
     CC="${mingwbin}gcc.exe"
     LD="${mingwbin}ld.exe"
     NM="${mingwbin}nm.exe"
@@ -367,18 +368,18 @@ then
     fp_prog_ar="${mingwbin}ar.exe"
 
     # NB. Download the perl binaries if required
-    if ! test -d inplace/perl ||
-         test inplace/perl -ot ghc-tarballs/perl/ghc-perl*.tar.gz
-    then
-        AC_MSG_NOTICE([Making in-tree perl tree])
-        rm -rf inplace/perl
-        mkdir inplace/perl
-        (
-            cd inplace/perl &&
-            tar -zxf ../../ghc-tarballs/perl/ghc-perl*.tar.gz
-        )
-        AC_MSG_NOTICE([In-tree perl tree created])
-    fi
+    #if ! test -d inplace/perl ||
+    #     test inplace/perl -ot ghc-tarballs/perl/ghc-perl*.tar.gz
+    #then
+    #    AC_MSG_NOTICE([Making in-tree perl tree])
+    #    rm -rf inplace/perl
+    #    mkdir inplace/perl
+    #    (
+    #        cd inplace/perl &&
+    #        tar -zxf ../../ghc-tarballs/perl/ghc-perl*.tar.gz
+    #    )
+    #    AC_MSG_NOTICE([In-tree perl tree created])
+    #fi
 fi
 
 FP_ICONV
@@ -587,7 +588,7 @@ AC_SYS_INTERPRETER()
 dnl ** look for `perl'
 case $HostOS_CPP in
 cygwin32|mingw32)
-    PerlCmd=$hardtop/inplace/perl/perl
+    PerlCmd=perl
     ;;
 *)
     AC_PATH_PROG(PerlCmd,perl)
diff --git a/ghc.mk b/ghc.mk
index 792bd21..ed38bdb 100644
--- a/ghc.mk
+++ b/ghc.mk
@@ -836,13 +836,13 @@ endif
 
 ifeq "$(Windows_Host)" "YES"
 
-install : install_mingw
-.PHONY: install_mingw
+#install : install_mingw
+#.PHONY: install_mingw
 install_mingw : $(INPLACE_MINGW)
 	"$(CP)" -Rp $(INPLACE_MINGW) $(prefix)
 
-install : install_perl
-.PHONY: install_perl
+#install : install_perl
+#.PHONY: install_perl
 install_perl : $(INPLACE_PERL)
 	"$(CP)" -Rp $(INPLACE_PERL) $(prefix)
 
@@ -1090,7 +1090,7 @@ unix-binary-dist-prep:
 windows-binary-dist-prep:
 	$(call removeTrees,bindistprep/)
 	$(MAKE) prefix=$(TOP)/$(BIN_DIST_PREP_DIR) install
-	cd bindistprep && "$(TAR_CMD)" cf - $(BIN_DIST_NAME) | $(TAR_COMP_CMD) -c > ../$(BIN_DIST_PREP_TAR_COMP)
+	#cd bindistprep && "$(TAR_CMD)" cf - $(BIN_DIST_NAME) | $(TAR_COMP_CMD) -c > ../$(BIN_DIST_PREP_TAR_COMP)
 
 # tryTimes tries to run its third argument multiple times, until it
 # succeeds. Don't call it directly; call try10Times instead.
diff --git a/mk/config.mk.in b/mk/config.mk.in
index 2163643..3995bf4 100644
--- a/mk/config.mk.in
+++ b/mk/config.mk.in
@@ -522,19 +522,19 @@ GccLT46         = @GccLT46@
 GccIsClang      = @GccIsClang@
 
 CC              = @CC@
-CC_STAGE0       = @CC_STAGE0@
+CC_STAGE0       = $(CC)
 CC_STAGE1       = $(CC)
 CC_STAGE2       = $(CC)
 CC_STAGE3       = $(CC)
 
 AS              = @CC@
-AS_STAGE0       = @CC_STAGE0@
+AS_STAGE0       = $(AS)
 AS_STAGE1       = $(AS)
 AS_STAGE2       = $(AS)
 AS_STAGE3       = $(AS)
 
 # why no LD=@LD@ ?
-LD_STAGE0       = @LD_STAGE0@
+LD_STAGE0       = $(LD)
 LD_STAGE1       = $(LD)
 LD_STAGE2       = $(LD)
 LD_STAGE3       = $(LD)
@@ -645,9 +645,9 @@ SRC_HSC2HS_OPTS_STAGE1 += --cflag=-D$(TargetArch_CPP)_HOST_ARCH --cflag=-D$(Targ
 SRC_HSC2HS_OPTS_STAGE2 += --cflag=-D$(TargetArch_CPP)_HOST_ARCH --cflag=-D$(TargetOS_CPP)_HOST_OS
 
 ifeq "$(TARGETPLATFORM)" "i386-unknown-mingw32"
-WINDRES = $(INPLACE_MINGW)/bin/windres
+WINDRES = windres
 else ifeq "$(TARGETPLATFORM)" "x86_64-unknown-mingw32"
-WINDRES = $(INPLACE_MINGW)/bin/windres
+WINDRES = windres
 endif
 
 #-----------------------------------------------------------------------------
@@ -655,9 +655,9 @@ endif
 #
 HaveLibMingwEx	= @HaveLibMingwEx@
 ifeq "$(TARGETPLATFORM)" "i386-unknown-mingw32"
-DLLTOOL			= inplace/mingw/bin/dlltool.exe
+DLLTOOL			= dlltool.exe
 else ifeq "$(TARGETPLATFORM)" "x86_64-unknown-mingw32"
-DLLTOOL			= inplace/mingw/bin/dlltool.exe
+DLLTOOL			= dlltool.exe
 endif
 
 #-----------------------------------------------------------------------------
@@ -747,7 +747,7 @@ XARGS_OPTS = -s 20000
 endif
 
 ifeq "$(TARGETPLATFORM)" "x86_64-unknown-mingw32"
-STRIP_CMD      = $(TOP)/inplace/mingw/bin/strip.exe
+STRIP_CMD      = strip.exe
 else ifeq "$(TARGETPLATFORM)" "arm-unknown-linux"
 # The Cortex A8 hardware apparently has a bug which ld.gold will check for;
 # however in order to do so it must have unstripped executables lest we
