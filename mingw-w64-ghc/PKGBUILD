# Maintainer ncihnegn <ningchen@outlook.com>
# Maintainer: Alethea Rose <alethea@alethearose.com>

_realname=ghc
_hsarch=$CARCH
_buildver=9.4.1
_cabalver=3.10.3.0
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=9.8.2
pkgrel=1
pkgdesc="The Glorious Glasgow Haskell Compilation System (mingw-w64)"
arch=('clang64')
mingw_arch=()
group="${MINGW_PACKAGE_PREFIX}-haskell-platform"
url='https://www.haskell.org/ghc/'
license=('The Glasgow Haskell Compiler License')
depends=("${MINGW_PACKAGE_PREFIX}-binutils"
         "${MINGW_PACKAGE_PREFIX}-crt"
         "${MINGW_PACKAGE_PREFIX}-cc"
         "${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-gmp"
         "${MINGW_PACKAGE_PREFIX}-headers"
         "${MINGW_PACKAGE_PREFIX}-isl"
         "${MINGW_PACKAGE_PREFIX}-libiconv"
         "${MINGW_PACKAGE_PREFIX}-libffi"
         "${MINGW_PACKAGE_PREFIX}-libwinpthread"
         "${MINGW_PACKAGE_PREFIX}-mpc"
         "${MINGW_PACKAGE_PREFIX}-mpfr")
makedepends=("tar" "bsdtar" "xz" "patch"
    "${MINGW_PACKAGE_PREFIX}-curl"
    "${MINGW_PACKAGE_PREFIX}-autotools"
    "${MINGW_PACKAGE_PREFIX}-python3"
    "${MINGW_PACKAGE_PREFIX}-python3-sphinx"
    "${MINGW_PACKAGE_PREFIX}-tools-git"
    "${MINGW_PACKAGE_PREFIX}-ca-certificates"
    "${MINGW_PACKAGE_PREFIX}-zstd")
source=("https://downloads.haskell.org/~ghc/${pkgver}/ghc-${pkgver}-src.tar.xz"
        "https://downloads.haskell.org/~ghc/${pkgver}/ghc-${pkgver}-testsuite.tar.xz"
        "https://downloads.haskell.org/~ghc/${_buildver}/ghc-${_buildver}-${_hsarch}-unknown-mingw32.tar.xz"
        "https://downloads.haskell.org/cabal/cabal-install-$_cabalver/cabal-install-$_cabalver-${_hsarch}-windows.zip"
        win32-includes.patch
        configure.patch)
sha256sums=('e2fb7a7dd7461237d22e8365a83edd9e1a77d2e15d045f3945396845a87781c9'
            'e1e35736205f555bceeecd3a78b9e8f0710c51a875149ebf5795eb88deb38a60'
            'fdc2d78b8a978e712a4edcc1628e36a36be736d8202107d2d61999ac7a9dc5d0'
            'b651ca732998eba5c0e54f4329c147664a7fb3fe3e74eac890c31647ce1e179a'
            '3f1826c3f533ddd1b4a8352e93bc535954bec1bde9b6e3253dc77af29b1e8baf'
            '8ed58ddc3fe991b35d800332e55b26dedf10423c64689beb27855e5f28fa9db9')

prepare() {
  patch -p1 < win32-includes.patch
  patch -p0 < configure.patch

  cd "${srcdir}"

  for f in cabal.exe plan.json; do
    if [ -f "$f" ]; then
      mv "$f" "${srcdir}/ghc-${_buildver}-${_hsarch}-unknown-mingw32/bin";
    fi
  done
  
  cd "${srcdir}/ghc-${_buildver}-${_hsarch}-unknown-mingw32"
  rm -rf mingw
  ln -s ${MINGW_PREFIX} mingw
  
  cd "${srcdir}/ghc-$pkgver"
  autoreconf -fi
  mkdir -p "inplace/mingw"
  ./boot.source
}

build() {
  cd ghc-$pkgver
  
  PATH="${srcdir}/ghc-${_buildver}-${_hsarch}-unknown-mingw32/bin:${PATH}" \
  LD=ld ./configure --prefix=${MINGW_PREFIX} \
  --disable-tarballs-autodownload \
  --enable-distro-toolchain \
  --without-intree-gmp
  PATH="${srcdir}/ghc-${_buildver}-${_hsarch}-unknown-mingw32/bin:${PATH}" hadrian/build -j
}

check() {
  cd "${srcdir}/ghc-${pkgver}"
}

package() {
  cd ghc-$pkgver
  
  PATH="${srcdir}/ghc-${_buildver}-${_hsarch}-unknown-mingw32/bin:${PATH}" \
  hadrian/build binary-dist-dir --docs=no-sphinx-pdfs --prefix=${MINGW_PREFIX}

  _builddir=_build/bindist/ghc-$pkgver-$_hsarch-unknown-mingw32

  mkdir -p "$pkgdir${MINGW_PREFIX}"
  mv $_builddir/bin "$pkgdir$MINGW_PREFIX/bin"
  mkdir -p "$pkgdir${MINGW_PREFIX}/share/bash-completion/completions"
  mv $_builddir/completion/ghc.bash "$pkgdir$MINGW_PREFIX/share/bash-completion/completions/ghc"
  # where to put completions/README?
  mkdir -p "$pkgdir${MINGW_PREFIX}/share/doc/ghc"
  mv $_builddir/doc/html/* "$pkgdir$MINGW_PREFIX/share/doc/ghc"
  mv $_builddir/include "$pkgdir${MINGW_PREFIX}/include"
  mv $_builddir/lib "$pkgdir${MINGW_PREFIX}/lib"
  mkdir -p "$pkgdir${MINGW_PREFIX}/share/man/man1"
  mv $_builddir/manpage/* "$pkgdir${MINGW_PREFIX}/share/man/man1"
  rm -f "$pkgdir${MINGW_PREFIX}/include/ffi.h" "$pkgdir${MINGW_PREFIX}/include/ffitarget.h"
}
