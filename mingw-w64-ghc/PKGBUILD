# Maintainer ncihnegn <ningchen@outlook.com>

_realname=ghc
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=8.0.1
pkgrel=1
pkgdesc='The Glorious Glasgow Haskell Compilation System'
arch=('any')
url='https://www.haskell.org/ghc/'
license=('The Glasgow Haskell Compiler License')
depends=("${MINGW_PACKAGE_PREFIX}-binutils"
         "${MINGW_PACKAGE_PREFIX}-crt-git"
         "${MINGW_PACKAGE_PREFIX}-gcc"
         "${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-gmp"
         "${MINGW_PACKAGE_PREFIX}-headers"
         "${MINGW_PACKAGE_PREFIX}-isl"
         "${MINGW_PACKAGE_PREFIX}-libiconv"
         "${MINGW_PACKAGE_PREFIX}-libwinpthread"
         "${MINGW_PACKAGE_PREFIX}-mpc"
         "${MINGW_PACKAGE_PREFIX}-mpfr"
         "${MINGW_PACKAGE_PREFIX}-winpthreads-git"
         "${MINGW_PACKAGE_PREFIX}-zlib")
makedepends=('perl' 'unzip') #"${MINGW_PACKAGE_PREFIX}-python3-sphinx")
optdepends=("${MINGW_PACKAGE_PREFIX}-llvm: using LLVM as backend")
source=(
  "https://downloads.haskell.org/~ghc/$pkgver/ghc-$pkgver-src.tar.xz"
  "https://downloads.haskell.org/~ghc/$pkgver/ghc-$pkgver-testsuite.tar.xz"
  'build.mk'
  '0001-Rework-CC-CC_STAGE0-handling-in-configure.ac.patch'
  '0001-Add-Windows-import-library-support-to-the-Runtime-Li.patch'
  '0001-Remove-special-casing-of-Windows-in-generic-files.patch'
  '0001-Enable-checkProddableBlock-on-x86_64.patch'
  '0001-Add-relocation-type-R_X86_64_REX_GOTPCRELX.patch'
  '0001-Fix-incorrect-calculated-relocations-on-Windows-x86_.patch'
  '0001-Switch-to-LLVM-version-3.8.patch'
  '0001-configure.ac-Remove-checks-for-bug-9439.patch'
  '0001-Fix-configure-detection.patch'
  '0001-Unstaged.patch'
)

prepare() {
  SYST=$CARCH
  if [[ $SYST == "i686" ]]; then
     SYST="i386"
  fi
  mkdir -p host
  curl -LO "https://www.haskell.org/cabal/release/cabal-install-1.24.0.0/cabal-install-1.24.0.0-$SYST-unknown-mingw32.zip"
  curl -L "https://downloads.haskell.org/~${_realname}/$pkgver/${_realname}-$pkgver-$SYST-unknown-mingw32.tar.xz" | tar -Jx --strip-components=1 --directory=host
  unzip -o cabal-install-1.24.0.0-$SYST-unknown-mingw32.zip -d host/bin
  export PATH=$srcdir/host/bin:$PATH
  cabal update
  cabal install alex happy --prefix=$srcdir/host
  cp build.mk "$srcdir/${_realname}-$pkgver/mk"
  patch -d "$srcdir/${_realname}-$pkgver" -p1 < 0001-Rework-CC-CC_STAGE0-handling-in-configure.ac.patch
  patch -d "$srcdir/${_realname}-$pkgver" -p1 < 0001-Add-Windows-import-library-support-to-the-Runtime-Li.patch
  patch -d "$srcdir/${_realname}-$pkgver" -p1 < 0001-Remove-special-casing-of-Windows-in-generic-files.patch
  patch -d "$srcdir/${_realname}-$pkgver" -p1 < 0001-Enable-checkProddableBlock-on-x86_64.patch
  patch -d "$srcdir/${_realname}-$pkgver" -p1 < 0001-Add-relocation-type-R_X86_64_REX_GOTPCRELX.patch
  patch -d "$srcdir/${_realname}-$pkgver" -p1 < 0001-Fix-incorrect-calculated-relocations-on-Windows-x86_.patch
  patch -d "$srcdir/${_realname}-$pkgver" -p1 < 0001-Switch-to-LLVM-version-3.8.patch
  patch -d "$srcdir/${_realname}-$pkgver" -p1 < 0001-configure.ac-Remove-checks-for-bug-9439.patch
  patch -d "$srcdir/${_realname}-$pkgver" -p1 < 0001-Fix-configure-detection.patch
  patch -d "$srcdir/${_realname}-$pkgver" -p1 < 0001-Unstaged.patch
}

build() {
  export PATH=$srcdir/host/bin:$PATH
  cd "$srcdir/${_realname}-$pkgver"
  ./boot
  ./configure --prefix=${MINGW_PREFIX}
  make
  #make html
  #Need xelatex
  #make pdf
}

check() {
  export PATH=$srcdir/host/bin:$PATH
  cd "$srcdir/${_realname}-$pkgver"
  #Don't check to save time
  #make test
}

package() {
  export PATH=$srcdir/host/bin:$PATH
  cd "$srcdir/${_realname}-$pkgver"
  make binary-dist
  mv bindistprep/${_realname}-$pkgver "$pkgdir"${MINGW_PREFIX}
}

sha256sums=('90fb20cd8712e3c0fbeb2eac8dab6894404c21569746655b9b12ca9684c7d1d2'
            'bc57163656ece462ef61072559d491b72c5cdd694f3c39b80ac0f6b9a3dc8151'
            'c4284efe02de55fbd3dedadb785ad977d123a7e257ef3d77d33ee0a127e9248d'
            'b8e404b55f40bccf60a5bf93108ee845197cf4857f106018aea1c8c841ed2e14'
            '5a6d3fe2ab4c49d8b1921e139907373fd93925fcfbe16d282f1735988831a07a'
            '6d910a567732fcbc808d20ff17a8d7a1ead6a634d341810887fe45a217709714'
            '7f8ace437031139aaab620b6fa2fb3420aeeecb46c154751283453a3842b6b82'
            '36099d0e80c89eae3c79ac94e59286548802d911ed41a6cc489d233af1268088'
            'b99ebe964d7d01cd2a4167e353a29e00d3fb0705ecca39f6d2e36b10e4d5bda0'
            '614594d5d3c5a4917b68a2ac144a4f41f02afbb456e830fd49d3b307e8d49507'
            'b11e174202e36b74dcd8d27ebc158604c902bfbdef3e470dd234fc8250c2d27a'
            '039f7bf52e229ecf70f9b50819d29593ab65b5e932bc26911234cf56b3336d1d'
            '53ecc3a9cbc8cda17e0f37c7ecba0878c8a512aa1735c72a2da49aa76dcf6508')
