diff -Naur qt-everywhere-src-5.12.4-orig/qtbase/mkspecs/features/data/cmake/Qt5BasicConfig.cmake.in qt-everywhere-src-5.12.4/qtbase/mkspecs/features/data/cmake/Qt5BasicConfig.cmake.in
--- qt-everywhere-src-5.12.4-orig/qtbase/mkspecs/features/data/cmake/Qt5BasicConfig.cmake.in	2019-06-15 15:48:56.475057700 +0300
+++ qt-everywhere-src-5.12.4/qtbase/mkspecs/features/data/cmake/Qt5BasicConfig.cmake.in	2019-06-15 15:51:33.894934200 +0300
@@ -143,6 +143,11 @@
             \"INTERFACE_LINK_OPTIONS\" \"${_Qt5$${CMAKE_MODULE_NAME}_STATIC_${Configuration}_LINK_FLAGS}\"
         )
     endif()
+    # provide static plugins for MINSIZEREL and RELWITHDEBINFO too
+    set_target_properties(${_Qt5$${CMAKE_MODULE_NAME}} PROPERTIES
+        MAP_IMPORTED_CONFIG_MINSIZEREL Release
+        MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release
+    )
 !!ENDIF
 
 !!IF !isEmpty(CMAKE_WINDOWS_BUILD)
@@ -338,17 +338,31 @@
     # Parse the prl files generated by qmake to get the link dependencies. They
     # contain all the information we need, and they are the only location with
     # all the right information.
+
+    # .. changed so that if can be called multiple times, once for the module itself and once for each
+    # plugin, each time, appending to _Qt5$${CMAKE_MODULE_NAME}_STATIC_${Configuration}_LIB_DEPENDENCIES
+
     macro(macro_process_prl_file prl_file_location Configuration)
         if (EXISTS \"${prl_file_location}\")
             file(STRINGS \"${prl_file_location}\" prl_strings REGEX \"QMAKE_PRL_LIBS_FOR_CMAKE\")
             string(REGEX REPLACE \"QMAKE_PRL_LIBS_FOR_CMAKE *= *([^\\n]*)\" \"\\\\1\" static_depends ${prl_strings} )
-            if (_Qt5$${CMAKE_MODULE_NAME}_LIB_DEPENDENCIES)
+            if (_Qt5$${CMAKE_MODULE_NAME}_STATIC_${Configuration}_LIB_DEPENDENCIES)
                 set(_list_sep \";\")
             endif()
-            set(_Qt5$${CMAKE_MODULE_NAME}_STATIC_${Configuration}_LIB_DEPENDENCIES \"${_list_sep}${static_depends}\")
+            set(_Qt5$${CMAKE_MODULE_NAME}_STATIC_${Configuration}_LIB_DEPENDENCIES \"${_Qt5$${CMAKE_MODULE_NAME}_STATIC_${Configuration}_LIB_DEPENDENCIES}${_list_sep}${static_depends}\")
         endif()
     endmacro()
 
+    macro(macro_process_plugin_prl_file prl_file_location Configuration LIB_DIRECTORY LIB_LOCATION)
+        # First add the (static) plugin itself.
+        if (_Qt5$${CMAKE_MODULE_NAME}_STATIC_${Configuration}_LIB_DEPENDENCIES)
+            set(_list_sep \";\")
+        endif()
+        set(_Qt5$${CMAKE_MODULE_NAME}_STATIC_${Configuration}_LIB_DEPENDENCIES \"${_Qt5$${CMAKE_MODULE_NAME}_STATIC_${Configuration}_LIB_DEPENDENCIES}${_list_sep}${_qt5$${CMAKE_MODULE_NAME}_install_prefix}/${LIB_DIRECTORY}/${LIB_LOCATION}\")
+        # .. then its dependencies.
+        macro_process_prl_file(${prl_file_location} ${Configuration})
+    endmacro()
+
 !!IF isEmpty(CMAKE_LIB_DIR_IS_ABSOLUTE)
     macro_process_prl_file(\"${_qt5$${CMAKE_MODULE_NAME}_install_prefix}/$${CMAKE_LIB_DIR}$${CMAKE_PRL_FILE_LOCATION_DEBUG}\" DEBUG)
 !!ELSE
@@ -294,6 +319,57 @@
         )
     endif()
 
+!!IF isEmpty(CMAKE_INTERNAL_MODULE)
+
+    file(GLOB pluginTargetsMaybe \"${CMAKE_CURRENT_LIST_DIR}/Qt5$${CMAKE_MODULE_NAME}_*.cmake\")
+    unset(pluginTargets)
+    if (pluginTargetsMaybe)
+        foreach(pluginTarget ${pluginTargetsMaybe})
+            # exclude Qt5Qml factory plugins as they will be included later by Qt5QmlConfigExtras
+            string(REGEX MATCH Qt5Qml_.*Factory.cmake excluded ${pluginTarget})
+            if (excluded)
+                continue()
+            endif()
+            file(STRINGS ${pluginTarget} matched REGEX Qt5$${CMAKE_MODULE_NAME}_PLUGINS)
+            if (matched)
+                list(APPEND pluginTargets ${pluginTarget})
+            endif()
+        endforeach()
+    endif()
+
+    macro(_populate_$${CMAKE_MODULE_NAME}_plugin_properties Plugin Configuration PLUGIN_LOCATION)
+        set_property(TARGET Qt5::${Plugin} APPEND PROPERTY IMPORTED_CONFIGURATIONS ${Configuration})
+
+!!IF isEmpty(CMAKE_PLUGIN_DIR_IS_ABSOLUTE)
+        set(imported_location \"${_qt5$${CMAKE_MODULE_NAME}_install_prefix}/$${CMAKE_PLUGIN_DIR}${PLUGIN_LOCATION}\")
+!!ELSE
+        set(imported_location \"$${CMAKE_PLUGIN_DIR}${PLUGIN_LOCATION}\")
+!!ENDIF
+        _qt5_$${CMAKE_MODULE_NAME}_check_file_exists(${imported_location})
+        set_target_properties(Qt5::${Plugin} PROPERTIES
+            \"IMPORTED_LOCATION_${Configuration}\" ${imported_location}
+        )
+        get_filename_component(_plugindir ${PLUGIN_LOCATION} PATH)
+        get_filename_component(_plugindirname ${_plugindir} NAME)
+        get_filename_component(_pluginname ${PLUGIN_LOCATION} NAME)
+!!IF !isEmpty(CMAKE_STATIC_TYPE)
+        set_property(TARGET Qt5::$${CMAKE_MODULE_NAME} APPEND PROPERTY STATIC_PLUGINS ${Plugin})
+!!ENDIF
+        string(REGEX REPLACE \"^lib(.*)\\\\.a\" \"${_qt5$${CMAKE_MODULE_NAME}_install_prefix}/share/qt5/plugins/${_plugindirname}/\\\\1.prl\" plugin_prl_file_location ${_pluginname})
+!!IF !isEmpty(CMAKE_STATIC_TYPE)
+        macro_process_plugin_prl_file(${plugin_prl_file_location} ${Configuration} \"share/qt5/plugins\" ${PLUGIN_LOCATION} )
+!!ENDIF
+
+    endmacro()
+
+    if (pluginTargets)
+        foreach(pluginTarget ${pluginTargets})
+            include(${pluginTarget})
+        endforeach()
+    endif()
+
+!!ENDIF // isEmpty(CMAKE_INTERNAL_MODULE)
+
 !!IF !equals(TEMPLATE, aux)
 !!IF !isEmpty(CMAKE_RELEASE_TYPE)
 !!IF !isEmpty(CMAKE_STATIC_WINDOWS_BUILD)
@@ -374,40 +446,6 @@
     )
 !!ENDIF // TEMPLATE != aux
 
-!!IF isEmpty(CMAKE_INTERNAL_MODULE)
-
-    file(GLOB pluginTargetsMaybe \"${CMAKE_CURRENT_LIST_DIR}/Qt5$${CMAKE_MODULE_NAME}_*.cmake\")
-    unset(pluginTargets)
-    if (pluginTargetsMaybe)
-        foreach(pluginTarget ${pluginTargetsMaybe})
-            file(STRINGS ${pluginTarget} matched REGEX Qt5$${CMAKE_MODULE_NAME}_PLUGINS)
-            if (matched)
-                list(APPEND pluginTargets ${pluginTarget})
-            endif()
-        endforeach()
-    endif()
-
-    macro(_populate_$${CMAKE_MODULE_NAME}_plugin_properties Plugin Configuration PLUGIN_LOCATION)
-        set_property(TARGET Qt5::${Plugin} APPEND PROPERTY IMPORTED_CONFIGURATIONS ${Configuration})
-
-!!IF isEmpty(CMAKE_PLUGIN_DIR_IS_ABSOLUTE)
-        set(imported_location \"${_qt5$${CMAKE_MODULE_NAME}_install_prefix}/$${CMAKE_PLUGIN_DIR}${PLUGIN_LOCATION}\")
-!!ELSE
-        set(imported_location \"$${CMAKE_PLUGIN_DIR}${PLUGIN_LOCATION}\")
-!!ENDIF
-        _qt5_$${CMAKE_MODULE_NAME}_check_file_exists(${imported_location})
-        set_target_properties(Qt5::${Plugin} PROPERTIES
-            \"IMPORTED_LOCATION_${Configuration}\" ${imported_location}
-        )
-    endmacro()
-
-    if (pluginTargets)
-        foreach(pluginTarget ${pluginTargets})
-            include(${pluginTarget})
-        endforeach()
-    endif()
-
-!!ENDIF // isEmpty(CMAKE_INTERNAL_MODULE)
 
 
 !!IF !isEmpty(CMAKE_MODULE_EXTRAS)
