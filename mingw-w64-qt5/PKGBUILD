# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>

_realname=qt5
_mingw_suff=mingw-w64-${CARCH}
_make=make
#_make=${MINGW_PREFIX}/bin/mingw32-make
pkgname="${_mingw_suff}-${_realname}"
_ver_base=5.3.0-beta
pkgver=${_ver_base//-/}
pkgrel=2
arch=('any')
pkgdesc="A cross-platform application and UI framework (mingw-w64)"
url='http://qt-project.org/'
install=qt5-${CARCH}.install
license=('GPL3' 'LGPL' 'FDL' 'custom')
depends=("${_mingw_suff}-gcc-libs"
      "${_mingw_suff}-icu"
      "${_mingw_suff}-openssl"
      "${_mingw_suff}-libxml2"
      "${_mingw_suff}-libxslt"
      "${_mingw_suff}-fontconfig"
      "${_mingw_suff}-qtbinpatcher"
      "${_mingw_suff}-freetype"
      "${_mingw_suff}-harfbuzz"
      "${_mingw_suff}-libpng"
      "${_mingw_suff}-zlib"
      "${_mingw_suff}-libjpeg"
      "${_mingw_suff}-pcre"
      "${_mingw_suff}-sqlite3"
      "${_mingw_suff}-libwebp"
      "${_mingw_suff}-xpm-nox"
      "${_mingw_suff}-dbus")
makedepends=("${_mingw_suff}-gcc"
      "${_mingw_suff}-postgresql"
      "${_mingw_suff}-libmariadbclient"
      "${_mingw_suff}-libfbclient"
      "${_mingw_suff}-python2"
      "${_mingw_suff}-ruby"
      "perl"
      "gperf"
      "m4"
      "flex"
      "${_mingw_suff}-make"
      "${_mingw_suff}-pkg-config")
groups=("${_mingw_suff}-qt" "${_mingw_suff}-qt5")
options=('!strip' 'staticlibs')
_pkgfqn="qt-everywhere-opensource-src-${_ver_base}"
source=("http://download.qt-project.org/development_releases/qt/${pkgver%.*}/${_ver_base}/single/${_pkgfqn}.tar.xz"
    #http://download.qt-project.org/official_releases/qt/${pkgver%.*}/${_ver_base}/single/${_pkgfqn}.tar.xz
    #"qt3d"::"git://gitorious.org/qt/qt3d.git"
    qt-5.0.0-oracle-driver-prompt.patch
    qt-5.0.0-use-fbclient-instead-of-gds32.patch
    qt-5.1.0-win32-g++-mkspec-optimization.patch
    qt-5.1.x-fix-configure-tests.patch
    qt-5.1.x-syncqt-fix.patch
    qt-5.1.x-win_flex-replace.patch
    qt-5.2.1-win32-g-Enable-static-builds.patch
    qt-5.2.1-win32-g-Add-QMAKE_EXTENSION_IMPORTLIB-defaulting-to-.patch
    qt-5.2.1-qmlimportscanner-Ensure-the-correct-variant-is-run.patch
    qt5-add-angle-support.patch
    qt5-qtwebkit-angle-build-fix.patch
    qt5-qtwebkit-enable-pkgconfig-support-for-win32-target.patch
    qt5-use-external-angle-library.patch
    qtwebkit-dont-use-bundled-angle-libraries.patch
    qt-5.3.0-properly-split-libraries-mingw.patch
    qt-5.3.0-win32-g++-use-qpa-genericunixfontdatabase.patch
    qt-5.3.0-qtwebkit-angle-update-for-angleproject-76985f-and-51b4a0.patch
    env-set-external-angle.patch)

md5sums=('4f4a8302c52ef80bbb62bf764e682e47'
         '10790f1672b5f2b83e5473ad6cd48cd3'
         '86899e8f2858c48d4827282c04696b76'
         'd675dbbe15d275c84f2792c75212ace0'
         '41391e320dcf03f932d7950b503102e2'
         '2235d876133956a788c393310fa8a526'
         '608a30dbf8f5c2146d7285b551b03252'
         '6c6496de7e57e9e5b8a89b306fab37a8'
         'aa4d5616026919e9f211f22959570375'
         'd7d745b5915cff6a7e7f4cc4e9760de0'
         '468e8a1aa1d830d68ce9963432d167fa'
         '9ee6524aa78b5e4fbb47f10dc3b267a4'
         '3b740ce9bca6d9019b09f6f38f07411a'
         'acb49bb963a23b15bc7d1a93d8896bee'
         'd64536bcf72b63d15df106e2c9913154'
         '0d7ce23a99b3f15d176c09e617a437f9'
         '40ba7d8134a696d07be5be6692cfaca7'
         '05e73ac3ead09802111cc13d8e3e28c8'
         '09aaa20fe92aa3fb8eaa36f805503d7d')

prepare() {
  cd ${srcdir}
  #cp -rf qt3d ${_pkgfqn}/
  cd ${_pkgfqn}

  patch -p1 -i ${srcdir}/qt-5.0.0-oracle-driver-prompt.patch
  patch -p1 -i ${srcdir}/qt-5.0.0-use-fbclient-instead-of-gds32.patch
  patch -p1 -i ${srcdir}/qt-5.1.0-win32-g++-mkspec-optimization.patch
  patch -p1 -i ${srcdir}/qt-5.1.x-syncqt-fix.patch
  patch -p1 -i ${srcdir}/qt-5.1.x-win_flex-replace.patch

  # My qt-5.2.1 win32-g++ static patches are against qtbase's dev branch.
  pushd qtbase
  patch -p1 -i ${srcdir}/qt-5.2.1-win32-g-Enable-static-builds.patch
  patch -p1 -i ${srcdir}/qt-5.2.1-win32-g-Add-QMAKE_EXTENSION_IMPORTLIB-defaulting-to-.patch
  patch -p1 -i ${srcdir}/qt-5.2.1-qmlimportscanner-Ensure-the-correct-variant-is-run.patch
  popd

  #patch -p1 -i ${srcdir}/qt5-add-angle-support.patch
  #patch -p1 -i ${srcdir}/qt5-qtwebkit-angle-build-fix.patch
  patch -p1 -i ${srcdir}/qt5-qtwebkit-enable-pkgconfig-support-for-win32-target.patch
  patch -p1 -i ${srcdir}/qt5-use-external-angle-library.patch
  patch -p1 -i ${srcdir}/qtwebkit-dont-use-bundled-angle-libraries.patch
  patch -p1 -i ${srcdir}/qt-5.1.x-fix-configure-tests.patch
  patch -p1 -i ${srcdir}/qt-5.3.0-properly-split-libraries-mingw.patch
  patch -p1 -i ${srcdir}/qt-5.3.0-win32-g++-use-qpa-genericunixfontdatabase.patch
  patch -p1 -i ${srcdir}/qt-5.3.0-qtwebkit-angle-update-for-angleproject-76985f-and-51b4a0.patch
  patch -p1 -i ${srcdir}/env-set-external-angle.patch

  # See: https://bugreports.qt-project.org/browse/QTBUG-37902
  _ver_num=${_ver_base%%-*}
  sed -i "s/^MODULE_VERSION = .*$/MODULE_VERSION = ${_ver_num}/g" qtenginio/.qmake.conf

  #mv configure.bat configure.bat.orig
  #mv qtbase/configure.bat qtbase/configure.bat.orig
  local _optim=
  case ${MINGW_CHOST} in
    i686*)
      _optim="-march=i686 -mtune=core2"
    ;;
    x86_64*)
      _optim="-march=nocona -mtune=core2"
    ;;
  esac

  sed -i "s|%OPTIMIZE_OPT%|${_optim}|g" qtbase/mkspecs/win32-g++/qmake.conf
  sed -i "s|%STATICFLAGS%||g" qtbase/mkspecs/win32-g++/qmake.conf # -static-libstdc++ -static-libgcc
  sed -i "s|-O2|${CXXFLAGS}|" qtbase/mkspecs/common/{g++,gcc}-base.conf
  sed -i "/^QMAKE_LFLAGS_RPATH/s| -Wl,-rpath,||g" qtbase/mkspecs/common/gcc-base-unix.conf
  sed -i "/^QMAKE_LFLAGS\s/s|+=|+= ${LDFLAGS}|g" qtbase/mkspecs/common/gcc-base.conf

  # Use python2 for Python 2.x
  #patch -p1 -i "${srcdir}"/use-python2.patch
  #sed -i -e "s|#![ ]*/usr/bin/python$|#!/usr/bin/python2|" \
  #  -e "s|#![ ]*/usr/bin/env python$|#!/usr/bin/env python2|" \
  #  $(find . -name '*.py')
  
  # To keep the build folder name quite small (MAXPATH limit)
  # the source folder (long) is renamed to $CARCH (i686 or x86_64)
  #[ -d ${CARCH} ] && rm -rf ${CARCH}
  cd ${srcdir}
  mv ${_pkgfqn} ${CARCH}
}

build() {
  cd ${CARCH}
  touch qtbase/.gitignore
  #BUILD_WIN=$(pwd -W)
  #echo "BUILD_WIN $BUILD_WIN"

  #export QTDIR="${srcdir}"/${CARCH}
  #export LD_LIBRARY_PATH="${QTDIR}"/qtbase/lib:"${QTDIR}"/qttools/lib:"${LD_LIBRARY_PATH}"
  #export QT_PLUGIN_PATH="${QTDIR}"/qtbase/plugins

  mkdir -p ${pkgdir}${MINGW_PREFIX}
  pushd ${pkgdir}${MINGW_PREFIX} > /dev/null
  QTDIR_WIN=$(pwd -W)
  #echo "QTDIR_WIN $QTDIR_WIN"
  popd > /dev/null

  #pushd ${MINGW_PREFIX} > /dev/null
  #MINGW_WIN=$(pwd -W)
  #echo "MINGW_WIN $MINGW_WIN"
  #popd > /dev/null

  _extra_inc="$(pkg-config --cflags-only-I dbus-1 libxml-2.0 freetype2) -I${MINGW_PREFIX}/include/GLSLANG"
  _extra_inc=${_extra_inc//-I/:}
  _extra_inc=${_extra_inc// /}

  export EXTERNAL_ANGLE=1
  export LIBRARY_PATH="${MINGW_PREFIX}/${MINGW_CHOST}/lib:${MINGW_PREFIX}/lib"
  export CPATH="${MINGW_PREFIX}/${MINGW_CHOST}/include:${MINGW_PREFIX}/include:${MINGW_PREFIX}/include/mysql:${MINGW_PREFIX}/include/noX:${_extra_inc}"
  #export LIB="${MINGW_PREFIX}/${MINGW_CHOST}/lib:${MINGW_PREFIX}/lib"
  export PATH="${srcdir}/${CARCH}/qtbase/bin:${srcdir}/${CARCH}/qtbase/lib:${PATH}"

  #unset LDFLAGS
  #export CFLAGS=$(echo $CFLAGS | sed 's#\([ ]*-I[^ ]*\)##g')
  #export CXXFLAGS=$(echo $CXXFLAGS | sed 's#\([ ]*-I[^ ]*\)##g')
  #QMAKE_LDFLAGS+=" -L${MINGW_PREFIX}/${MINGW_CHOST}/lib -L${MINGW_PREFIX}/lib"
  #export LDFLAGS=$(echo $LDFLAGS | sed 's#\([ ]*-L[^ ]*\)##g')
  
  ./configure.bat \
    -prefix ${QTDIR_WIN} \
    -angle -opengl-es-2 \
    -opensource \
    -confirm-license \
    -device-option QMAKE_EXTENSION_IMPORTLIB="dll.a" \
    -platform win32-g++ \
    -shared \
    -debug-and-release \
    -no-iconv \
    -icu \
    -plugin-sql-ibase \
    -plugin-sql-mysql \
    -plugin-sql-psql \
    -plugin-sql-odbc \
    -no-gtkstyle \
    -no-glib \
    -openssl \
    -dbus \
    -fontconfig \
    -system-harfbuzz \
    -system-freetype \
    -nomake examples \
    -nomake tests

  ${_make} ${MAKEFLAGS}

  # Fix paths
  #find "${QTDIR}" -name Makefile -exec sed -i "s|/usr/lib/qt/bin/qdoc|${QTDIR}/qtbase/bin/qdoc|g" {} +
  #find "${QTDIR}" -name Makefile.qmake-docs -exec sed -i "s|/usr/lib/qt/bin/qdoc|${QTDIR}/qtbase/bin/qdoc|g" {} +
  #find "${QTDIR}" -name Makefile -exec sed -i "s|/usr/lib/qt/bin/qhelpgenerator|${QTDIR}/qttools/bin/qhelpgenerator|g" {} +
  #find "${QTDIR}" -name Makefile.qmake-docs -exec sed -i "s|/usr/lib/qt/bin/qhelpgenerator|${QTDIR}/qttools/bin/qhelpgenerator|g" {} +
  #sed -i "s|/usr/lib/qt/bin/qhelpgenerator|${QTDIR}/qttools/bin/qhelpgenerator|g" qtwebkit/Source/Makefile.api
}

package() {
  cd ${CARCH}

  export PATH=${pkgdir}${MINGW_PREFIX}/bin:${srcdir}/${CARCH}/qtbase/bin:${srcdir}/${CARCH}/qtbase/lib:${PATH}

  ${_make} install #INSTALL_ROOT="${pkgdir}"
  ${_make} docs
  ${_make} install_qch_docs

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt5/LGPL_EXCEPTION.txt

  # Remove dll's from lib
  rm -f "${pkgdir}${MINGW_PREFIX}/lib"/*.dll

  # Workaround for installing empty .pc files
  plain "---> Fix pkgconfig files..."
  local _pc_files=( $(find ${srcdir}/${CARCH} -type f -name Qt5*.pc) )
  cp -f ${_pc_files[@]} ${pkgdir}${MINGW_PREFIX}/lib/pkgconfig/

  # Fix wrong path in prl files
  #find "${pkgdir}${MINGW_PREFIX}/lib" -type f -name '*.prl' \
  #  -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d;s/\(QMAKE_PRL_LIBS =\).*/\1/' {} \;

  # Fix wrong qmake path in pri file
  #sed -i "s|${srcdir}/${CARCH}/qtbase|/usr|" \
  #  "${pkgdir}"/usr/lib/qt/mkspecs/modules/qt_lib_bootstrap_private.pri
}

# Despite qt-5.2.1-use-.dll.a-as-MINGW_IMPORT_LIB-extension.patch the following static libraries end up being made:
# ActiveQt is always built statically, so should we include it in shared or static? Disable it for static.
# Apart from that there's libQt5OpenGLExtensions{d}.a, libQt5PlatformSupport{d}.a and libQt5QmlDevTools.a libQt5UiTools{d}.a libqtmain{d}.a
