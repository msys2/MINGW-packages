# $Id$
# Maintainer (ArchLinux): Alexander RÃ¸dseth <rodseth@gmail.com>
# Contributor (ArchLinux): William Rea <sillywilly@gmail.com>
# Contributor (ArchLinux): Stefan Husmann <stefan-husmann@t-online.de>
# Maintainer (MSYS2): Ray Donnelly <mingw.android@gmail.com>

_realname=arpack
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}"
         $([[ "${CARCH}" == "i686" ]] || echo "${MINGW_PACKAGE_PREFIX}-${_realname}64"))
pkgver=3.8.0
pkgrel=3
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64')
pkgdesc="Fortran77 subroutines designed to solve large scale eigenvalue problems (mingw-w64)"
url='https://forge.scilab.org/index.php/p/arpack-ng/'
license=('BSD')
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libgfortran"
         "${MINGW_PACKAGE_PREFIX}-openblas"
	 $([[ ${CARCH} == x86_64 ]] && echo "${MINGW_PACKAGE_PREFIX}-openblas64"))
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc-fortran"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-cmake")
provides=("${MINGW_PACKAGE_PREFIX}-${_realname}-ng")
options=('!buildflags')
source=(${_realname}-${pkgver}.tar.gz::https://github.com/opencollab/arpack-ng/archive/${pkgver}.tar.gz
        "0001-cmake-relocate-prefix.patch"
	"0002-cmake-set-SUFFIX64.patch")
sha256sums=('ADA5AEB3878874383307239C9235B716A8A170C6D096A6625BFD529844DF003D'
            '94b215a281f115bd91e3370487bcfc97a1100aff82196d226927f7e395dc4cff'
	    '778CDECFAFFA89F467DE2D652069C87E0463865B9BD33A3B85CE8C114A4C570D')

prepare() {
  cd "${srcdir}/${_realname}-ng-${pkgver}"

  # https://github.com/msys2/MINGW-packages/issues/10151
  patch -p1 -i "${srcdir}/0001-cmake-relocate-prefix.patch"
  patch -p1 -i "${srcdir}/0002-cmake-set-SUFFIX64.patch"
  #./bootstrap
}

_build_arpack() {
  _idx_opt=$1

  declare -a _build_type
  if check_option "debug" "n"; then
    _build_type+=("Release")
  else
    _build_type+=("Debug")
  fi

  unset CFLAGS
  unset CXXFLAGS

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    ${MINGW_PREFIX}/bin/cmake \
      -GNinja \
      -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
      -DCMAKE_BUILD_TYPE=${_build_type} \
      -DICB=ON \
      ${_idx_opt} \
      ../${_realname}-ng-${pkgver}

  ${MINGW_PREFIX}/bin/cmake --build .

}

build() {
  [[ -d "${srcdir}/build-${MSYSTEM}-static-32" ]] && rm -rf "${srcdir}/build-${MSYSTEM}-static-32"
  mkdir -p "${srcdir}/build-${MSYSTEM}-static-32" && cd "${srcdir}/build-${MSYSTEM}-static-32"

  msg2 "Build static Arpack with 32-bit indexing"
  _build_arpack "-DBUILD_SHARED_LIBS=OFF"
  
  [[ -d "${srcdir}/build-${MSYSTEM}-shared-32" ]] && rm -rf "${srcdir}/build-${MSYSTEM}-shared-32"
  mkdir -p "${srcdir}/build-${MSYSTEM}-shared-32" && cd "${srcdir}/build-${MSYSTEM}-shared-32"

  msg2 "Build shared Arpack with 32-bit indexing"
  _build_arpack ""


  if [ "${CARCH}" = "x86_64" ]; then
    [[ -d "${srcdir}/build-${MSYSTEM}-static-64" ]] && rm -rf "${srcdir}/build-${MSYSTEM}-static-64"
    mkdir -p "${srcdir}/build-${MSYSTEM}-static-64" && cd "${srcdir}/build-${MSYSTEM}-static-64"

    msg2 "Build static Arpack with 64-bit indexing"
    _build_arpack "-DINTERFACE64=1 -DLIBSUFFIX=_64 -DBUILD_SHARED_LIBS=OFF -DBLAS_LIBRARIES=openblas_64"
    
    [[ -d "${srcdir}/build-${MSYSTEM}-shared-64" ]] && rm -rf "${srcdir}/build-${MSYSTEM}-shared-64"
    mkdir -p "${srcdir}/build-${MSYSTEM}-shared-64" && cd "${srcdir}/build-${MSYSTEM}-shared-64"

    msg2 "Build shared Arpack with 64-bit indexing"
    _build_arpack "-DINTERFACE64=1 -DLIBSUFFIX=_64 -DBLAS_LIBRARIES=openblas_64"

  fi
}

package_arpack() {
  pkgdesc="Fortran77 subroutines designed to solve large scale eigenvalue problems (mingw-w64)"
  
  #Static Install
  cd "${srcdir}/build-${MSYSTEM}-static-32"
  DESTDIR=${pkgdir} cmake --build . --target install

  #Shared Install
  cd "${srcdir}/build-${MSYSTEM}-shared-32"
  DESTDIR=${pkgdir} cmake --build . --target install
  install -Dm644 ${srcdir}/${_realname}-ng-${pkgver}/COPYING ${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING
  
  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  for _f in "${pkgdir}${MINGW_PREFIX}"/lib/cmake/${_realname}-ng/*.cmake; do
    sed -e "s|${PREFIX_WIN}|\$\{_IMPORT_PREFIX\}|g" -i ${_f}
    sed -e "s|${MINGW_PREFIX}|\$\{_IMPORT_PREFIX\}|g" -i ${_f}
  done

}

package_arpack64() {
  pkgdesc="Fortran77 subroutines designed to solve large scale eigenvalue problems with 64-bit indexing (mingw-w64)"
  provides=()
  conflicts=()
  replaces=()

  #Static Install
  cd "${srcdir}/build-${MSYSTEM}-static-64"
  DESTDIR=${pkgdir} cmake --build . --target install

  #Shared Install
  cd "${srcdir}/build-${MSYSTEM}-shared-64"
  DESTDIR=${pkgdir} cmake --build . --target install
  install -Dm644 ${srcdir}/${_realname}-ng-${pkgver}/COPYING ${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}64/COPYING

  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  for _f in "${pkgdir}${MINGW_PREFIX}"/lib/cmake/${_realname}64-ng/*.cmake; do
    sed -e "s|${PREFIX_WIN}|\$\{_IMPORT_PREFIX\}|g" -i ${_f}
    sed -e "s|${MINGW_PREFIX}|\$\{_IMPORT_PREFIX\}|g" -i ${_f}
  done
  
}

# template start; name=mingw-w64-splitpkg-wrappers; version=1.0;
# vim: set ft=bash :

# generate wrappers
for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
# template end;
