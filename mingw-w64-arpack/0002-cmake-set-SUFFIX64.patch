diff -urN arpack-ng-3.8.0_orig/CMakeLists.txt arpack-ng-3.8.0/CMakeLists.txt
--- arpack-ng-3.8.0_orig/CMakeLists.txt	2020-12-07 11:40:45.000000000 +0100
+++ arpack-ng-3.8.0/CMakeLists.txt	2022-01-26 15:57:48.117487300 +0100
@@ -678,6 +678,10 @@
 # 'make install' to the correct location
 include(GNUInstallDirs)
 
+if (INTERFACE64)
+  set(SUFFIX64 64)
+endif()
+
 # Convert variable names to those expected by the .pc file.
 set(prefix ${CMAKE_INSTALL_PREFIX})
 set(exec_prefix \${prefix})
@@ -727,41 +731,41 @@
 endif ()
 
 if(ICB)
-  install(FILES ICB/arpack.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack)
-  install(FILES ICB/arpack.hpp DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack)
+  install(FILES ICB/arpack.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack${SUFFIX64})
+  install(FILES ICB/arpack.hpp DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack${SUFFIX64})
   if (MPI)
-    install(FILES ICB/parpack.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack)
-    install(FILES ICB/parpack.hpp DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack)
+    install(FILES ICB/parpack.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack${SUFFIX64})
+    install(FILES ICB/parpack.hpp DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack${SUFFIX64})
   endif()
   if (ICBEXMM)
-    install(FILES EXAMPLES/MATRIX_MARKET/arpackSolver.hpp DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack)
+    install(FILES EXAMPLES/MATRIX_MARKET/arpackSolver.hpp DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack${SUFFIX64})
     install(FILES "${PROJECT_BINARY_DIR}/EXAMPLES/MATRIX_MARKET/arpackSolver.pc" DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
   endif()
 endif()
 
-install(FILES debug.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack)
+install(FILES debug.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack${SUFFIX64})
 if(ICB)
-  install(FILES ICB/debug_c.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack)
-  install(FILES ICB/debug_c.hpp DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack)
+  install(FILES ICB/debug_c.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack${SUFFIX64})
+  install(FILES ICB/debug_c.hpp DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack${SUFFIX64})
 endif()
 
-install(FILES stat.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack)
+install(FILES stat.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack${SUFFIX64})
 if(ICB)
-  install(FILES ICB/stat_c.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack)
-  install(FILES ICB/stat_c.hpp DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack)
+  install(FILES ICB/stat_c.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack${SUFFIX64})
+  install(FILES ICB/stat_c.hpp DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack${SUFFIX64})
 endif()
 
 configure_file(arpackdef.h.in "${PROJECT_BINARY_DIR}/arpackdef.h" @ONLY)
-install(FILES "${PROJECT_BINARY_DIR}/arpackdef.h" DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack)
+install(FILES "${PROJECT_BINARY_DIR}/arpackdef.h" DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack${SUFFIX64})
 
 configure_file(arpackicb.h.in "${PROJECT_BINARY_DIR}/arpackicb.h" @ONLY)
-install(FILES "${PROJECT_BINARY_DIR}/arpackicb.h" DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack)
+install(FILES "${PROJECT_BINARY_DIR}/arpackicb.h" DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/arpack${SUFFIX64})
 
 # Provide find_package for arpack-ng to users.
 configure_file(arpack-ng-config.cmake.in "${PROJECT_BINARY_DIR}/arpack-ng-config.cmake" @ONLY)
-install(FILES "${PROJECT_BINARY_DIR}/arpack-ng-config.cmake" DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/arpack-ng) # find_package(arpack-ng)
+install(FILES "${PROJECT_BINARY_DIR}/arpack-ng-config.cmake" DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/arpack${SUFFIX64}-ng) # find_package(arpack-ng)
 configure_file(arpack-ng-config-version.cmake.in "${PROJECT_BINARY_DIR}/arpack-ng-config-version.cmake" @ONLY)
-install(FILES "${PROJECT_BINARY_DIR}/arpack-ng-config-version.cmake" DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/arpack-ng)
+install(FILES "${PROJECT_BINARY_DIR}/arpack-ng-config-version.cmake" DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/arpack${SUFFIX64}-ng)
 
 # Packaging: ease arpack-ng distribution (precompiled binaries and sources tarballs).
 set(CPACK_VERSION_MAJOR "${arpack_ng_MAJOR_VERSION}")
diff -urN arpack-ng-3.8.0_orig/SRC/arpack.pc.in arpack-ng-3.8.0/SRC/arpack.pc.in
--- arpack-ng-3.8.0_orig/SRC/arpack.pc.in	2020-12-07 11:40:45.000000000 +0100
+++ arpack-ng-3.8.0/SRC/arpack.pc.in	2022-01-26 13:30:20.592994600 +0100
@@ -9,4 +9,4 @@
 URL: @PACKAGE_URL@
 Libs: -L${libdir} -larpack@LIBSUFFIX@
 Libs.private: @ARPACK_PC_LIBS_PRIVATE@
-Cflags: -I${includedir}/arpack
+Cflags: -I${includedir}/arpack@SUFFIX64@
diff -urN arpack-ng-3.8.0_orig/arpack-ng-config.cmake.in arpack-ng-3.8.0/arpack-ng-config.cmake.in
--- arpack-ng-3.8.0_orig/arpack-ng-config.cmake.in	2020-12-07 11:40:45.000000000 +0100
+++ arpack-ng-3.8.0/arpack-ng-config.cmake.in	2022-01-27 13:22:01.420383200 +0100
@@ -1,13 +1,13 @@
 # Config file for the arpack-ng package.
 #
 # To use arpack from CMake, use ARPACK::ARPACK target:
-#   find_package(arpack-ng)
+#   find_package(arpack@SUFFIX64@-ng)
 #   add_executable(main main.f)
 #   target_include_directories(main PRIVATE ARPACK::ARPACK)
 #   target_link_libraries(main ARPACK::ARPACK)
 #
 # To use parpack from CMake, use PARPACK::PARPACK target:
-#   find_package(arpack-ng)
+#   find_package(arpack@SUFFIX64@-ng)
 #   add_executable(main main.f)
 #   target_link_libraries(main PARPACK::PARPACK)
 
@@ -19,7 +19,7 @@
 
 # Create arpack targets.
 add_library(ARPACK::ARPACK INTERFACE IMPORTED)
-set_target_properties(ARPACK::ARPACK PROPERTIES INTERFACE_INCLUDE_DIRECTORIES "${includedir}/arpack")
-set_target_properties(ARPACK::ARPACK PROPERTIES INTERFACE_LINK_LIBRARIES      "arpack")
+set_target_properties(ARPACK::ARPACK PROPERTIES INTERFACE_INCLUDE_DIRECTORIES "${includedir}/arpack@SUFFIX64@")
+set_target_properties(ARPACK::ARPACK PROPERTIES INTERFACE_LINK_LIBRARIES      "arpack@LIBSUFFIX@")
 add_library(PARPACK::PARPACK INTERFACE IMPORTED)
-set_target_properties(PARPACK::PARPACK PROPERTIES INTERFACE_LINK_LIBRARIES    "parpack")
+set_target_properties(PARPACK::PARPACK PROPERTIES INTERFACE_LINK_LIBRARIES    "parpack@LIBSUFFIX@")
