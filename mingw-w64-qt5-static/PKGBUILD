# Maintainer: Ray Donnelly <mingw.android@gmail.com>
# Contributor: Alexey Pavlov <alexpux@gmail.com>

_realname=qt5-static
_mingw_suff=mingw-w64-${CARCH}
# When using the configure bash script, MSYS2 make is
# probably a better choice as otherwise the Makefiles
# can have MSYS2 paths in them. We try to handle this
# but it is ad-hoc at best. '${_make}' docs fails ATM
_make=make
#_make=${MINGW_PREFIX}/bin/mingw32-make
pkgname="${_mingw_suff}-${_realname}"
_ver_base=5.3.0-beta
pkgver=${_ver_base//-/}
pkgrel=2
arch=('any')
pkgdesc="A cross-platform application and UI framework (mingw-w64 static)"
url='http://qt-project.org/'
install=qt5-${CARCH}.install
license=('GPL3' 'LGPL' 'FDL' 'custom')
depends=("${_mingw_suff}-gcc-libs"
         "${_mingw_suff}-qtbinpatcher"
         "${_mingw_suff}-dbus")
makedepends=("${_mingw_suff}-gcc"
             "${_mingw_suff}-postgresql"
             "${_mingw_suff}-libmariadbclient"
             "${_mingw_suff}-libfbclient"
             "${_mingw_suff}-python2"
             "${_mingw_suff}-ruby"
             "perl"
             "gperf"
             "m4"
             "flex"
             "${_mingw_suff}-make"
             "${_mingw_suff}-pkg-config"
             "${_mingw_suff}-icu"
             "${_mingw_suff}-icu-debug-libs")
groups=("${_mingw_suff}-qt" "${_mingw_suff}-qt5")
options=('!strip' 'staticlibs')
_pkgfqn="qt-everywhere-opensource-src-${_ver_base}"
source=("http://download.qt-project.org/development_releases/qt/${pkgver%.*}/${_ver_base}/single/${_pkgfqn}.tar.xz"
    #http://download.qt-project.org/official_releases/qt/${pkgver%.*}/${_ver_base}/single/${_pkgfqn}.tar.xz
    qt-5.0.0-oracle-driver-prompt.patch
    qt-5.0.0-use-fbclient-instead-of-gds32.patch
    qt-5.1.0-win32-g++-mkspec-optimization.patch
    qt-5.1.x-fix-configure-tests.patch
    qt-5.1.x-syncqt-fix.patch
    qt-5.1.x-win_flex-replace.patch
    qt-5.2.1-win32-g-Enable-static-builds.patch
    qt-5.2.1-win32-g-Add-QMAKE_EXTENSION_IMPORTLIB-defaulting-to-.patch
    qt-5.2.1-qmlimportscanner-Ensure-the-correct-variant-is-run.patch
    qt-5.3.0-icu-add-U_LIB_SUFFIX_C_NAME.patch)
md5sums=('4f4a8302c52ef80bbb62bf764e682e47'
         '10790f1672b5f2b83e5473ad6cd48cd3'
         '86899e8f2858c48d4827282c04696b76'
         'd675dbbe15d275c84f2792c75212ace0'
         '2488e70329d9bc71f8f4619ddfb8522a'
         '2235d876133956a788c393310fa8a526'
         '608a30dbf8f5c2146d7285b551b03252'
         '0f2e3a2f790b07442f0964f4f2f96596'
         'b0706aaa70fe6cb9a4b77676b808e1b0'
         'd7d745b5915cff6a7e7f4cc4e9760de0'
         '6384ff636647fce0bc153e42d4aab769')

translate_to_native() {
  if [ "${_make}" = "make" ]; then
    echo "${1}"
  else
    echo "${1}" | sed "s|${MINGW_PREFIX}|$(cygpath -m ${MINGW_PREFIX})|g"
  fi
}

prepare() {
  cd ${_pkgfqn}

  patch -p1 -i ${srcdir}/qt-5.0.0-oracle-driver-prompt.patch
  patch -p1 -i ${srcdir}/qt-5.0.0-use-fbclient-instead-of-gds32.patch
  patch -p1 -i ${srcdir}/qt-5.1.0-win32-g++-mkspec-optimization.patch
  patch -p1 -i ${srcdir}/qt-5.1.x-syncqt-fix.patch
  patch -p1 -i ${srcdir}/qt-5.1.x-win_flex-replace.patch

  # My qt-5.2.1 win32-g++ static patches are against qtbase's dev branch.
  pushd qtbase
  patch -p1 -i ${srcdir}/qt-5.2.1-win32-g-Enable-static-builds.patch
  patch -p1 -i ${srcdir}/qt-5.2.1-win32-g-Add-QMAKE_EXTENSION_IMPORTLIB-defaulting-to-.patch
  patch -p1 -i ${srcdir}/qt-5.2.1-qmlimportscanner-Ensure-the-correct-variant-is-run.patch
  popd

  patch -p1 -i ${srcdir}/qt-5.3.0-icu-add-U_LIB_SUFFIX_C_NAME.patch

  local _optim=
  case ${MINGW_CHOST} in
  i686*)
    _optim="-march=i686 -mtune=core2"
  ;;
  x86_64*)
    _optim="-march=nocona -mtune=core2"
  ;;
  esac

  # Determine the CFLAGS, DEBUG_CFLAGS and LDFLAGS that we will tell {g++,gcc}-base.conf about
  CFLAGS_MKS_RELEASE="${CFLAGS}"
  CFLAGS_MKS_DEBUG="${CFLAGS} ${DEBUG_CFLAGS}"
  LDFLAGS_MKS="${LDFLAGS}"
  # If not using MSYS2 make then transform -I${MINGW_PREFIX}/blah or -L${MINGW_PREFIX}/blah from MSYS2 to native
  CFLAGS_MKS_RELEASE=$(translate_to_native "${CFLAGS_MKS_RELEASE}")
  CFLAGS_MKS_DEBUG=$(translate_to_native "${CFLAGS_MKS_DEBUG}")
  LDFLAGS_MKS=$(translate_to_native "${LDFLAGS_MKS}")

  sed -i "s|%OPTIMIZE_OPT%|${_optim}|g" qtbase/mkspecs/win32-g++/qmake.conf
  sed -i "s|%STATICFLAGS%||g" qtbase/mkspecs/win32-g++/qmake.conf # -static-libstdc++ -static-libgcc
  sed -i "s|^QMAKE_CFLAGS_RELEASE *+= .*$|QMAKE_CFLAGS_RELEASE       += ${CFLAGS_MKS_RELEASE}|g" qtbase/mkspecs/common/{g++,gcc}-base.conf
  sed -i "s|^QMAKE_CFLAGS_DEBUG *+= .*$|QMAKE_CFLAGS_DEBUG         += ${CFLAGS_MKS_DEBUG}|g" qtbase/mkspecs/common/{g++,gcc}-base.conf
  sed -i "/^QMAKE_LFLAGS_RPATH/s| -Wl,-rpath,||g" qtbase/mkspecs/common/gcc-base-unix.conf
  sed -i "/^QMAKE_LFLAGS\s/s|+=|+= ${LDFLAGS_MKS}|g" qtbase/mkspecs/common/gcc-base.conf
}

build() {
  # To keep the build folder name quite small (MAXPATH limit)
  # the source folder (long) is renamed to $CARCH (i686 or x86_64)
  [ -d ${CARCH} ] && rm -rf ${CARCH}
  mv ${_pkgfqn} ${CARCH}
  cd ${CARCH}
  touch qtbase/.gitignore
  #BUILD_WIN=$(pwd -W)
  #echo "BUILD_WIN $BUILD_WIN"

  mkdir -p ${pkgdir}${MINGW_PREFIX}/qt5-static
  pushd ${pkgdir}${MINGW_PREFIX}/qt5-static > /dev/null
  QTDIR_WIN=$(pwd -W)
  echo "QTDIR_WIN $QTDIR_WIN"
  popd > /dev/null

  local -a _extra_inc
  for _inc in $(translate_to_native "$(pkg-config --cflags dbus-1)"); do
    _extra_inc+=("$_inc")
  done
  plain "_extra_inc is ${_extra_inc[@]}"
  export PATH=${srcdir}/${CARCH}/qtbase/bin:${srcdir}/${CARCH}/qtbase/lib:${MINGW_PREFIX}/qt5-static/bin:${MINGW_PREFIX}/bin:"${PATH}"

  # We're deliberately knocking out the system includes of -I/mingw64/include and system libraries of -L/mingw64/lib (actually all -I and -L)
  # .. there's another way but Ossi and Thiago didn't want to go there .. (REFERENCE?)
  # .. for us an alternative that will probably work is to prepend LDFLAGS with -LC:/repo/mingw-w64-qt5-static/src/${CARCH}/qtbase/lib
  #
  # Qt manages the compiler flags for release / debug configs separately, so having our own values (-O2) is harmful here ..
  # I think that we should unset CFLAGS/CXXFLAGS before building Qt since gcc-base.conf is responsible for managing
  # them. We need to patch the values of QMAKE_CFLAGS_OPTIMIZE, QMAKE_CFLAGS_DEBUG in there instead, reworking the seds (^)
  # export CFLAGS=$(echo $CFLAGS | sed 's#\([ ]*-I[^ ]*\)##g')
  # export CXXFLAGS=$(echo $CXXFLAGS | sed 's#\([ ]*-I[^ ]*\)##g')
  unset CFLAGS
  unset CXXFLAGS
  unset LDFLAGS
  
  ./configure \
        -prefix ${QTDIR_WIN} \
        -opengl desktop \
        -opensource \
        -confirm-license \
        -device-option QMAKE_EXTENSION_IMPORTLIB="dll.a" \
        -platform win32-g++ \
        -static \
        -debug-and-release \
        "${_extra_inc[@]}" \
        -no-fontconfig \
        -qt-zlib \
        -qt-pcre \
        -qt-libpng \
        -qt-libjpeg \
        -qt-freetype \
        -icu \
        -no-gtkstyle \
        -no-glib \
        -qt-sql-sqlite \
        -openssl-linked \
        -dbus \
        -make libs \
        -make tools \
        -nomake examples \
        -nomake tests

  ${_make} ${MAKEFLAGS}
}

package() {

  cd ${CARCH}

  export PATH=${pkgdir}${MINGW_PREFIX}/qt5-static/bin:${pkgdir}${MINGW_PREFIX}/bin:${srcdir}/${CARCH}/qtbase/bin:${srcdir}/${CARCH}/qtbase/lib:${PATH}

  ${_make} -j1 install #INSTALL_ROOT="${pkgdir}"
  ${_make} -j1 docs
  ${_make} -j1 install_qch_docs

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}${MINGW_PREFIX}/qt5-static"/share/licenses/qt5/LGPL_EXCEPTION.txt

  # Workaround for installing empty .pc files
  plain "---> Fix pkgconfig files..."
  local _pc_files=( $(find ${srcdir}/${CARCH} -type f -name Qt5*.pc) )
  cp -f ${_pc_files[@]} ${pkgdir}${MINGW_PREFIX}/qt5-static/lib/pkgconfig/
}

# pushd /c/repo/mingw-w64-qt5-static/src/x86_64/qtbase/src/tools/qdoc