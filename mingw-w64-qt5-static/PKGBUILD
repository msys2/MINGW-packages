# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Maintainer: Ray Donnelly <mingw.android@gmail.com>
# Contributor: Raed Rizqie <raed.rizqie@gmail.com>

_realname=qt5-static
pkgbase="mingw-w64-${_realname}"
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=5.15.13
pkgrel=2
pkgdesc="A cross-platform application and UI framework (static) (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32' 'clangarm64')
url='https://www.qt.io/'
msys2_references=(
  'archlinux: qt5-base'
  'aur: mingw-w64-qt5-base-static'
)
license=('spdx:GPL-2.0-only WITH Qt-GPL-exception-1.0 AND GPL-3.0-or-later AND LGPL-2.1-or-later AND LGPL-3.0-only AND GFDL-1.3-or-later')
depends=("${MINGW_PACKAGE_PREFIX}-vulkan-loader")
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-fxc2"
             "${MINGW_PACKAGE_PREFIX}-gperf"
             "${MINGW_PACKAGE_PREFIX}-pkgconf"
             "${MINGW_PACKAGE_PREFIX}-python"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-dbus"
             "${MINGW_PACKAGE_PREFIX}-openssl"
             "${MINGW_PACKAGE_PREFIX}-zlib"
             "${MINGW_PACKAGE_PREFIX}-zstd")
_pkgfile="qt-everywhere-opensource-src-${pkgver}"
_pkgfqn="qt-everywhere-src-${pkgver}"
noextract=(${_pkgfile}.tar.xz)
source=(https://download.qt.io/official_releases/qt/${pkgver%.*}/${pkgver}/single/${_pkgfile}.tar.xz
        0000-adjust-qmake-conf-mingw.patch
        0001-fix-sql-libraries-mingw.patch
        0002-add-extra-cflags.patch
        0003-enable-avx-support.patch
        0004-fix-linking-against-different-static-libs.patch
        0005-qtconnectivity-add-callback-attribute.patch
        0006-win-flex-replace.patch
        0007-enable-static-builds.patch
        0008-add-qmake-extension-importlib.patch
        0009-add-missing-metatypes-configs.patch
        0010-qmltyperegistrar-search-in-correct-directory.patch
        0011-mingw-enable-pkg-config.patch
        0013-qtbase-use-system-libs.patch
        0014-qtimageformats-use-system-libs.patch
        0015-qt3d-use-system-libs.patch
        0016-use-qpa-genericunixfontdatabase.patch
        0020-use-external-angle-library.patch
        0025-force-using-make-on-msys.patch
        0028-revert-untangle-use-of-path-list-seperator.patch
        0029-revert-fix-quoting-and-path-separators.patch
        0030-workaround-ansidecl-h-PTR-define-conflict.patch
        0035-dont-add-resource-files-to-qmake-libs.patch
        0036-win32-qt5-static-cmake-link-ws2_32-and--static.patch
        0048-win32-avoid-platformNativeInterface-segfaults-with-minimal-platform.patch
        0049-win32-do-not-use-fontconfig.patch
        0051-disable-qtlocation-mapboxgl-plugin.patch
        0054-win32-dont-need-flatpack-theme.patch
        0057-fix-and-enable-iconv-codec.patch
        0060-activeqt-handle-win64-in-dumpcpp.patch
        0062-fix-static-build-big-resources.patch
        0063-enable-mingw-schannel-alpn.patch
        0064-fix-mingw-win32-winnt-detection.patch
        0100-fix-relocatable-prefix-staticbuild-v2.patch
        0125-qt5-windeployqt-fixes.patch
        0300-cast-errors.patch
        0302-ugly-hack-disable-qdoc-build.patch
        0304-qtdeclarative-disable-dx12.patch
        0310-fix-assimp-not-found.patch
        0401-disable-warning-of-non-existent-files.patch
        0402-deprecated-ucrt-functions.patch
        0403-qtactiveqt-tools-avoid-race-condition.patch
        0411-javascriptcore-disable-deprecated-warnings.patch
        0412-jitstubs-underscore-symbol-name-for-x86.patch)
sha256sums=('9550ec8fc758d3d8d9090e261329700ddcd712e2dda97e5fcfeabfac22bea2ca'
            '56f2df1aef1ea374aad46f39e96c2484c436908a141c5f080bfd1861eec8e9cb'
            '724e5fbb84014eece578fc4ebb4e996f4a9fd997adadcf004e53cec69e5dc6d4'
            '2c2ca9b4d6b0aa7962b0f4ca85ef41f4240ffdaed8fa52a09128eeac4a10121b'
            '15c9fdf4d54628e64a9b7e456a5308aecf0f1c8e33a5aff0ab0bcac0300a9568'
            'cc047ef4ff5b31c80d47c1d2f2b019f4d3f9d72b5a8d6a8bb9de6131f8b4c082'
            '3be09af4b54ee0792a9e91fe7a1cf07d10f65f68564b93c86684599c31530c91'
            '504b39d72b719948d0a8e20d53990e31fdb6b4df67120c91a6b1c8b791fe2cbe'
            '52130dbafe4557be1cbedd4f75bbce1536356830b1d378a7d86456ca2ef3db8f'
            'd5ba8f7d061067d5048a6fbeb335209b51333e8b71f551700520f9ad035eaeb3'
            '37e1d7f222718d6551442ab3fb2d979089dfd7b19690709318e4e1edc44444cd'
            'b5066718a1a393bda5e928434e8f987c3353ed8be2b0e103eb5fa6832a5e395a'
            'af2db958248684053ae49becc7087fe93f5ab813a6a5e8de2295b30287df9be8'
            '3c13b8a883208764fd7bba86f2e9c14d11631daaee2fecdac52d24a800d59b2b'
            '91d65c71a1c809b23dc651981eee64a8d1fe9c8738f4c4756e5dca87e1c3ad4a'
            '4fbd7b62b942f3f5c93577565455cd20f12436c359850c270557f292bc7f2a1a'
            '60f030ef4a3b27209ab901a44135c9b4b91ce456fb5a7af89292a99f6e736ad2'
            '26cdc4dff46ba1dcd410977078160b0952ac89deac04bd8cf31106d372266a46'
            '8d5a689e22d9b0e6c5fee2460b096dff3069956e80c80df90f8ebf1092b80c23'
            'ee820811194de21f0ef140d8c994dd3efdac941842ba5a2bab7a400c02c06569'
            '5b2c8ce35c8bb67ea6457b631b9d2a64cee3194ddbf950f84f93cbfce35ce39d'
            'e116bbbb51d63c42e993ee67d66e1c0887121056434537af40669373a87e7359'
            'fa510a235e5ac176344f020b862c679ecd980002dba6cf46f1a2a72e94a96ede'
            'b3cc1149b6468edb39742cfefb25004ed944f6d2cbe3b57d9a2014b072b1dbfd'
            'd2096ddb6aa5e24284d29002236536f1a38d9b0635f2daaff257ed8a0a3baf1f'
            'e53b7d2943ac448f52078bd140f0696708b8f53f2b0d949700c64948dcf932c6'
            '3c668cda2257fec902b1cc289906c4870405992062bc25a6dad6f81ced294d81'
            '5a12cde9201a606cad106b8e767c755646fcab6dab5e8f0befcfac8ff1a0bc5e'
            '8711e2bd29e0b8940bcfaf7650acbd66d640d6ad8439559916cf39061c3951d7'
            '269bb6ef0aa74108e6ea6407c0ad26af930e36452c37e93a8d0e782ec1665f19'
            '1607789f1b69c5c96b31d3b54180a9d8be11d55a354266770336d0432cb55c0b'
            '52f1ee133ff63943a14aedecc2a112d8e598c2f3e7a0b15a0d3174a43920b1b1'
            '6fc871c9a3697666c19d5c21a8f038b80c9c825b418435b0723bf35a9e532d91'
            '607c56bfc0a08300f202ed278ae70ea27cc31322f8196defab3bd0fd2d1176bd'
            'a28dcc463a6c23ca1c4eda76393a53ca097dfb5125b735edec3a556cd7d53fcd'
            'a9f54e3e988911dc5ebef5f09a87ede97cf60ea4a1cc6262dcd11d69c771a052'
            '074798ae6fb6c29fbcf6f574f8db8f46087bd1865f71297714f2d4c5cb057dbe'
            '35545f859703d526a0cb433518db4bc0d9fa30b262d671c227be2dc329096340'
            '2699a1f6955feff59fb302d5822fd3c40c5911e5263a318427afc8d7f86383bf'
            '1d25b493ebe8bdb6e332db0c3b149626cf4ed5b51f67fe45fafd9b28c87088e8'
            '3dc92472a3f7ac0927546ae6f8ac3dc3b88158fa523917ecaac5aaae95cbe25e'
            '1e90e103bd96f07452d648286a3289306dbd5e101123798206410fb78283fff8'
            '614b027c94784fcfd7979cea3326b75d8415da2dbd0ab7d5181ad04c21341644'
            '62616c2b8aa19afbcb1bd6d05427ddfc87fa3bc6ed0bc1a688f80d8e95742bca')

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying ${_patch}"
    patch -Nbp1 -i "${srcdir}/${_patch}"
  done
}

prepare() {
  [[ -d ${srcdir}/${_pkgfqn} ]] && rm -rf ${srcdir}/${_pkgfqn}
  msg2 "Extracting source tarball..."
  tar -xJf ${srcdir}/${_pkgfile}.tar.xz -C ${srcdir} --exclude=${_pkgfqn}/{qtandroidextras,qtmacextras,qtwayland,qtwebengine,qtx11extras} || true

  cd ${srcdir}/${_pkgfqn}
  touch qtbase/.gitignore

  apply_patch_with_msg \
    0000-adjust-qmake-conf-mingw.patch \
    0001-fix-sql-libraries-mingw.patch \
    0002-add-extra-cflags.patch \
    0003-enable-avx-support.patch \
    0004-fix-linking-against-different-static-libs.patch \
    0005-qtconnectivity-add-callback-attribute.patch \
    0006-win-flex-replace.patch \
    0007-enable-static-builds.patch \
    0008-add-qmake-extension-importlib.patch \
    0009-add-missing-metatypes-configs.patch \
    0010-qmltyperegistrar-search-in-correct-directory.patch \
    0011-mingw-enable-pkg-config.patch \
    0013-qtbase-use-system-libs.patch \
    0014-qtimageformats-use-system-libs.patch \
    0015-qt3d-use-system-libs.patch \
    0016-use-qpa-genericunixfontdatabase.patch \
    0020-use-external-angle-library.patch \
    0025-force-using-make-on-msys.patch

  # Ossi says we should fix this in qwebkit with a $$(shell_path), but the ' quotes get in the way
  # due to qtPrepareTool adding them with $$shell_quote
  apply_patch_with_msg \
    0028-revert-untangle-use-of-path-list-seperator.patch \
    0029-revert-fix-quoting-and-path-separators.patch \
    0030-workaround-ansidecl-h-PTR-define-conflict.patch \
    0035-dont-add-resource-files-to-qmake-libs.patch

  # Patches so that qt5-static can be used with cmake.
  apply_patch_with_msg \
    0036-win32-qt5-static-cmake-link-ws2_32-and--static.patch

  apply_patch_with_msg \
    0048-win32-avoid-platformNativeInterface-segfaults-with-minimal-platform.patch \
    0049-win32-do-not-use-fontconfig.patch \
    0051-disable-qtlocation-mapboxgl-plugin.patch \
    0054-win32-dont-need-flatpack-theme.patch \
    0057-fix-and-enable-iconv-codec.patch \
    0060-activeqt-handle-win64-in-dumpcpp.patch \
    0062-fix-static-build-big-resources.patch \
    0063-enable-mingw-schannel-alpn.patch \
    0064-fix-mingw-win32-winnt-detection.patch \
    0100-fix-relocatable-prefix-staticbuild-v2.patch \
    0125-qt5-windeployqt-fixes.patch \
    0300-cast-errors.patch \
    0302-ugly-hack-disable-qdoc-build.patch \
    0304-qtdeclarative-disable-dx12.patch \
    0310-fix-assimp-not-found.patch

  apply_patch_with_msg \
    0401-disable-warning-of-non-existent-files.patch \
    0402-deprecated-ucrt-functions.patch \
    0403-qtactiveqt-tools-avoid-race-condition.patch \
    0411-javascriptcore-disable-deprecated-warnings.patch \
    0412-jitstubs-underscore-symbol-name-for-x86.patch

  # To keep the build folder name quite small (PATH_MAX limit)
  # the source folder (long) is renamed to 'qt5'
  cd ${srcdir}
  mv ${_pkgfqn} qt5
}

build() {
  mkdir -p build-${MSYSTEM} && cd build-${MSYSTEM}

  local _buildpkgdir=${pkgdirbase}/${pkgname}/${MINGW_PREFIX}/${_realname}
  mkdir -p ${_buildpkgdir}
  local QTDIR_WIN=$(cygpath -am ${_buildpkgdir})

  # Qt manages the compiler flags for release / debug configs separately, so having our own values (-O2) is harmful here ..
  unset CFLAGS
  unset CXXFLAGS
  unset LDFLAGS
  unset QMAKESPEC
  unset XQMAKESPEC
  unset QMAKEPATH
  unset QMAKEFEATURES

  export PATH="${srcdir}/build-${MSYSTEM}/qtbase/bin:${srcdir}/build-${MSYSTEM}/qtbase/lib:${PATH}"
  export VULKAN_SDK=${MINGW_PREFIX}
  export QDOC_SKIP_BUILD=1

  # Use the right mkspecs file
  if [[ ${MINGW_PACKAGE_PREFIX} == *-clang-* ]]; then
    _platform=win32-clang-g++
  else
    _platform=win32-g++
  fi

  ../qt5/configure \
    -prefix ${QTDIR_WIN} \
    -datadir ${QTDIR_WIN}/share/qt5 \
    -archdatadir ${QTDIR_WIN}/share/qt5 \
    -nomake examples \
    -nomake tests \
    -opensource \
    -confirm-license \
    -platform ${_platform} \
    -release \
    -feature-relocatable \
    -static \
    -static-runtime \
    -silent \
    -dbus-linked \
    -opengl desktop \
    -openssl-linked \
    -sql-sqlite \
    -qt-assimp \
    -qt-doubleconversion \
    -qt-freetype \
    -qt-harfbuzz \
    -qt-libjpeg \
    -qt-libpng \
    -qt-pcre \
    -qt-sqlite \
    -qt-tiff \
    -qt-webp \
    -no-fontconfig \
    -no-glib \
    -no-gstreamer \
    -no-iconv \
    -no-icu \
    -no-jasper \
    -no-mng \
    -no-sql-ibase \
    -no-sql-mysql \
    -no-sql-odbc \
    -no-sql-psql \
    -no-sql-sqlite2 \
    -no-wmf

  make
}

check() {
  cd build-${MSYSTEM}
  make check -j1 -k
}

package() {
  cd build-${MSYSTEM}

  make install

  install -d "${pkgdir}${MINGW_PREFIX}/${_realname}"/share/licenses/qt5
  install -Dm644 ${srcdir}/qt5/LICENSE* -t "${pkgdir}${MINGW_PREFIX}/${_realname}"/share/licenses/qt5

  # Remove *.orig files
  find "${pkgdir}${MINGW_PREFIX}/${_realname}" -type f -name "*.orig" -exec rm -f {} \;

  # Workaround for installing empty .pc files
  plain "---> Fix pkgconfig files..."
  local _pc_files=( $(find ${srcdir}/build-${MSYSTEM} -type f -name Qt5*.pc) )
  cp -f ${_pc_files[@]} ${pkgdir}${MINGW_PREFIX}/${_realname}/lib/pkgconfig/

  # Fix paths in qconfig.pri and qmodule.pri:
  #   $(cygpath -m ${MINGW_PREFIX}) -> $(cygpath -m ${pkgdir}${MINGW_PREFIX})
  local QT_PREFIX_WIN=$(cygpath -m ${MINGW_PREFIX}/${_realname})
  local PKGDIR_QT_PREFIX_WIN=$(cygpath -m ${pkgdir}${MINGW_PREFIX}/${_realname})
  local FAKE_PREFIX_FOR_REPLACE="@@QT_REAL_PREFIX/dir@@"
  local MINGW_PREFIX_WIN=$(cygpath -m ${MINGW_PREFIX})
  local BUILDDIR_PREFIX=$(cygpath -m ${srcdir}/build-${MSYSTEM})

  find "${pkgdir}${MINGW_PREFIX}/${_realname}/share/qt5" -type f \( -name '*.pri' -o -name '*.prl' \) \
    -exec sed -i -e "s|${QT_PREFIX_WIN}|${FAKE_PREFIX_FOR_REPLACE}|g" {} \;

  find "${pkgdir}${MINGW_PREFIX}/${_realname}/lib" -type f \( -name '*.pri' -o -name '*.prl' \) \
    -exec sed -i -e "s|${QT_PREFIX_WIN}|${FAKE_PREFIX_FOR_REPLACE}|g" {} \;

  find "${pkgdir}${MINGW_PREFIX}/${_realname}/lib" -type f -name '*.cmake' \
    -exec sed -i -e "s|${QT_PREFIX_WIN}|${FAKE_PREFIX_FOR_REPLACE}|g" {} \;

  find "${pkgdir}${MINGW_PREFIX}/${_realname}/lib/pkgconfig" -type f -name '*.pc' \
    -exec sed -i -e "s|${QT_PREFIX_WIN}|${MINGW_PREFIX}/${_realname}|g" {} \;

  find "${pkgdir}${MINGW_PREFIX}/${_realname}/lib/pkgconfig" -type f -name '*.pc' \
    -exec sed -i -e "s|${PKGDIR_QT_PREFIX_WIN}|${MINGW_PREFIX}/${_realname}|g" {} \;

  find "${pkgdir}${MINGW_PREFIX}/${_realname}/lib" -type f -name '*.cmake' \
    -exec sed -i -e "s|${MINGW_PREFIX_WIN}|${FAKE_PREFIX_FOR_REPLACE}/..|g" {} \;

  find "${pkgdir}${MINGW_PREFIX}/${_realname}/share/qt5" -type f \( -name '*.pri' -o -name '*.prl' \) \
    -exec sed -i -e "s|${MINGW_PREFIX_WIN}|${FAKE_PREFIX_FOR_REPLACE}/..|g" {} \;

  find "${pkgdir}${MINGW_PREFIX}/${_realname}/lib" -type f \( -name '*.pri' -o -name '*.prl' \) \
    -exec sed -i -e "s|${MINGW_PREFIX_WIN}|${FAKE_PREFIX_FOR_REPLACE}/..|g" {} \;

  find "${pkgdir}${MINGW_PREFIX}/${_realname}/lib/pkgconfig" -type f -name '*.pc' \
    -exec sed -i -e "s|${MINGW_PREFIX_WIN}|${MINGW_PREFIX}|g" {} \;

  find "${pkgdir}${MINGW_PREFIX}/${_realname}/lib/pkgconfig" -type f -name '*.pc' \
    -exec sed -i -e "s|${BUILDDIR_PREFIX}/qtbase/lib/lib|-l|g" -e "s|.a | |g" \
                 -e "s|${BUILDDIR_PREFIX}/qt3d/lib/lib|-l|g" \
                 -e "s|${BUILDDIR_PREFIX}/qtactiveqt/lib/lib|-l|g" \
                 -e "s|${BUILDDIR_PREFIX}/qtdeclarative/lib/lib|-l|g" \
                 -e "s|${BUILDDIR_PREFIX}/qtlocation/lib/lib|-l|g" \
                 -e "s|${BUILDDIR_PREFIX}/qtmultimedia/lib/lib|-l|g" \
                 -e "s|${BUILDDIR_PREFIX}/qttools/lib/lib|-l|g" \
                 -e "s|${BUILDDIR_PREFIX}/qtquick3d/lib/lib|-l|g" \
                 -e "s|${BUILDDIR_PREFIX}/qtquickcontrols2/lib/lib|-l|g" \
                 -e "s|${BUILDDIR_PREFIX}/qtscript/lib/lib|-l|g" \
                 -e "s|${BUILDDIR_PREFIX}/qtserialport/lib/lib|-l|g" \
                 -e "s|${BUILDDIR_PREFIX}/qtgamepad/lib/lib|-l|g" \
                 -e "s|-L${BUILDDIR_PREFIX}/qtlocation/lib ||g" \
                 -e "s|.a | |g" {} \;

  find "${pkgdir}${MINGW_PREFIX}/${_realname}/share/qt5" -type f -name '*.prl' \
    -exec sed -i -e "s|\$\$\[QT_INSTALL_LIBS\]/lib|-l|g" \
                 -e "s|-L\$\$\[QT_INSTALL_LIBS\]/lib ||g" \
                 -e "s|-L\$\$\[QT_INSTALL_LIBS\]/lib;||g" \
                 -e "s|-L\$\$\[QT_INSTALL_LIBS\] ||g" \
                 -e "s|-L\$\$\[QT_INSTALL_LIBS\];||g" \
                 -e "s|.a | |g" -e "s|.a;|;|g" \
                 -e "s|lqt_clipper.a|lqt_clipper|g" {} \;

  find "${pkgdir}${MINGW_PREFIX}/${_realname}/lib" -type f -name '*.prl' \
    -exec sed -i -e "s|\$\$\[QT_INSTALL_LIBS\]/lib|-l|g" \
                 -e "s|-L\$\$\[QT_INSTALL_LIBS\]/lib ||g" \
                 -e "s|-L\$\$\[QT_INSTALL_LIBS\]/lib;||g" \
                 -e "s|-L\$\$\[QT_INSTALL_LIBS\] ||g" \
                 -e "s|-L\$\$\[QT_INSTALL_LIBS\];||g" \
                 -e "s|.a | |g" -e "s|.a;|;|g" \
                 -e "s|lqt_clipper.a|lqt_clipper|g" {} \;
}
