--- a/qttools/src/windeployqt/main.cpp
+++ b/qttools/src/windeployqt/main.cpp
@@ -1131,10 +1131,14 @@
     QStringList result;
     switch (platform) {
     case WindowsDesktopMinGW: { // MinGW: Add runtime libraries
-        static const char *minGwRuntimes[] = {"*gcc_", "*stdc++", "*winpthread"};
-        const QString gcc = findInPath(QStringLiteral("g++.exe"));
+#if defined(Q_CC_CLANG)
+        static const char *minGwRuntimes[] = {"*clang", "*c++", "*winpthread"};
+#else
+        static const char *minGwRuntimes[] = {"*gcc", "*stdc++", "*winpthread"};
+#endif
+        const QString gcc = findInPath(QStringLiteral("c++.exe"));
         if (gcc.isEmpty()) {
-            std::wcerr << "Warning: Cannot find GCC installation directory. g++.exe must be in the path.\n";
+            std::wcerr << "Warning: Cannot find GCC or Clang installation directory. c++.exe must be in the path.\n";
             break;
         }
         const QString binPath = QFileInfo(gcc).absolutePath();
@@ -1317,6 +1321,7 @@
         return result;
     }
 
+#if !defined(Q_CC_MINGW)
     // Some Windows-specific checks: Qt5Core depends on ICU when configured with "-icu". Other than
     // that, Qt5WebKit has a hard dependency on ICU.
     if (options.platform.testFlag(WindowsBased))  {
@@ -1359,6 +1364,7 @@
             } // !icuLibs.isEmpty()
         } // Qt5Core/Qt5WebKit
     } // Windows
+#endif
 
     // Scan Quick2 imports
     QmlImportScanResult qmlScanResult;
@@ -1715,8 +1721,6 @@
     const QMap<QString, QString> qmakeVariables = queryQMakeAll(&errorMessage);
     const QString xSpec = qmakeVariables.value(QStringLiteral("QMAKE_XSPEC"));
     options.platform = platformFromMkSpec(xSpec);
-    if (options.platform == WindowsDesktopMinGW || options.platform == WindowsDesktopMsvc)
-        options.compilerRunTime = true;
 
     {   // Command line
         QCommandLineParser parser;
