--- x86_64/qtbase/src/corelib/Qt5CoreConfigExtras.cmake.in.orig	2014-11-09 00:54:20.852201500 +0000
+++ x86_64/qtbase/src/corelib/Qt5CoreConfigExtras.cmake.in	2014-11-09 00:55:52.437439900 +0000
@@ -165,3 +165,17 @@
 set(_Qt5CTestMacros \"${_Qt5CoreConfigDir}/Qt5CTestMacros.cmake\")
 
 _qt5_Core_check_file_exists(${_Qt5CTestMacros})
+
+get_target_property(_libType Qt5::Core TYPE)
+# If WIN32_EXECUTABLE worked reliably (kconfig doesn't build with it)
+# then we'd not use AND CMAKE_HOST_WIN32 here.
+if(_libType STREQUAL \"STATIC_LIBRARY\" AND CMAKE_HOST_WIN32)
+    set(_isExe $<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>)
+#   set(_isWin32 $<BOOL:$<TARGET_PROPERTY:WIN32_EXECUTABLE>>)
+    set(_isWin32 1)
+    # INTERFACE_LINK_LIBRARIES is used to pass a linker flag (-static)
+    #                                      and a library (ws2_32)
+    set_target_properties(Qt5::Core PROPERTIES \"INTERFACE_LINK_LIBRARIES\" \"$<$<AND:${_isExe},${_isWin32}>:-static;ws2_32>\")
+    unset(_isExe)
+    unset(_isWin32)
+endif()
