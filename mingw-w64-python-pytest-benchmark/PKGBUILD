# Maintainer: J. Peter Mugaas <jpmugaas@suddenlink.net>.

_realname=pytest-benchmark
pkgbase=mingw-w64-python-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-python2-${_realname}"  "${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
pkgver=3.1.1
pkgrel=1
pkgdesc="A py.test fixture for benchmarking code (mingw-w64)"
arch=('any')
url='https://github.com/ionelmc/pytest-benchmark'
license=('BSD')
makedepends=("${MINGW_PACKAGE_PREFIX}-python2"
             "${MINGW_PACKAGE_PREFIX}-python3"
             "${MINGW_PACKAGE_PREFIX}-python2-pathlib"
             "${MINGW_PACKAGE_PREFIX}-python3-py-cpuinfo"
             "${MINGW_PACKAGE_PREFIX}-python2-py-cpuinfo"
             "${MINGW_PACKAGE_PREFIX}-python2-statistics"
             "${MINGW_PACKAGE_PREFIX}-python3-setuptools"
             "${MINGW_PACKAGE_PREFIX}-python2-setuptools")
#checkdepends=("mercurial"
#              "${MINGW_PACKAGE_PREFIX}-python3-aspectlib"
#              "${MINGW_PACKAGE_PREFIX}-python2-aspectlib"
#              "${MINGW_PACKAGE_PREFIX}-python-elasticsearch"
#              "${MINGW_PACKAGE_PREFIX}-python2-elasticsearch" 
#              "${MINGW_PACKAGE_PREFIX}-python3-freezegun"
#              "${MINGW_PACKAGE_PREFIX}-python2-freezegun"
#              "${MINGW_PACKAGE_PREFIX}-python2-mock"
#              "${MINGW_PACKAGE_PREFIX}-python3-pytest-cov"
#              "${MINGW_PACKAGE_PREFIX}-python2-pytest-cov"
#              "${MINGW_PACKAGE_PREFIX}-python3-pygal" 
#              "${MINGW_PACKAGE_PREFIX}-python2-pygal"
#              "${MINGW_PACKAGE_PREFIX}-python3-pytest-runner"
#              "${MINGW_PACKAGE_PREFIX}-python2-pytest-runner" 
#              "${MINGW_PACKAGE_PREFIX}-python3-pytest-xdist"
#              "${MINGW_PACKAGE_PREFIX}-python2-pytest-xdist")
options=('staticlibs' 'strip' '!debug')
source=("${_realname}-$pkgver.tar.gz"::"https://github.com/ionelmc/pytest-benchmark/archive/v$pkgver.tar.gz")
sha256sums=('b05e2b2b8443e049a9a9789271bcc25d03a686fc9b4b26c09052db17008e9e90')

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying $_patch"
    patch -Nbp1 -i "${srcdir}/$_patch"
  done
}

del_file_exists() {
  for _fname in "$@"
  do
    if [ -f $_fname ]; then
      rm -rf $_fname
    fi
  done
}
# =========================================== #

prepare() {
  cd "${srcdir}"
  for builddir in python{2,3}-build-${CARCH}; do
    rm -rf ${builddir} | true
    cp -r "${_realname}-${pkgver}" "${builddir}"
  done
  # Set version for setuptools_scm
  export SETUPTOOLS_SCM_PRETEND_VERSION=$pkgver
}

# Note that build() is sometimes skipped because it's done in 
# the packages setup.py install for simplicity if you can do so.
# but sometimes, you want to do a check before install which would
# also trigger the build.
build() {
  for pver in {2,3}; do  
    msg "Python ${pver} build for ${CARCH}"  
    cd "${srcdir}/python${pver}-build-${CARCH}"
    ${MINGW_PREFIX}/bin/python${pver} setup.py build
  done  
}

#check() {
#  for pver in {2,3}; do
#  # Hack entry points by installing it
#  # Test should be related to pytest 2.9
#
#    msg "Python ${pver} test for ${CARCH}"
#    cd "${srcdir}/python${pver}-build-${CARCH}"
#    
#    ${MINGW_PREFIX}/bin/python${pver} install --root="$PWD/tmp_install" --optimize=1
#    if [ "${pver}" = "2" ]; then
#      PYTHONPATH="$PWD/tmp_install/usr/lib/python3.6/site-packages:$PYTHONPATH" PATH="$PWD/tmp_install/usr/bin:$PATH" ${MINGW_PREFIX}/bin/python3 setup.py pytest --addopts=tests || warning "Tests failed"
#    else
#      PYTHONPATH="$PWD/tmp_install/usr/lib/python2.7/site-packages:$PYTHONPATH" PATH="$PWD/tmp_install/usr/bin:$PATH" ${MINGW_PREFIX}/bin/python2 setup.py pytest --addopts=tests || warning "Tests failed"
#    fi
#  done
#}

package_python3-pytest-benchmark() {
  depends=("${MINGW_PACKAGE_PREFIX}-python3"
           "${MINGW_PACKAGE_PREFIX}-python3-py-cpuinfo"
           "${MINGW_PACKAGE_PREFIX}-python3-pytest")
  install=${_realname}3-${CARCH}.install

  cd "${srcdir}/python3-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python3 setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build

  install -Dm644 LICENSE "${pkgdir}${MINGW_PREFIX}/share/licenses/python3-${_realname}/COPYING"

# This entire section should be removed if the package does NOT install
# anything in the /mingw*/bin directory.
### begin section ###
  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  # fix python command in files
  for _f in "${pkgdir}${MINGW_PREFIX}"/bin/*.py; do
    sed -e "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" -i ${_f}
  done
#### end section ####
}

package_python2-pytest-benchmark() {
  depends=("${MINGW_PACKAGE_PREFIX}-python2"
           "${MINGW_PACKAGE_PREFIX}-python2-py-cpuinfo"
           "${MINGW_PACKAGE_PREFIX}-python2-statistics"
           "${MINGW_PACKAGE_PREFIX}-python2-pathlib"
           "${MINGW_PACKAGE_PREFIX}-python2-pytest")
  install=${_realname}2-${CARCH}.install

  cd "${srcdir}/python2-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python2 setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build

  install -Dm644 LICENSE "${pkgdir}${MINGW_PREFIX}/share/licenses/python2-${_realname}/COPYING"

# This entire section should be removed if the package does NOT install
# anything in the /mingw*/bin directory.
### begin section ###
  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  # fix python command in files
  for _f in "${pkgdir}${MINGW_PREFIX}"/bin/*.py; do
    sed -e "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" -i ${_f}
  done

# for Python2 packages, you want to rename some stuff from the bin directory 
# with the 2 suffix like in the mingw-w64-python-pygments package to avoid
# conflicts when installing both the Python2 and Python3 packages
  for f in pytest-benchmark; do
    mv "${pkgdir}${MINGW_PREFIX}"/bin/${f}{,2}.exe
    if [ -f "${pkgdir}${MINGW_PREFIX}"/bin/${f}.exe.manifest ]; then
      mv "${pkgdir}${MINGW_PREFIX}"/bin/${f}{,2}.exe.manifest
      sed -e "s|${f}|${f}2|g" -i "${pkgdir}${MINGW_PREFIX}"/bin/${f}2.exe.manifest
    fi
    mv "${pkgdir}${MINGW_PREFIX}"/bin/${f}{,2}-script.py
  done
  for f in py.test-benchmark; do
    mv "${pkgdir}${MINGW_PREFIX}"/bin/${f}{,2}.exe
    if [ -f "${pkgdir}${MINGW_PREFIX}"/bin/${f}.exe.manifest ]; then
      mv "${pkgdir}${MINGW_PREFIX}"/bin/${f}{,2}.exe.manifest
      sed -e "s|${f}|${f}2|g" -i "${pkgdir}${MINGW_PREFIX}"/bin/${f}2.exe.manifest
    fi
    mv "${pkgdir}${MINGW_PREFIX}"/bin/${f}{,2}-script.py
  done
#### end section ####
}

package_mingw-w64-i686-python2-pytest-benchmark() {
  package_python2-pytest-benchmark
}

package_mingw-w64-i686-python3-pytest-benchmark() {
  package_python3-pytest-benchmark
}

package_mingw-w64-x86_64-python2-pytest-benchmark() {
  package_python2-pytest-benchmark
}

package_mingw-w64-x86_64-python3-pytest-benchmark() {
  package_python3-pytest-benchmark
}
