--- assimp-5.2.1/CMakeLists.txt.orig	2022-02-07 01:02:13.000000000 -0800
+++ assimp-5.2.1/CMakeLists.txt	2022-02-16 23:59:41.000000000 -0800
@@ -685,17 +684,17 @@
 
 # Main assimp code
 ADD_SUBDIRECTORY( code/ )
 IF ( ASSIMP_BUILD_ASSIMP_TOOLS )
   # The viewer for windows only
   IF ( WIN32 )
-    OPTION ( ASSIMP_BUILD_ASSIMP_VIEW "If the Assimp view tool is built. (requires DirectX)" OFF )
-    IF ( ASSIMP_BUILD_ASSIMP_VIEW )
-      ADD_SUBDIRECTORY( tools/assimp_view/ )
-    ENDIF ()
-  ENDIF ()
+    OPTION ( ASSIMP_BUILD_ASSIMP_VIEW "If the Assimp view tool is built. (requires DirectX)" ON )
+    ADD_SUBDIRECTORY( tools/assimp_view/ )
+  ELSE ()
+    OPTION ( ASSIMP_BUILD_ASSIMP_VIEW "If the Assimp view tool is built. (requires DirectX)" OFF )
+  ENDIF ( WIN32 )
   # The command line tool
   ADD_SUBDIRECTORY( tools/assimp_cmd/ )
 ENDIF ()
 
 IF ( ASSIMP_BUILD_SAMPLES )
   SET( SAMPLES_DIR ${CMAKE_CURRENT_SOURCE_DIR}/samples )
--- assimp-5.2.1/cmake-modules/FindDirectX.cmake.orig	2022-02-07 01:02:13.000000000 -0800
+++ assimp-5.2.1/cmake-modules/FindDirectX.cmake	2022-02-15 23:59:25.000000000 -0800
@@ -34,12 +34,13 @@
     "C:/apps_x86/Microsoft DirectX SDK*"
     "C:/Program Files (x86)/Microsoft DirectX SDK*"
     "C:/apps/Microsoft DirectX SDK*"
     "C:/Program Files/Microsoft DirectX SDK*"
     "C:/Program Files (x86)/Windows Kits/8.1"
     "$ENV{ProgramFiles}/Microsoft DirectX SDK*"
+    "$ENV{MSYSTEM_PREFIX}/$ENV{MSYSTEM_CHOST}"
   )
   create_search_paths(DirectX)
   # redo search if prefix path changed
   clear_if_changed(DirectX_PREFIX_PATH
     DirectX_LIBRARY
     DirectX_INCLUDE_DIR
@@ -52,13 +53,13 @@
     set(DirectX_LIBPATH_SUFFIX "x64")
   else(CMAKE_CL_64)
     set(DirectX_LIBPATH_SUFFIX "x86")
   endif(CMAKE_CL_64)
   find_library(DirectX_LIBRARY NAMES d3d9 HINTS ${DirectX_LIB_SEARCH_PATH} PATH_SUFFIXES ${DirectX_LIBPATH_SUFFIX})
   find_library(DirectX_D3DX9_LIBRARY NAMES d3dx9 HINTS ${DirectX_LIB_SEARCH_PATH} PATH_SUFFIXES ${DirectX_LIBPATH_SUFFIX})
-  find_library(DirectX_DXERR_LIBRARY NAMES DxErr HINTS ${DirectX_LIB_SEARCH_PATH} PATH_SUFFIXES ${DirectX_LIBPATH_SUFFIX})
+  find_library(DirectX_DXERR_LIBRARY NAMES DxErr DxErr9 HINTS ${DirectX_LIB_SEARCH_PATH} PATH_SUFFIXES ${DirectX_LIBPATH_SUFFIX})
   find_library(DirectX_DXGUID_LIBRARY NAMES dxguid HINTS ${DirectX_LIB_SEARCH_PATH} PATH_SUFFIXES ${DirectX_LIBPATH_SUFFIX})
 
 
   # look for dxgi (needed by both 10 and 11)
   find_library(DirectX_DXGI_LIBRARY NAMES dxgi HINTS ${DirectX_LIB_SEARCH_PATH} PATH_SUFFIXES ${DirectX_LIBPATH_SUFFIX})
 
--- assimp-5.2.1/cmake-modules/FindRT.cmake.orig	2022-02-07 01:02:13.000000000 -0800
+++ assimp-5.2.1/cmake-modules/FindRT.cmake	2022-02-17 05:40:13.000000000 -0800
@@ -4,17 +4,19 @@
 # RT_FOUND - system has rt library
 # RT_LIBRARIES - rt libraries directory
 #
 # Source: https://gitlab.cern.ch/dss/eos/commit/44070e575faaa46bd998708ef03eedb381506ff0
 #
 
+if(NOT WIN32)
 if(RT_LIBRARIES)
     set(RT_FIND_QUIETLY TRUE)
 endif(RT_LIBRARIES)
 
 find_library(RT_LIBRARY rt)
 set(RT_LIBRARIES ${RT_LIBRARY})
 # handle the QUIETLY and REQUIRED arguments and set
 # RT_FOUND to TRUE if all listed variables are TRUE
 include(FindPackageHandleStandardArgs)
 find_package_handle_standard_args(RT DEFAULT_MSG RT_LIBRARY)
 mark_as_advanced(RT_LIBRARY)
+endif()
