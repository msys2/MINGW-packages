# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>
# Contributor: Renato Silva <br.renatosilva@gmail.com>

_realname=hunspell
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=1.3.4
pkgrel=10
pkgdesc="Spell checker and morphological analyzer library and program (mingw-w64)"
arch=('any')
url="http://hunspell.github.io/"
# We omit MPL because it cannot be applied to the whole source, see COPYING
license=(GPL2+ LGPL2.1+)

makedepends=("${MINGW_PACKAGE_PREFIX}-gcc" "${MINGW_PACKAGE_PREFIX}-pkg-config")
depends=(${MINGW_PACKAGE_PREFIX}-gcc-libs
         ${MINGW_PACKAGE_PREFIX}-gettext)
options=('!libtool' 'strip' '!debug')
optdepends=('perl: for ispellaff2myspell')
source=("https://github.com/hunspell/hunspell/archive/v${pkgver}.tar.gz"
        "hunspell-1.3.2-canonicalhost.patch"
        "hunspell-1.3.4-exit-on-MAX_PREFIXES_SUFFIXES.patch"
        "hunspell-1.3.4-inc-MAX_PREFIXES_SUFFIXES-to-2048.patch"
        "hunspell-1.3.4-relocate.patch"
        "hunspell-1.3.4-windows-sub-dicts-paths.patch")
sha256sums=('55918522cb0041748507dd4f5aa92d043cef337aa589b9367c2221da084281ac'
            'ab8bbcabbe0db385dcd09262e31d9a832470853e3bf95c5166d3fbbe6577c0f2'
            '1f7c1f29b2cfb24324b1ae1a95e30b5250d08186f98be3703f6d90e555e7fbd2'
            'f137fed17374c7f8d60f60f094aa65570e7ce20c342e3a24b266e75d66783982'
            '673c927520ee956d303e156964c46a2e3bcdccbbff9cc72acceb74a9505c9dd5'
            '33bd93035c9dd29e237c48213911025a568299b317d23d983be0839e192ba1a3')

prepare() {
  cd "${srcdir}/${_realname}-${pkgver}"
  #remove files created by patch
  rm -rf src/tools/pathtools.cxx src/tools/pathtools.hxx
  patch -Np1 -i "$srcdir"/hunspell-1.3.2-canonicalhost.patch
  patch -Np1 -i "$srcdir"/hunspell-1.3.4-exit-on-MAX_PREFIXES_SUFFIXES.patch
  patch -Np1 -i "$srcdir"/hunspell-1.3.4-inc-MAX_PREFIXES_SUFFIXES-to-2048.patch
  patch -Np1 -i "$srcdir"/hunspell-1.3.4-relocate.patch
  patch -Np1 -i "$srcdir"/hunspell-1.3.4-windows-sub-dicts-paths.patch

  autoreconf -fi
}

build() {
  [[ -d "${srcdir}/build-${MINGW_CHOST}" ]] && rm -rf "${srcdir}/build-${MINGW_CHOST}"
  mkdir -p "${srcdir}/build-${MINGW_CHOST}"
  cd "${srcdir}/build-${MINGW_CHOST}"

  ../${_realname}-${pkgver}/configure \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --prefix=${MINGW_PREFIX} \
    --disable-rpath \
    --enable-threads=posix \
    --without-ui \
    --without-readline
  # temporarily copy hunvisapi.h to work around build process
  # where the file is not spotted.
  cp ${srcdir}/build-${MINGW_CHOST}/src/hunspell/hunvisapi.h \
       "${srcdir}/${_realname}-${pkgver}/src/hunspell"
  MSYS2_ARG_CONV_EXCL="-DBINDIR=;-DDATA_DIR=" \
  make
}

package() {
  cd "${srcdir}/build-${MINGW_CHOST}"
  MSYS2_ARG_CONV_EXCL="-DBINDIR=;-DDATA_DIR=" \
  make DESTDIR="${pkgdir}" install
  cp ${pkgdir}${MINGW_PREFIX}/lib/lib${_realname}-${pkgver%.*}.dll.a ${pkgdir}${MINGW_PREFIX}/lib/lib${_realname}.dll.a

  # Licenses
  cd "${srcdir}/${_realname}-${pkgver}"
  install -Dm644 COPYING      "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING"
  install -Dm644 COPYING.LGPL "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING.LGPL"
  install -Dm644 COPYING.MPL  "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING.MPL"
  #remove copy we made earlier.  configure will create the file from
  #/hunspell/hunvisapi.h.in.
#  rm -rf "${srcdir}/${_realname}-${pkgver}/src/hunspell/hunvisapi.h"
}
