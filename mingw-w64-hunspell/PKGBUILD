# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>
# Contributor: Renato Silva <br.renatosilva@gmail.com>

_realname=hunspell
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
# Please rebuild enchant when updating this if needed, otherwise it may
# silently break spell checking in applications
pkgver=1.6.0
pkgrel=1
pkgdesc="Spell checker and morphological analyzer library and program (mingw-w64)"
arch=('any')
url="http://hunspell.github.io/"
# We omit MPL because it cannot be applied to the whole source, see COPYING
license=(GPL2+ LGPL2.1+)
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc" 
             "${MINGW_PACKAGE_PREFIX}-pkg-config"
             "${MINGW_PACKAGE_PREFIX}-ncurses"
             "${MINGW_PACKAGE_PREFIX}-readline")
depends=(${MINGW_PACKAGE_PREFIX}-gcc-libs
         ${MINGW_PACKAGE_PREFIX}-gettext)
options=('!libtool' 'strip' '!debug')
optdepends=("perl: for ispellaff2myspell"
            "${MINGW_PACKAGE_PREFIX}-readline: for hunspell program")
source=("${_realname}-${pkgver}.tar.gz"::"https://github.com/hunspell/hunspell/archive/v${pkgver}.tar.gz"
        0002-exit-on-MAX_PREFIXES_SUFFIXES.patch
        0003-inc-MAX_PREFIXES_SUFFIXES-to-2048.patch
        0004-relocate.patch
        0005-windows-sub-dicts-paths.patch
        0006-enable-ncurses.patch)
noextract=("${_realname}-${pkgver}.tar.gz")
sha256sums=('512e7d2ee69dad0b35ca011076405e56e0f10963a02d4859dbcc4faf53ca68e2'
            '6d526286917ccd98c2ddb21f603c3cc72e22bf891f42ea7217d25c9ef5244347'
            'd9b6b415733edd512e0bfeb36493e5d344c54b7523d277df49e45ec9b993e9c9'
            '1aaf8e1e3d7435f0ac8578d94ddebed4a12ee8dd6143948afbd9ef528c1f16a3'
            '057a87ece38e4426b3f71559e935325085bb9f8556050e78125875de231d63b2'
            '4d52bef2654314080577e98490d0e0960584f6a75fd819f291f75d64d7c9f1b6')

prepare() {
  cd ${srcdir}
  tar zxf ${_realname}-${pkgver}.tar.gz || true
  cd "${srcdir}/${_realname}-${pkgver}"
  cp -Rp README.md README
  #remove files created by patch
  rm -rf src/tools/pathtools.cxx src/tools/pathtools.hxx
#  patch -Np1 -i "${srcdir}"/0002-exit-on-MAX_PREFIXES_SUFFIXES.patch
#  patch -Np1 -i "${srcdir}"/0003-inc-MAX_PREFIXES_SUFFIXES-to-2048.patch
  patch -Np1 -i "${srcdir}"/0004-relocate.patch
  patch -Np1 -i ${srcdir}/0006-enable-ncurses.patch
  autoreconf -fi
}

build() {
  [[ -d "${srcdir}/build-${MINGW_CHOST}" ]] && rm -rf "${srcdir}/build-${MINGW_CHOST}"
  mkdir -p "${srcdir}/build-${MINGW_CHOST}"
  cd "${srcdir}/build-${MINGW_CHOST}"

  ../${_realname}-${pkgver}/configure \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --prefix=${MINGW_PREFIX} \
    --disable-rpath \
    --enable-threads=win32 \
    --with-ui \
    --with-readline
#    --enable-threads=posix \
#    --without-ui \
#    --without-readline
  # temporarily copy hunvisapi.h to work around build process
  # where the file is not spotted.
  cp ${srcdir}/build-${MINGW_CHOST}/src/hunspell/hunvisapi.h \
       "${srcdir}/${_realname}-${pkgver}/src/hunspell"
  MSYS2_ARG_CONV_EXCL="-DBINDIR=;-DDATA_DIR=" \
  make
}

package() {
  cd "${srcdir}/build-${MINGW_CHOST}"
  MSYS2_ARG_CONV_EXCL="-DBINDIR=;-DDATA_DIR=" \
  make DESTDIR="${pkgdir}" install
  cp ${pkgdir}${MINGW_PREFIX}/lib/lib${_realname}-${pkgver%.*}.dll.a ${pkgdir}${MINGW_PREFIX}/lib/lib${_realname}.dll.a

  # Licenses
  cd "${srcdir}/${_realname}-${pkgver}"
  install -Dm644 COPYING      "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING"
  install -Dm644 COPYING.LESSER "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING.LESSER"
  install -Dm644 COPYING.MPL  "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING.MPL"
  #remove copy we made earlier.  configure will create the file from
  #/hunspell/hunvisapi.h.in.
#  rm -rf "${srcdir}/${_realname}-${pkgver}/src/hunspell/hunvisapi.h"
}
