From 869430a4c3fa1a10eed97b076fad636ae2644304 Mon Sep 17 00:00:00 2001
From: Alexpux <alexey.pawlow@gmail.com>
Date: Mon, 17 Nov 2014 07:39:06 +0300
Subject: [PATCH 01/10] Upgrade autotools to newer version. Allow build IOS
 with autotools for mingw target.

---
 Makefile.am       |  2 ++
 configure.ac      | 46 +++++++++++++++++++++++++++++++++++++++++-----
 demos/Makefile.am | 24 ++++++++++++++++++++----
 src/Makefile.am   | 31 ++++++++++++++++++++++++++++++-
 4 files changed, 93 insertions(+), 10 deletions(-)

diff --git a/Makefile.am b/Makefile.am
index e53bfb6..d281118 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -1,3 +1,5 @@
+ACLOCAL_AMFLAGS = -I m4
+
 SUBDIRS =  src includes
 
 pkgconfigdir = $(libdir)/pkgconfig
diff --git a/configure.ac b/configure.ac
index 37386ba..36ad204 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1,11 +1,20 @@
 #                                               -*- Autoconf -*-
 # Process this file with autoconf to produce a configure script.
-AC_PREREQ(2.50)
+AC_PREREQ(2.69)
 AC_INIT( [OIS], 1.4.0 )
 
 AC_CANONICAL_TARGET
-AM_INIT_AUTOMAKE( [OIS], 1.4.0 )
-AM_CONFIG_HEADER([includes/config.h])
+AM_INIT_AUTOMAKE
+AM_CONFIG_HEADERS([includes/config.h])
+AC_CONFIG_MACRO_DIR([m4])
+
+case "$host" in
+        *-*-mingw*|*-*-cygwin*)
+                lt_cv_deplibs_check_method='pass_all'
+        ;;
+esac
+
+LT_INIT
 
 dnl Check for programs
 AC_PROG_CC
@@ -21,8 +30,35 @@ CFLAGS="$CFLAGS"
 CXXFLAGS="$CXXFLAGS"
 LIBS="$LIBS"
 
-dnl Detect X11
-AC_CHECK_HEADERS([X11/Xlib.h],, [AC_MSG_ERROR("Xlib.h not found - libx11-dev")])
+case "$host" in
+        *-*-mingw*|*-*-cygwin*)
+                AC_DEFINE(PLATFORM_WIN32, 1, [Platform is Win32])
+                AM_CONDITIONAL([PLATFORM_WIN32], [test xtest = xtest])
+                AM_CONDITIONAL([PLATFORM_LINUX], [test xno = xtest])
+                AM_CONDITIONAL([PLATFORM_APPLE], [test xno = xtest])
+                PLATFORM_STRING="Win32"
+                ;;
+        *-*-linux*)
+                AC_DEFINE(PLATFORM_LINUX, 1, [Platform is Linux])
+                PLATFORM_STRING="Linux"
+                AM_CONDITIONAL([PLATFORM_WIN32], [test xno = xtest])
+                AM_CONDITIONAL([PLATFORM_LINUX], [test xtest = xtest])
+                AM_CONDITIONAL([PLATFORM_APPLE], [test xno = xtest])
+                dnl Detect X11
+                AC_CHECK_HEADERS([X11/Xaw/Command.h],, [AC_MSG_ERROR("libxaw headers not found")])
+                ;;
+        *-*-darwin*)
+		AC_MSG_WARN([Hello])
+                AC_DEFINE(PLATFORM_APPLE, 1, [Platform is Apple])
+                PLATFORM_STRING="Apple"
+                AM_CONDITIONAL([PLATFORM_WIN32], [test xno = xtest])
+                AM_CONDITIONAL([PLATFORM_LINUX], [test xno = xtest])
+                AM_CONDITIONAL([PLATFORM_APPLE], [test xtest = xtest])
+                ;;
+        *)
+                AC_MSG_WARN([*** Please add $host to configure.ac checks!])
+                ;;
+esac
 
 dnl Added for BSD's
 AC_PROG_LIBTOOL
diff --git a/demos/Makefile.am b/demos/Makefile.am
index 690e81e..9efca66 100644
--- a/demos/Makefile.am
+++ b/demos/Makefile.am
@@ -1,11 +1,27 @@
-INCLUDES = $(STLPORT_CFLAGS) -I$(top_srcdir)/includes $(CFLAGS) -I/usr/X11R6/include
+if PLATFORM_LINUX
+AM_CPPFLAGS = $(STLPORT_CFLAGS) -I$(top_srcdir)/includes $(CFLAGS) -I/usr/X11R6/include
+endif
+
+if PLATFORM_WIN32
+AM_CPPFLAGS = $(STLPORT_CFLAGS) -I$(top_srcdir)/includes -I$(top_srcdir)/Win32/CommandLine $(CFLAGS)
+endif
 
 noinst_PROGRAMS = ConsoleApp FFConsoleTest
 
-ConsoleApp_SOURCES = OISConsole.cpp
-ConsoleApp_LDFLAGS = -L$(top_builddir)/src
+if PLATFORM_WIN32
+ConsoleApp_SOURCES = OISConsole.cppZZ $(top_srcdir)/Win32/CommandLine/CommandLine.rc
+ConsoleApp_LDADD = -lOIS -ldinput8 -ldxguid -lole32 -loleaut32 -luser32
+else
+ConsoleApp_SOURCES = OISConsole.cppZZ
 ConsoleApp_LDADD = -lOIS
+endif
+ConsoleApp_LDFLAGS = -L$(top_builddir)/src
 
+if PLATFORM_WIN32
+FFConsoleTest_SOURCES = FFConsoleDemo.cpp $(top_srcdir)/Win32/DemoFFTest/FF.rc
+FFConsoleTest_LDADD = -lOIS -ldinput8 -ldxguid -lole32 -loleaut32 -luser32
+else
 FFConsoleTest_SOURCES = FFConsoleDemo.cpp
-FFConsoleTest_LDFLAGS = -L$(top_builddir)/src
 FFConsoleTest_LDADD = -lOIS
+endif
+FFConsoleTest_LDFLAGS = -L$(top_builddir)/src
diff --git a/src/Makefile.am b/src/Makefile.am
index 83892d2..f24f100 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -1,4 +1,6 @@
-INCLUDES = $(STLPORT_CFLAGS) -I$(top_srcdir)/includes $(CFLAGS) -I/usr/X11R6/include
+if PLATFORM_LINUX
+ 
+AM_CPPFLAGS = $(STLPORT_CFLAGS) -I$(top_srcdir)/includes $(CFLAGS) -I/usr/X11R6/include
 
 
 
@@ -22,4 +24,31 @@ libOIS_la_LDFLAGS = -release @PACKAGE_VERSION@
 
 libOIS_la_LIBADD = $(STLPORT_LIBS) -L/usr/X11R6/lib -lX11
 
+endif
+
+if PLATFORM_WIN32
+
+AM_CPPFLAGS = $(STLPORT_CFLAGS) -I$(top_srcdir)/includes $(CFLAGS) -DWIN32 -DOIS_DYNAMIC_LIB -DOIS_NONCLIENT_BUILD
+
+lib_LTLIBRARIES=libOIS.la
+libOIS_la_SOURCES = OISInputManager.cpp \
+	OISObject.cpp \
+	OISEffect.cpp \
+	OISJoyStick.cpp \
+	OISKeyboard.cpp \
+	OISForceFeedback.cpp \
+	OISException.cpp \
+	./win32/Win32InputManager.cpp \
+	./win32/Win32JoyStick.cpp \
+	./win32/Win32ForceFeedback.cpp \
+	./win32/Win32KeyBoard.cpp \
+	./win32/Win32Mouse.cpp
+
+libOIS_la_LDFLAGS = -Wl,--enable-auto-image-base -Wl,--add-stdcall-alias -Wl,--out-implib,libOIS.dll.a -no-undefined -release @PACKAGE_VERSION@
+#libOIS_la_LDFLAGS = -version-info $(shell echo "@PACKAGE_VERSION@" | tr '.' ':')
+
+libOIS_la_LIBADD = $(STLPORT_LIBS) -ldinput8 -ldxguid -lole32 -loleaut32 -luser32
+
+endif
+
 #eof "$Id: Makefile.am,v 1.15.2.1 2008/02/14 03:33:36 pjcast Exp $"
-- 
2.9.0

