# Maintainer: Carlos Antunes <cmantunes@gmail.com>
# Contributed by: nanodude

_realname=newlib
_target=arm-none-eabi
_download_version=7-2018q2

pkgbase=mingw-w64-${_target}-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_target}-${_realname}")
# pkgver=2.5.0    # 7-2017q4
pkgver=3.0.0    # 7-2018q2
pkgrel=1
pkgdesc="GNU Tools for ARM Embedded Processors - Newlib (mingw-w64)"
arch=('any')
url="https://sourceware.org/newlib/"
license=('Various')
groups=("${MINGW_PACKAGE_PREFIX}-${_target}-toolchain")
depends=("${MINGW_PACKAGE_PREFIX}-${_target}-binutils")
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc")
options=('staticlibs' '!strip' '!emptydirs')
source=("gcc-arm-embedded-${_download_version}.tar.bz2"::"https://developer.arm.com/-/media/Files/downloads/gnu-rm/7-2018q2/gcc-arm-none-eabi-7-2018-q2-update-src.tar.bz2?revision=bf2e4a67-c08c-49d5-b97d-17757cc8a77e"
        '10-newlib-arm-dynamic-reent.patch')
sha256sums=('965c5755edffbab0320736285d17de3f4189bee1801099a17f6c9aeb0218acf0'
            '7522f26659a69e2f02eb37d3557f8dca08bc32ada8c797b6a812ad131c87b0ef')
noextract=("gcc-arm-embedded-${_download_version}.tar.bz2")

prepare() {
  # Extract packages from archive
  rm -rf ${srcdir}/tmp
  mkdir ${srcdir}/tmp && cd ${srcdir}/tmp
  tar xvf ../../gcc-arm-embedded-${_download_version}.tar.bz2 --strip-components=2

  # Copy and extract GCC and Newlib packages
  cp gcc.tar.bz2 ${srcdir}
  cp newlib.tar.bz2 ${srcdir}
  cd ${srcdir}
  [ -d gcc ] && rm -rf gcc
  [ -d newlib ] && rm -rf newlib
  tar xf gcc.tar.bz2     --checkpoint=100
  tar xf newlib.tar.bz2  --checkpoint=100

  # Newlib
  cd ${srcdir}/${_realname}
  patch -p1 -i "${srcdir}/10-newlib-arm-dynamic-reent.patch"

  # GCC
  cd "${srcdir}/gcc"

  # Build cross-compiler just to compile newlib
  rm -rf "${srcdir}/compiler-${MINGW_CHOST}"
  mkdir -p "${srcdir}/compiler-${MINGW_CHOST}"
  cp -a "${MINGW_PREFIX}/${_target}" "${srcdir}/compiler-${MINGW_CHOST}"
  cd $srcdir
  rm -rf build-gcc-${MINGW_CHOST}
  mkdir -p build-gcc-${MINGW_CHOST} && cd build-gcc-${MINGW_CHOST}
  ../gcc/configure \
    --build="${MINGW_CHOST}" \
    --host="${MINGW_CHOST}" \
    --target="${_target}" \
    --prefix="${srcdir}/compiler-${MINGW_CHOST}" \
    --enable-languages="c" \
    --disable-werror \
    --disable-lto \
    --disable-nls \
    --disable-libffi \
    --disable-decimal-float \
    --disable-libgomp \
    --disable-libmudflap \
    --disable-libquadmath \
    --disable-libssp \
    --disable-libstdcxx-pch \
    --disable-libsanitizer \
    --disable-threads \
    --disable-tls \
    --disable-shared \
    --enable-multilib \
    --enable-interwork \
    --with-newlib \
    --without-headers \
    --with-gnu-as \
    --with-gnu-ld \
    --with-system-zlib \
    --with-{gmp,mpfr,mpc,isl}="${MINGW_PREFIX}" \
    --disable-isl-version-check \
    --without-cloog \
    --with-libelf \
    --with-sysroot="${MINGW_PREFIX}" \
    --with-build-sysroot="${srcdir}/compiler-${MINGW_CHOST}" \
    --with-build-time-tools="${MINGW_PREFIX}/${_target}/bin"
  make all-gcc
  make -j1 install-gcc
}

build() {
  # Build newlib
  local armgccpath="${srcdir}/compiler-${MINGW_CHOST}/bin"
  if check_option "debug" "y"; then
    NEWLIB_CFLAGS="-O0"
  else
    NEWLIB_CFLAGS="-O3"
  fi
  NEWLIB_CFLAGS+=" -g -ffunction-sections -fdata-sections"
#  NEWLIB_CFLAGS+=" -DMALLOC_PROVIDED"
#  NEWLIB_CFLAGS+=" -DREENTRANT_SYSCALLS_PROVIDED"
  cd $srcdir
  rm -rf build-${MINGW_CHOST}
  mkdir -p build-${MINGW_CHOST} && cd build-${MINGW_CHOST}
  ../${_realname}/configure \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --target=${_target} \
    --prefix=${MINGW_PREFIX} \
    --enable-newlib-io-pos-args \
    --enable-newlib-io-c99-formats \
    --enable-newlib-io-long-long \
    --enable-newlib-io-float \
    --enable-newlib-reent-small \
    --disable-newlib-supplied-syscalls \
    --disable-nls \
    CFLAGS="${NEWLIB_CFLAGS}" \
    PATH="${armgccpath}:${PATH}"
  make PATH="${armgccpath}:${PATH}"
}

package() {
  local armgccpath="${srcdir}/compiler-${MINGW_CHOST}/bin"
  cd ${srcdir}/build-${MINGW_CHOST}
  make -j1 DESTDIR=${pkgdir} PATH="${armgccpath}:${PATH}" install

  # Remove files that conflict with host
  rm -rf "${pkgdir}${MINGW_PREFIX}/share/info"
}

