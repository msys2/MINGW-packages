# Maintainer: J. Peter Mugaas <jpmugaas@suddenlink.net>.

_realname=execnet
pkgbase=mingw-w64-python-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-python2-${_realname}"  "${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
pkgver=1.7.0
pkgrel=1
pkgdesc="Rapid multi-Python deployment (mingw-w64)"
arch=('any')
url='https://execnet.readthedocs.io/en/latest'
license=('MIT')
makedepends=("${MINGW_PACKAGE_PREFIX}-python2"
             "${MINGW_PACKAGE_PREFIX}-python3"
             "${MINGW_PACKAGE_PREFIX}-python3-setuptools"
             "${MINGW_PACKAGE_PREFIX}-python2-setuptools")
options=('staticlibs' 'strip' '!debug')
source=("${_realname}-${pkgver}.tar.gz"::"https://github.com/pytest-dev/execnet/archive/v$pkgver.tar.gz")
sha512sums=('19c0efa5be8d10f6ddb1f93280a2cdd680efa9ca41840e9f8e0bdda19e53fadfe99e32a1f96ff497204a947e4047da3d184edc4ab93615210c4c75a88c66a941')

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying $_patch"
    patch -Nbp1 -i "${srcdir}/$_patch"
  done
}

del_file_exists() {
  for _fname in "$@"
  do
    if [ -f $_fname ]; then
      rm -rf $_fname
    fi
  done
}
# =========================================== #

prepare() {
  cd "${srcdir}"
  for builddir in python{2,3}-build-${CARCH}; do
    rm -rf ${builddir} | true
    cp -r "${_realname}-${pkgver}" "${builddir}"
  done
  # Set version for setuptools_scm
  export SETUPTOOLS_SCM_PRETEND_VERSION=$pkgver
  export PBR_VERSION=$pkgver
}

# Note that build() is sometimes skipped because it's done in 
# the packages setup.py install for simplicity if you can do so.
# but sometimes, you want to do a check before install which would
# also trigger the build.
build() {
  for pver in {2,3}; do  
    msg "Python ${pver} build for ${CARCH}"  
    cd "${srcdir}/python${pver}-build-${CARCH}"
    ${MINGW_PREFIX}/bin/python${pver} setup.py build
  done  
}

check() {
  msg2 "Python 3 test for ${CARCH}"
  cd "${srcdir}/python3-build-${CARCH}"
  local _cyp="$(cygpath -m $(pwd))"
  PYTHONPATH="${_cyp}/build/lib;${PYTHONPATH}" ${MINGW_PREFIX}/bin/py.test testing || true

  msg2 "Python 2 test for ${CARCH}"
  cd "${srcdir}/python2-build-${CARCH}"
  local _cyp="$(cygpath -m $(pwd))"
  PYTHONPATH="${_cyp}/build/lib;${PYTHONPATH}" ${MINGW_PREFIX}/bin/py.test2 testing || true
}

package_python3-execnet() {
  depends=("${MINGW_PACKAGE_PREFIX}-python3" "${MINGW_PACKAGE_PREFIX}-python3-apipkg" )

  cd "${srcdir}/python3-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python3 setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build

  install -Dm644 LICENSE "${pkgdir}${MINGW_PREFIX}/share/licenses/python3-${_realname}/COPYING"
}

package_python2-execnet() {
  depends=("${MINGW_PACKAGE_PREFIX}-python2" "${MINGW_PACKAGE_PREFIX}-python2-apipkg" )

  cd "${srcdir}/python2-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python2 setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build

  install -Dm644 LICENSE "${pkgdir}${MINGW_PREFIX}/share/licenses/python2-${_realname}/COPYING"

}

package_mingw-w64-i686-python2-execnet() {
  package_python2-execnet
}

package_mingw-w64-i686-python3-execnet() {
  package_python3-execnet
}

package_mingw-w64-x86_64-python2-execnet() {
  package_python2-execnet
}

package_mingw-w64-x86_64-python3-execnet() {
  package_python3-execnet
}
