# Maintainer: Sarah Ottinger <schalaalexiazeal@gmail.com>

_realname=llvmlite
pkgbase=mingw-w64-python-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-python-${_realname}")
provides=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
conflicts=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
replaces=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
pkgver=0.40.0dev0.r48.ged0f625
pkgrel=1
_commit=ed0f625e5ee8b5250b71d4bab58390a5382f6fba
pkgdesc='Lightweight LLVM python binding for writing JIT compilers (mingw-w64)'
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32' 'clangarm64')
url="https://github.com/numba/llvmlite"
license=('spdx:BSD-2-Clause')
depends=(
  "${MINGW_PACKAGE_PREFIX}-python"
  "${MINGW_PACKAGE_PREFIX}-polly")
makedepends=("${MINGW_PACKAGE_PREFIX}-python-setuptools"
             "${MINGW_PACKAGE_PREFIX}-cython"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-mlir"
             "git")
source=(${_realname}::git+https://github.com/numba/llvmlite#commit=$_commit
       #"https://pypi.org/packages/source/${_realname::1}/${_realname}/${_realname}-${pkgver}.tar.gz"
       "multi-defs.patch"
       "path_fix.patch"
       # https://github.com/gmarkall/llvmlite/commit/d1430235.patch +
       # https://github.com/gmarkall/llvmlite/commit/355338e9.patch
       "llvm-14.patch"
       # https://github.com/gmarkall/llvmlite/commit/867d1cb9.patch
       "llvm-15.patch")
sha256sums=('SKIP'
            'b4610934ac8fd7e614d9ea920856ff6da2fbeb146028a664ada8543b8b33ec56'
            '813ecc48f18543f0d36b03c7596a1a6a26be31b9cfa44f1111ac232821844a79'
            '2010878a1ce44707d085544768944230544a47d8029e862204c3faac6ef0e659'
            'a1d71f145d80b89af7b5f6fbf8f83e924513c8694f1de384e7b3fac89d4bb7f0')

apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying $_patch"
    patch -Nbp1 -i "${srcdir}/$_patch"
  done
}

pkgver() {
  cd "${srcdir}/${_realname}"
  git describe --long ${_commit} | sed 's/\([^-]*-g\)/r\1/;s/-/./g;s/^v//g'
}

prepare() {
  cd "$srcdir/${_realname}"

  apply_patch_with_msg \
    multi-defs.patch \
    path_fix.patch \
    llvm-14.patch \
    llvm-15.patch

  sed -i "s,_MSC_VER,_WIN32," ffi/core.h
}

build() {
  cp -r "${_realname}" "python-build-${MSYSTEM}"
  cd "${srcdir}/python-build-${MSYSTEM}"

  export CMAKE_GENERATOR="Ninja"

  # Workaround from https://github.com/AcademySoftwareFoundation/OpenShadingLanguage/issues/1069
  CXXFLAGS+=" -DNDEBUG" \
  ${MINGW_PREFIX}/bin/python setup.py build
}

package() {
  cd "${srcdir}/python-build-${MSYSTEM}"
  export CMAKE_GENERATOR="Ninja"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build
  install -Dm644 LICENSE "${pkgdir}${MINGW_PREFIX}/share/licenses/python-${_realname}/LICENSE"
  install -Dm644 ffi/build/libllvmlite.dll "${pkgdir}${MINGW_PREFIX}/bin/llvmlite.dll"
  install -Dm644 ffi/build/libllvmlite.dll.a "${pkgdir}${MINGW_PREFIX}/lib/libllvmlite.dll.a"
}
