--- p11-kit-0.24.0/p11-kit/p11-kit.c.orig	2021-08-28 19:36:22.782059400 +0200
+++ p11-kit-0.24.0/p11-kit/p11-kit.c	2021-08-28 19:39:36.776135700 +0200
@@ -81,6 +81,7 @@
                char *argv[])
 {
 	char **args;
+	intptr_t code;
 
 	args = calloc (argc + 2, sizeof (char *));
 	return_val_if_fail (args != NULL, 1);
@@ -89,14 +90,18 @@
 	memcpy (args + 1, argv, sizeof (char *) * argc);
 	args[argc + 1] = NULL;
 
-	execv (args[0], args);
-
-	/* At this point we have no command */
-	p11_message_err (errno, _("couldn't run trust tool"));
+	code = _spawnv (_P_WAIT, args[0], args);
 
 	free (argv[0]);
 	free (args);
-	return 2;
+
+	if (code) {
+		/* At this point we have no command */
+		p11_message_err (errno, "couldn't run trust tool");
+		return 2;
+	}
+
+	return 0;
 }
 
 int
@@ -106,6 +111,7 @@
 	const char *private_dir;
 	char *filename;
 	char *path;
+	intptr_t code;
 
 	/* These are trust commands, send them to that tool */
 	if (strcmp (argv[0], "extract") == 0) {
@@ -132,14 +138,18 @@
 	argv[0] = path;
 #endif
 	argv[argc] = NULL;
-	execv (path, argv);
-
-	/* At this point we have no command */
-	p11_message (_("'%s' is not a valid command. See 'p11-kit --help'"), argv[0]);
+	code = _spawnv (_P_WAIT, path, argv);
 
 	free (filename);
 	free (path);
-	return 2;
+
+	if (code) {
+		/* At this point we have no command */
+		p11_message ("'%s' is not a valid command. See 'p11-kit --help'", argv[0]);
+		return 2;
+	}
+
+	return 0;
 }
 
 int
