--- cvise-2.11.0/cvise.py	2024-11-10 10:58:12.000000000 +0100
+++ cvise-2.11.0/cvise-mingw.py	2025-05-01 22:46:37.257126900 +0200
@@ -3,7 +3,6 @@
 import argparse
 import datetime
 import importlib.util
-from itertools import chain
 import logging
 import os
 import os.path
@@ -12,6 +11,10 @@
 import sys
 import tempfile
 import time
+from itertools import chain
+
+script_path = os.path.dirname(os.path.realpath(__file__))
+
 
 # If the cvise modules cannot be found
 # add the known install location to the path
@@ -19,14 +22,17 @@
 if importlib.util.find_spec('cvise') is None:
     sys.path.append('@CMAKE_INSTALL_FULL_DATADIR@')
     sys.path.append(destdir + '@CMAKE_INSTALL_FULL_DATADIR@')
+    sys.path.append(os.path.join(os.path.dirname(script_path), "share"))
 
 import chardet  # noqa: E402
+import psutil  # noqa: E402
 from cvise.cvise import CVise  # noqa: E402
 from cvise.passes.abstract import AbstractPass  # noqa: E402
 from cvise.utils import misc, statistics, testing  # noqa: E402
-from cvise.utils.error import CViseError  # noqa: E402
-from cvise.utils.error import MissingPassGroupsError  # noqa: E402
-import psutil  # noqa: E402
+from cvise.utils.error import (  # noqa: E402
+    CViseError,
+    MissingPassGroupsError,
+)
 
 
 class DeltaTimeFormatter(logging.Formatter):
@@ -38,15 +44,13 @@
         return super().format(record)
 
 
-script_path = os.path.dirname(os.path.realpath(__file__))
-
-
 def get_share_dir():
     # Test all known locations for the cvise directory
     share_dirs = [
         os.path.join('@CMAKE_INSTALL_FULL_DATADIR@', '@cvise_PACKAGE@'),
         destdir + os.path.join('@CMAKE_INSTALL_FULL_DATADIR@', '@cvise_PACKAGE@'),
         os.path.join(script_path, 'cvise'),
+        os.path.join(os.path.dirname(script_path), "share", "cvise")
     ]
 
     for d in share_dirs:
@@ -84,6 +88,9 @@
             if not path:
                 search = destdir + os.path.join('@CMAKE_INSTALL_FULL_LIBEXECDIR@', '@cvise_PACKAGE@')
                 path = shutil.which(prog, path=search)
+            if not path:
+                search = os.path.join(os.path.dirname(script_path), "lib", "cvise")
+                path = shutil.which(prog, path=search)
 
         if not path:
             path = shutil.which(prog)
@@ -93,6 +100,10 @@
 
     # Special case for clang-format
     programs['clang-format'] = '@CLANG_FORMAT_PATH@'
+    if not os.path.exists(programs['clang-format']):
+        programs['clang-format'] = shutil.which('clang-format', path=script_path)
+    if not programs['clang-format']:
+        programs['clang-format'] = shutil.which('clang-format')
 
     return programs
 
