--- qca-2.3.0/src/qca_core.cpp.orig	2020-02-26 08:18:08.755773100 +0300
+++ qca-2.3.0/src/qca_core.cpp	2020-02-26 08:18:29.429106500 +0300
@@ -223,12 +223,12 @@
 
 	bool secmem = botan_init(prealloc, allow_mmap_fallback);
 
+#if defined(Q_OS_UNIX)
 	if ((geteuid() == 0)  && drop_root)
 	{
-#if defined(Q_OS_UNIX)
 		setuid(getuid());
-#endif
 	}
+#endif
 
 	global = new Global;
 	global->secmem = secmem;
--- qca-2.3.0/plugins/qca-gnupg/utils.cpp.orig	2020-02-26 09:13:59.223654300 +0300
+++ qca-2.3.0/plugins/qca-gnupg/utils.cpp	2020-02-26 09:41:09.646280500 +0300
@@ -80,7 +80,7 @@
 static QString find_reg_gpgProgram()
 {
 	QStringList bins;
-	bins << "gpg.exe" << "gpg2.exe";
+	bins << QLatin1String("gpg.exe") << QLatin1String("gpg2.exe");
 
 	HKEY root;
 	root = HKEY_CURRENT_USER;
@@ -99,9 +99,10 @@
 	{
 		foreach (const QString &bin, bins)
 		{
-			if (check_bin(dir + "\\" + bin))
+			QString currBin = dir + QLatin1String("\\") + bin;
+			if (check_bin(currBin))
 			{
-				return dir + "\\" + bin;
+				return currBin;
 			}
 		}
 	}
@@ -115,7 +116,7 @@
 	// so any from them can be used
 	QStringList bins;
 #ifdef Q_OS_WIN
-	bins << "gpg.exe" << "gpg2.exe";
+	bins << QLatin1String("gpg.exe") << QLatin1String("gpg2.exe");
 #else
 	bins << QStringLiteral("gpg") << QStringLiteral("gpg2");
 #endif
@@ -138,7 +139,7 @@
 
 	// Look up at PATH environment
 #ifdef Q_OS_WIN
-	QString pathSep = ";";
+	QString pathSep = QLatin1String(";");
 #else
 	const QString pathSep = QStringLiteral(":");
 #endif
