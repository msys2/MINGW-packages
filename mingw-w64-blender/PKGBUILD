# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# To build with Qt-Creator:
# 1. Launch Qt-Creator with the env (set from cmd.exe):
# set "MINGW_PREFIX=C:/msys64/mingw64"
# set "ACLOCAL_PATH=%MINGW_PREFIX%/share/aclocal:/usr/share/aclocal"
# set "PKG_CONFIG_PATH=%MINGW_PREFIX%/lib/pkgconfig"
# set "PATH=%MINGW_PREFIX%/bin;%PATH%"
# 2. Specify the following as the CMake arguments:
# -DMINGW_LIBS=%MINGW_PREFIX% -DCMAKE_BUILD_TYPE=Debug -DWITH_SYSTEM_GLEW=ON -DWITH_SYSTEM_OPENJPEG=ON -DWITH_INSTALL_PORTABLE=OFF -DWITH_OPENCOLLADA=ON -DWITH_GAMEENGINE=ON -DWITH_RAYOPTIMIZATION=ON -DWITH_JACK=OFF -DWITH_PLAYER=ON -DWITH_CODEC_FFMPEG=ON -DWITH_CODEC_SNDFILE=ON -DWITH_CYCLES=ON -DWITH_CYCLES_CUDA_BINARIES=OFF -DWITH_CYCLES_OSL=ON -DWITH_FFTW3=ON -DWITH_MOD_OCEANSIM=ON -DPYTHON_VERSION=3.4 -DPYTHON_LIBPATH=%MINGW_PREFIX%/lib -DPYTHON_LIBRARY="python3.4m" -DPYTHON_INCLUDE_DIRS=/msys64/mingw64/include/python3.4m -DWITH_PYTHON_INSTALL=OFF -DWITH_PYTHON_INSTALL_NUMPY=OFF -DPYTHON_NUMPY_PATH=%MINGW_PREFIX%/lib/python3.4/site-packages -DCYCLES_OSL=%MINGW_PREFIX% -DWITH_IMAGE_REDCODE=ON -DWITH_OPENMP=ON -DWITH_LLVM=ON -DLLVM_STATIC=ON

_realname=blender
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=2.72b
_pyver=3.4
pkgrel=1
pkgdesc="A fully integrated 3D graphics creation suite (mingw-w64)"
arch=('any')
license=('GPL')
url="http://www.blender.org"
depends=("${MINGW_PACKAGE_PREFIX}-boost"
        "${MINGW_PACKAGE_PREFIX}-glew"
        "${MINGW_PACKAGE_PREFIX}-ffmpeg"
        "${MINGW_PACKAGE_PREFIX}-fftw"
        "${MINGW_PACKAGE_PREFIX}-freetype"
        "${MINGW_PACKAGE_PREFIX}-libpng"
        "${MINGW_PACKAGE_PREFIX}-libsndfile"
        "${MINGW_PACKAGE_PREFIX}-libtiff"
        "${MINGW_PACKAGE_PREFIX}-openexr"
        "${MINGW_PACKAGE_PREFIX}-openal"
        "${MINGW_PACKAGE_PREFIX}-opencollada"
        "${MINGW_PACKAGE_PREFIX}-opencolorio"
        "${MINGW_PACKAGE_PREFIX}-openimageio"
        "${MINGW_PACKAGE_PREFIX}-openshadinglanguage"
        "${MINGW_PACKAGE_PREFIX}-python3"
        "${MINGW_PACKAGE_PREFIX}-python3-numpy"
        "${MINGW_PACKAGE_PREFIX}-wintab-sdk")
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake" "${MINGW_PACKAGE_PREFIX}-llvm")
#[[ $CARCH == x86_64 ]] && makedepends+=('cuda')
#optdepends=('cuda: cycles renderer cuda support')
options=(!strip staticlibs !debug)
install=blender-${CARCH}.install
source=(#http://mirror.cs.umn.edu/blender.org/source/$_realname-$pkgver.tar.gz
        http://download.blender.org/source/$_realname-$pkgver.tar.gz
        "mingw-w64-cmake.patch"
        "fix-mingw-w64-definitions.patch"
        "mingw-dont-install-3rdparty.patch"
        "fix-finding-glew.patch"
        "fix-define-syntax.patch"
        "mingw-DEBUG-libmv-avoid-too-many-sections.patch"
        "mingw-DEBUG-dont-suffix-libs-with-_d.patch"
        "mingw-use-X11-like-path-layout.patch")
md5sums=('5542766199dd101de79670e437d1ef19'
         '7e051acedaf998ac12406c4b1fc70104'
         '0b6e0df941c26d0716dbd00454de96a1'
         '1969914e11d0a4f74dbfeddad742c9da'
         'b11e3fe76c4433abb53c12e723dfbe4f'
         '9c5a4e230d1c9081096d53d206cc03b4'
         'e8dbeac11a43dc307fe826cd41100b8e'
         '4d104bac37e549eb32cffd473550412e'
         '44fdccd19c563dbfc9a49fb7cab1e261')

prepare() {
  cd "$srcdir"/$_realname-$pkgver
  patch -p1 -i "${srcdir}"/mingw-w64-cmake.patch
  patch -p1 -i "${srcdir}"/fix-mingw-w64-definitions.patch
  patch -p1 -i "${srcdir}"/mingw-dont-install-3rdparty.patch
  patch -p1 -i "${srcdir}"/fix-finding-glew.patch
  patch -p1 -i "${srcdir}"/fix-define-syntax.patch
  patch -p1 -i "${srcdir}"/mingw-DEBUG-libmv-avoid-too-many-sections.patch
  patch -p1 -i "${srcdir}"/mingw-DEBUG-dont-suffix-libs-with-_d.patch
  patch -p1 -i "${srcdir}"/mingw-use-X11-like-path-layout.patch
}

build() {
  [ -d "$srcdir"/build-${CARCH} ] && rm -rf $srcdir/build-${CARCH}
  mkdir "$srcdir"/build-${CARCH}  && cd "$srcdir"/build-${CARCH}

  [[ $CARCH == i686 ]] && ENABLESSE2="-DSUPPORT_SSE2_BUILD=OFF"
  [[ $CARCH == i686 ]] && BUILDCUDA="OFF" || BUILDCUDA="ON"
  #[[ $CARCH == i686 ]] && PMARCH="i686" || PMARCH="x86-64"
  #CFLAGS="-O2 -pipe -march=${PMARCH} -mtune=generic"
  #CXXFLAGS="$CFLAGS"
  declare -a _btype
  if check_option "debug" "y"; then
    _btype=Debug
  else
    _btype=Release
  fi
  
  ${MINGW_PREFIX}/bin/cmake \
    -G"MSYS Makefiles" \
    -DCMAKE_INSTALL_PREFIX=${pkgdir}${MINGW_PREFIX} \
    -DMINGW_LIBS=${MINGW_PREFIX} \
    -DCMAKE_BUILD_TYPE=${_btype} \
    -DWITH_SYSTEM_GLEW=ON \
    -DWITH_SYSTEM_OPENJPEG=ON \
    -DWITH_INSTALL_PORTABLE=OFF \
    -DWITH_OPENCOLLADA=ON \
    -DWITH_GAMEENGINE=ON \
    -DWITH_RAYOPTIMIZATION=ON \
    -DWITH_JACK=OFF \
    -DWITH_PLAYER=ON \
    -DWITH_CODEC_FFMPEG=ON \
    -DWITH_CODEC_SNDFILE=ON \
    -DWITH_CYCLES=ON \
    -DWITH_CYCLES_CUDA_BINARIES=OFF \
    -DWITH_CYCLES_OSL=ON \
    -DWITH_FFTW3=ON \
    -DWITH_MOD_OCEANSIM=ON \
    -DPYTHON_VERSION=${_pyver} \
    -DPYTHON_LIBPATH=${MINGW_PREFIX}/lib \
    -DPYTHON_LIBRARY=python${_pyver}m \
    -DPYTHON_INCLUDE_DIRS=${MINGW_PREFIX}/include/python${_pyver}m \
    -DWITH_PYTHON_INSTALL=OFF \
    -DWITH_PYTHON_INSTALL_NUMPY=OFF \
    -DPYTHON_NUMPY_PATH=${MINGW_PREFIX}/lib/python${_pyver}/site-packages \
    -DCYCLES_OSL=${MINGW_PREFIX} \
    -DWITH_IMAGE_REDCODE=ON \
    -DWITH_OPENMP=ON \
    -DWITH_LLVM=ON \
    -DLLVM_STATIC=ON \
    ../${_realname}-${pkgver}

  # Remove the openjpeg line once blender accepts my patch
  make # -j1 VERBOSE=1
}

package() {
  cd "$srcdir"/build-${CARCH}
  make install
  mkdir -p ${pkgdir}${MINGW_PREFIX}/lib
  cp -r bin ${pkgdir}${MINGW_PREFIX}/
  rm ${pkgdir}${MINGW_PREFIX}/bin/msgfmt.exe
  mv ${pkgdir}${MINGW_PREFIX}/bin/*.a ${pkgdir}${MINGW_PREFIX}/lib/

  ${MINGW_PREFIX}/bin/python3 -m compileall "${pkgdir}${MINGW_PREFIX}/share/blender/${pkgver}"
  ${MINGW_PREFIX}/bin/python3 -m compileall \
  ${pkgdir}${MINGW_PREFIX}/share/blender/${pkgver}/scripts/startup \
  ${pkgdir}${MINGW_PREFIX}/share/blender/${pkgver}/scripts/modules \
  ${pkgdir}${MINGW_PREFIX}/share/blender/${pkgver}/scripts/addons
}
