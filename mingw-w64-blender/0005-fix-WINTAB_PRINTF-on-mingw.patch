--- a/intern/ghost/intern/GHOST_SystemWin32.cc
+++ b/intern/ghost/intern/GHOST_SystemWin32.cc
@@ -879,11 +879,11 @@
           /* Test for Win32/Wintab button down match. */
           useWintabPos = wt->testCoordinates(msg.pt.x, msg.pt.y, info.x, info.y);
           if (!useWintabPos) {
-            WINTAB_PRINTF(" ... but associated system button mismatched position\n");
+            WINTAB_PRINTF(" ... but associated system button mismatched position\n", "");
             continue;
           }
 
-          WINTAB_PRINTF(" ... associated to system button\n");
+          WINTAB_PRINTF(" ... associated to system button\n", "");
 
           /* Steal the Win32 event which was previously peeked. */
           PeekMessage(&msg, window->getHWND(), message, message, PM_REMOVE | PM_NOYIELD);
@@ -971,14 +971,14 @@
           mouseMoveHandled = true;
         }
         else {
-          WINTAB_PRINTF(" ... but no system button\n");
+          WINTAB_PRINTF(" ... but no system button\n", "");
         }
         break;
       }
       case GHOST_kEventButtonUp: {
         WINTAB_PRINTF("HWND %p Wintab button up", window->getHWND());
         if (!useWintabPos) {
-          WINTAB_PRINTF(" ... but Wintab position isn't trusted\n");
+          WINTAB_PRINTF(" ... but Wintab position isn't trusted\n", "");
           continue;
         }
 
@@ -1003,13 +1003,13 @@
         if (PeekMessage(&msg, window->getHWND(), message, message, PM_REMOVE | PM_NOYIELD) &&
             msg.message != WM_QUIT) {
 
-          WINTAB_PRINTF(" ... associated to system button\n");
+          WINTAB_PRINTF(" ... associated to system button\n", "");
           window->updateMouseCapture(MouseReleased);
           system->pushEvent(
               new GHOST_EventButton(info.time, info.type, window, info.button, info.tabletData));
         }
         else {
-          WINTAB_PRINTF(" ... but no system button\n");
+          WINTAB_PRINTF(" ... but no system button\n", "");
         }
         break;
       }
@@ -1631,16 +1631,16 @@
         case WT_PROXIMITY: {
           WINTAB_PRINTF("HWND %p HCTX %p WT_PROXIMITY\n", window->getHWND(), (void *)wParam);
           if (LOWORD(lParam)) {
-            WINTAB_PRINTF(" Cursor entering context.\n");
+            WINTAB_PRINTF(" Cursor entering context.\n", "");
           }
           else {
-            WINTAB_PRINTF(" Cursor leaving context.\n");
+            WINTAB_PRINTF(" Cursor leaving context.\n", "");
           }
           if (HIWORD(lParam)) {
-            WINTAB_PRINTF(" Cursor entering or leaving hardware proximity.\n");
+            WINTAB_PRINTF(" Cursor entering or leaving hardware proximity.\n", "");
           }
           else {
-            WINTAB_PRINTF(" Cursor neither entering nor leaving hardware proximity.\n");
+            WINTAB_PRINTF(" Cursor neither entering nor leaving hardware proximity.\n", "");
           }
 
           GHOST_Wintab *wt = window->getWintab();
@@ -1690,15 +1690,15 @@
           WINTAB_PRINTF("HWND %p HCTX %p WT_CTXOVERLAP", window->getHWND(), (void *)wParam);
           switch (lParam) {
             case CXS_DISABLED: {
-              WINTAB_PRINTF(" CXS_DISABLED\n");
+              WINTAB_PRINTF(" CXS_DISABLED\n", "");
               break;
             }
             case CXS_OBSCURED: {
-              WINTAB_PRINTF(" CXS_OBSCURED\n");
+              WINTAB_PRINTF(" CXS_OBSCURED\n", "");
               break;
             }
             case CXS_ONTOP: {
-              WINTAB_PRINTF(" CXS_ONTOP\n");
+              WINTAB_PRINTF(" CXS_ONTOP\n", "");
               break;
             }
           }
