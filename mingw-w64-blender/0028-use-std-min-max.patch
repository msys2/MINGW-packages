--- a/intern/ghost/intern/GHOST_WindowWin32.cpp
+++ b/intern/ghost/intern/GHOST_WindowWin32.cpp
@@ -124,10 +124,10 @@
 
   /* Adjust our requested size to allow for caption and borders and constrain to monitor. */
   AdjustWindowRectEx(&win_rect, WS_CAPTION, FALSE, 0);
-  width = min(monitor.rcWork.right - monitor.rcWork.left, win_rect.right - win_rect.left);
-  left = min(max(monitor.rcWork.left, win_rect.left), monitor.rcWork.right - width);
-  height = min(monitor.rcWork.bottom - monitor.rcWork.top, win_rect.bottom - win_rect.top);
-  top = min(max(monitor.rcWork.top, win_rect.top), monitor.rcWork.bottom - height);
+  width = std::min(monitor.rcWork.right - monitor.rcWork.left, win_rect.right - win_rect.left);
+  left = std::min(std::max(monitor.rcWork.left, win_rect.left), static_cast<long>(monitor.rcWork.right - width));
+  height = std::min(monitor.rcWork.bottom - monitor.rcWork.top, win_rect.bottom - win_rect.top);
+  top = std::min(std::max(monitor.rcWork.top, win_rect.top), static_cast<long>(monitor.rcWork.bottom - height));
 
   m_hWnd = ::CreateWindowExW(extended_style,        // window extended style
                              s_windowClassName,     // pointer to registered class name
