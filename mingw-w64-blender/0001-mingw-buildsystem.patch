diff -Naur -x '*.orig' -x '*.rej' blender-4.4.3-orig/CMakeLists.txt blender-4.4.3/CMakeLists.txt
--- blender-4.4.3-orig/CMakeLists.txt	2025-03-06 03:31:08.000000000 +0300
+++ blender-4.4.3/CMakeLists.txt	2025-06-11 11:15:29.833082600 +0300
@@ -430,7 +430,7 @@
   option(WITH_X11_XFIXES "Enable X11 XWayland cursor warping workaround" ON)
 endif()
 
-if(UNIX AND NOT APPLE)
+if((UNIX AND NOT APPLE) OR MINGW)
   option(WITH_SYSTEM_FREETYPE "Use the freetype library provided by the operating system" OFF)
   option(WITH_SYSTEM_EIGEN3 "Use the systems Eigen3 library" OFF)
 else()
@@ -530,7 +530,7 @@
 # Compression
 option(WITH_LZO "Enable fast LZO compression (used for pointcache)" ON)
 option(WITH_LZMA "Enable best LZMA compression, (used for pointcache)" ON)
-if(UNIX AND NOT APPLE)
+if((UNIX AND NOT APPLE) OR MINGW)
   option(WITH_SYSTEM_LZO "Use the system LZO library" OFF)
 endif()
 option(WITH_DRACO "Enable Draco mesh compression Python module (used for glTF)" ON)
@@ -550,7 +550,7 @@
 option(WITH_FREESTYLE "Enable Freestyle (advanced edges rendering)" ON)
 
 # Libraries.
-if(UNIX AND NOT APPLE)
+if((UNIX AND NOT APPLE) OR MINGW)
   # Optionally build without pre-compiled libraries.
   # NOTE: this could be supported on all platforms however in practice UNIX is the only platform
   # that has good support for detecting installed libraries.
@@ -578,7 +578,7 @@
 option(WITH_INPUT_NDOF "Enable NDOF input devices (SpaceNavigator and friends)" ON)
 # On Windows and for the Blender application on macOS, portable install
 # is the only supported installation type, so there is no option.
-if(UNIX AND (NOT APPLE OR WITH_PYTHON_MODULE))
+if((UNIX AND (NOT APPLE OR WITH_PYTHON_MODULE)) OR MINGW)
   option(WITH_INSTALL_PORTABLE "\
 Install redistributable runtime, otherwise install into CMAKE_INSTALL_PREFIX"
     ON
@@ -903,7 +903,7 @@
 
 
 # Documentation
-if(UNIX AND NOT APPLE)
+if((UNIX AND NOT APPLE) OR MINGW)
   option(WITH_DOC_MANPAGE "Create a manual page (Unix manpage)" OFF)
 endif()
 
@@ -971,7 +971,7 @@
   set(WITH_METAL_BACKEND OFF)
 endif()
 
-if(WIN32)
+if(MSVC)
   getDefaultWindowsPrefixBase(CMAKE_GENERIC_PROGRAM_FILES)
   set(CPACK_INSTALL_PREFIX ${CMAKE_GENERIC_PROGRAM_FILES}/${})
 endif()
@@ -1117,7 +1117,7 @@
   mark_as_advanced(WITH_COMPILER_SHORT_FILE_MACRO)
 endif()
 
-if(WIN32)
+if(MSVC)
   # Use hardcoded paths or find_package to find externals
   option(WITH_WINDOWS_FIND_MODULES "Use find_package to locate libraries" OFF)
   mark_as_advanced(WITH_WINDOWS_FIND_MODULES)
@@ -1519,8 +1519,10 @@
 
 if(UNIX AND NOT APPLE)
   include(platform_unix)
-elseif(WIN32)
+elseif(MSVC)
   include(platform_win32)
+elseif(MINGW)
+  include(platform_win32_mingw64)
 elseif(APPLE)
   include(platform_apple)
 endif()
@@ -1606,7 +1608,7 @@
 endif()
 if(WITH_IMAGE_OPENJPEG)
   # Special handling of Windows platform where openjpeg is always static.
-  if(WIN32)
+  if(WIN32 AND WITH_STATIC_LIBS)
     set(OPENJPEG_DEFINES "-DOPJ_STATIC")
   else()
     set(OPENJPEG_DEFINES "")
@@ -2515,7 +2517,7 @@
     )
   endif()
 
-  if(WIN32)
+  if(MSVC)
     # Always use numpy bundled in precompiled libs.
   elseif((WITH_PYTHON_INSTALL AND WITH_PYTHON_INSTALL_NUMPY) OR WITH_PYTHON_NUMPY)
     if(("${PYTHON_NUMPY_PATH}" STREQUAL "") OR (${PYTHON_NUMPY_PATH} MATCHES NOTFOUND))
@@ -2523,13 +2525,13 @@
     endif()
   endif()
 
-  if(WIN32 OR APPLE)
+  if(MSVC OR APPLE)
     # Always copy from precompiled libs.
   elseif(WITH_PYTHON_INSTALL_REQUESTS)
     find_python_package(requests "")
   endif()
 
-  if(WIN32 OR APPLE)
+  if(MSVC OR APPLE)
     # Always copy from precompiled libs.
   elseif(WITH_PYTHON_INSTALL_ZSTANDARD)
     find_python_package(zstandard "")
diff -Naur -x '*.orig' -x '*.rej' blender-4.4.3-orig/build_files/cmake/Modules/FindOpenImageIO.cmake blender-4.4.3/build_files/cmake/Modules/FindOpenImageIO.cmake
--- blender-4.4.3-orig/build_files/cmake/Modules/FindOpenImageIO.cmake	2025-02-05 20:13:02.000000000 +0300
+++ blender-4.4.3/build_files/cmake/Modules/FindOpenImageIO.cmake	2025-06-11 11:15:29.838052200 +0300
@@ -54,6 +54,7 @@
 find_file(OPENIMAGEIO_TOOL
   NAMES
     oiiotool
+    oiiotool.exe
   HINTS
     ${_openimageio_SEARCH_DIRS}
   PATH_SUFFIXES
diff -Naur -x '*.orig' -x '*.rej' blender-4.4.3-orig/build_files/cmake/Modules/FindPythonLibsUnix.cmake blender-4.4.3/build_files/cmake/Modules/FindPythonLibsUnix.cmake
--- blender-4.4.3-orig/build_files/cmake/Modules/FindPythonLibsUnix.cmake	2025-02-05 20:13:02.000000000 +0300
+++ blender-4.4.3/build_files/cmake/Modules/FindPythonLibsUnix.cmake	2025-06-11 11:15:29.841324900 +0300
@@ -50,7 +50,9 @@
   endif()
 else()
   # See: http://docs.python.org/extending/embedding.html#linking-requirements
-  set(PYTHON_LINKFLAGS "-Xlinker -export-dynamic" CACHE STRING "Linker flags for python")
+  if(NOT MINGW)
+    set(PYTHON_LINKFLAGS "-Xlinker -export-dynamic" CACHE STRING "Linker flags for python")
+  endif()
   mark_as_advanced(PYTHON_LINKFLAGS)
 endif()
 
diff -Naur -x '*.orig' -x '*.rej' blender-4.4.3-orig/intern/cycles/app/CMakeLists.txt blender-4.4.3/intern/cycles/app/CMakeLists.txt
--- blender-4.4.3-orig/intern/cycles/app/CMakeLists.txt	2025-02-05 20:13:03.000000000 +0300
+++ blender-4.4.3/intern/cycles/app/CMakeLists.txt	2025-06-11 11:15:29.846325700 +0300
@@ -140,7 +140,7 @@
 
   install(
     TARGETS cycles
-    DESTINATION ${CMAKE_INSTALL_PREFIX})
+    DESTINATION ${CMAKE_INSTALL_PREFIX}/bin)
 
   add_test(
     NAME cycles_version
diff -Naur -x '*.orig' -x '*.rej' blender-4.4.3-orig/source/blender/blentranslation/msgfmt/CMakeLists.txt blender-4.4.3/source/blender/blentranslation/msgfmt/CMakeLists.txt
--- blender-4.4.3-orig/source/blender/blentranslation/msgfmt/CMakeLists.txt	2025-03-28 21:43:08.000000000 +0300
+++ blender-4.4.3/source/blender/blentranslation/msgfmt/CMakeLists.txt	2025-06-11 11:15:29.850652700 +0300
@@ -21,7 +21,9 @@
 add_cc_flags_custom_test(msgfmt)
 
 if(WIN32)
+  if(MSVC)
   string(APPEND CMAKE_EXE_LINKER_FLAGS_DEBUG " /nodefaultlib:MSVCRT.lib")
+  endif()
   list(APPEND LIB bf_intern_utfconv)
 endif()
 
diff -Naur -x '*.orig' -x '*.rej' blender-4.4.3-orig/source/creator/CMakeLists.txt blender-4.4.3/source/creator/CMakeLists.txt
--- blender-4.4.3-orig/source/creator/CMakeLists.txt	2025-03-28 21:43:08.000000000 +0300
+++ blender-4.4.3/source/creator/CMakeLists.txt	2025-06-11 11:15:29.850652700 +0300
@@ -384,7 +384,7 @@
 #
 # Setup version directory, libraries, `bpy` & text files.
 
-if(UNIX AND NOT APPLE)
+if((UNIX AND NOT APPLE) OR MINGW)
   if(WITH_PYTHON_MODULE)
     if(WITH_INSTALL_PORTABLE)
       set(TARGETDIR_BPY "bpy")
@@ -568,7 +568,7 @@
     DESTINATION ${TARGETDIR_VER}/datafiles
   )
 endif()
-if(WIN32)
+if(MSVC)
   if(EXISTS ${LIBDIR}/osl/lib/python${PYTHON_VERSION}/site-packages/oslquery) # 4.4+
     install(
       DIRECTORY ${LIBDIR}/osl/lib/python${PYTHON_VERSION}/site-packages/oslquery
@@ -700,7 +700,7 @@
 # -----------------------------------------------------------------------------
 # Install Targets (Platform Specific)
 
-if(UNIX AND NOT APPLE)
+if((UNIX AND NOT APPLE) OR MINGW)
 
   if(PLATFORM_BUNDLED_LIBRARIES AND TARGETDIR_LIB)
     install(
@@ -2030,13 +2030,17 @@
   install(
     TARGETS blender blender-launcher
     COMPONENT Blender
-    DESTINATION "."
+    RUNTIME DESTINATION bin
+    ARCHIVE DESTINATION lib
+    LIBRARY DESTINATION lib
   )
   if(WITH_CPU_CHECK)
     install(
       TARGETS blender_cpu_check
       COMPONENT Blender
-      DESTINATION "."
+      RUNTIME DESTINATION bin
+      ARCHIVE DESTINATION lib
+      LIBRARY DESTINATION lib
     )
   endif()
   set_target_properties(
@@ -2058,7 +2058,7 @@
 # As executing Blender is needed - it's important this operation runs after the shared
 # libraries have been installed to their destination.
 
-if(UNIX AND NOT APPLE)
+if((UNIX AND NOT APPLE) OR MINGW)
   if(NOT WITH_PYTHON_MODULE)
     if(WITH_DOC_MANPAGE)
       # Only run the command to generate the man-page when it may be outdated.
