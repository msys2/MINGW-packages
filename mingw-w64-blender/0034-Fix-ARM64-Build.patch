From a90ba63ec3389701155f3227805d20a2d350c26c Mon Sep 17 00:00:00 2001
From: GH Cao <driver1998.ms@outlook.com>
Date: Sun, 4 Dec 2022 21:48:38 +0800
Subject: [PATCH 1/2] Fix ARM64 Build

---
 intern/cycles/util/util_system.cpp           |  4 ++--
 source/blender/blenlib/intern/system.c       |  4 ++++
 source/blender/blenlib/intern/system_win32.c | 16 +++++++++++++++-
 3 files changed, 21 insertions(+), 3 deletions(-)

diff --git a/intern/cycles/util/util_system.cpp b/intern/cycles/util/util_system.cpp
index 03bc5ae..be27a93 100644
--- a/intern/cycles/util/util_system.cpp
+++ b/intern/cycles/util/util_system.cpp
@@ -174,8 +174,8 @@ string system_cpu_brand_string()
   if (sysctlbyname("machdep.cpu.brand_string", &modelname, &bufferlen, NULL, 0) == 0) {
     return modelname;
   }
-#elif defined(WIN32) || defined(__x86_64__) || defined(__i386__)
-  /* Get from intrinsics on Windows and x86. */
+#elif defined(_M_IX86) || defined(_M_AMD64) || defined(__x86_64__) || defined(__i386__)
+  /* Get from intrinsics on x86. */
   char buf[49] = {0};
   int result[4] = {0};
 
diff --git a/source/blender/blenlib/intern/system.c b/source/blender/blenlib/intern/system.c
index 803f91f..9207c92 100644
--- a/source/blender/blenlib/intern/system.c
+++ b/source/blender/blenlib/intern/system.c
@@ -136,6 +136,7 @@ static void __cpuid(
 
 char *BLI_cpu_brand_string(void)
 {
+#if defined _M_IX86 || defined __i386__ || defined _M_AMD64 || defined __x86_64__
   char buf[49] = {0};
   int result[4] = {0};
   __cpuid(result, 0x80000000);
@@ -147,11 +148,13 @@ char *BLI_cpu_brand_string(void)
     /* TODO(sergey): Make it a bit more presentable by removing trademark. */
     return brand;
   }
+#endif
   return NULL;
 }
 
 int BLI_cpu_support_sse41(void)
 {
+#if defined _M_IX86 || defined __i386__ || defined _M_AMD64 || defined __x86_64__
   int result[4], num;
   __cpuid(result, 0);
   num = result[0];
@@ -160,6 +163,7 @@ int BLI_cpu_support_sse41(void)
     __cpuid(result, 0x00000001);
     return (result[2] & ((int)1 << 19)) != 0;
   }
+#endif
   return 0;
 }
 
diff --git a/source/blender/blenlib/intern/system_win32.c b/source/blender/blenlib/intern/system_win32.c
index 7572936..810f25f 100644
--- a/source/blender/blenlib/intern/system_win32.c
+++ b/source/blender/blenlib/intern/system_win32.c
@@ -156,15 +156,29 @@ static bool BLI_windows_system_backtrace_run_trace(FILE *fp, HANDLE hThread, PCO
   symbolinfo->SizeOfStruct = sizeof(SYMBOL_INFO);
 
   STACKFRAME frame = {0};
+  DWORD machineType = 0;
+#if defined _M_AMD64 || defined __x86_64__
   frame.AddrPC.Offset = context->Rip;
   frame.AddrPC.Mode = AddrModeFlat;
   frame.AddrFrame.Offset = context->Rsp;
   frame.AddrFrame.Mode = AddrModeFlat;
   frame.AddrStack.Offset = context->Rsp;
   frame.AddrStack.Mode = AddrModeFlat;
+  machineType = IMAGE_FILE_MACHINE_AMD64;
+#elif defined _M_ARM64 || defined __aarch64__
+  frame.AddrPC.Offset = context->Pc;
+  frame.AddrPC.Mode = AddrModeFlat;
+  frame.AddrFrame.Offset = context->Fp;
+  frame.AddrFrame.Mode = AddrModeFlat;
+  frame.AddrStack.Offset = context->Sp;
+  frame.AddrStack.Mode = AddrModeFlat;
+  machineType = IMAGE_FILE_MACHINE_ARM64;
+#else
+  #error Unsupported architecture
+#endif
 
   while (true) {
-    if (StackWalk64(IMAGE_FILE_MACHINE_AMD64,
+    if (StackWalk64(machineType,
                     GetCurrentProcess(),
                     hThread,
                     &frame,
-- 
2.38.1

