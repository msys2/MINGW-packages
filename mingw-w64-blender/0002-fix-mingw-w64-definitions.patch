diff -Naur blender-4.0.2-orig/extern/ceres/include/ceres/jet.h blender-4.0.2/extern/ceres/include/ceres/jet.h
--- blender-4.0.2-orig/extern/ceres/include/ceres/jet.h	2023-09-27 18:54:36.000000000 +0300
+++ blender-4.0.2/extern/ceres/include/ceres/jet.h	2024-01-11 14:26:07.392109300 +0300
@@ -821,6 +821,7 @@
                    -x.v * exp(-x.a * x.a) * (T(1) / sqrt(atan(T(1)))));
 }
 
+#ifndef __MINGW32__
 // Bessel functions of the first kind with integer order equal to 0, 1, n.
 //
 // Microsoft has deprecated the j[0,1,n]() POSIX Bessel functions in favour of
@@ -878,6 +879,7 @@
       BesselJn(n, f.a),
       T(0.5) * (BesselJn(n - 1, f.a) - BesselJn(n + 1, f.a)) * f.v);
 }
+#endif
 
 // Classification and comparison functionality referencing only the scalar part
 // of a Jet. To classify the derivatives (e.g., for sanity checks), the dual
diff -Naur blender-4.0.2-orig/extern/glog/src/windows/config.h blender-4.0.2/extern/glog/src/windows/config.h
--- blender-4.0.2-orig/extern/glog/src/windows/config.h	2023-09-27 18:54:36.000000000 +0300
+++ blender-4.0.2/extern/glog/src/windows/config.h	2024-01-11 14:26:07.400109000 +0300
@@ -16,6 +16,10 @@
 #  define HAVE_SNPRINTF
 #endif
 
+#if defined(__MINGW32__)
+#  define HAVE_PTHREAD
+#endif
+
 /* Always the empty-string on non-windows systems. On windows, should be
    "__declspec(dllexport)". This way, when we compile the dll, we export our
    functions/classes. It's safe to define this here because config.h is only
diff -Naur blender-4.0.2-orig/extern/glog/src/windows/port.h blender-4.0.2/extern/glog/src/windows/port.h
--- blender-4.0.2-orig/extern/glog/src/windows/port.h	2023-09-27 18:54:36.000000000 +0300
+++ blender-4.0.2/extern/glog/src/windows/port.h	2024-01-11 14:26:07.402109400 +0300
@@ -62,7 +62,7 @@
  * used by both C and C++ code, so we put all the C++ together.
  */
 
-#ifdef _MSC_VER
+#ifdef _WIN32
 
 /* 4244: otherwise we get problems when substracting two size_t's to an int
  * 4251: it's complaining about a private struct I've chosen not to dllexport
@@ -77,17 +77,19 @@
 #pragma warning(disable:4244 4251 4355 4715 4800 4996 4267 4312 4722)
 
 /* file I/O */
-#define PATH_MAX 1024
 #define access  _access
 #define getcwd  _getcwd
 #define open    _open
 #define read    _read
 #define write   _write
-#define lseek   _lseek
 #define close   _close
 #define popen   _popen
 #define pclose  _pclose
+#ifndef __MINGW32__
+#define lseek   _lseek
+#define PATH_MAX 1024
 #define R_OK    04           /* read-only (for access()) */
+#endif
 #define S_ISDIR(m)  (((m) & _S_IFMT) == _S_IFDIR)
 
 #define O_WRONLY _O_WRONLY
@@ -138,7 +140,9 @@
 #define DEFAULT_TEMPLATE_ROOTDIR  ".."
 
 // ----------------------------------- SYSTEM/PROCESS
+#ifndef __MINGW32__
 typedef int pid_t;
+#endif
 #define getpid  _getpid
 
 #endif  // _MSC_VER
diff -Naur blender-4.0.2-orig/extern/quadriflow/src/dedge.cpp blender-4.0.2/extern/quadriflow/src/dedge.cpp
--- blender-4.0.2-orig/extern/quadriflow/src/dedge.cpp	2023-09-27 18:54:36.000000000 +0300
+++ blender-4.0.2/extern/quadriflow/src/dedge.cpp	2024-01-11 14:26:07.405109700 +0300
@@ -10,6 +10,11 @@
 #ifdef WITH_TBB
 #include "tbb/tbb.h"
 #endif
+
+#ifdef _WIN32
+#include <intrin.h>
+#endif
+
 namespace qflow {
 
 inline int dedge_prev(int e, int deg) { return (e % deg == 0u) ? e + (deg - 1) : e - 1; }
diff -Naur blender-4.0.2-orig/intern/clog/clog.c blender-4.0.2/intern/clog/clog.c
--- blender-4.0.2-orig/intern/clog/clog.c	2023-09-27 18:54:36.000000000 +0300
+++ blender-4.0.2/intern/clog/clog.c	2024-01-11 14:26:07.407108200 +0300
@@ -26,8 +26,8 @@
 #  include <unistd.h>
 #endif
 
-#if defined(_MSC_VER)
-#  include <Windows.h>
+#if defined(_WIN32)
+#  include <windows.h>
 
 #  include <VersionHelpers.h> /* This needs to be included after Windows.h. */
 #  include <io.h>
@@ -387,7 +387,7 @@
 static uint64_t clg_timestamp_ticks_get(void)
 {
   uint64_t tick;
-#if defined(_MSC_VER)
+#if defined(_WIN32)
   tick = GetTickCount64();
 #else
   struct timeval tv;
diff -Naur blender-4.0.2-orig/intern/cycles/device/cuda/device.cpp blender-4.0.2/intern/cycles/device/cuda/device.cpp
--- blender-4.0.2-orig/intern/cycles/device/cuda/device.cpp	2023-09-27 18:54:36.000000000 +0300
+++ blender-4.0.2/intern/cycles/device/cuda/device.cpp	2024-01-11 14:26:07.411109900 +0300
@@ -76,7 +76,7 @@
 #ifdef WITH_CUDA
 static CUresult device_cuda_safe_init()
 {
-#  ifdef _WIN32
+#  ifdef _MSC_VER
   __try
   {
     return cuInit(0);
diff -Naur blender-4.0.2-orig/intern/cycles/device/hip/device.cpp blender-4.0.2/intern/cycles/device/hip/device.cpp
--- blender-4.0.2-orig/intern/cycles/device/hip/device.cpp	2023-09-27 18:54:36.000000000 +0300
+++ blender-4.0.2/intern/cycles/device/hip/device.cpp	2024-01-11 14:26:07.414145100 +0300
@@ -91,7 +91,7 @@
 #ifdef WITH_HIP
 static hipError_t device_hip_safe_init()
 {
-#  ifdef _WIN32
+#  ifdef _MSC_VER
   __try
   {
     return hipInit(0);
diff -Naur blender-4.0.2-orig/intern/cycles/util/defines.h blender-4.0.2/intern/cycles/util/defines.h
--- blender-4.0.2-orig/intern/cycles/util/defines.h	2023-09-27 18:54:37.000000000 +0300
+++ blender-4.0.2/intern/cycles/util/defines.h	2024-01-11 14:26:07.417653700 +0300
@@ -49,7 +49,7 @@
 #    define ccl_device_forceinline static inline __attribute__((always_inline))
 #    define ccl_device_inline_method __attribute__((always_inline))
 #    define ccl_align(...) __attribute__((aligned(__VA_ARGS__)))
-#    ifndef FREE_WINDOWS64
+#    ifndef __MINGW32__
 #      define __forceinline inline __attribute__((always_inline))
 #    endif
 #    define ccl_try_align(...) __attribute__((aligned(__VA_ARGS__)))
diff -Naur blender-4.0.2-orig/intern/cycles/util/log.h blender-4.0.2/intern/cycles/util/log.h
--- blender-4.0.2-orig/intern/cycles/util/log.h	2023-09-27 18:54:37.000000000 +0300
+++ blender-4.0.2/intern/cycles/util/log.h	2024-01-11 14:26:07.420654100 +0300
@@ -7,7 +7,9 @@
 
 #if defined(WITH_CYCLES_LOGGING) && !defined(__KERNEL_GPU__)
 #  include <gflags/gflags.h>
+#  define GLOG_NO_ABBREVIATED_SEVERITIES
 #  include <glog/logging.h>
+#  undef GLOG_NO_ABBREVIATED_SEVERITIES
 #endif
 
 #include <iosfwd>
diff -Naur blender-4.0.2-orig/intern/cycles/util/murmurhash.cpp blender-4.0.2/intern/cycles/util/murmurhash.cpp
--- blender-4.0.2-orig/intern/cycles/util/murmurhash.cpp	2023-09-27 18:54:37.000000000 +0300
+++ blender-4.0.2/intern/cycles/util/murmurhash.cpp	2024-01-11 14:26:07.423654700 +0300
@@ -14,7 +14,7 @@
 #include "util/math.h"
 #include "util/murmurhash.h"
 
-#if defined(_MSC_VER)
+#if defined(_WIN32)
 #  define ROTL32(x, y) _rotl(x, y)
 #  define ROTL64(x, y) _rotl64(x, y)
 #  define BIG_CONSTANT(x) (x)
diff -Naur blender-4.0.2-orig/intern/cycles/util/simd.h blender-4.0.2/intern/cycles/util/simd.h
--- blender-4.0.2-orig/intern/cycles/util/simd.h	2023-09-27 18:54:37.000000000 +0300
+++ blender-4.0.2/intern/cycles/util/simd.h	2024-01-11 14:26:07.426654600 +0300
@@ -14,12 +14,8 @@
 /* SSE Intrinsics includes
  *
  * We assume __KERNEL_SSEX__ flags to have been defined at this point.
- *
- * MinGW64 has conflicting declarations for these SSE headers in <windows.h>.
- * Since we can't avoid including <windows.h>, better only include that */
-#if defined(FREE_WINDOWS64)
-#  include "util/windows.h"
-#elif defined(_MSC_VER)
+ */
+#if defined(_WIN32)
 #  include <intrin.h>
 #elif (defined(__x86_64__) || defined(__i386__))
 #  include <x86intrin.h>
diff -Naur blender-4.0.2-orig/intern/dualcon/intern/Projections.h blender-4.0.2/intern/dualcon/intern/Projections.h
--- blender-4.0.2-orig/intern/dualcon/intern/Projections.h	2023-09-27 18:54:37.000000000 +0300
+++ blender-4.0.2/intern/dualcon/intern/Projections.h	2024-01-11 14:26:07.429689200 +0300
@@ -11,7 +11,7 @@
 #define CONTAINS_INDEX
 #define GRID_DIMENSION 20
 
-#if defined(_WIN32) && !(_MSC_VER >= 1900)
+#if defined(_MSC_VER) && !(_MSC_VER >= 1900)
 #  define isnan(n) _isnan(n)
 #  define LONG __int64
 #  define int64_t __int64
diff -Naur blender-4.0.2-orig/intern/ghost/intern/GHOST_ContextWGL.hh blender-4.0.2/intern/ghost/intern/GHOST_ContextWGL.hh
--- blender-4.0.2-orig/intern/ghost/intern/GHOST_ContextWGL.hh	2023-09-27 18:54:37.000000000 +0300
+++ blender-4.0.2/intern/ghost/intern/GHOST_ContextWGL.hh	2024-01-11 14:26:07.432655100 +0300
@@ -12,6 +12,7 @@
 
 #include "GHOST_Context.hh"
 
+#undef INT
 #include <epoxy/wgl.h>
 
 #ifndef GHOST_OPENGL_WGL_RESET_NOTIFICATION_STRATEGY
diff -Naur blender-4.0.2-orig/intern/libmv/libmv/numeric/numeric.h blender-4.0.2/intern/libmv/libmv/numeric/numeric.h
--- blender-4.0.2-orig/intern/libmv/libmv/numeric/numeric.h	2023-09-27 18:54:37.000000000 +0300
+++ blender-4.0.2/intern/libmv/libmv/numeric/numeric.h	2024-01-11 14:26:07.436655600 +0300
@@ -33,7 +33,7 @@
 #include <Eigen/QR>
 #include <Eigen/SVD>
 
-#if !defined(__MINGW64__)
+#if !defined(__MINGW32__)
 #  if defined(_WIN32) || defined(__APPLE__) || defined(__NetBSD__) ||          \
       defined(__HAIKU__)
 inline void sincos(double x, double* sinx, double* cosx) {
@@ -41,7 +41,7 @@
   *cosx = cos(x);
 }
 #  endif
-#endif  // !__MINGW64__
+#endif  // !__MINGW32__
 
 #if (defined(_WIN32) || defined(_WIN64)) && !defined(__MINGW32__)
 inline long lround(double d) {
@@ -451,7 +451,7 @@
 }
 
 inline bool isnan(double i) {
-#ifdef WIN32
+#ifdef _MSC_VER
   return _isnan(i) > 0;
 #else
   return std::isnan(i);
diff -Naur blender-4.0.2-orig/source/blender/blenlib/BLI_fileops.h blender-4.0.2/source/blender/blenlib/BLI_fileops.h
--- blender-4.0.2-orig/source/blender/blenlib/BLI_fileops.h	2023-10-10 17:48:17.000000000 +0300
+++ blender-4.0.2/source/blender/blenlib/BLI_fileops.h	2024-01-11 14:26:07.442684300 +0300
@@ -93,7 +93,7 @@
 
 /* Keep in sync with the definition of struct `direntry` in `BLI_fileops_types.h`. */
 #ifdef WIN32
-#  if defined(_MSC_VER)
+#  if defined(_MSC_VER) || defined(__MINGW32__)
 typedef struct _stat64 BLI_stat_t;
 #  else
 typedef struct _stat BLI_stat_t;
diff -Naur blender-4.0.2-orig/source/blender/blenlib/BLI_fileops_types.h blender-4.0.2/source/blender/blenlib/BLI_fileops_types.h
--- blender-4.0.2-orig/source/blender/blenlib/BLI_fileops_types.h	2023-09-27 18:54:38.000000000 +0300
+++ blender-4.0.2/source/blender/blenlib/BLI_fileops_types.h	2024-01-11 14:26:07.445685100 +0300
@@ -15,7 +15,7 @@
 extern "C" {
 #endif
 
-#if defined(WIN32)
+#if defined(_MSC_VER)
 typedef unsigned int mode_t;
 #endif
 
@@ -30,7 +30,7 @@
   const char *relname;
   const char *path;
 #ifdef WIN32 /* keep in sync with the definition of BLI_stat_t in BLI_fileops.h */
-#  if defined(_MSC_VER)
+#  if defined(_MSC_VER) || defined(__MINGW32__)
   struct _stat64 s;
 #  else
   struct _stat s;
diff -Naur blender-4.0.2-orig/source/blender/blenlib/BLI_winstuff.h blender-4.0.2/source/blender/blenlib/BLI_winstuff.h
--- blender-4.0.2-orig/source/blender/blenlib/BLI_winstuff.h	2023-11-01 06:26:17.000000000 +0300
+++ blender-4.0.2/source/blender/blenlib/BLI_winstuff.h	2024-01-11 14:29:10.971184400 +0300
@@ -61,9 +61,9 @@
 /* Not accepted by `access()` on windows. */
 //#  define X_OK    1
 #  define F_OK 0
-#endif
 
 typedef unsigned int mode_t;
+#endif
 
 /** Directory reading compatibility with UNIX. */
 struct dirent {
diff -Naur blender-4.0.2-orig/source/blender/blenlib/intern/BLI_mmap.c blender-4.0.2/source/blender/blenlib/intern/BLI_mmap.c
--- blender-4.0.2-orig/source/blender/blenlib/intern/BLI_mmap.c	2023-10-31 03:42:12.000000000 +0300
+++ blender-4.0.2/source/blender/blenlib/intern/BLI_mmap.c	2024-01-11 14:26:07.453684400 +0300
@@ -187,7 +187,7 @@
     return false;
   }
 
-#ifndef WIN32
+#ifndef _MSC_VER
   /* If an error occurs in this call, sigbus_handler will be called and will set
    * file->io_error to true. */
   memcpy(dest, file->memory + offset, length);
diff -Naur blender-4.0.2-orig/source/blender/blenlib/intern/path_util.c blender-4.0.2/source/blender/blenlib/intern/path_util.c
--- blender-4.0.2-orig/source/blender/blenlib/intern/path_util.c	2023-10-31 03:42:12.000000000 +0300
+++ blender-4.0.2/source/blender/blenlib/intern/path_util.c	2024-01-11 14:26:07.456684500 +0300
@@ -1344,7 +1344,18 @@
 
 void BLI_setenv(const char *env, const char *val)
 {
-#if (defined(_WIN32) || defined(_WIN64))
+#if defined(__MINGW32__)
+  char *envstr;
+
+  if (val)
+    envstr = BLI_sprintfN("%s=%s", env, val);
+  else
+    envstr = BLI_sprintfN("%s=", env);
+
+  putenv(envstr);
+  MEM_freeN(envstr);
+
+#elif defined(_MSC_VER) /* not free windows */
   /* MS-Windows. */
   uputenv(env, val);
 #else
diff -Naur blender-4.0.2-orig/source/blender/blenlib/intern/storage.c blender-4.0.2/source/blender/blenlib/intern/storage.c
--- blender-4.0.2-orig/source/blender/blenlib/intern/storage.c	2023-10-31 03:42:12.000000000 +0300
+++ blender-4.0.2/source/blender/blenlib/intern/storage.c	2024-01-11 14:26:07.459684500 +0300
@@ -412,7 +412,7 @@
 
 int BLI_wstat(const wchar_t *path, BLI_stat_t *buffer)
 {
-#  if defined(_MSC_VER)
+#  if defined(_MSC_VER) || defined(__MINGW32__)
   return _wstat64(path, buffer);
 #  else
   return _wstat(path, buffer);
diff -Naur blender-4.0.2-orig/source/blender/blenlib/intern/system.c blender-4.0.2/source/blender/blenlib/intern/system.c
--- blender-4.0.2-orig/source/blender/blenlib/intern/system.c	2023-09-27 18:54:38.000000000 +0300
+++ blender-4.0.2/source/blender/blenlib/intern/system.c	2024-01-11 14:26:07.462685500 +0300
@@ -62,7 +62,7 @@
 }
 
 /* Windows stack-walk lives in system_win32.c */
-#if !defined(_MSC_VER)
+#if !defined(_WIN32)
 void BLI_system_backtrace(FILE *fp)
 {
   /* ----------------------- */
@@ -104,7 +104,7 @@
 
 /* NOTE: The code for CPU brand string is adopted from Cycles. */
 
-#if !defined(_WIN32) || defined(FREE_WINDOWS)
+#if !defined(_WIN32)
 static void __cpuid(
     /* Cannot be const, because it is modified below.
      * NOLINTNEXTLINE: readability-non-const-parameter. */
diff -Naur blender-4.0.2-orig/source/blender/imbuf/intern/IMB_anim.h blender-4.0.2/source/blender/imbuf/intern/IMB_anim.h
--- blender-4.0.2-orig/source/blender/imbuf/intern/IMB_anim.h	2023-09-27 18:54:39.000000000 +0300
+++ blender-4.0.2/source/blender/imbuf/intern/IMB_anim.h	2024-01-11 14:26:07.466672500 +0300
@@ -13,7 +13,10 @@
 #  include <commdlg.h>
 #  include <memory.h>
 #  include <mmsystem.h>
-#  include <vfw.h>
+
+#  ifndef __MINGW32__
+#    include <vfw.h>
+#  endif
 #  include <windows.h>
 #  include <windowsx.h>
 
@@ -98,7 +101,7 @@
   /* avi */
   struct _AviMovie *avi;
 
-#if defined(_WIN32)
+#if defined(_WIN32) && !defined(__MINGW32__)
   /* windows avi */
   int avistreams;
   int firstvideo;
diff -Naur blender-4.0.2-orig/source/blender/imbuf/intern/anim_movie.cc blender-4.0.2/source/blender/imbuf/intern/anim_movie.cc
--- blender-4.0.2-orig/source/blender/imbuf/intern/anim_movie.cc	2023-10-13 10:08:14.000000000 +0300
+++ blender-4.0.2/source/blender/imbuf/intern/anim_movie.cc	2024-01-11 14:26:07.469687000 +0300
@@ -8,7 +8,10 @@
 
 #ifdef _WIN32
 #  include "BLI_winstuff.h"
+
+#ifndef __MINGW32__
 #  include <vfw.h>
+#endif
 
 #  undef AVIIF_KEYFRAME /* redefined in AVI_avi.h */
 #  undef AVIIF_LIST     /* redefined in AVI_avi.h */
@@ -98,7 +101,7 @@
 #ifdef WITH_AVI
 static void free_anim_avi(anim *anim)
 {
-#  if defined(_WIN32)
+#  if defined(_WIN32) && !defined(__MINGW32__)
   int i;
 #  endif
 
@@ -113,7 +116,7 @@
   MEM_freeN(anim->avi);
   anim->avi = nullptr;
 
-#  if defined(_WIN32)
+#  if defined(_WIN32) && !defined(__MINGW32__)
 
   if (anim->pgf) {
     AVIStreamGetFrameClose(anim->pgf);
@@ -271,7 +274,7 @@
 {
 
   AviError avierror;
-#  if defined(_WIN32)
+#  if defined(_WIN32) && !defined(__MINGW32__)
   HRESULT hr;
   int i, firstvideo = -1;
   int streamcount;
@@ -292,7 +295,7 @@
 
   avierror = AVI_open_movie(anim->filepath, anim->avi);
 
-#  if defined(_WIN32)
+#  if defined(_WIN32) && !defined(__MINGW32__)
   if (avierror == AVI_ERROR_COMPRESSION) {
     AVIFileInit();
     hr = AVIFileOpen(&anim->pfile, anim->filepath, OF_READ, 0L);
@@ -396,7 +399,7 @@
     return nullptr;
   }
 
-#  if defined(_WIN32)
+#  if defined(_WIN32) && !defined(__MINGW32__)
   if (anim->avistreams) {
     LPBITMAPINFOHEADER lpbi;
 
