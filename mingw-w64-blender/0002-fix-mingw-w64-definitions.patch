diff -Naur blender-2.77a-orig/extern/glog/src/windows/port.h blender-2.77a/extern/glog/src/windows/port.h
--- blender-2.77a-orig/extern/glog/src/windows/port.h	2016-03-23 11:49:49.000000000 +0300
+++ blender-2.77a/extern/glog/src/windows/port.h	2016-07-12 13:40:19.613595000 +0300
@@ -74,17 +74,19 @@
 #pragma warning(disable:4244 4251 4355 4715 4800 4996)
 
 /* file I/O */
-#define PATH_MAX 1024
 #define access  _access
 #define getcwd  _getcwd
 #define open    _open
 #define read    _read
 #define write   _write
-#define lseek   _lseek
 #define close   _close
 #define popen   _popen
 #define pclose  _pclose
+#ifndef __MINGW64_VERSION_MAJOR
+#define lseek   _lseek
+#define PATH_MAX 1024
 #define R_OK    04           /* read-only (for access()) */
+#endif
 #define S_ISDIR(m)  (((m) & _S_IFMT) == _S_IFDIR)
 #ifndef __MINGW32__
 enum { STDIN_FILENO = 0, STDOUT_FILENO = 1, STDERR_FILENO = 2 };
@@ -130,12 +132,15 @@
 #define DEFAULT_TEMPLATE_ROOTDIR  ".."
 
 // ----------------------------------- SYSTEM/PROCESS
+#ifndef __MINGW64_VERSION_MAJOR
 typedef int pid_t;
+#endif
 #define getpid  _getpid
 
 #endif  // _MSC_VER
 
 // ----------------------------------- THREADS
+#if !defined(WIN_PTHREADS_H)
 typedef DWORD pthread_t;
 typedef DWORD pthread_key_t;
 typedef LONG pthread_once_t;
@@ -147,6 +152,7 @@
   localtime_s(result, timep);
   return result;
 }
+#endif
 
 inline char* strerror_r(int errnum, char* buf, size_t buflen) {
 #ifdef FREE_WINDOWS
diff -Naur blender-2.77a-orig/intern/cycles/util/util_logging.h blender-2.77a/intern/cycles/util/util_logging.h
--- blender-2.77a-orig/intern/cycles/util/util_logging.h	2016-03-23 11:49:49.000000000 +0300
+++ blender-2.77a/intern/cycles/util/util_logging.h	2016-07-12 13:40:19.646095000 +0300
@@ -18,7 +18,9 @@
 #define __UTIL_LOGGING_H__
 
 #if defined(WITH_CYCLES_LOGGING) && !defined(__KERNEL_GPU__)
+#  define GLOG_NO_ABBREVIATED_SEVERITIES
 #  include <glog/logging.h>
+#  undef GLOG_NO_ABBREVIATED_SEVERITIES
 #else
 #  include <iostream>
 #endif
diff -Naur blender-2.77a-orig/intern/cycles/util/util_optimization.h blender-2.77a/intern/cycles/util/util_optimization.h
--- blender-2.77a-orig/intern/cycles/util/util_optimization.h	2016-03-23 11:49:49.000000000 +0300
+++ blender-2.77a/intern/cycles/util/util_optimization.h	2016-07-12 13:40:19.681095000 +0300
@@ -99,7 +99,6 @@
  * We assume __KERNEL_SSEX__ flags to have been defined at this point */
 
 /* SSE intrinsics headers */
-#ifndef FREE_WINDOWS64
 
 #ifdef _MSC_VER
 #include <intrin.h>
@@ -107,14 +106,6 @@
 #include <x86intrin.h>
 #endif
 
-#else
-
-/* MinGW64 has conflicting declarations for these SSE headers in <windows.h>.
- * Since we can't avoid including <windows.h>, better only include that */
-#include "util_windows.h"
-
-#endif
-
 #endif
 
 #endif /* __UTIL_OPTIMIZATION_H__ */
diff -Naur blender-2.77a-orig/intern/cycles/util/util_types.h blender-2.77a/intern/cycles/util/util_types.h
--- blender-2.77a-orig/intern/cycles/util/util_types.h	2016-03-23 11:49:49.000000000 +0300
+++ blender-2.77a/intern/cycles/util/util_types.h	2016-07-12 13:40:19.712595000 +0300
@@ -56,7 +56,7 @@
 
 #define ccl_device_inline static inline __attribute__((always_inline))
 #define ccl_align(...) __attribute__((aligned(__VA_ARGS__)))
-#ifndef FREE_WINDOWS64
+#ifndef __MINGW64_VERSION_MAJOR
 #define __forceinline inline __attribute__((always_inline))
 #endif
 #define ccl_try_align(...) __attribute__((aligned(__VA_ARGS__)))
diff -Naur blender-2.77a-orig/intern/ghost/intern/GHOST_SystemWin32.cpp blender-2.77a/intern/ghost/intern/GHOST_SystemWin32.cpp
--- blender-2.77a-orig/intern/ghost/intern/GHOST_SystemWin32.cpp	2016-03-21 19:16:12.000000000 +0300
+++ blender-2.77a/intern/ghost/intern/GHOST_SystemWin32.cpp	2016-07-12 13:40:19.740595000 +0300
@@ -839,7 +839,7 @@
 	// send motion. Mark as 'sent' so motion will always get dispatched.
 	eventSent = true;
 
-#if defined(_MSC_VER) || defined(FREE_WINDOWS64)
+#if defined(_MSC_VER) || defined(FREE_WINDOWS64) || defined(__MINGW64_VERSION_MAJOR)
 	// using Microsoft compiler & header files
 	// they invented the RawInput API, so this version is (probably) correct.
 	// MinGW64 also works fine with this
diff -Naur blender-2.77a-orig/intern/ghost/intern/GHOST_SystemWin32.h blender-2.77a/intern/ghost/intern/GHOST_SystemWin32.h
--- blender-2.77a-orig/intern/ghost/intern/GHOST_SystemWin32.h	2016-04-05 00:58:19.000000000 +0300
+++ blender-2.77a/intern/ghost/intern/GHOST_SystemWin32.h	2016-07-12 13:40:19.757095000 +0300
@@ -37,7 +37,7 @@
 #error WIN32 only!
 #endif // WIN32
 
-#ifndef __MINGW64__
+#ifndef __MINGW64_VERSION_MAJOR
 #  undef _WIN32_WINNT
 #  define _WIN32_WINNT 0x501 // require Windows XP or newer
 #endif
diff -Naur blender-2.77a-orig/intern/ghost/intern/GHOST_TaskbarWin32.h blender-2.77a/intern/ghost/intern/GHOST_TaskbarWin32.h
--- blender-2.77a-orig/intern/ghost/intern/GHOST_TaskbarWin32.h	2016-04-05 00:58:19.000000000 +0300
+++ blender-2.77a/intern/ghost/intern/GHOST_TaskbarWin32.h	2016-07-12 13:40:19.763595000 +0300
@@ -8,7 +8,7 @@
 #error WIN32 only!
 #endif // WIN32
 
-#ifndef __MINGW64__
+#ifndef __MINGW64_VERSION_MAJOR
 #  undef _WIN32_WINNT
 #  define _WIN32_WINNT 0x501 // require Windows XP or newer
 #endif
diff -Naur blender-2.77a-orig/intern/ghost/intern/GHOST_WindowWin32.cpp blender-2.77a/intern/ghost/intern/GHOST_WindowWin32.cpp
--- blender-2.77a-orig/intern/ghost/intern/GHOST_WindowWin32.cpp	2016-03-23 11:49:43.000000000 +0300
+++ blender-2.77a/intern/ghost/intern/GHOST_WindowWin32.cpp	2016-07-12 13:40:19.800595000 +0300
@@ -31,6 +31,12 @@
 
 #define _USE_MATH_DEFINES
 
+#if defined(WITH_GL_EGL)
+#  include "GHOST_ContextEGL.h"
+#else
+#  include "GHOST_ContextWGL.h"
+#endif
+
 #include "GHOST_WindowWin32.h"
 #include "GHOST_SystemWin32.h"
 #include "GHOST_DropTargetWin32.h"
@@ -38,12 +44,6 @@
 #include "utfconv.h"
 #include "utf_winfunc.h"
 
-#if defined(WITH_GL_EGL)
-#  include "GHOST_ContextEGL.h"
-#else
-#  include "GHOST_ContextWGL.h"
-#endif
-
 
 #include <math.h>
 #include <string.h>
diff -Naur blender-2.77a-orig/intern/libmv/libmv/numeric/numeric.h blender-2.77a/intern/libmv/libmv/numeric/numeric.h
--- blender-2.77a-orig/intern/libmv/libmv/numeric/numeric.h	2016-03-23 11:49:49.000000000 +0300
+++ blender-2.77a/intern/libmv/libmv/numeric/numeric.h	2016-07-12 13:40:19.817095000 +0300
@@ -33,7 +33,7 @@
 #include <Eigen/QR>
 #include <Eigen/SVD>
 
-#if !defined(__MINGW64__)
+#if !defined(__MINGW64_VERSION_MAJOR)
 #  if defined(_WIN32) || defined(__APPLE__) || \
       defined(__FreeBSD__) || defined(__NetBSD__)
 static void sincos(double x, double *sinx, double *cosx) {
@@ -41,7 +41,7 @@
   *cosx = cos(x);
 }
 #  endif
-#endif  // !__MINGW64__
+#endif  // !__MINGW64_VERSION_MAJOR
 
 #if (defined(WIN32) || defined(WIN64)) && !defined(__MINGW32__)
 inline long lround(double d) {
diff -Naur blender-2.77a-orig/source/blender/blenlib/BLI_winstuff.h blender-2.77a/source/blender/blenlib/BLI_winstuff.h
--- blender-2.77a-orig/source/blender/blenlib/BLI_winstuff.h	2016-03-23 11:49:43.000000000 +0300
+++ blender-2.77a/source/blender/blenlib/BLI_winstuff.h	2016-07-12 13:40:19.827095000 +0300
@@ -90,9 +90,11 @@
 #endif
 
 /* defines for using ISO C++ conformant names */
+#ifndef __MINGW32__
 #if !defined(_MSC_VER) || _MSC_VER < 1900
 #  define snprintf _snprintf
 #endif
+#endif
 
 #if defined(_MSC_VER) || (defined(FREE_WINDOWS) && !defined(FREE_WINDOWS64))
 #  define	R_OK	4
@@ -115,9 +117,9 @@
 #  define tell(fd) _telli64(fd)
 #endif
 
-/* mingw using _SSIZE_T_ to declare ssize_t type */
-#ifndef _SSIZE_T_
-#  define _SSIZE_T_
+/* mingw using _SSIZE_T_DEFINED to declare ssize_t type */
+#ifndef _SSIZE_T_DEFINED
+#  define _SSIZE_T_DEFINED
 /* python uses HAVE_SSIZE_T */
 #  ifndef HAVE_SSIZE_T
 #    define HAVE_SSIZE_T 1
