--- a/extern/ceres/include/ceres/jet.h
+++ b/extern/ceres/include/ceres/jet.h
@@ -590,6 +590,7 @@
   return Jet<T, N>(erfc(x.a), -x.v * M_2_SQRTPI * exp(-x.a * x.a));
 }
 
+#ifndef __MINGW32__
 // Bessel functions of the first kind with integer order equal to 0, 1, n.
 //
 // Microsoft has deprecated the j[0,1,n]() POSIX Bessel functions in favour of
@@ -647,6 +648,7 @@
       BesselJn(n, f.a),
       T(0.5) * (BesselJn(n - 1, f.a) - BesselJn(n + 1, f.a)) * f.v);
 }
+#endif
 
 // Jet Classification. It is not clear what the appropriate semantics are for
 // these classifications. This picks that std::isfinite and std::isnormal are
--- a/extern/glog/src/windows/config.h
+++ b/extern/glog/src/windows/config.h
@@ -15,6 +15,10 @@
 #if defined(__MINGW32__) || (defined(_MSC_VER) && (_MSC_VER >= 1900))
 #  define HAVE_SNPRINTF
 #endif
+
+#if defined(__MINGW32__)
+#  define HAVE_PTHREAD
+#endif
 
 /* Always the empty-string on non-windows systems. On windows, should be
    "__declspec(dllexport)". This way, when we compile the dll, we export our
--- a/extern/glog/src/windows/port.h
+++ b/extern/glog/src/windows/port.h
@@ -62,7 +62,7 @@
  * used by both C and C++ code, so we put all the C++ together.
  */
 
-#ifdef _MSC_VER
+#ifdef _WIN32
 
 /* 4244: otherwise we get problems when substracting two size_t's to an int
  * 4251: it's complaining about a private struct I've chosen not to dllexport
@@ -77,17 +77,19 @@
 #pragma warning(disable:4244 4251 4355 4715 4800 4996 4267 4312 4722)
 
 /* file I/O */
-#define PATH_MAX 1024
 #define access  _access
 #define getcwd  _getcwd
 #define open    _open
 #define read    _read
 #define write   _write
-#define lseek   _lseek
 #define close   _close
 #define popen   _popen
 #define pclose  _pclose
+#ifndef __MINGW32__
+#define lseek   _lseek
+#define PATH_MAX 1024
 #define R_OK    04           /* read-only (for access()) */
+#endif
 #define S_ISDIR(m)  (((m) & _S_IFMT) == _S_IFDIR)
 
 #define O_WRONLY _O_WRONLY
@@ -138,7 +138,9 @@
 #define DEFAULT_TEMPLATE_ROOTDIR  ".."
 
 // ----------------------------------- SYSTEM/PROCESS
+#ifndef __MINGW32__
 typedef int pid_t;
+#endif
 #define getpid  _getpid
 
 #endif  // _MSC_VER
--- a/extern/mantaflow/helper/util/vectorbase.h
+++ b/extern/mantaflow/helper/util/vectorbase.h
@@ -32,7 +32,7 @@
 #endif
 
 // redefine usage of some windows functions
-#if defined(WIN32) || defined(_WIN32)
+#if defined(_MSC_VER)
 #  ifndef snprintf
 #    define snprintf _snprintf
 #  endif
--- a/extern/quadriflow/src/dedge.cpp
+++ b/extern/quadriflow/src/dedge.cpp
@@ -10,6 +10,11 @@
 #ifdef WITH_TBB
 #include "tbb/tbb.h"
 #endif
+
+#ifdef _WIN32
+#include <intrin.h>
+#endif
+
 namespace qflow {
 
 inline int dedge_prev(int e, int deg) { return (e % deg == 0u) ? e + (deg - 1) : e - 1; }
--- a/intern/clog/clog.c
+++ b/intern/clog/clog.c
@@ -24,8 +24,8 @@
 #  include <unistd.h>
 #endif
 
-#if defined(_MSC_VER)
-#  include <Windows.h>
+#if defined(_WIN32)
+#  include <windows.h>
 
 #  include <VersionHelpers.h> /* This needs to be included after Windows.h. */
 #  include <io.h>
@@ -384,7 +384,7 @@
 static uint64_t clg_timestamp_ticks_get(void)
 {
   uint64_t tick;
-#if defined(_MSC_VER)
+#if defined(_WIN32)
   tick = GetTickCount64();
 #else
   struct timeval tv;
--- a/intern/cycles/device/cuda/device.cpp
+++ b/intern/cycles/device/cuda/device.cpp
@@ -74,7 +74,7 @@
 #ifdef WITH_CUDA
 static CUresult device_cuda_safe_init()
 {
-#  ifdef _WIN32
+#  ifdef _MSC_VER
   __try {
     return cuInit(0);
   }
--- a/intern/cycles/device/hip/device.cpp
+++ b/intern/cycles/device/hip/device.cpp
@@ -80,7 +80,7 @@
 #ifdef WITH_HIP
 static hipError_t device_hip_safe_init()
 {
-#  ifdef _WIN32
+#  ifdef _MSC_VER
   __try {
     return hipInit(0);
   }
--- a/intern/cycles/util/defines.h
+++ b/intern/cycles/util/defines.h
@@ -47,7 +47,7 @@
 #    define ccl_device_forceinline static inline __attribute__((always_inline))
 #    define ccl_device_inline_method __attribute__((always_inline))
 #    define ccl_align(...) __attribute__((aligned(__VA_ARGS__)))
-#    ifndef FREE_WINDOWS64
+#    ifndef __MINGW32__
 #      define __forceinline inline __attribute__((always_inline))
 #    endif
 #    define ccl_try_align(...) __attribute__((aligned(__VA_ARGS__)))
--- a/intern/cycles/util/log.h
+++ b/intern/cycles/util/log.h
@@ -6,7 +6,9 @@
 
 #if defined(WITH_CYCLES_LOGGING) && !defined(__KERNEL_GPU__)
 #  include <gflags/gflags.h>
+#  define GLOG_NO_ABBREVIATED_SEVERITIES
 #  include <glog/logging.h>
+#  undef GLOG_NO_ABBREVIATED_SEVERITIES
 #endif
 
 #include <iostream>
--- a/intern/cycles/util/murmurhash.cpp
+++ b/intern/cycles/util/murmurhash.cpp
@@ -13,7 +13,7 @@
 #include "util/math.h"
 #include "util/murmurhash.h"
 
-#if defined(_MSC_VER)
+#if defined(_WIN32)
 #  define ROTL32(x, y) _rotl(x, y)
 #  define ROTL64(x, y) _rotl64(x, y)
 #  define BIG_CONSTANT(x) (x)
--- a/intern/cycles/util/simd.h
+++ b/intern/cycles/util/simd.h
@@ -13,12 +13,8 @@
 /* SSE Intrinsics includes
  *
  * We assume __KERNEL_SSEX__ flags to have been defined at this point.
- *
- * MinGW64 has conflicting declarations for these SSE headers in <windows.h>.
- * Since we can't avoid including <windows.h>, better only include that */
-#if defined(FREE_WINDOWS64)
-#  include "util/windows.h"
-#elif defined(_MSC_VER)
+ */
+#if defined(_WIN32)
 #  include <intrin.h>
 #elif (defined(__x86_64__) || defined(__i386__))
 #  include <x86intrin.h>
--- a/intern/dualcon/intern/Projections.h
+++ b/intern/dualcon/intern/Projections.h
@@ -9,7 +9,7 @@
 #define CONTAINS_INDEX
 #define GRID_DIMENSION 20
 
-#if defined(_WIN32) && !(_MSC_VER >= 1900)
+#if defined(_MSC_VER) && !(_MSC_VER >= 1900)
 #  define isnan(n) _isnan(n)
 #  define LONG __int64
 #  define int64_t __int64
--- a/intern/ghost/intern/GHOST_ContextWGL.h
+++ b/intern/ghost/intern/GHOST_ContextWGL.h
@@ -11,6 +11,7 @@
 
 #include "GHOST_Context.h"
 
+#undef INT
 #include <epoxy/wgl.h>
 
 #ifndef GHOST_OPENGL_WGL_RESET_NOTIFICATION_STRATEGY
--- a/intern/libmv/libmv/numeric/numeric.h
+++ b/intern/libmv/libmv/numeric/numeric.h
@@ -33,7 +33,7 @@
 #include <Eigen/QR>
 #include <Eigen/SVD>
 
-#if !defined(__MINGW64__)
+#if !defined(__MINGW32__)
 #  if defined(_WIN32) || defined(__APPLE__) || defined(__FreeBSD__) ||         \
       defined(__NetBSD__) || defined(__HAIKU__)
 inline void sincos(double x, double* sinx, double* cosx) {
@@ -41,7 +41,7 @@
   *cosx = cos(x);
 }
 #  endif
-#endif  // !__MINGW64__
+#endif  // !__MINGW32__
 
 #if (defined(_WIN32) || defined(_WIN64)) && !defined(__MINGW32__)
 inline long lround(double d) {
@@ -449,7 +449,7 @@
 }
 
 inline bool isnan(double i) {
-#ifdef WIN32
+#ifdef _MSC_VER
   return _isnan(i) > 0;
 #else
   return std::isnan(i);
--- a/source/blender/blenlib/BLI_fileops.h
+++ b/source/blender/blenlib/BLI_fileops.h
@@ -64,7 +64,7 @@ int    BLI_create_symlink(const char *path, const char *to) ATTR_NONNULL();
 
 /* Keep in sync with the definition of struct `direntry` in `BLI_fileops_types.h`. */
 #ifdef WIN32
-#  if defined(_MSC_VER)
+#  if defined(_MSC_VER) || defined(__MINGW32__)
 typedef struct _stat64 BLI_stat_t;
 #  else
 typedef struct _stat BLI_stat_t;
--- a/source/blender/blenlib/BLI_fileops_types.h
+++ b/source/blender/blenlib/BLI_fileops_types.h
@@ -14,7 +14,7 @@
 extern "C" {
 #endif
 
-#if defined(WIN32)
+#if defined(_MSC_VER)
 typedef unsigned int mode_t;
 #endif
 
@@ -29,7 +29,7 @@ struct direntry {
   const char *relname;
   const char *path;
 #ifdef WIN32 /* keep in sync with the definition of BLI_stat_t in BLI_fileops.h */
-#  if defined(_MSC_VER)
+#  if defined(_MSC_VER) || defined(__MINGW32__)
   struct _stat64 s;
 #  else
   struct _stat s;
--- a/source/blender/blenlib/BLI_winstuff.h
+++ b/source/blender/blenlib/BLI_winstuff.h
@@ -56,10 +56,13 @@
 #  define F_OK 0
 #endif
 
+#if defined(_MSC_VER)
 typedef unsigned int mode_t;
+#endif
 
-#ifndef _SSIZE_T_
-#  define _SSIZE_T_
+/* mingw using _SSIZE_T_DEFINED to declare ssize_t type */
+#ifndef _SSIZE_T_DEFINED
+#  define _SSIZE_T_DEFINED
 /* python uses HAVE_SSIZE_T */
 #  ifndef HAVE_SSIZE_T
 #    define HAVE_SSIZE_T 1
--- a/source/blender/blenlib/intern/BLI_mmap.c
+++ b/source/blender/blenlib/intern/BLI_mmap.c
@@ -183,7 +183,7 @@
     return false;
   }
 
-#ifndef WIN32
+#ifndef _MSC_VER
   /* If an error occurs in this call, sigbus_handler will be called and will set
    * file->io_error to true. */
   memcpy(dest, file->memory + offset, length);
--- a/source/blender/blenlib/intern/path_util.c
+++ b/source/blender/blenlib/intern/path_util.c
@@ -1186,7 +1186,18 @@ bool BLI_path_program_search(
 {
   /* free windows */
 
-#if (defined(_WIN32) || defined(_WIN64))
+#if defined(__MINGW32__)
+  char *envstr;
+
+  if (val)
+    envstr = BLI_sprintfN("%s=%s", env, val);
+  else
+    envstr = BLI_sprintfN("%s=", env);
+
+  putenv(envstr);
+  MEM_freeN(envstr);
+
+#elif defined(_MSC_VER) /* not free windows */
   uputenv(env, val);
 
 #else
--- a/source/blender/blenlib/intern/storage.c
+++ b/source/blender/blenlib/intern/storage.c
@@ -376,7 +376,7 @@ int BLI_stat(const char *path, BLI_stat_t *buffer)
 
 int BLI_wstat(const wchar_t *path, BLI_stat_t *buffer)
 {
-#  if defined(_MSC_VER)
+#  if defined(_MSC_VER) || defined(__MINGW32__)
   return _wstat64(path, buffer);
 #  else
   return _wstat(path, buffer);
@@ -569,17 +569,30 @@ void BLI_file_free_lines(LinkNode *lines)
 bool BLI_file_older(const char *file1, const char *file2)
 {
 #ifdef WIN32
-  struct _stat st1, st2;
+#  ifndef __MINGW32__
+    struct _stat st1, st2;
+#  else
+    struct _stati64 st1, st2;
+#  endif
 
   UTF16_ENCODE(file1);
   UTF16_ENCODE(file2);
 
+#ifndef __MINGW32__
   if (_wstat(file1_16, &st1)) {
     return false;
   }
   if (_wstat(file2_16, &st2)) {
     return false;
   }
+#else
+  if (_wstati64(file1_16, &st1)) {
+    return false;
+  }
+  if (_wstati64(file2_16, &st2)) {
+    return false;
+  }
+#endif
 
   UTF16_UN_ENCODE(file2);
   UTF16_UN_ENCODE(file1);
--- a/source/blender/blenlib/intern/system.c
+++ b/source/blender/blenlib/intern/system.c
@@ -60,7 +60,7 @@
 }
 
 /* Windows stack-walk lives in system_win32.c */
-#if !defined(_MSC_VER)
+#if !defined(_WIN32)
 void BLI_system_backtrace(FILE *fp)
 {
   /* ----------------------- */
@@ -95,7 +95,7 @@
 
 /* NOTE: The code for CPU brand string is adopted from Cycles. */
 
-#if !defined(_WIN32) || defined(FREE_WINDOWS)
+#if !defined(_WIN32)
 static void __cpuid(
     /* Cannot be const, because it is modified below.
      * NOLINTNEXTLINE: readability-non-const-parameter. */
--- a/source/blender/imbuf/intern/IMB_anim.h
+++ b/source/blender/imbuf/intern/IMB_anim.h
@@ -12,7 +12,10 @@
 #  include <commdlg.h>
 #  include <memory.h>
 #  include <mmsystem.h>
-#  include <vfw.h>
+
+#  ifndef __MINGW32__
+#    include <vfw.h>
+#  endif
 #  include <windows.h>
 #  include <windowsx.h>
 
@@ -95,7 +98,7 @@ struct anim {
   /* avi */
   struct _AviMovie *avi;
 
-#if defined(_WIN32)
+#if defined(_WIN32) && !defined(__MINGW32__)
   /* windows avi */
   int avistreams;
   int firstvideo;
--- a/source/blender/imbuf/intern/anim_movie.c
+++ b/source/blender/imbuf/intern/anim_movie.c
@@ -7,7 +7,10 @@
 
 #ifdef _WIN32
 #  include "BLI_winstuff.h"
+
+#ifndef __MINGW32__
 #  include <vfw.h>
+#endif
 
 #  undef AVIIF_KEYFRAME /* redefined in AVI_avi.h */
 #  undef AVIIF_LIST     /* redefined in AVI_avi.h */
@@ -147,7 +150,7 @@ static void an_stringenc(char *string, const char *head, const char *tail, unsig
 #ifdef WITH_AVI
 static void free_anim_avi(struct anim *anim)
 {
-#  if defined(_WIN32)
+#  if defined(_WIN32) && !defined(__MINGW32__)
   int i;
 #  endif
 
@@ -162,7 +165,7 @@ static void free_anim_avi(struct anim *anim)
   MEM_freeN(anim->avi);
   anim->avi = NULL;
 
-#  if defined(_WIN32)
+#  if defined(_WIN32) && !defined(__MINGW32__)
 
   if (anim->pgf) {
     AVIStreamGetFrameClose(anim->pgf);
@@ -320,7 +323,7 @@ static int startavi(struct anim *anim)
 {
 
   AviError avierror;
-#  if defined(_WIN32)
+#  if defined(_WIN32) && !defined(__MINGW32__)
   HRESULT hr;
   int i, firstvideo = -1;
   int streamcount;
@@ -341,7 +344,7 @@ static int startavi(struct anim *anim)
 
   avierror = AVI_open_movie(anim->name, anim->avi);
 
-#  if defined(_WIN32)
+#  if defined(_WIN32) && !defined(__MINGW32__)
   if (avierror == AVI_ERROR_COMPRESSION) {
     AVIFileInit();
     hr = AVIFileOpen(&anim->pfile, anim->name, OF_READ, 0L);
@@ -445,7 +448,7 @@ static ImBuf *avi_fetchibuf(struct anim *anim, int position)
     return NULL;
   }
 
-#  if defined(_WIN32)
+#  if defined(_WIN32) && !defined(__MINGW32__)
   if (anim->avistreams) {
     LPBITMAPINFOHEADER lpbi;
 
--- a/source/blender/makesrna/intern/makesrna.c
+++ b/source/blender/makesrna/intern/makesrna.c
@@ -25,7 +25,7 @@
 
 #include "rna_internal.h"
 
-#ifdef _WIN32
+#ifdef _MSC_VER
 #  ifndef snprintf
 #    define snprintf _snprintf
 #  endif
--- a/source/creator/creator.c
+++ b/source/creator/creator.c
@@ -7,6 +7,7 @@
 
 #include <stdlib.h>
 #include <string.h>
+#include <time.h>
 
 #ifdef WIN32
 #  include "utfconv.h"
