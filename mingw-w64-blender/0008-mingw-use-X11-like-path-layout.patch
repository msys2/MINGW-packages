diff -Naur blender-2.77a-orig/intern/ghost/intern/GHOST_SystemPathsWin32.cpp blender-2.77a/intern/ghost/intern/GHOST_SystemPathsWin32.cpp
--- blender-2.77a-orig/intern/ghost/intern/GHOST_SystemPathsWin32.cpp	2016-03-16 15:57:57.000000000 +0300
+++ blender-2.77a/intern/ghost/intern/GHOST_SystemPathsWin32.cpp	2016-07-12 13:40:38.182595000 +0300
@@ -69,6 +69,44 @@
 {
 }
 
+#if defined(__MINGW32__)
+
+const GHOST_TUns8 *GHOST_SystemPathsWin32::getSystemDir(int, const char *versionstr) const
+{
+	static char knownpath[MAX_PATH * 3 + 128] = {0};
+
+	char temppath[MAX_PATH + 1];
+	char temppath2[MAX_PATH + 1];
+	const GHOST_TUns8 *binary_dir = getBinaryDir();
+	strcpy(temppath2, reinterpret_cast<const char*>(binary_dir));
+	char* lastslash = strrchr(temppath2, '\\');
+	if (lastslash != NULL) {
+		*lastslash = '\0';
+	}
+	snprintf(temppath, sizeof(temppath), "%s\\..\\share\\blender\\%s", temppath2, versionstr);
+	temppath[MAX_PATH] = '\0';
+	GetFullPathNameA(temppath, sizeof(knownpath), knownpath, NULL);
+	return (GHOST_TUns8*)knownpath;
+}
+
+const GHOST_TUns8 *GHOST_SystemPathsWin32::getUserDir(int, const char *versionstr) const
+{
+	static char knownpath[MAX_PATH * 3 + 128] = {0};
+
+	char temppath[MAX_PATH + 1];
+	char temppath2[MAX_PATH + 1];
+	const GHOST_TUns8 *binary_dir = getBinaryDir();
+	strcpy(temppath2, reinterpret_cast<const char*>(binary_dir));
+	char* lastslash = strrchr(temppath2, '\\');
+	if (lastslash != NULL) {
+		*lastslash = '\0';
+	}
+	snprintf(temppath, sizeof(temppath), "%s\\..\\..\\home\\%s\\.blender\\%s", temppath2, getenv("USERNAME") ?: "unknown", versionstr);
+	temppath[MAX_PATH] = '\0';
+	GetFullPathNameA(temppath, sizeof(knownpath), knownpath, NULL);
+	return (GHOST_TUns8*)knownpath;
+}
+#else
 const GHOST_TUns8 *GHOST_SystemPathsWin32::getSystemDir(int, const char *versionstr) const
 {
 	static char knownpath[MAX_PATH * 3 + 128] = {0}; /* 1 utf-16 might translante into 3 utf-8. 2 utf-16 translates into 4 utf-8*/
@@ -105,6 +143,8 @@
 	return NULL;
 }
 
+#endif
+
 const GHOST_TUns8 *GHOST_SystemPathsWin32::getBinaryDir() const
 {
 	static char fullname[MAX_PATH * 3] = {0};
diff -Naur blender-2.77a-orig/source/blenderplayer/CMakeLists.txt blender-2.77a/source/blenderplayer/CMakeLists.txt
--- blender-2.77a-orig/source/blenderplayer/CMakeLists.txt	2016-03-23 11:49:50.000000000 +0300
+++ blender-2.77a/source/blenderplayer/CMakeLists.txt	2016-07-12 13:40:38.194595000 +0300
@@ -61,7 +61,7 @@
 
 	install(TARGETS blenderplayer
 			COMPONENT Blenderplayer
-			DESTINATION ".")
+			DESTINATION bin)
 
 elseif(APPLE)
 	add_executable(blenderplayer ${EXETYPE} bad_level_call_stubs/stubs.c)
diff -Naur blender-2.77a-orig/source/creator/CMakeLists.txt blender-2.77a/source/creator/CMakeLists.txt
--- blender-2.77a-orig/source/creator/CMakeLists.txt	2016-07-12 13:40:25.865095000 +0300
+++ blender-2.77a/source/creator/CMakeLists.txt	2016-07-12 13:40:38.188095000 +0300
@@ -270,7 +270,7 @@
 # -----------------------------------------------------------------------------
 # Platform Specific Var: TARGETDIR_VER
 
-if(UNIX AND NOT APPLE)
+if((UNIX AND NOT APPLE) OR MINGW)
 	if(WITH_PYTHON_MODULE)
 		if(WITH_INSTALL_PORTABLE)
 			set(TARGETDIR_VER ${BLENDER_VERSION})
@@ -408,13 +408,13 @@
 # -----------------------------------------------------------------------------
 # Install Targets (Platform Specific)
 
-if(UNIX AND NOT APPLE)
+if((UNIX AND NOT APPLE) OR MINGW)
 
 	if(NOT WITH_PYTHON_MODULE)
 		if(WITH_DOC_MANPAGE)
 			add_custom_target(
 				blender_man_page ALL
-				COMMAND ${CMAKE_SOURCE_DIR}/doc/manpage/blender.1.py
+				COMMAND python3 ${CMAKE_SOURCE_DIR}/doc/manpage/blender.1.py
 				        ${EXECUTABLE_OUTPUT_PATH}/blender
 				        ${CMAKE_CURRENT_BINARY_DIR}/blender.1)
 			add_dependencies(blender_man_page blender)
@@ -1092,7 +1092,7 @@
 if(WIN32 AND NOT WITH_PYTHON_MODULE)
 	install(TARGETS blender
 			COMPONENT Blender
-			DESTINATION ".")
+			DESTINATION bin)
 
 	if(MSVC12_REDIST_DIR)
 		if(CMAKE_CL_64)
