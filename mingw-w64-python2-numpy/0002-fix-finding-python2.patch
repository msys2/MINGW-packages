diff -urN numpy-1.13.0.orig/numpy/distutils/mingw32ccompiler.py numpy-1.13.0/numpy/distutils/mingw32ccompiler.py
--- numpy-1.13.0.orig/numpy/distutils/mingw32ccompiler.py	2015-11-12 20:04:51.000000000 +0000
+++ numpy-1.13.0/numpy/distutils/mingw32ccompiler.py	2016-01-02 03:35:27.818684200 +0000
@@ -97,22 +97,24 @@
         elif self.linker_dll == 'gcc':
             self.linker = 'g++'
 
-        # **changes: eric jones 4/11/01
-        # 1. Check for import library on Windows.  Build if it doesn't exist.
+        if not 'GCC' in sys.version:
 
-        build_import_library()
+            # **changes: eric jones 4/11/01
+            # 1. Check for import library on Windows.  Build if it doesn't exist.
 
-        # Check for custom msvc runtime library on Windows. Build if it doesn't exist.
-        msvcr_success = build_msvcr_library()
-        msvcr_dbg_success = build_msvcr_library(debug=True)
-        if msvcr_success or msvcr_dbg_success:
-            # add preprocessor statement for using customized msvcr lib
-            self.define_macro('NPY_MINGW_USE_CUSTOM_MSVCR')
-
-        # Define the MSVC version as hint for MinGW
-        msvcr_version = msvc_runtime_version()
-        if msvcr_version:
-            self.define_macro('__MSVCRT_VERSION__', '0x%04i' % msvcr_version)
+            build_import_library()
+
+            # Check for custom msvc runtime library on Windows. Build if it doesn't exist.
+            msvcr_success = build_msvcr_library()
+            msvcr_dbg_success = build_msvcr_library(debug=True)
+            if msvcr_success or msvcr_dbg_success:
+                # add preprocessor statement for using customized msvcr lib
+                self.define_macro('NPY_MINGW_USE_CUSTOM_MSVCR')
+
+            # Define the MSVC version as hint for MinGW
+            msvcr_version = msvc_runtime_version()
+            if msvcr_version:
+                self.define_macro('__MSVCRT_VERSION__', '0x%04i' % msvcr_version)
 
         # MS_WIN64 should be defined when building for amd64 on windows,
         # but python headers define it only for MS compilers, which has all
diff -urN numpy-1.10.2.orig/numpy/distutils/fcompiler/gnu.py numpy-1.10.2/numpy/distutils/fcompiler/gnu.py
--- numpy-1.10.2.orig/numpy/distutils/fcompiler/gnu.py	2015-11-12 20:04:51.000000000 +0000
+++ numpy-1.10.2/numpy/distutils/fcompiler/gnu.py	2016-01-02 03:36:30.528498700 +0000
@@ -108,7 +108,7 @@
         pic_flags = ['-fPIC']
 
     # use -mno-cygwin for g77 when Python is not Cygwin-Python
-    if sys.platform == 'win32':
+    if sys.platform == 'win32' and not 'GCC' in sys.version:
         for key in ['version_cmd', 'compiler_f77', 'linker_so', 'linker_exe']:
             executables[key].append('-mno-cygwin')
 
