--- a/find/ftsfind.c
+++ b/find/ftsfind.c
@@ -62,6 +62,26 @@
 
 #undef  STAT_MOUNTPOINTS
 
+#ifdef __MINGW32__
+/* Starting with MSVCRT.DLL v8.x (Vista and later versions) Microsoft
+   changed their implementation of command-line wildcard globbing,
+   such that even wildcards enclosed in quotes are globbed.  To make
+   Find work on all versions of Windows, we must disable command-line
+   globbing, otherwise Find errors out on commands such as
+
+     find . -name "*.c"
+
+   Contrary to the ezwinports variant, it seems like fts is then
+   taking care of the expansion.  */
+
+#include <dirent.h>
+#include <fnmatch.h>
+# ifdef _W64
+   int _dowildcard = 0;
+# else
+   int _CRT_glob = 0;
+# endif
+#endif
 
 /* FTS_TIGHT_CYCLE_CHECK tries to work around Savannah bug #17877
  * (but actually using it doesn't fix the bug).
--- a/locate/locate.c
+++ b/locate/locate.c
@@ -105,6 +107,26 @@
 #include "printquoted.h"
 #include "splitstring.h"
 
+#ifdef __MINGW32__
+/* Starting with MSVCRT.DLL v8.x (Vista and later versions) Microsoft
+   changed their implementation of command-line wildcard globbing,
+   such that even wildcards enclosed in quotes are globbed.  To make
+   Find work on all versions of Windows, we must disable command-line
+   globbing, otherwise Find errors out on commands such as
+
+     find . -name "*.c"
+
+   Contrary to the ezwinports variant, it seems like fts is then
+   taking care of the expansion.  */
+
+#include <dirent.h>
+#include <fnmatch.h>
+# ifdef _W64
+   int _dowildcard = 0;
+# else
+   int _CRT_glob = 0;
+# endif
+#endif
 
 /* Warn if a database is older than this.  8 days allows for a weekly
    update that takes up to a day to perform.  */
