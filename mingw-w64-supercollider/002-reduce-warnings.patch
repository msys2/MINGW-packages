diff --git a/editors/sc-ide/widgets/settings/editor_page.cpp b/editors/sc-ide/widgets/settings/editor_page.cpp
index 9cf3e78..7605a53 100644
--- a/editors/sc-ide/widgets/settings/editor_page.cpp
+++ b/editors/sc-ide/widgets/settings/editor_page.cpp
@@ -39,7 +39,7 @@ EditorPage::EditorPage(QWidget* parent):
     QWidget(parent),
 #if (QT_VERSION < QT_VERSION_CHECK(6, 0, 0))
     fontDatabase(new QFontDatabase),
-#endif()
+#endif
     ui(new Ui::EditorConfigPage) {
     ui->setupUi(this);
 
diff --git a/lang/LangPrimSource/SC_PortMIDI.cpp b/lang/LangPrimSource/SC_PortMIDI.cpp
index fe84fde..3bb773c 100644
--- a/lang/LangPrimSource/SC_PortMIDI.cpp
+++ b/lang/LangPrimSource/SC_PortMIDI.cpp
@@ -28,8 +28,8 @@ added prRestartMIDI
 04/feb/03 prListMIDIEndpoints modification by Ron Kuivila added jt.
 */
 
-#include "PortMIDI.h"
-#include "PortTime.h"
+#include "portmidi.h"
+#include "porttime.h"
 
 #include "SCBase.h"
 #include "VMGlobals.h"
diff --git a/lang/LangSource/DumpParseNode.cpp b/lang/LangSource/DumpParseNode.cpp
index ef03671..0e3bfb8 100644
--- a/lang/LangSource/DumpParseNode.cpp
+++ b/lang/LangSource/DumpParseNode.cpp
@@ -29,7 +29,7 @@
 #include <stdarg.h>
 #include <ctype.h>
 
-#ifdef _WIN32
+#ifndef PATH_MAX
 #    define PATH_MAX _MAX_PATH
 #endif
 
diff --git a/server/scsynth/SC_ComPort.cpp b/server/scsynth/SC_ComPort.cpp
index 50c2616..d765048 100644
--- a/server/scsynth/SC_ComPort.cpp
+++ b/server/scsynth/SC_ComPort.cpp
@@ -107,7 +107,7 @@ static bool UnrollOSCPacket(World* inWorld, int inSize, char* inData, OSC_Packet
                 data += sizeof(int32);
                 if (!strcmp(data, "#bundle")) { // is a bundle
                     OSC_Packet* packet = (OSC_Packet*)malloc(sizeof(OSC_Packet));
-                    memcpy(packet, inPacket, sizeof(OSC_Packet)); // clone inPacket
+                    memcpy(reinterpret_cast<void*>(packet), inPacket, sizeof(OSC_Packet)); // clone inPacket
 
                     if (!UnrollOSCPacket(inWorld, msgSize, data, packet)) {
                         free(packet);
diff --git a/server/scsynth/SC_PortAudio.cpp b/server/scsynth/SC_PortAudio.cpp
index ebd646a..f87d9e8 100644
--- a/server/scsynth/SC_PortAudio.cpp
+++ b/server/scsynth/SC_PortAudio.cpp
@@ -127,7 +127,7 @@ int SC_PortAudioDriver::PortAudioCallback(const void* input, void* output, unsig
                                           const PaStreamCallbackTimeInfo* timeInfo, PaStreamCallbackFlags statusFlags) {
     sc_SetDenormalFlags();
     World* world = mWorld;
-    (void)frameCount, timeInfo, statusFlags; // suppress unused parameter warnings
+    (void)frameCount, (void)timeInfo, (void)statusFlags; // suppress unused parameter warnings
 #ifdef SC_PA_USE_DLL
     mDLL.Update(sc_PAOSCTimeSeconds());
 
diff --git a/server/scsynth/SC_World.cpp b/server/scsynth/SC_World.cpp
index 25682d4..a437f77 100644
--- a/server/scsynth/SC_World.cpp
+++ b/server/scsynth/SC_World.cpp
@@ -626,7 +626,7 @@ void World_NonRealTimeSynthesis(struct World* world, WorldOptions* inOptions) {
         throw std::runtime_error("Couldn't open non real time command file.\n");
 
     OSC_Packet packet;
-    memset(&packet, 0, sizeof(packet));
+    memset(reinterpret_cast<void*>(&packet), 0, sizeof(packet));
     packet.mData = (char*)malloc(8192);
     packet.mIsBundle = true;
     packet.mReplyAddr.mReplyFunc = null_reply_func;
diff --git a/server/supernova/audio_backend/portaudio_backend.hpp b/server/supernova/audio_backend/portaudio_backend.hpp
index 00bc5f0..37a76b4 100644
--- a/server/supernova/audio_backend/portaudio_backend.hpp
+++ b/server/supernova/audio_backend/portaudio_backend.hpp
@@ -298,12 +298,13 @@ private:
             super::fetch_inputs(inputs, blocksize_, input_channels);
             engine_functor::run_tick();
             super::deliver_outputs(outputs, blocksize_, m_hwOutputChannels);
-            if (IsClipping)
+            if (IsClipping) {
                 for (uint16_t i = 0; i != m_hwOutputChannels; ++i)
                     if (super::is_aligned(out[i]))
                         clip2_vec_simd(out[i], out[i], safety_clip_threshold_, blocksize_);
                     else
                         clip2_vec(out[i], out[i], safety_clip_threshold_, blocksize_);
+            }
             processed += blocksize_;
         }
 
diff --git a/server/supernova/sc/sc_plugin_interface.cpp b/server/supernova/sc/sc_plugin_interface.cpp
index 8bc8832..972b367 100644
--- a/server/supernova/sc/sc_plugin_interface.cpp
+++ b/server/supernova/sc/sc_plugin_interface.cpp
@@ -699,9 +699,9 @@ void sc_plugin_interface::initialize(server_arguments const& args, float* contro
     world.mSndBufs = new SndBuf[world.mNumSndBufs];
     world.mSndBufsNonRealTimeMirror = new SndBuf[world.mNumSndBufs];
     world.mSndBufUpdates = new SndBufUpdates[world.mNumSndBufs];
-    memset(world.mSndBufs, 0, world.mNumSndBufs * sizeof(SndBuf));
-    memset(world.mSndBufsNonRealTimeMirror, 0, world.mNumSndBufs * sizeof(SndBuf));
-    memset(world.mSndBufUpdates, 0, world.mNumSndBufs * sizeof(SndBufUpdates));
+    memset(reinterpret_cast<void*>(world.mSndBufs), 0, world.mNumSndBufs * sizeof(SndBuf));
+    memset(reinterpret_cast<void*>(world.mSndBufsNonRealTimeMirror), 0, world.mNumSndBufs * sizeof(SndBuf));
+    memset(reinterpret_cast<void*>(world.mSndBufUpdates), 0, world.mNumSndBufs * sizeof(SndBufUpdates));
     world.mBufCounter = 0;
 
     async_buffer_guards.reset(new std::mutex[world.mNumSndBufs]);
diff --git a/server/supernova/utilities/callback_interpreter.hpp b/server/supernova/utilities/callback_interpreter.hpp
index aab9c09..7aaeaef 100644
--- a/server/supernova/utilities/callback_interpreter.hpp
+++ b/server/supernova/utilities/callback_interpreter.hpp
@@ -104,7 +104,7 @@ public:
     void start_thread(void) {
         semaphore sync_sem;
         std::thread thr([&]() { this->run_thread(sync_sem); });
-        callback_thread = move(thr);
+        callback_thread = std::move(thr);
         sync_sem.wait();
     }
 
diff --git a/testsuite/server/supernova/sized_array_test.cpp b/testsuite/server/supernova/sized_array_test.cpp
index 2d1a414..7558773 100644
--- a/testsuite/server/supernova/sized_array_test.cpp
+++ b/testsuite/server/supernova/sized_array_test.cpp
@@ -38,14 +38,14 @@ BOOST_AUTO_TEST_CASE(sized_array_test_1) {
 
     // move assignment
     sized_array<int> array3(0);
-    move(&array, &array + 1, &array3);
+    std::move(&array, &array + 1, &array3);
     BOOST_REQUIRE_EQUAL(array3.size(), 5u);
     BOOST_REQUIRE_EQUAL(array3[1], 3);
     BOOST_REQUIRE_EQUAL(array3[0], -1);
     BOOST_REQUIRE_EQUAL(array.size(), 0u);
 
     // move assignment
-    sized_array<int> array4(move(array3));
+    sized_array<int> array4(std::move(array3));
     BOOST_REQUIRE_EQUAL(array4.size(), 5u);
     BOOST_REQUIRE_EQUAL(array4[1], 3);
     BOOST_REQUIRE_EQUAL(array4[0], -1);
