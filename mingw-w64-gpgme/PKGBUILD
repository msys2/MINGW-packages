# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>
# Contributor: Zach Bacon <zachbacon@vba-m.com>

_realname=gpgme
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}"
         "${MINGW_PACKAGE_PREFIX}-qgpgme-qt5")
pkgver=1.18.0
pkgrel=1
pkgdesc="A C wrapper library for GnuPG (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32' 'clangarm64')
url="https://gnupg.org/related_software/gpgme/"
license=('spdx: LGPL-2.1-or-later OR GPL-2.0-or-later')
depends=("${MINGW_PACKAGE_PREFIX}-glib2"
         "${MINGW_PACKAGE_PREFIX}-gnupg"
         "${MINGW_PACKAGE_PREFIX}-libassuan"
         "${MINGW_PACKAGE_PREFIX}-libgpg-error"
         "${MINGW_PACKAGE_PREFIX}-npth")
makedepends=("${MINGW_PACKAGE_PREFIX}-autotools"
             "${MINGW_PACKAGE_PREFIX}-python"
             "${MINGW_PACKAGE_PREFIX}-qt5-base"
             "${MINGW_PACKAGE_PREFIX}-cc"
             "doxygen")
source=("https://www.gnupg.org/ftp/gcrypt/${_realname}/${_realname}-${pkgver}.tar.bz2"{,.sig}
        0004-gpgme-find-gnupg.patch
        0005-invoke-scripts-via-sh.patch
        0006-fix-building-docs.patch
        0007-mkdefsinc-use-CPPFLAGS.patch
        0008-no-py2.patch
        0009-fix-broken-version.patch
        relocatable-cmake.patch
        gpgmepp-portable-types.patch
        gpgme-fix-cpp-tests.patch)
#These might be signed by any of these keys https://gnupg.org/signature_key.html
validpgpkeys=('5B80C5754298F0CB55D8ED6ABCEF7E294B092E28'
              '6DAA6E64A76D2840571B4902528897B826403ADA'
              'AC8E115BF73E2D8D47FA9908E98E9B2D19C6C8BD'
              '02F38DFF731FF97CB039A1DA549E695E905BA208')
sha256sums=('361d4eae47ce925dba0ea569af40e7b52c645c4ae2e65e5621bf1b6cdd8b0e9e'
            'SKIP'
            '0a3d02312dbad81bb834615359106afe55ee32e2d1762ab597cf160d5fe07147'
            '2389cc237bf860b961bf3519377e83f7678e657dcf28c33510cd155f80516d42'
            'b56fe3e3da872ca84d08b4aa426e6f71b3227e2a253bc45bf6023abf1288ecc9'
            'f022993b4ae8f69f8248a6e22a0b6f0d0f43a074cdbcdbe2efb479e48064f988'
            'e807c2bf042ed9a603bb7fda8e7d2b73c4443c4ba9b33e21b3979d10ffdad48e'
            '020ff5ed7906a16cdc092ef5c2a2a2c373fb1bce342c1690b9f04b020d1a5b20'
            '32465eb5f99015d06a0b89c30c69a7c4208ab32c287275b729cf9bec08c4474c'
            'e161d4012b137f5252b7d64b5fe108144bb1725bde5a389a968cfcae28fc2321'
            'd09070c005b72e8aed14a848553f7c7289353ff7f32e62c9013a729ba46d7117')

_apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying ${_patch}"
    patch -p1 -i "${srcdir}/${_patch}"
  done
}

prepare() {
  cd "${srcdir}"/${_realname}-${pkgver}

  _apply_patch_with_msg \
    0004-gpgme-find-gnupg.patch \
    0005-invoke-scripts-via-sh.patch \
    0006-fix-building-docs.patch \
    0007-mkdefsinc-use-CPPFLAGS.patch \
    0008-no-py2.patch \
    0009-fix-broken-version.patch \
    relocatable-cmake.patch \
    gpgmepp-portable-types.patch \
    gpgme-fix-cpp-tests.patch

  autoreconf -ivf
}

build() {
  mkdir -p "${srcdir}"/build-${MSYSTEM} && cd "${srcdir}"/build-${MSYSTEM}

  # mingw doxygen can't wrok with UNIX paths in doxyfile
  CFLAGS+=" -Wno-int-conversion -Wno-incompatible-function-pointer-types" \
  DOXYGEN=/usr/bin/doxygen \
  PYTHON=${MINGW_PREFIX}/bin/python3 \
  ../${_realname}-${pkgver}/configure \
    --prefix=${MINGW_PREFIX} \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --libexecdir=${MINGW_PREFIX}/bin \
    --disable-fd-passing \
    --enable-shared \
    --enable-static \
    --disable-gpgsm-test \
    --disable-gpgconf-test \
    --disable-gpg-test \
    --enable-w32-glib

  make
}

check() {
  cd "${srcdir}"/build-${MSYSTEM}
  make check || warning "Tests failed"
}

package_gpgme() {
  cd "${srcdir}"/build-${MSYSTEM}
  make DESTDIR="${pkgdir}" install

  install -Dm644 "${srcdir}/${_realname}-${pkgver}/COPYING" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING"
  install -Dm644 "${srcdir}/${_realname}-${pkgver}/COPYING.LESSER" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING.LESSER"

  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  sed -s "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" -i "${pkgdir}${MINGW_PREFIX}/bin/gpgme-config"

  # split qgpgme
  rm -r "${pkgdir}${MINGW_PREFIX}"/bin/libqgpgme*
  rm -r "${pkgdir}${MINGW_PREFIX}"/lib/{cmake/QGpgme/,libqgpgme.*}
}

package_qgpgme-qt5() {
  pkgdesc="Qt5 bindings for GPGme (mingw-w64)"
  depends=("${MINGW_PACKAGE_PREFIX}-gpgme"
           "${MINGW_PACKAGE_PREFIX}-qt5-base")

  cd "${srcdir}"/build-${MSYSTEM}/lang/qt
  make DESTDIR="${pkgdir}" install
  rm -r "${pkgdir}${MINGW_PREFIX}"/include
}

# template start; name=mingw-w64-splitpkg-wrappers; version=1.0;
# vim: set ft=bash :

# generate wrappers
for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
# template end;
