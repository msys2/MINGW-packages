# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>

_realname=gpgme
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=1.12.0
pkgrel=1
pkgdesc="A C wrapper library for GnuPG (mingw-w64)"
arch=('any')
url="https://gnupg.org/related_software/gpgme/"
license=('LGPL')
depends=("${MINGW_PACKAGE_PREFIX}-glib2"
         "${MINGW_PACKAGE_PREFIX}-gnupg"
         "${MINGW_PACKAGE_PREFIX}-libassuan"
         "${MINGW_PACKAGE_PREFIX}-libgpg-error"
         "${MINGW_PACKAGE_PREFIX}-npth"
         )
makedepends=("${MINGW_PACKAGE_PREFIX}-pkg-config"
             "${MINGW_PACKAGE_PREFIX}-python2"
             "${MINGW_PACKAGE_PREFIX}-python3"
             "${MINGW_PACKAGE_PREFIX}-qt5"
             "doxygen")
options=('!emptydirs') # '!strip' 'debug')
source=("https://www.gnupg.org/ftp/gcrypt/${_realname}/${_realname}-${pkgver}.tar.bz2"{,.sig}
        0004-gpgme-find-gnupg.patch
        0005-invoke-scripts-via-sh.patch
        0006-fix-building-docs.patch
        0007-mkdefsinc-use-CPPFLAGS.patch
        relocatable-cmake.patch
        gpgmepp-portable-types.patch)
#These might be signed by any of these keys https://gnupg.org/signature_key.html
validpgpkeys=('D8692123C4065DEA5E0F3AB5249B39D24F25E3B6'
              '46CC730865BB5C78EBABADCF04376F3EE0856959'
              '031EC2536E580D8EA286A9F22071B08A33BD3F06'
              'D238EA65D64C67ED4C3073F28A861B1C7EFD60D9')
sha256sums=('b4dc951c3743a60e2e120a77892e9e864fb936b2e58e7c77e8581f4d050e8cd8'
            'SKIP'
            '71763a209761afe6495d3d85e25bbe6ba76348450d426f8a2618a34a264e058a'
            '87b9ad6ccb70643a0feb2cfdb1d15dc06f9d7996a69508d0dbcfef01b3a779e7'
            'b56fe3e3da872ca84d08b4aa426e6f71b3227e2a253bc45bf6023abf1288ecc9'
            '393c89dfc707a4982ab297196b00b5b7e1b8af7ee5bfc02846800c5ca3608891'
            '32465eb5f99015d06a0b89c30c69a7c4208ab32c287275b729cf9bec08c4474c'
            '12fbb051881b77cbc99fa46c09892c6d301bfed9a030172660f10cdf02b77ef4')

prepare() {
  cd "${srcdir}"/${_realname}-${pkgver}
  patch -p1 -i "${srcdir}"/0004-gpgme-find-gnupg.patch
  patch -p1 -i "${srcdir}"/0005-invoke-scripts-via-sh.patch
  patch -p1 -i "${srcdir}"/0006-fix-building-docs.patch
  patch -p1 -i "${srcdir}"/0007-mkdefsinc-use-CPPFLAGS.patch
  patch -p1 -i "${srcdir}"/relocatable-cmake.patch
  patch -p1 -i "${srcdir}"/gpgmepp-portable-types.patch

  autoreconf -ivf
}

build() {
  [[ -d "${srcdir}"/build-${MINGW_CHOST} ]] && rm -rf "${srcdir}"/build-${MINGW_CHOST}
  mkdir -p "${srcdir}"/build-${MINGW_CHOST} && cd "${srcdir}"/build-${MINGW_CHOST}

  # mingw doxygen can't wrok with UNIX paths in doxyfile
  DOXYGEN=/usr/bin/doxygen \
  ../${_realname}-${pkgver}/configure \
    --prefix=${MINGW_PREFIX} \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --libexecdir=${MINGW_PREFIX}/bin \
    --disable-fd-passing \
    --enable-shared \
    --enable-static \
    --disable-gpgsm-test

  make
}

check() {
  cd "${srcdir}"/build-${MINGW_CHOST}
  #make check
}

package() {
  cd "${srcdir}"/build-${MINGW_CHOST}
  make DESTDIR=${pkgdir} install
}
