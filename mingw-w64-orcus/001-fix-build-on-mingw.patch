--- a/src/python/json.cpp
+++ b/src/python/json.cpp
@@ -279,7 +279,7 @@
 
 extern "C" {
 
-ORCUS_DLLPUBLIC PyObject* PyInit__orcus_json()
+PyObject* PyInit__orcus_json()
 {
     PyObject* m = PyModule_Create(&orcus::python::moduledef);
     return m;
--- a/src/python/python.cpp
+++ b/src/python/python.cpp
@@ -146,7 +146,7 @@
 
 extern "C" {
 
-ORCUS_DLLPUBLIC PyObject* PyInit__orcus()
+PyObject* PyInit__orcus()
 {
     PyObject* m = PyModule_Create(&orcus::python::moduledef);
     if (!orcus::python::populate_module_attributes(m))
--- a/src/spreadsheet/debug_state_dumper.cpp
+++ b/src/spreadsheet/debug_state_dumper.cpp
@@ -132,7 +132,7 @@
 void doc_debug_state_dumper::dump_properties(const fs::path& outdir) const
 {
     const fs::path outpath = outdir / "properties.yaml";
-    std::ofstream of{outpath.native()};
+    std::ofstream of{outpath.string()};
     if (!of)
         return;
 
@@ -144,7 +144,7 @@
 void doc_debug_state_dumper::dump_styles(const fs::path& outdir) const
 {
     const fs::path outpath = outdir / "styles.yaml";
-    std::ofstream of{outpath.native()};
+    std::ofstream of{outpath.string()};
     if (!of)
         return;
 
@@ -348,7 +348,7 @@
 void doc_debug_state_dumper::dump_named_expressions(const fs::path& outdir) const
 {
     const fs::path outpath = outdir / "named-expressions.yaml";
-    std::ofstream of{outpath.native()};
+    std::ofstream of{outpath.string()};
     if (!of)
         return;
 
@@ -374,7 +374,7 @@
 {
     check_dumper dumper{m_sheet, m_sheet_name};
     fs::path outpath = outdir / "cell-values.txt";
-    std::ofstream of{outpath.native()};
+    std::ofstream of{outpath.string()};
     if (of)
         dumper.dump(of);
 }
@@ -382,7 +382,7 @@
 void sheet_debug_state_dumper::dump_cell_formats(const fs::path& outdir) const
 {
     fs::path outpath = outdir / "cell-formats.yaml";
-    std::ofstream of{outpath.native()};
+    std::ofstream of{outpath.string()};
     if (!of)
         return;
 
@@ -412,7 +412,7 @@
 void sheet_debug_state_dumper::dump_column_formats(const fs::path& outdir) const
 {
     fs::path outpath = outdir / "column-formats.yaml";
-    std::ofstream of{outpath.native()};
+    std::ofstream of{outpath.string()};
     if (!of)
         return;
 
@@ -426,7 +426,7 @@
 void sheet_debug_state_dumper::dump_row_formats(const fs::path& outdir) const
 {
     fs::path outpath = outdir / "row-formats.yaml";
-    std::ofstream of{outpath.native()};
+    std::ofstream of{outpath.string()};
     if (!of)
         return;
 
@@ -440,7 +440,7 @@
 void sheet_debug_state_dumper::dump_column_widths(const fs::path& outdir) const
 {
     fs::path outpath = outdir / "column-widths.yaml";
-    std::ofstream of{outpath.native()};
+    std::ofstream of{outpath.string()};
     if (!of)
         return;
 
@@ -461,7 +461,7 @@
 void sheet_debug_state_dumper::dump_row_heights(const fs::path& outdir) const
 {
     fs::path outpath = outdir / "row-heights.yaml";
-    std::ofstream of{outpath.native()};
+    std::ofstream of{outpath.string()};
     if (!of)
         return;
 
@@ -485,7 +485,7 @@
         return;
 
     fs::path outpath = outdir / "auto-filter.yaml";
-    std::ofstream of{outpath.native()};
+    std::ofstream of{outpath.string()};
     if (!of)
         return;
 
@@ -512,7 +512,7 @@
 void sheet_debug_state_dumper::dump_named_expressions(const fs::path& outdir) const
 {
     const fs::path outpath = outdir / "named-expressions.yaml";
-    std::ofstream of{outpath.native()};
+    std::ofstream of{outpath.string()};
     if (!of)
         return;
 
--- a/src/spreadsheet/document.cpp
+++ b/src/spreadsheet/document.cpp
@@ -273,7 +273,7 @@
         outpath /= std::string{sheet->name};
         outpath.replace_extension(".txt");
 
-        std::ofstream file(outpath.native());
+        std::ofstream file(outpath.string());
         if (!file)
         {
             cerr << "failed to create file: " << outpath << endl;
@@ -294,7 +294,7 @@
         outpath /= std::string{sheet->name};
         outpath.replace_extension(".html");
 
-        std::ofstream file(outpath.native());
+        std::ofstream file(outpath.string());
         if (!file)
         {
             cerr << "failed to create file: " << outpath << endl;
@@ -313,7 +313,7 @@
         outpath /= std::string{sheet->name};
         outpath.replace_extension(".json");
 
-        std::ofstream file(outpath.native());
+        std::ofstream file(outpath.string());
         if (!file)
         {
             cerr << "failed to create file: " << outpath << endl;
