From b207fb6c15dc5ebdabe22a9985cb2ecf39daaf9f Mon Sep 17 00:00:00 2001
From: Kreijstal <rainb@tfwno.gf>
Date: Tue, 25 Feb 2025 10:23:52 +0100
Subject: [PATCH] Weird bug where clang requires explicit json definitions

---
 common/settings/bom_settings.cpp          |  3 +-
 common/settings/json_settings.cpp         |  1 +
 kicad/tools/kicad_manager_control.cpp     |  2 +-
 kicad/update_manager.cpp                  |  2 +-
 libs/core/include/core/json_serializers.h | 62 ++++++++++++++++++++++-
 5 files changed, 65 insertions(+), 5 deletions(-)

diff --git a/common/settings/bom_settings.cpp b/common/settings/bom_settings.cpp
index 69d7fdbe81..8db15dfd97 100644
--- a/common/settings/bom_settings.cpp
+++ b/common/settings/bom_settings.cpp
@@ -17,10 +17,9 @@
  * You should have received a copy of the GNU General Public License along
  * with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
-
+#include <core/json_serializers.h>
 #include <settings/bom_settings.h>
 #include <nlohmann/json.hpp>
-#include <core/json_serializers.h>
 #include <wx/translation.h>
 
 
diff --git a/common/settings/json_settings.cpp b/common/settings/json_settings.cpp
index 7d946df47d..159e0e09a5 100644
--- a/common/settings/json_settings.cpp
+++ b/common/settings/json_settings.cpp
@@ -26,6 +26,7 @@
 
 #include <locale_io.h>
 #include <gal/color4d.h>
+#include <core/json_serializers.h>
 #include <settings/json_settings.h>
 #include <settings/json_settings_internals.h>
 #include <settings/nested_settings.h>
diff --git a/kicad/tools/kicad_manager_control.cpp b/kicad/tools/kicad_manager_control.cpp
index 4401cf82b5..91be5e24a5 100644
--- a/kicad/tools/kicad_manager_control.cpp
+++ b/kicad/tools/kicad_manager_control.cpp
@@ -17,7 +17,7 @@
  * You should have received a copy of the GNU General Public License along
  * with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
-
+#include <core/json_serializers.h>
 #include <wildcards_and_files_ext.h>
 #include <env_vars.h>
 #include <executable_names.h>
diff --git a/kicad/update_manager.cpp b/kicad/update_manager.cpp
index d854a73a75..47556598b0 100644
--- a/kicad/update_manager.cpp
+++ b/kicad/update_manager.cpp
@@ -28,6 +28,7 @@
 #include <string>
 #include <sstream>
 
+#include <core/json_serializers.h>
 #include "settings/settings_manager.h"
 #include "settings/kicad_settings.h"
 #include <notifications_manager.h>
@@ -39,7 +40,6 @@
 #include <dialogs/dialog_update_notice.h>
 
 #include <nlohmann/json.hpp>
-#include <core/json_serializers.h>
 
 #include <wx/log.h>
 #include <wx/event.h>
diff --git a/libs/core/include/core/json_serializers.h b/libs/core/include/core/json_serializers.h
index b5079fc209..285e951c89 100644
--- a/libs/core/include/core/json_serializers.h
+++ b/libs/core/include/core/json_serializers.h
@@ -25,6 +25,7 @@
 #define JSON_SERIALIZERS_H_
 
 #include <nlohmann/json.hpp>
+#include <wx/gdicmn.h>
 #include <wx/string.h>
 #include <optional>
 
@@ -89,7 +90,66 @@ struct adl_serializer<std::optional<T>>
         }
     }
 };
+
+// Clang-specific stubs for wxPoint, wxSize, wxRect
+#ifdef __clang__
+template <>
+    struct adl_serializer<wxPoint>
+    {
+        static void to_json(json& j, const wxPoint& p)
+        {
+            j["x"] = p.x;
+            j["y"] = p.y;
+        }
+
+        static void from_json(const json& j, wxPoint& p)
+        {
+            j.at("x").get_to(p.x);
+            j.at("y").get_to(p.y);
+        }
+    };
+
+    template <>
+    struct adl_serializer<wxSize>
+    {
+        static void to_json(json& j, const wxSize& s)
+        {
+            j["width"] = s.GetWidth();
+            j["height"] = s.GetHeight();
+        }
+
+        static void from_json(const json& j, wxSize& s)
+        {
+            int w, h;
+            j.at("width").get_to(w);
+            j.at("height").get_to(h);
+            s = wxSize(w, h);
+        }
+    };
+
+    template <>
+    struct adl_serializer<wxRect>
+    {
+        static void to_json(json& j, const wxRect& r)
+        {
+            j["x"] = r.x;
+            j["y"] = r.y;
+            j["width"] = r.width;
+            j["height"] = r.height;
+        }
+
+        static void from_json(const json& j, wxRect& r)
+        {
+            int x, y, w, h;
+            j.at("x").get_to(x);
+            j.at("y").get_to(y);
+            j.at("width").get_to(w);
+            j.at("height").get_to(h);
+            r = wxRect(x, y, w, h);
+        }
+    };
+#endif // __clang__
 } // namespace nlohmann
 
 
-#endif // JSON_SERIALIZERS_H_
\ No newline at end of file
+#endif // JSON_SERIALIZERS_H_
-- 
2.43.0

