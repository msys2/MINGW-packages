diff -Naur VTK-6.1.0.a/Common/Core/vtkConditionVariable.cxx VTK-6.1.0.b/Common/Core/vtkConditionVariable.cxx
--- VTK-6.1.0.a/Common/Core/vtkConditionVariable.cxx	2014-01-21 23:22:59.000000000 +0700
+++ VTK-6.1.0.b/Common/Core/vtkConditionVariable.cxx	2014-09-21 00:06:12.458762700 +0700
@@ -77,6 +77,15 @@
 #endif // ! defined(VTK_USE_PTHREADS) && ! defined(VTK_HP_PTHREADS) && ! defined(VTK_USE_WIN32_THREADS)
 
 #ifdef VTK_USE_WIN32_THREADS
+
+#define pthread_cond_t         vtk_win32_pthread_cond_t
+#define pthread_condattr_t     vtk_win32_pthread_condattr_t
+#define pthread_cond_init      vtk_win32_pthread_cond_init
+#define pthread_cond_wait      vtk_win32_pthread_cond_wait
+#define pthread_cond_signal    vtk_win32_pthread_cond_signal
+#define pthread_cond_broadcast vtk_win32_pthread_cond_broadcast
+#define pthread_cond_destroy   vtk_win32_pthread_cond_destroy
+
 typedef int pthread_condattr_t;
 
 #  if 1
diff -Naur VTK-6.1.0.a/Common/Core/vtkConditionVariable.h VTK-6.1.0.b/Common/Core/vtkConditionVariable.h
--- VTK-6.1.0.a/Common/Core/vtkConditionVariable.h	2014-01-21 23:22:59.000000000 +0700
+++ VTK-6.1.0.b/Common/Core/vtkConditionVariable.h	2014-09-21 00:06:12.489962700 +0700
@@ -50,6 +50,7 @@
 
 #ifdef VTK_USE_WIN32_THREADS
 #if 1
+#define pthread_cond_t vtk_win32_pthread_cond_t
 typedef struct
 {
   // Number of threads waiting on condition.
@@ -70,6 +71,7 @@
 } pthread_cond_t;
 
 typedef pthread_cond_t vtkConditionType;
+#undef pthread_cond_t
 #  else // 0
 typedef struct
 {
diff -Naur VTK-6.1.0.a/Filters/General/vtkMultiThreshold.h VTK-6.1.0.b/Filters/General/vtkMultiThreshold.h
--- VTK-6.1.0.a/Filters/General/vtkMultiThreshold.h	2014-01-21 23:22:59.000000000 +0700
+++ VTK-6.1.0.b/Filters/General/vtkMultiThreshold.h	2014-09-21 05:32:57.474083800 +0700
@@ -107,6 +107,10 @@
 #include <set> // for UpdateDependents()
 #include <string> // for holding array names in NormKey
 
+#ifdef AND
+#undef AND
+#endif
+
 class vtkCell;
 class vtkCellData;
 class vtkDataArray;
diff -Naur VTK-7.0.0.a/CMake/vtkCompilerExtras.cmake VTK-7.0.0.b/CMake/vtkCompilerExtras.cmake
--- VTK-7.0.0.a/CMake/vtkCompilerExtras.cmake	2016-01-28 17:17:38.000000000 +0100
+++ VTK-7.0.0.b/CMake/vtkCompilerExtras.cmake	2016-09-20 19:47:27.073608100 +0200
@@ -32,7 +32,7 @@
     OUTPUT_VARIABLE _gcc_version_info
     ERROR_VARIABLE _gcc_version_info)
 
-  string (REGEX MATCH "[345]\\.[0-9]\\.[0-9]*"
+  string (REGEX MATCH "[3456]\\.[0-9]\\.[0-9]*"
     _gcc_version "${_gcc_version_info}")
   if(NOT _gcc_version)
     string (REGEX REPLACE ".*\\(GCC\\).*([34]\\.[0-9]).*" "\\1.0"
diff -Naur VTK-7.0.0.a/CMake/GenerateExportHeader.cmake VTK-7.0.0.b/CMake/GenerateExportHeader.cmake
--- VTK-7.0.0.a/CMake/GenerateExportHeader.cmake	2016-01-28 17:17:38.000000000 +0100
+++ VTK-7.0.0.b/CMake/GenerateExportHeader.cmake	2016-09-20 19:55:00.599841700 +0200
@@ -166,7 +166,7 @@
     execute_process(COMMAND ${CMAKE_C_COMPILER} ARGS --version
       OUTPUT_VARIABLE _gcc_version_info
       ERROR_VARIABLE _gcc_version_info)
-    string(REGEX MATCH "[345]\\.[0-9]\\.[0-9]*"
+    string(REGEX MATCH "[3456]\\.[0-9]\\.[0-9]*"
       _gcc_version "${_gcc_version_info}")
     # gcc on mac just reports: "gcc (GCC) 3.3 20030304 ..." without the
     # patch level, handle this here:
diff --git a/IO/FFMPEG/vtkFFMPEGWriter.cxx b/IO/FFMPEG/vtkFFMPEGWriter.cxx
index 6fe7b9a..e6d06b7 100644
--- a/IO/FFMPEG/vtkFFMPEGWriter.cxx
+++ b/IO/FFMPEG/vtkFFMPEGWriter.cxx
@@ -43,6 +43,15 @@ extern "C" {
 #if LIBAVCODEC_VERSION_MAJOR < 55
 # define AV_CODEC_ID_MJPEG CODEC_ID_MJPEG
 # define AV_CODEC_ID_RAWVIDEO CODEC_ID_RAWVIDEO
+# define AV_PIX_FMT_BGR24 PIX_FMT_BGR24
+# define AV_PIX_FMT_RGB24 PIX_FMT_RGB24
+# define AV_PIX_FMT_YUVJ422P PIX_FMT_YUVJ422P
+#endif
+
+#if LIBAVCODEC_VERSION_MAJOR < 56 || \
+    LIBAVCODEC_VERSION_MAJOR == 55 && LIBAVCODEC_VERSION_MINOR < 28 || \
+    LIBAVCODEC_VERSION_MAJOR == 55 && LIBAVCODEC_VERSION_MINOR == 28 && LIBAVCODEC_VERSION_MICRO < 1
+# define av_frame_alloc avcodec_alloc_frame
 #endif
 
 //---------------------------------------------------------------------------
@@ -191,11 +200,11 @@ int vtkFFMPEGWriterInternal::Start()
   c->height = this->Dim[1];
   if (this->Writer->GetCompression())
     {
-    c->pix_fmt = PIX_FMT_YUVJ422P;
+    c->pix_fmt = AV_PIX_FMT_YUVJ422P;
     }
   else
     {
-    c->pix_fmt = PIX_FMT_BGR24;
+    c->pix_fmt = AV_PIX_FMT_BGR24;
     }
 
   //to do playback at actual recorded rate, this will need more work see also below
@@ -274,13 +283,13 @@ int vtkFFMPEGWriterInternal::Start()
 #endif
 
   //for the output of the writer's input...
-  this->rgbInput = avcodec_alloc_frame();
+  this->rgbInput = av_frame_alloc();
   if (!this->rgbInput)
     {
     vtkGenericWarningMacro (<< "Could not make rgbInput avframe." );
     return 0;
     }
-  int RGBsize = avpicture_get_size(PIX_FMT_RGB24, c->width, c->height);
+  int RGBsize = avpicture_get_size(AV_PIX_FMT_RGB24, c->width, c->height);
   unsigned char *rgb = (unsigned char *)av_malloc(sizeof(unsigned char) * RGBsize);
   if (!rgb)
     {
@@ -288,10 +297,10 @@ int vtkFFMPEGWriterInternal::Start()
     return 0;
     }
   //The rgb buffer should get deleted when this->rgbInput is.
-  avpicture_fill((AVPicture *)this->rgbInput, rgb, PIX_FMT_RGB24, c->width, c->height);
+  avpicture_fill((AVPicture *)this->rgbInput, rgb, AV_PIX_FMT_RGB24, c->width, c->height);
 
   //and for the output to the codec's input.
-  this->yuvOutput = avcodec_alloc_frame();
+  this->yuvOutput = av_frame_alloc();
   if (!this->yuvOutput)
     {
     vtkGenericWarningMacro (<< "Could not make yuvOutput avframe." );
@@ -353,12 +362,12 @@ int vtkFFMPEGWriterInternal::Write(vtkImageData *id)
   //convert that to YUV for input to the codec
 #ifdef VTK_FFMPEG_HAS_IMG_CONVERT
   img_convert((AVPicture *)this->yuvOutput, cc->pix_fmt,
-              (AVPicture *)this->rgbInput, PIX_FMT_RGB24,
+              (AVPicture *)this->rgbInput, AV_PIX_FMT_RGB24,
               cc->width, cc->height);
 #else
   //convert that to YUV for input to the codec
   SwsContext* convert_ctx = sws_getContext(
-    cc->width, cc->height, PIX_FMT_RGB24,
+    cc->width, cc->height, AV_PIX_FMT_RGB24,
     cc->width, cc->height, cc->pix_fmt,
     SWS_BICUBIC, NULL, NULL, NULL);
 
