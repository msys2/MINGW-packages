# Maintainer: Sergey Popov <popov.sa@gmail.com>
# Contributor: Mario Emmenlauer <memmenlauer@biodataanalysis.de>

_realname=vtk
pkgbase="mingw-w64-${_realname}"
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=9.1.0
pkgrel=1
pkgdesc="A software system for 3D computer graphics, image processing and visualization (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32' 'clangarm64')
url="https://www.vtk.org/"
license=("BSD")
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-double-conversion"
         "${MINGW_PACKAGE_PREFIX}-expat"
         "${MINGW_PACKAGE_PREFIX}-fmt"
         "${MINGW_PACKAGE_PREFIX}-glew"
         "${MINGW_PACKAGE_PREFIX}-intel-tbb"
         "${MINGW_PACKAGE_PREFIX}-jsoncpp"
         "${MINGW_PACKAGE_PREFIX}-libharu"
         "${MINGW_PACKAGE_PREFIX}-libwinpthread-git"
         "${MINGW_PACKAGE_PREFIX}-lz4"
         $([[ ${MINGW_PACKAGE_PREFIX} != *-clang-* ]] || echo "${MINGW_PACKAGE_PREFIX}-openmp")
         "${MINGW_PACKAGE_PREFIX}-pugixml"
         "${MINGW_PACKAGE_PREFIX}-xz"
         "${MINGW_PACKAGE_PREFIX}-zlib")
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-adios2"
             "${MINGW_PACKAGE_PREFIX}-boost"
             "${MINGW_PACKAGE_PREFIX}-cgns"
             "${MINGW_PACKAGE_PREFIX}-cli11"
             "${MINGW_PACKAGE_PREFIX}-eigen3"
             "${MINGW_PACKAGE_PREFIX}-ffmpeg"
             "${MINGW_PACKAGE_PREFIX}-fontconfig"
             "${MINGW_PACKAGE_PREFIX}-freetype"
             "${MINGW_PACKAGE_PREFIX}-gdal"
             "${MINGW_PACKAGE_PREFIX}-gl2ps"
             "${MINGW_PACKAGE_PREFIX}-hdf5"
             "${MINGW_PACKAGE_PREFIX}-libjpeg"
             "${MINGW_PACKAGE_PREFIX}-liblas"
             "${MINGW_PACKAGE_PREFIX}-libmariadbclient"
             "${MINGW_PACKAGE_PREFIX}-libpng"
             "${MINGW_PACKAGE_PREFIX}-libogg"
             "${MINGW_PACKAGE_PREFIX}-libtheora"
             "${MINGW_PACKAGE_PREFIX}-libtiff"
             "${MINGW_PACKAGE_PREFIX}-libxml2"
             "${MINGW_PACKAGE_PREFIX}-netcdf"
             "${MINGW_PACKAGE_PREFIX}-openslide"
             "${MINGW_PACKAGE_PREFIX}-openturns"
             # "${MINGW_PACKAGE_PREFIX}-openvdb" for an unkown reason IlmBase couldn't be found!
             "${MINGW_PACKAGE_PREFIX}-openvr"
             "${MINGW_PACKAGE_PREFIX}-pdal"
             # "${MINGW_PACKAGE_PREFIX}-pegtl" https://gitlab.kitware.com/vtk/vtk/-/issues/18151
             "${MINGW_PACKAGE_PREFIX}-postgresql"
             "${MINGW_PACKAGE_PREFIX}-proj"
             "${MINGW_PACKAGE_PREFIX}-python"
             "${MINGW_PACKAGE_PREFIX}-qt5-declarative"
             "${MINGW_PACKAGE_PREFIX}-sqlite3"
             # "${MINGW_PACKAGE_PREFIX}-tk"
             "${MINGW_PACKAGE_PREFIX}-unixodbc"
             "${MINGW_PACKAGE_PREFIX}-utf8cpp"
             )
optdepends=("${MINGW_PACKAGE_PREFIX}-adios2: I/O ADIOS2"
            "${MINGW_PACKAGE_PREFIX}-boost: InfovisBoost and InfovisBoostGraphAlgorithms modules"
            "${MINGW_PACKAGE_PREFIX}-cgns: CGNS Reader"
            "${MINGW_PACKAGE_PREFIX}-ffmpeg: I/O FFMPEG"
            "${MINGW_PACKAGE_PREFIX}-fontconfig: Freetype/Fontconfig Rendering"
            "${MINGW_PACKAGE_PREFIX}-freetype: Freetype Rendering"
            "${MINGW_PACKAGE_PREFIX}-gdal: I/O GDAL"
            "${MINGW_PACKAGE_PREFIX}-gl2ps: PS Rendering"
            "${MINGW_PACKAGE_PREFIX}-hdf5: I/O HDF5"
            "${MINGW_PACKAGE_PREFIX}-libjpeg: I/O Images"
            "${MINGW_PACKAGE_PREFIX}-liblas"
            "${MINGW_PACKAGE_PREFIX}-libmariadbclient: interface to MySQL/MariaDB"
            "${MINGW_PACKAGE_PREFIX}-libpng: I/O Images"
            "${MINGW_PACKAGE_PREFIX}-libogg: I/O OGG and Theora"
            "${MINGW_PACKAGE_PREFIX}-libtheora: I/O OGG and Theora"
            "${MINGW_PACKAGE_PREFIX}-libtiff: I/O Images"
            "${MINGW_PACKAGE_PREFIX}-libxml2: Infovis"
            "${MINGW_PACKAGE_PREFIX}-netcdf: I/O netCDF"
            "${MINGW_PACKAGE_PREFIX}-openslide: DomainsMicroscopy"
            "${MINGW_PACKAGE_PREFIX}-openturns"
            # "${MINGW_PACKAGE_PREFIX}-openvdb: I/O OpenVDB"
            "${MINGW_PACKAGE_PREFIX}-openvr: OpenVR Rendering"
            "${MINGW_PACKAGE_PREFIX}-pdal: I/O PDAL"
            "${MINGW_PACKAGE_PREFIX}-postgresql: interface to PostgreSQL"
            "${MINGW_PACKAGE_PREFIX}-proj: GEOVis"
            "${MINGW_PACKAGE_PREFIX}-python: Python bindings"
            "${MINGW_PACKAGE_PREFIX}-python-matplotlib: Matplotlib renderer"
            "${MINGW_PACKAGE_PREFIX}-qt5-base: Qt Rendering"
            "${MINGW_PACKAGE_PREFIX}-qt5-declarative: Qt Qml plugin"
            "${MINGW_PACKAGE_PREFIX}-sqlite3: Interface to SQL"
            # "${MINGW_PACKAGE_PREFIX}-tk: TCL bindings, Python Tk widgets"
            "${MINGW_PACKAGE_PREFIX}-unixodbc")
source=(https://www.vtk.org/files/release/${pkgver%.*}/VTK-${pkgver}.tar.gz
        "001-no-strptime-with-clang.patch"
        "002-fix-python-modules-path.patch"
        "003-fix-find-odbc-mingw.patch"
        "004-Build-GUISupportMFC-only-with-MSVC.patch"
        "005-fix-build-vtkm-mingw.patch"
        "006-link-to-pdalcpp.patch"
        "007-dll-export-some-functions.patch"
        "008-support-netcdf-4.9.0.patch"
        "009-vtk-libharu-2.4.0.patch")
sha256sums=('8fed42f4f8f1eb8083107b68eaa9ad71da07110161a3116ad807f43e5ca5ce96'
            'df2eef7c8533ebcf9926a8bab309531253387849a1fc2e797fb01c0638aee094'
            'a2396e3aecc3c8ade391496f7a7ce4efc7f6eb53911ddd1b473f2230e1b22161'
            '7d22fcfb108b7edb0ceb050378461e9987a330636a1317dfca68638962815948'
            '5b39f9aa28f169d1f35b42cf5ae8433eb4ea6f8bee4894b7dcd63d2ba622b3e5'
            '353d046a96fe6cb3019857132676671b60e18d02e4bba43e79a21673e4d5735f'
            'af98e72a0d64af3fa755929e724e900faa9ab466917fc24084026512f02399e4'
            'bac0c76884095fd3e15553e0b6f55c373acef65a0f43baf2b503e13693ba8f48'
            'ce1f8d4b3173debd1ebb72e47fb83444913a6e2cb5e558f6f755b1a22e483fcc'
            '675707ec492182d1f0c8f4682775613dd9b5d315596af8df99ad4d758196e9c3')

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying ${_patch}"
    patch -Nbp1 -i "${srcdir}/${_patch}"
  done
}

prepare() {
  cd "${srcdir}/${_realname}-${pkgver}"

  # https://gitlab.kitware.com/vtk/vtk/-/merge_requests/9015
  apply_patch_with_msg \
    001-no-strptime-with-clang.patch
  # https://gitlab.kitware.com/vtk/vtk/-/merge_requests/9016
  apply_patch_with_msg \
    002-fix-python-modules-path.patch
  # https://gitlab.kitware.com/vtk/vtk/-/merge_requests/9019
  apply_patch_with_msg \
    003-fix-find-odbc-mingw.patch
  # https://gitlab.kitware.com/vtk/vtk/-/merge_requests/9024
  apply_patch_with_msg \
    004-Build-GUISupportMFC-only-with-MSVC.patch
  apply_patch_with_msg \
    005-fix-build-vtkm-mingw.patch \
    006-link-to-pdalcpp.patch
  # https://gitlab.kitware.com/vtk/vtk/-/commit/2dc96875f958182b31a8be0d489bbcfa6591fb75
  apply_patch_with_msg \
    008-support-netcdf-4.9.0.patch
  # Copied from https://github.com/archlinux/svntogit-community/blob/packages/vtk/trunk/vtk-libharu-2.4.0.patch
  apply_patch_with_msg \
    009-vtk-libharu-2.4.0.patch
  # Succeed with Clang but failed with GCC!
  if [[ ${MINGW_PACKAGE_PREFIX} == *-clang-* ]]; then
    apply_patch_with_msg \
      007-dll-export-some-functions.patch
  fi
}

build() {
  [[ -d ${srcdir}/build-${MSYSTEM} ]] && rm -rf ${srcdir}/build-${MSYSTEM}
  mkdir -p ${srcdir}/build-${MSYSTEM} && cd ${srcdir}/build-${MSYSTEM}

  declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  CFLAGS+=" ${CPPFLAGS}"
  CXXFLAGS+=" ${CPPFLAGS} -Wno-attributes -Wno-ignored-attributes -Wno-deprecated-declarations"

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake \
    -Wno-dev \
    -G"Ninja" \
    ${extra_config[@]} \
    -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}" \
    -DCMAKE_INSTALL_LICENSEDIR=share/licenses/vtk \
    -DBUILD_SHARED_LIBS=ON \
    -DPython3_EXECUTABLE="${MINGW_PREFIX}/bin/python.exe" \
    -DVTK_BUILD_TESTING=OFF \
    -DVTK_VERSIONED_INSTALL=OFF \
    -DVTK_BUILD_ALL_MODULES=ON \
    -DVTK_GROUP_ENABLE_MPI=NO \
    -DVTK_GROUP_ENABLE_Web=NO \
    -DVTK_MODULE_ENABLE_VTK_vtkm=NO \
    -DVTK_MODULE_ENABLE_VTK_IOOpenVDB=NO \
    -DVTK_USE_EXTERNAL=ON \
    -DVTK_MODULE_USE_EXTERNAL_VTK_exprtk=OFF \
    -DVTK_MODULE_USE_EXTERNAL_VTK_ioss=OFF \
    -DVTK_MODULE_USE_EXTERNAL_VTK_pegtl=OFF \
    -DVTK_WRAP_JAVA=OFF \
    -DVTK_WRAP_PYTHON=ON \
    -DVTK_SMP_IMPLEMENTATION_TYPE=TBB \
    -DVTK_SMP_ENABLE_SEQUENTIAL=ON \
    -DVTK_SMP_ENABLE_STDTHREAD=ON \
    -DVTK_SMP_ENABLE_OPENMP=ON \
    -DVTK_USE_VIDEO_FOR_WINDOWS=ON \
    -DVTK_ENABLE_OSPRAY=OFF \
    ../${_realname}-${pkgver}

  ${MINGW_PREFIX}/bin/cmake --build .
}

package() {
  cd "${srcdir}/build-${MSYSTEM}"
  DESTDIR="${pkgdir}" ${MINGW_PREFIX}/bin/cmake --install .
}
