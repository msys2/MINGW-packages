--- a/ThirdParty/vtkm/vtkvtkm/vtk-m/CMake/VTKmConfig.cmake.in
+++ b/ThirdParty/vtkm/vtkvtkm/vtk-m/CMake/VTKmConfig.cmake.in
@@ -105,6 +105,14 @@ if (VTKm_ENABLE_TBB)
   endif()
 endif()

+if (VTKm_ENABLE_OPENMP)
+  find_dependency(OpenMP)
+  if (NOT OpenMP_FOUND)
+    set(VTKm_FOUND 0)
+    list(APPEND VTKm_NOT_FOUND_REASON "OpenMP not found: ${OpenMP_NOT_FOUND_MESSAGE}")
+  endif()
+endif()
+
 # Load the library exports, but only if not compiling VTK-m itself
 set_and_check(VTKm_CONFIG_DIR "@PACKAGE_VTKm_INSTALL_CONFIG_DIR@")
 set(VTKM_FROM_INSTALL_DIR FALSE)
--- a/ThirdParty/vtkm/vtkvtkm/vtk-m/CMake/VTKmDeviceAdapters.cmake
+++ b/ThirdParty/vtkm/vtkvtkm/vtk-m/CMake/VTKmDeviceAdapters.cmake
@@ -58,21 +58,13 @@ if(VTKm_ENABLE_OPENMP AND NOT (TARGET vtkm_openmp OR TARGET vtkm::openmp))
   find_package(OpenMP 4.0 REQUIRED COMPONENTS CXX QUIET)

   add_library(vtkm_openmp INTERFACE)
-  set_target_properties(vtkm_openmp PROPERTIES EXPORT_NAME openmp)
-  if(OpenMP_CXX_FLAGS)
-    set_property(TARGET vtkm_openmp
-      APPEND PROPERTY INTERFACE_COMPILE_OPTIONS $<$<COMPILE_LANGUAGE:CXX>:${OpenMP_CXX_FLAGS}>)
-
-    if(VTKm_ENABLE_CUDA)
-      string(REPLACE ";" "," openmp_cuda_flags "-Xcompiler=${OpenMP_CXX_FLAGS}")
-      set_property(TARGET vtkm_openmp
-        APPEND PROPERTY INTERFACE_COMPILE_OPTIONS $<$<COMPILE_LANGUAGE:CUDA>:${openmp_cuda_flags}>)
-    endif()
-  endif()
-  if(OpenMP_CXX_LIBRARIES)
-    set_target_properties(vtkm_openmp PROPERTIES
-      INTERFACE_LINK_LIBRARIES "${OpenMP_CXX_LIBRARIES}")
+  target_link_libraries(vtkm_openmp INTERFACE OpenMP::OpenMP_CXX)
+  target_compile_options(vtkm_openmp INTERFACE $<$<COMPILE_LANGUAGE:CXX>:${OpenMP_CXX_FLAGS}>)
+  if(VTKm_ENABLE_CUDA)
+    string(REPLACE ";" "," openmp_cuda_flags "-Xcompiler=${OpenMP_CXX_FLAGS}")
+    target_compile_options(vtkm_openmp INTERFACE $<$<COMPILE_LANGUAGE:CUDA>:${openmp_cuda_flags}>)
   endif()
+  set_target_properties(vtkm_openmp PROPERTIES EXPORT_NAME openmp)
   install(TARGETS vtkm_openmp EXPORT ${VTKm_EXPORT_NAME})
 endif()
