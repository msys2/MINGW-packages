--- ghostpdl-9.26/xps/xpstiff.c.orig	2018-11-21 08:41:14.135854600 -0500
+++ ghostpdl-9.26/xps/xpstiff.c	2018-11-21 09:23:32.830860400 -0500
@@ -88,7 +88,7 @@ enum
 {
     TII = 0x4949, /* 'II' */
     TMM = 0x4d4d, /* 'MM' */
-    TBYTE = 1,
+    _TBYTE = 1,
     TASCII = 2,
     TSHORT = 3,
     TLONG = 4,
@@ -852,7 +852,7 @@ xps_read_tiff_tag_value(unsigned *p, xps
             *p = *p / readlong(tiff);
             p ++;
             break;
-        case TBYTE: *p++ = readbyte(tiff); break;
+        case _TBYTE: *p++ = readbyte(tiff); break;
         case TSHORT: *p++ = readshort(tiff); break;
         case TLONG: *p++ = readlong(tiff); break;
         default: *p++ = 0; break;
@@ -874,7 +874,7 @@ xps_read_tiff_tag(xps_context_t *ctx, xp
     type = readshort(tiff);
     count = readlong(tiff);
 
-    if ((type == TBYTE && count <= 4) ||
+    if ((type == _TBYTE && count <= 4) ||
             (type == TSHORT && count <= 2) ||
             (type == TLONG && count <= 1))
         value = tiff->rp - tiff->bp;
@@ -942,7 +942,7 @@ xps_read_tiff_tag(xps_context_t *ctx, xp
         if (!tiff->profile)
             return gs_throw(gs_error_VMerror, "could not allocate embedded icc profile");
         /* ICC profile data type is set to UNDEFINED.
-         * TBYTE reading not correct in xps_read_tiff_tag_value */
+         * _TBYTE reading not correct in xps_read_tiff_tag_value */
         xps_read_tiff_bytes(tiff->profile, tiff, value, count);
         tiff->profilesize = count;
         break;
