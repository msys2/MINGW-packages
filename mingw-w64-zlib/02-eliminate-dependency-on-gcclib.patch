--- a/adler32.c
+++ b/adler32.c
@@ -56,7 +56,25 @@
 #else
 #  define MOD(a) a %= BASE
 #  define MOD28(a) a %= BASE
-#  define MOD63(a) a %= BASE
+#  if defined(_WIN32) && defined(__GNUC__)
+     #include <stdint.h>
+
+     /* Uses x86 DIVL instruction to divide 64-bit dividend by 32-bit divisor.
+      * Returns a 32-bit remainder. */
+     static inline uint32_t reml (uint64_t Dividend, uint32_t Divisor) {
+       uint32_t Quotient, Remainder;
+
+       asm ("divl %4"
+           : "=d" (Remainder), "=a" (Quotient)
+           : "0" (*((uint32_t *) &Dividend + 1)), "1" ((uint32_t) Dividend), "rm" (Divisor)
+           );
+
+       return Remainder;
+     }
+#    define MOD63(a) a = reml(a, BASE)
+#  else
+#    define MOD63(a) a %= BASE
+#  endif
 #endif
 
 /* ========================================================================= */
