# Maintainer: Sarah Ottinger <schalaalexiazeal@gmail.com>

_realname=aioresponses
pkgbase=mingw-w64-python-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-python-${_realname}")
pkgver=0.7.2
pkgrel=2
pkgdesc='A helper to mock/fake web requests in python aiohttp package. (mingw-w64)'
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32')
url="https://github.com/pnuckowski/aioresponses"
license=('MIT')
depends=("${MINGW_PACKAGE_PREFIX}-python-aiohttp")
checkdepends=("${MINGW_PACKAGE_PREFIX}-python-asynctest" "${MINGW_PACKAGE_PREFIX}-python-ddt" "${MINGW_PACKAGE_PREFIX}-python-pytest-runner")
makedepends=("${MINGW_PACKAGE_PREFIX}-python-pbr")
source=("https://github.com/pnuckowski/aioresponses/archive/$pkgver.tar.gz")
sha256sums=('1bef1328f6732cd10b6d9c4ce02bd0198ffd491728d3c57f8e47fef1e427c5d3')

export PBR_VERSION=$pkgver

prepare() {  
  rm -rf python-build-${CARCH} | true
  cp -r "${_realname}-$pkgver" "python-build-${CARCH}"
}

build() {
  msg "Python build for ${CARCH}"
  cd "${srcdir}/python-build-${CARCH}"
  ${MINGW_PREFIX}/bin/python setup.py build
}

check() {
  cd "${srcdir}/python-build-${CARCH}"
  ${MINGW_PREFIX}/bin/python setup.py pytest || warning "Tests failed"
}

package() {
  cd "${srcdir}/python-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build
  install -Dm644 LICENSE "${pkgdir}${MINGW_PREFIX}/share/licenses/python-${_realname}/LICENSE"
}
