--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -582,7 +582,7 @@
     # whole-archive linker option not available on AIX
     target_sources(onnx_cpp2py_export
                           PRIVATE $<TARGET_OBJECTS:onnx>)
-  else()
+  elseif(NOT MINGW)
     # Assume everything else is like gcc
     target_link_libraries(onnx_cpp2py_export
                           PRIVATE "-Wl,--whole-archive" $<TARGET_FILE:onnx>
@@ -598,8 +598,11 @@
 
   target_link_libraries(onnx_cpp2py_export PRIVATE onnx)
 
-  if(MSVC)
+  if(WIN32)
     target_link_libraries(onnx_cpp2py_export PRIVATE ${PYTHON_LIBRARIES})
+  endif()
+
+  if(MSVC)
     target_compile_options(onnx_cpp2py_export
                            PRIVATE /MP
                                    /wd4244 # 'argument': conversion from 'google::
@@ -746,7 +749,10 @@
 
 install(TARGETS
   onnx onnx_proto
-  EXPORT ONNXTargets DESTINATION ${CMAKE_INSTALL_LIBDIR})
+  EXPORT ONNXTargets
+  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+  ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
+  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
 
 if(ONNX_BUILD_TESTS)
   include(${ONNX_ROOT}/cmake/unittest.cmake)
--- a/cmake/ONNXConfig.cmake.in
+++ b/cmake/ONNXConfig.cmake.in
@@ -6,8 +6,6 @@
 # library version information
 set(ONNX_VERSION "@ONNX_VERSION@")
 
-list(APPEND CMAKE_PREFIX_PATH "@PROTOBUF_DIR@")
-set(Protobuf_INCLUDE_DIR "@PROTOBUF_INCLUDE_DIR@")
 find_package(Protobuf REQUIRED)
 
 # import targets
--- a/setup.py
+++ b/setup.py
@@ -29,7 +29,7 @@
 TOP_DIR = os.path.realpath(os.path.dirname(__file__))
 CMAKE_BUILD_DIR = os.path.join(TOP_DIR, ".setuptools-cmake-build")
 
-WINDOWS = os.name == "nt"
+WINDOWS = os.name == "nt" and 'MSC' in sys.version
 
 CMAKE = shutil.which("cmake3") or shutil.which("cmake")
 
