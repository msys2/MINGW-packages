# Maintainer: Alexey Pavlov <Alexpux@gmail.com>

_realname=doxygen
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=1.9.6
pkgrel=2
pkgdesc="A documentation system for C++, C, Java, IDL and PHP (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32' 'clangarm64')
url="https://www.doxygen.nl/"
license=('GPL')
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
         $([[ ${MINGW_PACKAGE_PREFIX} != *-clang-* ]] || echo "${MINGW_PACKAGE_PREFIX}-clang")
         "${MINGW_PACKAGE_PREFIX}-libiconv"
         "${MINGW_PACKAGE_PREFIX}-sqlite3"
         "${MINGW_PACKAGE_PREFIX}-xapian-core")
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-pkg-config"
             $([[ ${MINGW_PACKAGE_PREFIX} != *-clang-* ]] || echo "${MINGW_PACKAGE_PREFIX}-clang-tools-extra")
             "${MINGW_PACKAGE_PREFIX}-python"
             $([[ ${CARCH} != i686 ]] && echo \
               "${MINGW_PACKAGE_PREFIX}-qt6-base" || echo \
               "${MINGW_PACKAGE_PREFIX}-qt5-base"))
if [[ ${CARCH} != i686 ]]; then
  optdepends=("${MINGW_PACKAGE_PREFIX}-qt6-base: for doxywizard")
else
  optdepends=("${MINGW_PACKAGE_PREFIX}-qt5-base: for doxywizard")
fi
source=(${_realname}-${pkgver}.tar.gz::https://github.com/doxygen/doxygen/archive/Release_${pkgver//./_}.tar.gz
        cmake-mingw.patch
        "0001-fix-conversion-from-fs-path-to-string.patch"
        "0003-remove-git-version-from-bins.patch")
sha256sums=('2a3ee47f7276b759f74bac7614c05a1296a5b028d3f6a79a88e4c213db78e7dc'
            '7a74cdd4cfaba3f5521b5179a91eec4ad96c1da89534576be356238809df4aa6'
            'SKIP'
            'a57e2e680b0a01496d4f84e275e1095a9f092ede6903c63524f15d28884dd0f5')

apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying $_patch"
    patch -Nbp1 -i "${srcdir}/$_patch"
  done
}

prepare() {
  cd "${srcdir}/${_realname}-Release_${pkgver//./_}"

  apply_patch_with_msg \
    cmake-mingw.patch \
    0001-fix-conversion-from-fs-path-to-string.patch \
    0003-remove-git-version-from-bins.patch
}

build() {
  [[ -d build-${MSYSTEM} ]] && rm -rf build-${MSYSTEM}
  mkdir build-${MSYSTEM} && cd build-${MSYSTEM}

  declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  if [[ "${MSYSTEM}" == "CLANG32" ]]; then
    # https://github.com/msys2/MINGW-packages/issues/11787
    extra_config+=("-DCMAKE_CXX_FLAGS_RELEASE=-O1 -DNDEBUG")
    extra_config+=("-DDCMAKE_C_FLAGS_RELEASE=-O1 -DNDEBUG")
  fi

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake \
    -G"Ninja" \
    "${extra_config[@]}" \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -Dbuild_wizard=ON \
    -Dbuild_search=ON \
    -Duse_sqlite3=ON \
    -Duse_libclang=$([[ ${MINGW_PACKAGE_PREFIX} != *-clang-* ]] && echo "OFF" || echo "ON") \
    -Dbuild_parse=ON \
    ../${_realname}-Release_${pkgver//./_}

  # fix some generated makefiles: replace LLVM-NOTFOUND by the path to LLVM.dll
  # llvm_path_mixed=$(cygpath -m `which libLLVM.dll`)
  # llvm_path_unix=$(echo ${llvm_path_mixed} | sed 's|C:|/C|')
  # sed -e "s|\(bin/.*\.exe: \)LLVM-NOTFOUND|\1${llvm_path_mixed}|" \
      # -e "s|\(.*libclangBasic.a \)LLVM-NOTFOUND|\1${llvm_path_unix}|" \
      # -i ./addon/doxyparse/CMakeFiles/doxyparse.dir/build.make \
         # ./src/CMakeFiles/doxygen.dir/build.make

  ${MINGW_PREFIX}/bin/cmake --build .
}

package() {
  cd ${srcdir}/build-${MSYSTEM}
  DESTDIR="${pkgdir}" ${MINGW_PREFIX}/bin/cmake --install .
}
