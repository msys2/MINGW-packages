# Maintainer: Andrew Sun <adsun701@gmail.com>

_realname=alembic
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=1.7.8
pkgrel=1
pkgdesc="A open framework for storing and sharing scene data (mingw-w64)"
arch=('any')
url="http://www.alembic.io/"
license=('BSD3')
depends=("${MINGW_PACKAGE_PREFIX}-openexr"
         "${MINGW_PACKAGE_PREFIX}-boost"
         "${MINGW_PACKAGE_PREFIX}-hdf5"
         "${MINGW_PACKAGE_PREFIX}-zlib")
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake" "${MINGW_PACKAGE_PREFIX}-boost")
source=("${_realname}-${pkgver}.tar.gz"::"https://github.com/alembic/${_realname}/archive/${pkgver}.tar.gz"
        "0001-alembic-1.7.8-fix-windows-build.patch"
        "0002-alembic-1.7.8-remove-msc_ver-and-fix-builtins-and-includes.patch")
sha512sums=('bc36e30d1aecd67da16247365a973c462e9716309d090fefe36f625c8d2ab2d517fe8ac694a9188cd6eeb623a3217f59f461c82fcfec43d0a60a07381526983a'
            'ed3bea46beaa6027fe2c7335e6f55c6a38029834ccd4564530cacb1868275e0730158261585dfa6a9275a067b415b6e1b2a203ca0bee3d07b1cb094cfa3642ea'
            '8859c7e5064085a87c1f9c4f2c04282974e4e922ac3c75d35d1186526cae30aa5e8a4cfb3252fd5df91a76ae815e986fe5cb4c329b309b0ca9c01efe56fe1f83')

prepare() {
  cd "${srcdir}"/${_realname}-${pkgver}
  patch -Np1 -i "${srcdir}/0001-alembic-1.7.8-fix-windows-build.patch"
  patch -Np1 -i "${srcdir}/0002-alembic-1.7.8-remove-msc_ver-and-fix-builtins-and-includes.patch"
}

build() {
  # Static Build
  cd "${srcdir}"/${_realname}-${pkgver}
  [[ -d "${srcdir}"/build-${CARCH}-static ]] && rm -rf "${srcdir}"/build-${CARCH}-static
  mkdir -p "${srcdir}"/build-${CARCH}-static && cd "${srcdir}"/build-${CARCH}-static

  declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake \
      -G'MSYS Makefiles' \
      -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
      "${extra_config[@]}" \
      -DUSE_HDF5=ON \
      -DALEMBIC_SHARED_LIBS=0 \
      ../${_realname}-${pkgver}

  make
  
  # Shared Build
  cd "${srcdir}"/${_realname}-${pkgver}
  [[ -d "${srcdir}"/build-${CARCH}-shared ]] && rm -rf "${srcdir}"/build-${CARCH}-shared
  mkdir -p "${srcdir}"/build-${CARCH}-shared && cd "${srcdir}"/build-${CARCH}-shared

  declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake \
      -G'MSYS Makefiles' \
      -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
      "${extra_config[@]}" \
      -DUSE_HDF5=ON \
      -DALEMBIC_SHARED_LIBS=1 \
      ../${_realname}-${pkgver}

  make
}

package() {
  
  # Static Install
  cd "${srcdir}"/build-${CARCH}-static
  make install DESTDIR="${pkgdir}"

  # Shared Install
  cd "${srcdir}"/build-${CARCH}-shared
  make install DESTDIR="${pkgdir}"

  local WINPREFIX=$(cygpath -wm ${MINGW_PREFIX})
  # Fix paths
  sed -i "s|${WINPREFIX}|${MINGW_PREFIX}|g" \
    ${pkgdir}${MINGW_PREFIX}/lib/cmake/Alembic/AlembicTargets.cmake \
    ${pkgdir}${MINGW_PREFIX}/lib/cmake/Alembic/AlembicTargets-release.cmake
  
  install -Dm644 ${srcdir}/${_realname}-${pkgver}/LICENSE.txt "${pkgdir}${MINGW_PREFIX}"/share/licenses/${_realname}/LICENSE
}
