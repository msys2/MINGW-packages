# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=openimageio
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=2.1.10.1
pkgrel=1
pkgdesc="A library for reading and writing images, including classes, utilities, and applications (mingw-w64)"
arch=('any')
url="https://www.openimageio.org/"
license=("custom")
depends=("${MINGW_PACKAGE_PREFIX}-boost"
         "${MINGW_PACKAGE_PREFIX}-field3d"
         "${MINGW_PACKAGE_PREFIX}-freetype"
         "${MINGW_PACKAGE_PREFIX}-jasper"
         "${MINGW_PACKAGE_PREFIX}-giflib"
         "${MINGW_PACKAGE_PREFIX}-glew"
         "${MINGW_PACKAGE_PREFIX}-hdf5"
         "${MINGW_PACKAGE_PREFIX}-libheif"
         "${MINGW_PACKAGE_PREFIX}-libjpeg"
         "${MINGW_PACKAGE_PREFIX}-libpng"
         "${MINGW_PACKAGE_PREFIX}-libraw"
         "${MINGW_PACKAGE_PREFIX}-libsquish"
         "${MINGW_PACKAGE_PREFIX}-libtiff"
         "${MINGW_PACKAGE_PREFIX}-libwebp"
         "${MINGW_PACKAGE_PREFIX}-opencolorio"
         "${MINGW_PACKAGE_PREFIX}-opencv"
         "${MINGW_PACKAGE_PREFIX}-openexr"
         "${MINGW_PACKAGE_PREFIX}-openjpeg"
         "${MINGW_PACKAGE_PREFIX}-openssl"
         "${MINGW_PACKAGE_PREFIX}-ptex"
         "${MINGW_PACKAGE_PREFIX}-pugixml"
         "${MINGW_PACKAGE_PREFIX}-zlib")
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             #"${MINGW_PACKAGE_PREFIX}-qt5"
             "${MINGW_PACKAGE_PREFIX}-python3"
             "${MINGW_PACKAGE_PREFIX}-boost"
             "${MINGW_PACKAGE_PREFIX}-pybind11"
             "git")
optdepends=(#"${MINGW_PACKAGE_PREFIX}-qt5: iv image viewer"
            "${MINGW_PACKAGE_PREFIX}-python3: bindings support")
options=('strip' 'buildflags' '!debug')
source=(${_realname}-${pkgver}.tar.gz::https://github.com/OpenImageIO/oiio/archive/Release-${pkgver}.tar.gz
        git+https://github.com/OpenImageIO/oiio-images.git
        0000-fix-mingw-w64.patch
        0000-workaround-ansidecl-h-PTR-define-conflict.patch
        0001-MinGW-w64-include-winbase-h-early-for-TCHAR-types.patch
        0007-find-pugixml.patch
        0008-find-openjpeg.patch
        0011-fix-casting.patch
        0012-maybe-uninitialized-errors.patch
        0013-dont-export-enums.patch
        0014-fix-ptex-string-format.patch)
sha256sums=('640e40b559a59129c14a980cec75668c857b09639fade09395e0824a634b6956'
            'SKIP'
            '73c46166c1d19922b6b54f4e1e18128c33dadbc72a36b683049ec297ce1056b3'
            '9e4e21333676268a91c0f4e7676aeab7658e5f748e7e5cfe43a92f0fd7931229'
            'b7cc78d0f535ceb1aba68b11970c32ffbf04815d229b12e64e2c2c0b3403b4b2'
            '2a65114ebfa945876751283bcae50f695b31c772294311cca72f72c93ab098f1'
            'c3816722d2e571e236f6d0512d407854f2744416891b44faf6912b1506f79481'
            'f006ddd0b0a3660ba074eee970af0e7d1c0538528c56166e06a1ded30413f635'
            'bc37ea8326f7f5f26068051b537f2491e9554a380e6584bf55aaad111d33eb81'
            'b3d1ce84de09b2de5047c79c7a9fbaff59d7cd45d0ce92ddd11fe40082a781b4'
            '6845acb6229a40512407a983aa07470e9ff1832db7a1e01c408ee74898ddc504')

prepare() {
  cd ${srcdir}/oiio-Release-${pkgver}
  patch -p1 -i ${srcdir}/0000-fix-mingw-w64.patch
  patch -p1 -i ${srcdir}/0000-workaround-ansidecl-h-PTR-define-conflict.patch
  patch -p1 -i ${srcdir}/0001-MinGW-w64-include-winbase-h-early-for-TCHAR-types.patch
  patch -p1 -i ${srcdir}/0007-find-pugixml.patch
  patch -p1 -i ${srcdir}/0008-find-openjpeg.patch
  patch -p1 -i ${srcdir}/0011-fix-casting.patch
  patch -p1 -i ${srcdir}/0012-maybe-uninitialized-errors.patch
  patch -p1 -i ${srcdir}/0013-dont-export-enums.patch
  patch -p1 -i ${srcdir}/0014-fix-ptex-string-format.patch
}

build() {
  declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  [[ -d "build-${MINGW_CHOST}" ]] && rm -rf "build-${MINGW_CHOST}"
  mkdir -p build-${MINGW_CHOST} && cd build-${MINGW_CHOST}

  local _pyver=$(${MINGW_PREFIX}/bin/python3 -c "import sys;sys.stdout.write('.'.join(map(str, sys.version_info[:2])))")

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake.exe \
    -G"MSYS Makefiles" \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DUSE_FREETYPE=ON \
    -DUSE_OPENCV=ON \
    -DUSE_FIELD3D=ON \
    -DUSE_OPENGL=ON \
    -DUSE_QT=OFF \
    -DHIDE_SYMBOLS=ON \
    -DPYTHON_VERSION=${_pyver} \
    -DUSE_EXTERNAL_PUGIXML=ON \
    -DOIIO_BUILD_TESTS=ON \
    ${extra_config} \
    ../oiio-Release-${pkgver}

  make
}

package() {
  cd "${srcdir}"/build-${MINGW_CHOST}
  make DESTDIR=${pkgdir} install
  install -Dm644 ${srcdir}/oiio-Release-${pkgver}/LICENSE.md "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE.md"
  install -Dm644 ${srcdir}/oiio-Release-${pkgver}/LICENSE-THIRD-PARTY.md "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE-THIRD-PARTY.md"
}
