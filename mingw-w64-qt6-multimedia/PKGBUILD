# Contributor: Mehdi Chinoune <mehdi.chinoune@hotmail.com>

_realname=qt6-multimedia
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}"
         "${MINGW_PACKAGE_PREFIX}-${_realname}-debug")
_qtver=6.2.0
pkgver=${_qtver/-/}
pkgrel=3
arch=(any)
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32')
url='https://www.qt.io'
license=(GPL3 LGPL3 FDL custom)
pkgdesc='Classes for audio, video, radio and camera functionality (mingw-w64)'
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-qt6-declarative"
             "${MINGW_PACKAGE_PREFIX}-qt6-shadertools"
             "rsync")
options=('!strip')
_pkgfn="${_realname/6-/}-everywhere-src-${_qtver}"
source=("https://download.qt.io/official_releases/qt/${pkgver%.*}/$_qtver/submodules/$_pkgfn.tar.xz"
        "fix-wmf-feature.patch::https://github.com/qt/qtmultimedia/commit/a199c50.patch"
        "fix-function-decl.patch::https://github.com/qt/qtmultimedia/commit/3c74340.patch")
sha256sums=('f12b96e6da2ebfe84105c0cb6e96fbc6bda012de8998ec5c96b58c85dcb40b4f'
            '30e7eab87475d1613ea906e7a2aff567de821b6a0cdfa284a039a89b16b1047c'
            '325f6cce2a0bea49ecac002c49a83e4b49fa9ba8b1512601051c01fe014811bf')

prepare() {
  cd "${_pkgfn}"

  # These are already in 6.2.1 branch
  patch -p1 -i "${srcdir}/fix-wmf-feature.patch"
  patch -p1 -i "${srcdir}/fix-function-decl.patch"
}

build() {
  cd ${srcdir}
  [[ -d build-${MSYSTEM} ]] && rm -rf build-${MSYSTEM}
  mkdir -p build-${MSYSTEM} && cd build-${MSYSTEM}

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  cmake \
    -GNinja \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DFEATURE_wmf=ON \
    ../${_pkgfn}

  cmake --build .
}

package_qt6-multimedia() {
  depends=("${MINGW_PACKAGE_PREFIX}-qt6-base"
           "${MINGW_PACKAGE_PREFIX}-qt6-shadertools")
  optdepends=("${MINGW_PACKAGE_PREFIX}-qt6-declarative")
  groups=("${MINGW_PACKAGE_PREFIX}-qt6")

  DESTDIR=${pkgdir} cmake --install build-${MSYSTEM}

  # Seperate debug-info files
  rsync -armR --remove-source-files --include="*/" --include="*.debug" --exclude="*" --prune-empty-dirs ${pkgdir}/.${MINGW_PREFIX} ${srcdir}/${MSYSTEM}-debug/

  install -d "$pkgdir${MINGW_PREFIX}"/share/licenses/${_realname}
  install -Dm644 $_pkgfn/LICENSE* -t "$pkgdir${MINGW_PREFIX}"/share/licenses/${_realname}
}

package_qt6-multimedia-debug() {
  depends=("${MINGW_PACKAGE_PREFIX}-qt6-base-debug"
           "${MINGW_PACKAGE_PREFIX}-qt6-shadertools-debug"
           "${MINGW_PACKAGE_PREFIX}-${_realname}")
  groups=("${MINGW_PACKAGE_PREFIX}-qt6-debug")

  cp -rf ${srcdir}/${MSYSTEM}-debug${MINGW_PREFIX} "${pkgdir}"/
}

# template start; name=mingw-w64-splitpkg-wrappers; version=1.0;
# vim: set ft=bash :

# generate wrappers
for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
# template end;
