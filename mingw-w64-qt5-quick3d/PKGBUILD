# Contibutor: Mehdi Chinoune <mehdi.chinoune@hotmail.com>

_realname=qt5-quick3d
pkgbase="mingw-w64-${_realname}"
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
_qtver=5.15.2
pkgver=${_qtver/-/}
pkgrel=1
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32')
pkgdesc="Qt module and API for defining 3D content in Qt Quick (Development Tools, QtHelp) (mingw-w64)"
url='https://www.qt.io/'
license=('GPL3' 'LGPL' 'FDL' 'custom')
depends=("${MINGW_PACKAGE_PREFIX}-qt5-declarative")
makedepends=("${MINGW_PACKAGE_PREFIX}-assimp")
optdepends=("${MINGW_PACKAGE_PREFIX}-assimp")
groups=("${MINGW_PACKAGE_PREFIX}-qt5")
options=('!strip' 'staticlibs' 'ccache')
_pkgfn="${_realname/5-/}-everywhere-src-${_qtver}"
source=("https://download.qt.io/official_releases/qt/${pkgver%.*}/$_qtver/submodules/$_pkgfn.tar.xz"
        001-fix-static-build-big-resources.patch
        002-fix-assimp-not-found.patch)
sha256sums=('5b0546323365ce34e4716f22f305ebb4902e222c1a0910b65ee448443c2f94bb'
            'c0b2ed679d9938e10a0791f0cbb6242880d9d852c4879064613d6831e0e9b079'
            'd304e4a30d4ada18baa368b21b316fe88206a4769e10afd4bcc0792912efb4b1')

prepare() {
  cd ${srcdir}/${_pkgfn}

  apply_patch_with_msg \
    001-fix-static-build-big-resources.patch \
    002-fix-assimp-not-found.patch
}

build() {
  cd ${srcdir}
  [[ -d build-${MSYSTEM} ]] && rm -rf build-${MSYSTEM}
  mkdir -p build-${MSYSTEM}
  cd build-${MSYSTEM}

  # https://github.com/msys2/MSYS2-packages/issues/2282
  export MSYS2_ARG_CONV_EXCL='--foreign-types='

  qmake ../${_pkgfn}

  make
}

check() {
  cd build-${MSYSTEM}
  make check -j1 -k
}

package() {
  cd build-${MSYSTEM}

  make install

  install -d "$pkgdir${MINGW_PREFIX}"/share/licenses/${_realname}
  install -Dm644 $srcdir${_pkgfn}/LICENSE* -t "$pkgdir${MINGW_PREFIX}"/share/licenses/${_realname}

  # Workaround for installing empty .pc files
  plain "---> Fix pkgconfig files..."
  local _pc_files=( $(find ${srcdir}/build-${MSYSTEM} -type f -name Qt5*.pc) )
  cp -f ${_pc_files[@]} ${pkgdir}${MINGW_PREFIX}/lib/pkgconfig/

  # Fix paths in qconfig.pri and qmodule.pri:
  #   $(cygpath -m ${MINGW_PREFIX}) -> $(cygpath -m ${pkgdir}${MINGW_PREFIX})
  local QT_PREFIX_WIN=$(cygpath -m ${MINGW_PREFIX})
  local PKGDIR_QT_PREFIX_WIN=$(cygpath -m ${pkgdir}${MINGW_PREFIX})
  local FAKE_PREFIX_FOR_REPLACE="@@QT_REAL_PREFIX/dir@@"
  local MINGW_PREFIX_WIN=$(cygpath -m ${MINGW_PREFIX})

  find "${pkgdir}${MINGW_PREFIX}/share/qt5" -type f \( -name '*.pri' -o -name '*.prl' \) \
      -exec sed -i -e "s|${QT_PREFIX_WIN}|${FAKE_PREFIX_FOR_REPLACE}|g" {} \;

  find "${pkgdir}${MINGW_PREFIX}/lib" -type f \( -name '*.pri' -o -name '*.prl' \) \
      -exec sed -i -e "s|${QT_PREFIX_WIN}|${FAKE_PREFIX_FOR_REPLACE}|g" {} \;

  find "${pkgdir}${MINGW_PREFIX}/lib" -type f -name '*.cmake' \
      -exec sed -i -e "s|${QT_PREFIX_WIN}|${FAKE_PREFIX_FOR_REPLACE}|g" {} \;

  find "${pkgdir}${MINGW_PREFIX}/lib/pkgconfig" -type f -name '*.pc' \
      -exec sed -i -e "s|${QT_PREFIX_WIN}|${MINGW_PREFIX}|g" {} \;

  find "${pkgdir}${MINGW_PREFIX}/lib/pkgconfig" -type f -name '*.pc' \
      -exec sed -i -e "s|${PKGDIR_QT_PREFIX_WIN}|${MINGW_PREFIX}|g" {} \;
}
