--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -132,18 +132,18 @@
 
 if (PNG_FOUND)
 	set(GD_PROGRAMS ${GD_PROGRAMS} gdtopng pngtogd)
-	if (NOT WIN32)
+	if (NOT MSVC)
 		set(GD_PROGRAMS ${GD_PROGRAMS} webpng)
-	endif (NOT WIN32)
+	endif (NOT MSVC)
 	if (ZLIB_FOUND)
 		set(GD_PROGRAMS ${GD_PROGRAMS} gdparttopng gd2topng pngtogd2)
 	endif()
 endif()
 
 if (FREETYPE_FOUND AND JPEG_FOUND)
-	if (NOT WIN32)
+	if (NOT MSVC)
 		set(GD_PROGRAMS ${GD_PROGRAMS} annotate)
-	endif (NOT WIN32)
+	endif (NOT MSVC)
 endif()
 
 if (ZLIB_FOUND)
@@ -152,11 +152,6 @@
 
 foreach(program ${GD_PROGRAMS})
     add_executable(${program} ${program}.c)
-	if (WIN32)
-		list(REMOVE_ITEM program webpng.c annotate.c)
-		list(REMOVE_ITEM GD_PROGRAMS webpng)
-		list(REMOVE_ITEM GD_PROGRAMS annotate)
-	endif (WIN32)
 
     if (BUILD_SHARED_LIBS)
         target_link_libraries(${program} ${GD_LIB})
--- a/src/annotate.c
+++ b/src/annotate.c
@@ -13,6 +13,60 @@
  */
 
 enum { left, center, right };
+
+#ifdef _WIN32
+size_t getline(char **lineptr, size_t *n, FILE *stream) {
+    char *bufptr = NULL;
+    char *p = bufptr;
+    size_t size;
+    int c;
+
+    if (lineptr == NULL) {
+        return -1;
+    }
+    if (stream == NULL) {
+        return -1;
+    }
+    if (n == NULL) {
+        return -1;
+    }
+    bufptr = *lineptr;
+    size = *n;
+
+    c = fgetc(stream);
+    if (c == EOF) {
+        return -1;
+    }
+    if (bufptr == NULL) {
+        bufptr = malloc(128);
+        if (bufptr == NULL) {
+            return -1;
+        }
+        size = 128;
+    }
+    p = bufptr;
+    while(c != EOF) {
+        if ((p - bufptr) > (size - 1)) {
+            size = size + 128;
+            bufptr = realloc(bufptr, size);
+            if (bufptr == NULL) {
+                return -1;
+            }
+        }
+        *p++ = c;
+        if (c == '\n') {
+            break;
+        }
+        c = fgetc(stream);
+    }
+
+    *p++ = '\0';
+    *lineptr = bufptr;
+    *n = size;
+
+    return p - bufptr - 1;
+}
+#endif
 
 int main(int argc, char *argv[])
 {
