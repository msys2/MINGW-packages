From cb3a07e41f3fa8e8bc87cf457751cab123a9b58d Mon Sep 17 00:00:00 2001
From: Oscar Fuentes <ofv@wanadoo.es>
Date: Sun, 4 Sep 2022 00:27:12 +0200
Subject: [PATCH] Enable fancy progress line when $TERM != dumb on Windows
 (#2171)

---
 src/line_printer.cc | 18 ++++++++++++++++--
 1 file changed, 16 insertions(+), 2 deletions(-)

diff --git a/src/line_printer.cc b/src/line_printer.cc
index a3d0528..06833e1 100644
--- a/src/line_printer.cc
+++ b/src/line_printer.cc
@@ -37,8 +37,10 @@ LinePrinter::LinePrinter() : have_blank_line_(true), console_locked_(false) {
 #ifndef _WIN32
   smart_terminal_ = isatty(1) && term && string(term) != "dumb";
 #else
-  if (term && string(term) == "dumb") {
-    smart_terminal_ = false;
+  if (term) {
+    // Assume we are in a terminal emulator.
+    smart_terminal_ = string(term) != "dumb";
+    console_ = INVALID_HANDLE_VALUE;
   } else {
     console_ = GetStdHandle(STD_OUTPUT_HANDLE);
     CONSOLE_SCREEN_BUFFER_INFO csbi;
@@ -51,6 +53,10 @@ LinePrinter::LinePrinter() : have_blank_line_(true), console_locked_(false) {
     supports_color_ = clicolor_force && string(clicolor_force) != "0";
   }
 #ifdef _WIN32
+  // On Windows it is not possible to distinguish a terminal emulator
+  // from a pipe and ANSI escape sequences break applications that
+  // parse ninja's output (cmake, for instance):
+  supports_color_ = supports_color_ && console_ != INVALID_HANDLE_VALUE;
   // Try enabling ANSI escape sequence support on Windows 10 terminals.
   if (supports_color_) {
     DWORD mode;
@@ -78,6 +84,14 @@ void LinePrinter::Print(string to_print, LineType type) {
 
   if (smart_terminal_ && type == ELIDE) {
 #ifdef _WIN32
+    if (console_ == INVALID_HANDLE_VALUE) {
+      // Assume we are in a terminal emulator.
+      to_print = ElideMiddle(to_print, 80);
+      printf("%s", to_print.c_str());
+      fflush(stdout);
+      return;
+    }
+
     CONSOLE_SCREEN_BUFFER_INFO csbi;
     GetConsoleScreenBufferInfo(console_, &csbi);
 
-- 
2.30.2.windows.1

