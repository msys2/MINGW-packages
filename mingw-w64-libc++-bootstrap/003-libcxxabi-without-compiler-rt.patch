diff --git a/cmake/config-ix.cmake b/cmake/config-ix.cmake
index 10f2087..c8a0d01 100644
--- a/cmake/config-ix.cmake
+++ b/cmake/config-ix.cmake
@@ -10,7 +10,8 @@ if (NOT LIBCXXABI_USE_COMPILER_RT)
     check_library_exists(gcc __gcc_personality_v0 "" LIBCXXABI_HAS_GCC_LIB)
   else ()
     check_library_exists(gcc_s __gcc_personality_v0 "" LIBCXXABI_HAS_GCC_S_LIB)
-    check_library_exists(gcc __aeabi_uldivmod "" LIBCXXABI_HAS_GCC_LIB)
+    check_library_exists(gcc __absvdi2 "" LIBCXXABI_HAS_GCC_LIB)
+    check_library_exists(gcc_eh _Unwind_GetRegionStart "" LIBCXXABI_HAS_GCC_EH_LIB)
   endif ()
 endif ()
 
@@ -26,16 +27,15 @@ endif ()
 check_cxx_compiler_flag(-nostdlib++ CXX_SUPPORTS_NOSTDLIBXX_FLAG)
 if (CXX_SUPPORTS_NOSTDLIBXX_FLAG)
   set(CMAKE_REQUIRED_FLAGS "${CMAKE_REQUIRED_FLAGS} -nostdlib++")
-else()
-  check_c_compiler_flag(-nodefaultlibs C_SUPPORTS_NODEFAULTLIBS_FLAG)
-  if (C_SUPPORTS_NODEFAULTLIBS_FLAG)
-    set(CMAKE_REQUIRED_FLAGS "${CMAKE_REQUIRED_FLAGS} -nodefaultlibs")
-  endif()
+endif()
+check_c_compiler_flag(-nodefaultlibs C_SUPPORTS_NODEFAULTLIBS_FLAG)
+if (C_SUPPORTS_NODEFAULTLIBS_FLAG)
+  set(CMAKE_REQUIRED_FLAGS "${CMAKE_REQUIRED_FLAGS} -nodefaultlibs")
 endif()
 
 # Only link against compiler-rt manually if we use -nodefaultlibs, since
 # otherwise the compiler will do the right thing on its own.
-if (NOT CXX_SUPPORTS_NOSTDLIBXX_FLAG AND C_SUPPORTS_NODEFAULTLIBS_FLAG)
+if ((NOT CXX_SUPPORTS_NOSTDLIBXX_FLAG AND C_SUPPORTS_NODEFAULTLIBS_FLAG) OR MINGW)
   if (LIBCXXABI_HAS_C_LIB)
     list(APPEND CMAKE_REQUIRED_LIBRARIES c)
   endif ()
@@ -55,6 +55,9 @@ if (NOT CXX_SUPPORTS_NOSTDLIBXX_FLAG AND C_SUPPORTS_NODEFAULTLIBS_FLAG)
     if (LIBCXXABI_HAS_GCC_LIB)
       list(APPEND CMAKE_REQUIRED_LIBRARIES gcc)
     endif ()
+    if (LIBCXXABI_HAS_GCC_EH_LIB)
+      list(APPEND CMAKE_REQUIRED_LIBRARIES gcc_eh)
+    endif ()
   endif ()
   if (MINGW)
     # Mingw64 requires quite a few "C" runtime libraries in order for basic
@@ -62,7 +65,11 @@ if (NOT CXX_SUPPORTS_NOSTDLIBXX_FLAG AND C_SUPPORTS_NODEFAULTLIBS_FLAG)
     if (LIBCXXABI_USE_COMPILER_RT)
       set(MINGW_RUNTIME ${LIBCXXABI_BUILTINS_LIBRARY})
     else ()
-      set(MINGW_RUNTIME gcc_s gcc)
+      if (LIBCXXABI_ENABLE_SHARED)
+        set(MINGW_RUNTIME gcc gcc_s)
+      else ()
+        set(MINGW_RUNTIME gcc gcc_eh)
+      endif ()
     endif()
     set(MINGW_LIBRARIES mingw32 ${MINGW_RUNTIME} moldname mingwex msvcrt advapi32
                         shell32 user32 kernel32 mingw32 ${MINGW_RUNTIME}
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index f4722c3..5c990de 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -80,6 +80,7 @@ if (NOT LIBCXXABI_USE_COMPILER_RT)
 endif()
 if (NOT LIBCXXABI_USE_LLVM_UNWINDER)
   add_library_flags_if(LIBCXXABI_HAS_GCC_S_LIB gcc_s)
+  add_library_flags_if(LIBCXXABI_HAS_GCC_EH_LIB gcc_eh)
 endif()
 
 if (MINGW)
@@ -185,6 +186,11 @@ endif()
 
 if (LIBCXXABI_ENABLE_SHARED)
   add_library(cxxabi_shared SHARED)
+  if (LIBCXXABI_USE_LLVM_UNWINDER AND NOT LIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY)
+    target_link_libraries(cxxabi_shared PUBLIC cxx_shared unwind_shared)
+  else()
+    target_link_libraries(cxxabi_shared PRIVATE cxx_shared)
+  endif()
   set_target_properties(cxxabi_shared
     PROPERTIES
       LINK_FLAGS "${LIBCXXABI_LINK_FLAGS}"
