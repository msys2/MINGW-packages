diff --git a/cmake/config-ix.cmake b/cmake/config-ix.cmake
index 1e8c2f5..cee717e 100644
--- a/cmake/config-ix.cmake
+++ b/cmake/config-ix.cmake
@@ -22,6 +22,8 @@ if (NOT LIBCXX_USE_COMPILER_RT)
       check_library_exists(gcc __gcc_personality_v0 "" LIBCXX_HAS_GCC_LIB)
     else()
       check_library_exists(gcc_s __gcc_personality_v0 "" LIBCXX_HAS_GCC_S_LIB)
+      check_library_exists(gcc __absvdi2 "" LIBCXX_HAS_GCC_LIB)
+      check_library_exists(gcc_eh _Unwind_GetRegionStart "" LIBCXX_HAS_GCC_EH_LIB)
     endif()
   endif()
 endif()
@@ -38,16 +40,15 @@ endif()
 check_cxx_compiler_flag(-nostdlib++ CXX_SUPPORTS_NOSTDLIBXX_FLAG)
 if (CXX_SUPPORTS_NOSTDLIBXX_FLAG)
   set(CMAKE_REQUIRED_FLAGS "${CMAKE_REQUIRED_FLAGS} -nostdlib++")
-else()
-  check_c_compiler_flag(-nodefaultlibs C_SUPPORTS_NODEFAULTLIBS_FLAG)
-  if (C_SUPPORTS_NODEFAULTLIBS_FLAG)
-    set(CMAKE_REQUIRED_FLAGS "${CMAKE_REQUIRED_FLAGS} -nodefaultlibs")
-  endif()
+endif()
+check_c_compiler_flag(-nodefaultlibs C_SUPPORTS_NODEFAULTLIBS_FLAG)
+if (C_SUPPORTS_NODEFAULTLIBS_FLAG)
+  set(CMAKE_REQUIRED_FLAGS "${CMAKE_REQUIRED_FLAGS} -nodefaultlibs")
 endif()
 
 # Only link against compiler-rt manually if we use -nodefaultlibs, since
 # otherwise the compiler will do the right thing on its own.
-if (NOT CXX_SUPPORTS_NOSTDLIBXX_FLAG AND C_SUPPORTS_NODEFAULTLIBS_FLAG)
+if ((NOT CXX_SUPPORTS_NOSTDLIBXX_FLAG AND C_SUPPORTS_NODEFAULTLIBS_FLAG) OR MINGW)
   if (LIBCXX_USE_COMPILER_RT)
     include(HandleCompilerRT)
     find_compiler_rt_library(builtins LIBCXX_BUILTINS_LIBRARY
@@ -57,10 +58,15 @@ if (NOT CXX_SUPPORTS_NOSTDLIBXX_FLAG AND C_SUPPORTS_NODEFAULTLIBS_FLAG)
     else()
       message(WARNING "Could not find builtins library from libc++")
     endif()
-  elseif (LIBCXX_HAS_GCC_LIB)
-    list(APPEND CMAKE_REQUIRED_LIBRARIES gcc)
-  elseif (LIBCXX_HAS_GCC_S_LIB)
-    list(APPEND CMAKE_REQUIRED_LIBRARIES gcc_s)
+  else ()
+    if (LIBCXX_HAS_GCC_LIB)
+      list(APPEND CMAKE_REQUIRED_LIBRARIES gcc)
+    endif ()
+    if (LIBCXX_HAS_GCC_S_LIB)
+      list(APPEND CMAKE_REQUIRED_LIBRARIES gcc_s)
+    else ()
+      list(APPEND CMAKE_REQUIRED_LIBRARIES gcc_eh)
+    endif ()
   endif ()
   if (MINGW)
     # Mingw64 requires quite a few "C" runtime libraries in order for basic
@@ -68,7 +74,11 @@ if (NOT CXX_SUPPORTS_NOSTDLIBXX_FLAG AND C_SUPPORTS_NODEFAULTLIBS_FLAG)
     if (LIBCXX_USE_COMPILER_RT)
       set(MINGW_RUNTIME ${LIBCXX_BUILTINS_LIBRARY})
     else ()
-      set(MINGW_RUNTIME gcc_s gcc)
+      if (LIBCXX_ENABLE_SHARED)
+        set(MINGW_RUNTIME gcc gcc_s)
+      else ()
+        set(MINGW_RUNTIME gcc gcc_eh)
+      endif()
     endif()
     set(MINGW_LIBRARIES mingw32 ${MINGW_RUNTIME} moldname mingwex msvcrt advapi32
                         shell32 user32 kernel32 mingw32 ${MINGW_RUNTIME}
