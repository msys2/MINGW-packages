diff --git a/cmake/config-ix.cmake b/cmake/config-ix.cmake
index 126c872..5078cdf 100644
--- a/cmake/config-ix.cmake
+++ b/cmake/config-ix.cmake
@@ -23,6 +23,7 @@ if (NOT LIBUNWIND_USE_COMPILER_RT)
   else ()
     check_library_exists(gcc_s __gcc_personality_v0 "" LIBUNWIND_HAS_GCC_S_LIB)
     check_library_exists(gcc __absvdi2 "" LIBUNWIND_HAS_GCC_LIB)
+    check_library_exists(gcc_eh _Unwind_GetRegionStart "" LIBUNWIND_HAS_GCC_EH_LIB)
   endif ()
 endif()
 
@@ -35,19 +36,18 @@ endif()
 # required for the link to go through. We remove sanitizers from the
 # configuration checks to avoid spurious link errors.
 
-llvm_check_compiler_linker_flag(CXX "-nostdlib++" CXX_SUPPORTS_NOSTDLIBXX_FLAG)
+check_cxx_compiler_flag(-nostdlib++ CXX_SUPPORTS_NOSTDLIBXX_FLAG)
 if (CXX_SUPPORTS_NOSTDLIBXX_FLAG)
   set(CMAKE_REQUIRED_FLAGS "${CMAKE_REQUIRED_FLAGS} -nostdlib++")
-else()
-  llvm_check_compiler_linker_flag(C "-nodefaultlibs" C_SUPPORTS_NODEFAULTLIBS_FLAG)
-  if (C_SUPPORTS_NODEFAULTLIBS_FLAG)
-    set(CMAKE_REQUIRED_FLAGS "${CMAKE_REQUIRED_FLAGS} -nodefaultlibs")
-  endif()
+endif()
+check_c_compiler_flag(-nodefaultlibs C_SUPPORTS_NODEFAULTLIBS_FLAG)
+if (C_SUPPORTS_NODEFAULTLIBS_FLAG)
+  set(CMAKE_REQUIRED_FLAGS "${CMAKE_REQUIRED_FLAGS} -nodefaultlibs")
 endif()
 
 # Only link against compiler-rt manually if we use -nodefaultlibs, since
 # otherwise the compiler will do the right thing on its own.
-if (NOT CXX_SUPPORTS_NOSTDLIBXX_FLAG AND C_SUPPORTS_NODEFAULTLIBS_FLAG)
+if ((NOT CXX_SUPPORTS_NOSTDLIBXX_FLAG AND C_SUPPORTS_NODEFAULTLIBS_FLAG) OR MINGW)
   if (LIBUNWIND_HAS_C_LIB)
     list(APPEND CMAKE_REQUIRED_LIBRARIES c)
   endif ()
@@ -60,12 +60,14 @@ if (NOT CXX_SUPPORTS_NOSTDLIBXX_FLAG AND C_SUPPORTS_NODEFAULTLIBS_FLAG)
                              FLAGS ${LIBUNWIND_COMPILE_FLAGS})
     list(APPEND CMAKE_REQUIRED_LIBRARIES "${LIBUNWIND_BUILTINS_LIBRARY}")
   else ()
-    if (LIBUNWIND_HAS_GCC_S_LIB)
-      list(APPEND CMAKE_REQUIRED_LIBRARIES gcc_s)
-    endif ()
     if (LIBUNWIND_HAS_GCC_LIB)
       list(APPEND CMAKE_REQUIRED_LIBRARIES gcc)
     endif ()
+    if (LIBUNWIND_HAS_GCC_S_LIB)
+      list(APPEND CMAKE_REQUIRED_LIBRARIES gcc_s)
+    else ()
+      list(APPEND CMAKE_REQUIRED_LIBRARIES gcc_eh)
+    endif ()
   endif ()
   if (MINGW)
     # Mingw64 requires quite a few "C" runtime libraries in order for basic
@@ -73,7 +75,11 @@ if (NOT CXX_SUPPORTS_NOSTDLIBXX_FLAG AND C_SUPPORTS_NODEFAULTLIBS_FLAG)
     if (LIBUNWIND_USE_COMPILER_RT)
       set(MINGW_RUNTIME ${LIBUNWIND_BUILTINS_LIBRARY})
     else ()
-      set(MINGW_RUNTIME gcc_s gcc)
+      if (LIBUNWIND_ENABLE_SHARED)
+        set(MINGW_RUNTIME gcc gcc_s)
+      else ()
+        set(MINGW_RUNTIME gcc gcc_eh)
+      endif()
     endif()
     set(MINGW_LIBRARIES mingw32 ${MINGW_RUNTIME} moldname mingwex msvcrt advapi32
                         shell32 user32 kernel32 mingw32 ${MINGW_RUNTIME}
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 780430b..a07e931 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -68,12 +68,18 @@ set(LIBUNWIND_SOURCES
 # Generate library list.
 if (CXX_SUPPORTS_NOSTDLIBXX_FLAG)
   add_link_flags_if_supported(-nostdlib++)
-else()
+endif()
+if (C_SUPPORTS_NODEFAULTLIBS_FLAG)
+  add_link_flags_if_supported(-nodefaultlibs)
   if (LIBUNWIND_USE_COMPILER_RT)
     add_library_flags("${LIBUNWIND_BUILTINS_LIBRARY}")
   else()
-    add_library_flags_if(LIBUNWIND_HAS_GCC_S_LIB gcc_s)
     add_library_flags_if(LIBUNWIND_HAS_GCC_LIB gcc)
+    if (LIBUNWIND_HAS_GCC_S_LIB)
+      add_library_flags_if(LIBUNWIND_HAS_GCC_S_LIB gcc_s)
+    else ()
+      add_library_flags_if(LIBUNWIND_HAS_GCC_EH_LIB gcc_eh)
+    endif ()
   endif()
   add_library_flags_if(LIBUNWIND_HAS_C_LIB c)
 endif()
