# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>

_realname=gdb
_gcc_ver=5.3.0
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
# Until https://gcc.gnu.org/bugzilla/show_bug.cgi?id=62279 is
# fixed, we will stick with 7.6.2 which hasn't got this bug..
pkgver=7.10.1
pkgrel=1
pkgdesc="GNU Debugger (mingw-w64)"
arch=('any')
url="http://www.gnu.org/software/gdb/"
license=('GPL')
groups=("${MINGW_PACKAGE_PREFIX}-toolchain")
depends=("${MINGW_PACKAGE_PREFIX}-expat"
         "${MINGW_PACKAGE_PREFIX}-libiconv"
         "${MINGW_PACKAGE_PREFIX}-python2"
         "${MINGW_PACKAGE_PREFIX}-zlib")
checkdepends=('dejagnu' 'bc')
makedepends=("${MINGW_PACKAGE_PREFIX}-iconv"
             "${MINGW_PACKAGE_PREFIX}-ncurses"
             "${MINGW_PACKAGE_PREFIX}-xz")
options=('staticlibs' '!distcc' '!ccache')
source=(http://ftp.gnu.org/gnu/gdb/${_realname}-${pkgver}.tar.xz{,.sig}
        'gdbinit'
        'gdb-fix-display-tabs-on-mingw.patch'
        #'gdb-mingw-gcc-4.7.patch'
        'gdb-7.8.1-mingw-gcc-4.7.patch'
        'gdb-7.6.2-mingw-gcc-4.7.patch'
        'gdb-perfomance.patch'
        'gdb-fix-using-gnu-print.patch')
md5sums=('39e654460c9cdd80200a29ac020cfe11'
         'SKIP'
         'be1c16674d98189a6f18dc0f5922c739'
         'e48292d553379a9765c82e80e618ffd2'
         '8cc7f920caf4dddfc0d5d3fcd347ebb4'
         '7cc5df72d958ef3e4b1ffa9f7b069e6f'
         'e9b7c252fedfa950998f5f3b32536461'
         'd7112b220466a294aa266bb4d5c06a59')

prepare() {
  cd ${srcdir}/${_realname}-${pkgver}

  # https://sourceware.org/ml/gdb-patches/2013-11/msg00224.html
  #patch -p1 -i ${srcdir}/gdb-fix-display-tabs-on-mingw.patch
  # https://sourceware.org/bugzilla/show_bug.cgi?id=15559
  # patch -p1 -i ${srcdir}/gdb-mingw-gcc-4.7.patch
  # patch -p1 -i ${srcdir}/gdb-${pkgver}-mingw-gcc-4.7.patch
  # http://sourceware.org/bugzilla/show_bug.cgi?id=15412
  patch -p1 -i ${srcdir}/gdb-perfomance.patch

  patch -p1 -i ${srcdir}/gdb-fix-using-gnu-print.patch

  # hack! - libiberty configure tests for header files using "$CPP $CPPFLAGS"
  sed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" libiberty/configure
}

build() {
  [[ -d ${srcdir}/build-${MINGW_CHOST} ]] && rm -rf ${srcdir}/build-${MINGW_CHOST}
  mkdir ${srcdir}/build-${MINGW_CHOST}
  cd ${srcdir}/build-${MINGW_CHOST}

  ../${_realname}-${pkgver}/configure \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --prefix=${MINGW_PREFIX} \
    --enable-targets="i686-w64-mingw32,x86_64-w64-mingw32" \
    --enable-64-bit-bfd \
    --disable-werror \
    --disable-win32-registry \
    --disable-rpath \
    --with-system-gdbinit=${MINGW_PREFIX}/etc/gdbinit \
    --with-python=${MINGW_PREFIX}/bin/python-config-u.sh \
    --with-expat \
    --with-libiconv-prefix=${MINGW_PREFIX} \
    --with-zlib \
    --with-lzma \
    --disable-tui

  make
}

package() {
  cd ${srcdir}/build-${MINGW_CHOST}
  make DESTDIR=${pkgdir} install

  # Remove unwanted files
  rm -rf ${pkgdir}${MINGW_PREFIX}/share/{man,info}

  # install "custom" system gdbinit
  install -D -m644 ${srcdir}/gdbinit ${pkgdir}${MINGW_PREFIX}/etc/gdbinit
  sed -i 's|%GCC_NAME%|gcc-'${_gcc_ver}'|g' ${pkgdir}${MINGW_PREFIX}/etc/gdbinit

  rm -f ${pkgdir}${MINGW_PREFIX}/include/*.h
  rm -f ${pkgdir}${MINGW_PREFIX}/lib/*.a
}
