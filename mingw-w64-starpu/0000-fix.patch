diff -urN starpu-1.3.7.orig/mpi/tests/driver.c starpu-1.3.7/mpi/tests/driver.c
--- starpu-1.3.7.orig/mpi/tests/driver.c	2020-10-13 10:17:40.000000000 +0200
+++ starpu-1.3.7/mpi/tests/driver.c	2020-11-10 15:54:37.769536200 +0100
@@ -18,6 +18,14 @@
 #include <math.h>
 #include "helper.h"
 
+#if !defined(STARPU_HAVE_SETENV)
+#warning setenv is not defined. Skipping test
+int main(int argc, char **argv)
+{
+	return STARPU_TEST_SKIPPED;
+}
+#else
+
 int main(int argc, char **argv)
 {
 	int ret, rank, size, i;
@@ -132,3 +140,4 @@
 
 	return 0;
 }
+#endif
\ No newline at end of file
diff -urN starpu-1.3.7.orig/starpufft/src/starpufft-double.h starpu-1.3.7/starpufft/src/starpufft-double.h
--- starpu-1.3.7.orig/starpufft/src/starpufft-double.h	2020-10-13 10:17:40.000000000 +0200
+++ starpu-1.3.7/starpufft/src/starpufft-double.h	2020-12-30 12:50:30.097489900 +0100
@@ -25,8 +25,8 @@
 #include <cufft.h>
 #endif
 
-#undef  FLOAT
-#define DOUBLE
+#undef  STARPUFFT_FLOAT
+#define STARPUFFT_DOUBLE
 
 typedef double real;
 #if defined(STARPU_HAVE_FFTW) && !defined(__CUDACC__) 
diff -urN starpu-1.3.7.orig/starpufft/src/starpufft-float.h starpu-1.3.7/starpufft/src/starpufft-float.h
--- starpu-1.3.7.orig/starpufft/src/starpufft-float.h	2020-10-13 10:17:40.000000000 +0200
+++ starpu-1.3.7/starpufft/src/starpufft-float.h	2020-12-30 12:50:47.864506100 +0100
@@ -25,8 +25,8 @@
 #include <cufft.h>
 #endif
 
-#undef  DOUBLE
-#define FLOAT
+#undef  STARPUFFT_DOUBLE
+#define STARPUFFT_FLOAT
 
 typedef float real;
 #if defined(STARPU_HAVE_FFTW) && !defined(__CUDACC__) 
diff -urN starpu-1.3.7.orig/starpufft/src/starpufftx.c starpu-1.3.7/starpufft/src/starpufftx.c
--- starpu-1.3.7.orig/starpufft/src/starpufftx.c	2020-10-13 10:17:40.000000000 +0200
+++ starpu-1.3.7/starpufft/src/starpufftx.c	2020-12-30 12:51:16.395138000 +0100
@@ -28,7 +28,7 @@
 #define _externC extern
 #include "cudax_kernels.h"
 
-#if defined(FLOAT) || defined(STARPU_HAVE_CUFFTDOUBLECOMPLEX)
+#if defined(STARPUFFT_FLOAT) || defined(STARPU_HAVE_CUFFTDOUBLECOMPLEX)
 #  define __STARPU_USE_CUDA
 #else
 #  undef __STARPU_USE_CUDA
@@ -172,7 +172,7 @@
 }
 
 /* Only CUDA capability >= 1.3 supports doubles, rule old card out.  */
-#ifdef DOUBLE
+#ifdef STARPUFFT_DOUBLE
 static int can_execute(unsigned workerid, struct starpu_task *task STARPU_ATTRIBUTE_UNUSED, unsigned nimpl STARPU_ATTRIBUTE_UNUSED) {
 	if (starpu_worker_get_type(workerid) == STARPU_CPU_WORKER)
 		return 1;
