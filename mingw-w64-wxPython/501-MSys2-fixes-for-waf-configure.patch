From 938117007e646e1f9780e5d9fb76a67ff2b8eb5b Mon Sep 17 00:00:00 2001
From: Tim Stahlhut <stahta01@gmail.com>
Date: Thu, 30 Jun 2022 11:24:41 -0400
Subject: MSys2 fixes for waf configure

---
 wscript | 16 +++++++++++-----
 1 file changed, 11 insertions(+), 5 deletions(-)

diff --git a/wscript b/wscript
index 4f0d0bf5..4496f207 100644
--- a/wscript
+++ b/wscript
@@ -25,6 +25,7 @@ cfg = Config(True)
 APPNAME = 'wxPython'
 VERSION = cfg.VERSION
 
+isMsys2 = False
 isWindows = sys.platform.startswith('win')
 isDarwin = sys.platform == "darwin"
 
@@ -33,7 +34,7 @@ out = 'build/waf'
 
 
 def options(opt):
-    if isWindows:
+    if isWindows and not isMsys2:
         opt.load('msvc')
     else:
         opt.load('compiler_c compiler_cxx')
@@ -65,7 +66,7 @@ def options(opt):
 
 
 def configure(conf):
-    if isWindows:
+    if isWindows and not isMsys2:
         # Set up the MSVC compiler info for wxPython's build
 
         PYTHON = conf.options.python if conf.options.python else sys.executable
@@ -82,6 +83,11 @@ def configure(conf):
     else:
         # Otherwise, use WAF's default setup for the C and C++ compiler
         conf.load('compiler_c compiler_cxx')
+        if isWindows:
+            try:
+                conf.load('winres')
+            except Errors.ConfigurationError:
+                Logs.warn('Resource compiler not found. Compiling resource file is disabled')
 
     # Set up Python
     if conf.options.python:
@@ -103,7 +109,7 @@ def configure(conf):
     # Ensure that the headers in siplib and Phoenix's src dir can be found
     conf.env.INCLUDES_WXPY = ['sip/siplib', 'wx/include', 'src']
 
-    if isWindows:
+    if isWindows and not isMsys2:
         # Windows/MSVC specific stuff
 
         cfg.finishSetup(debug=conf.env.debug)
@@ -643,7 +649,7 @@ def copyFileToPkg(task):
     open(tgt, "wb").close() # essentially just a unix 'touch' command
     tgt = opj(cfg.PKGDIR, os.path.basename(src))
     copy_file(src, tgt, verbose=1)
-    if isWindows and task.env.msvc_relwithdebug:
+    if isWindows and not isMsys2 and task.env.msvc_relwithdebug:
         # also copy the .pdb file
         src = src.replace('.pyd', '.pdb')
         tgt = opj(cfg.PKGDIR, os.path.basename(src))
@@ -697,7 +703,7 @@ def makeETGRule(bld, etgScript, moduleName, libFlags):
 
 # Add flags to create .pdb files for debugging with MSVC
 def addRelwithdebugFlags(bld, moduleName):
-    if isWindows and bld.env.msvc_relwithdebug:
+    if isWindows and not isMsys2 and bld.env.msvc_relwithdebug:
         compile_flags = ['/Zi', '/Fd_tmp_{}.pdb'.format(moduleName)]
         if sys.version_info > (3,5):
             # It looks like the /FS flag doesn't exist in the compilers used
-- 
