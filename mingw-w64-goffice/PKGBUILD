# Contributor: Tim Stahlhut <stahta01@gmail.com>

_realname=goffice
_sourcedir=${_realname}-git
pkgbase=mingw-w64-${_realname}
pkgname=(
  "${MINGW_PACKAGE_PREFIX}-${_realname}-git"
)
pkgver=0.10.49.0
pkgrel=1
pkgdesc="A GLib/GTK+ set of document-centric objects and utilities (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64')
url="https://git.gnome.org/browse/goffice"
license=(GPL)
options=('!strip' 'debug' ) # 'staticlibs')
#options=('strip' '!debug' ) # 'staticlibs')
depends=()
makedepends=(
  ${MINGW_PACKAGE_PREFIX}-librsvg
  ${MINGW_PACKAGE_PREFIX}-gtk3
  ${MINGW_PACKAGE_PREFIX}-libgsf
  ${MINGW_PACKAGE_PREFIX}-libspectre
  ${MINGW_PACKAGE_PREFIX}-libxslt
  ${MINGW_PACKAGE_PREFIX}-lasem
  ${MINGW_PACKAGE_PREFIX}-gtk-doc
  ${MINGW_PACKAGE_PREFIX}-gobject-introspection
  intltool
  autoconf-archive
  automake-wrapper
  git
)
_git_commit=
_git_tag=GOFFICE_0_10_49

_git_repo_url="git+https://gitlab.gnome.org/GNOME/goffice.git"
source=(${_sourcedir}::"${_git_repo_url}#tag=$_git_tag")
sha256sums=('SKIP')

# Declare global variables; begin with underscore to reduce name conflicts
_build_suffix="${MINGW_PACKAGE_PREFIX/mingw-w64-}"

pkgver() {
  cd ${srcdir}/${_sourcedir}

  local _epoch=$(head -n 34 configure.ac | grep 'm4_define(\[goffice_version_epoch\]' | sed -e 's/.* //' | tr '\n' '.' | tr -d '\[\])' | sed 's/.$/\n/')
  local _major=$(head -n 34 configure.ac | grep 'm4_define(\[goffice_version_major\]' | sed -e 's/.* //' | tr '\n' '.' | tr -d '\[\])' | sed 's/.$/\n/')
  local _minor=$(head -n 34 configure.ac | grep 'm4_define(\[goffice_version_minor\]' | sed -e 's/.* //' | tr '\n' '.' | tr -d '\[\])' | sed 's/.$/\n/')
  local _extra=0 # $(head -n 34 configure.ac | grep 'm4_define(\[goffice_version_extra\]' | sed -e 's/.* //' | tr '\n' '.' | tr -d '\[\])' | sed 's/.$/\n/')
  printf "%s.%s.%s.%s" "$_epoch" "$_major" "$_minor" "$_extra"
}

prepare() {
  cd ${srcdir}/${_sourcedir}

  NOCONFIGURE=1 ./autogen.sh
}

build() {
  CPPFLAGS+=" -Wno-deprecated-declarations"

  [[ -d "${srcdir}"/build-${_build_suffix} ]] && rm -rf "${srcdir}"/build-${_build_suffix}
  mkdir -p "${srcdir}"/build-${_build_suffix} && cd "${srcdir}"/build-${_build_suffix}

  # configure option --disable-silent-rules useful to aid in debugging
  # Added without-long-double to stop build errors
  # Added enable-gtk-doc-html=no to stop build errors

  ../${_sourcedir}/configure \
      --prefix=${MINGW_PREFIX} \
      --host=${MINGW_CHOST} \
      --target=${MINGW_CHOST} \
      --build=${MINGW_CHOST} \
      --without-long-double \
      --enable-shared \
      --disable-static \
      --enable-gtk-doc-html=no \
      --enable-gtk-doc

  make # -j1 V=1
}

#check() {
#  cd "${srcdir}"/build-${_build_suffix}
#
#  local WINPREFIX=$(cygpath -m ${MINGW_PREFIX})
#  local UNIXPREFIX=$(cygpath -u ${MINGW_PREFIX})
#
#  # the local project libtool is having problems with linker search path
#  sed -i "s|-L${WINPREFIX}|-L${UNIXPREFIX}|g" "${srcdir}/build-${_build_suffix}/tests/Makefile"
#
#  make V=1 -j1 -k check || true
#}

_package_shared() {
  provides=("${MINGW_PACKAGE_PREFIX}-${_realname}")
  conflicts=("${MINGW_PACKAGE_PREFIX}-${_realname}")
  depends=(
    ${MINGW_PACKAGE_PREFIX}-librsvg
    ${MINGW_PACKAGE_PREFIX}-gtk3
    ${MINGW_PACKAGE_PREFIX}-libgsf
    ${MINGW_PACKAGE_PREFIX}-libspectre
    ${MINGW_PACKAGE_PREFIX}-libxslt
    ${MINGW_PACKAGE_PREFIX}-lasem
  )

  cd "${srcdir}"/build-${_build_suffix}
  make install DESTDIR="${pkgdir}"

  install -Dm644 ${srcdir}/${_sourcedir}/COPYING ${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE
  install -Dm644 ${srcdir}/${_sourcedir}/COPYING-gpl2 ${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING-gpl2
  install -Dm644 ${srcdir}/${_sourcedir}/COPYING-gpl3 ${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING-gpl3
}

package_mingw-w64-i686-goffice-git() { _package_shared; }
package_mingw-w64-x86_64-goffice-git() { _package_shared; }
package_mingw-w64-ucrt-x86_64-goffice-git() { _package_shared; }
