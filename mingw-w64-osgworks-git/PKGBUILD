# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=osgworks
pkgbase=mingw-w64-${_realname}-git
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}-git" "${MINGW_PACKAGE_PREFIX}-${_realname}-debug-git")
_ver_base=3.1.0
pkgver=3.1.0.444
pkgrel=5
pkgdesc="A toolkit for OpenSceneGraph applications (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32')
license=('spdx:LGPL-2.1')
url="https://github.com/mccdo/osgworks/"
depends=("${MINGW_PACKAGE_PREFIX}-OpenSceneGraph"
         "${MINGW_PACKAGE_PREFIX}-vrpn")
makedepends=("git"
             "${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja")
options=(!strip staticlibs !buildflags)
_commit="db7d45a191a7ee192775233682ff14938683e0c9"
source=("${_realname}"::"git+https://github.com/mccdo/osgworks.git#commit=${_commit}"
        "osg-3.3.x.patch"
        "osg-3.6.2.patch"
        "mingw-fpc-libs.patch")
sha256sums=('SKIP'
            '8a05e43a4947cb4dddb77ab8d20e806cb00abaa0ecfa677b3df5989562da5e4e'
            '220c5960e447e1ebc7208bea6e58a6211beca2f9e3bebea14719ec8721911193'
            '1de62ae24ee5dbe53ab51d9b4f9b362427b05f7e6a42083287388aad6cd785a1')

pkgver() {
  cd "${srcdir}/${_realname}"
  printf "%s.%s" "${_ver_base}" "$(git rev-list --count "${_commit}")"
}

prepare() {
  cd "${srcdir}/${_realname}"
  patch -p1 -i ${srcdir}/osg-3.3.x.patch
  patch -p1 -i ${srcdir}/osg-3.6.2.patch
  patch -p1 -i ${srcdir}/mingw-fpc-libs.patch
}

build() {
  msg2 "Building release"
  [[ -d "${srcdir}"/build-${MSYSTEM}-release ]] && rm -rf "${srcdir}"/build-${MSYSTEM}-release
  mkdir -p "${srcdir}"/build-${MSYSTEM}-release && cd "${srcdir}"/build-${MSYSTEM}-release

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  "${MINGW_PREFIX}"/bin/cmake.exe \
    -GNinja \
    -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}" \
    -DCMAKE_BUILD_TYPE=Release \
    ../${_realname}

  "${MINGW_PREFIX}"/bin/cmake.exe --build .

  msg2 "Building debug"
  [[ -d "${srcdir}"/build-${MSYSTEM}-debug ]] && rm -rf "${srcdir}"/build-${MSYSTEM}-debug
  mkdir -p "${srcdir}"/build-${MSYSTEM}-debug && cd "${srcdir}"/build-${MSYSTEM}-debug

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  "${MINGW_PREFIX}"/bin/cmake.exe \
    -GNinja \
    -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}" \
    -DCMAKE_BUILD_TYPE=Debug \
    ../${_realname}

  "${MINGW_PREFIX}"/bin/cmake.exe --build .
}

package_osgworks-git() {
  provides=("${MINGW_PACKAGE_PREFIX}-${_realname}")
  conflicts=("${MINGW_PACKAGE_PREFIX}-${_realname}" "${MINGW_PACKAGE_PREFIX}-${_realname}-svn")
  replaces=(${MINGW_PACKAGE_PREFIX}-${_realname}-svn)

  cd "${srcdir}"/build-${MSYSTEM}-release

  DESTDIR=${pkgdir} "${MINGW_PREFIX}"/bin/cmake.exe --install .

  # support relocation
  local MINGW_PREFIX_W=$(cygpath -m "${MINGW_PREFIX}")
  sed -i "s#${MINGW_PREFIX_W}#\${_IMPORT_PREFIX}#g" "${pkgdir}${MINGW_PREFIX}"/lib/osgworks-targets-release.cmake
}

package_osgworks-debug-git() {
  depends=("${MINGW_PACKAGE_PREFIX}-${_realname}-git=${pkgver}" "${MINGW_PACKAGE_PREFIX}-OpenSceneGraph-debug")
  provides=("${MINGW_PACKAGE_PREFIX}-${_realname}-debug")
  conflicts=("${MINGW_PACKAGE_PREFIX}-${_realname}-debug" "${MINGW_PACKAGE_PREFIX}-${_realname}-debug-svn")
  replaces=(${MINGW_PACKAGE_PREFIX}-${_realname}-debug-svn)

  cd "${srcdir}"/build-${MSYSTEM}-debug

  DESTDIR=${pkgdir} "${MINGW_PREFIX}"/bin/cmake.exe --install .

  rm -rf ${pkgdir}${MINGW_PREFIX}/include
  rm -rf ${pkgdir}${MINGW_PREFIX}/lib/flagpoll
  rm -rf ${pkgdir}${MINGW_PREFIX}/lib/*.cmake
  rm -rf ${pkgdir}${MINGW_PREFIX}/share
}

# template start; name=mingw-w64-splitpkg-wrappers; version=1.0;
# vim: set ft=bash :

# generate wrappers
for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
# template end;
