# Maintainer: Ray Donnelly <mingw.android@gmail.com>

_realname=graphviz
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=2.44.1
pkgrel=13
pkgdesc="Graph Visualization Software (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32' 'clangarm64')
url='https://www.graphviz.org/'
license=('EPL')
depends=("${MINGW_PACKAGE_PREFIX}-cairo"
         "${MINGW_PACKAGE_PREFIX}-devil"
         "${MINGW_PACKAGE_PREFIX}-expat"
         "${MINGW_PACKAGE_PREFIX}-freetype"
         "${MINGW_PACKAGE_PREFIX}-ghostscript"
         "${MINGW_PACKAGE_PREFIX}-glib2"
         "${MINGW_PACKAGE_PREFIX}-fontconfig"
         "${MINGW_PACKAGE_PREFIX}-freeglut"
         "${MINGW_PACKAGE_PREFIX}-librsvg"
         "${MINGW_PACKAGE_PREFIX}-libgd"
         "${MINGW_PACKAGE_PREFIX}-libpng"
         "${MINGW_PACKAGE_PREFIX}-libsystre"
         "${MINGW_PACKAGE_PREFIX}-libwebp"
         "${MINGW_PACKAGE_PREFIX}-gts"
         "${MINGW_PACKAGE_PREFIX}-pango"
         "${MINGW_PACKAGE_PREFIX}-poppler"
         "${MINGW_PACKAGE_PREFIX}-zlib"
         "${MINGW_PACKAGE_PREFIX}-libltdl")
makedepends=(#"${MINGW_PACKAGE_PREFIX}-ocaml" not tested yet need to build ocaml first
             #"${MINGW_PACKAGE_PREFIX}-lua" problem with distinguishing between the two versions we have and links to the wrong version sigh
             "${MINGW_PACKAGE_PREFIX}-qt5-base"
             "${MINGW_PACKAGE_PREFIX}-pkgconf"
             "${MINGW_PACKAGE_PREFIX}-autotools"
             "${MINGW_PACKAGE_PREFIX}-python"
             #"${MINGW_PACKAGE_PREFIX}-ruby" unable to find ruby's pkgconfig file looks for ruby.pc no ruby$(VERSION).pc as it is named now 
             "${MINGW_PACKAGE_PREFIX}-swig"
             #"${MINGW_PACKAGE_PREFIX}-tcl" needs a path to tclsh.sh
             "${MINGW_PACKAGE_PREFIX}-zlib"
             "${MINGW_PACKAGE_PREFIX}-cc"
             "groff"
             "git")
optdepends=("${MINGW_PACKAGE_PREFIX}-qt5-base: gvedit"
            "${MINGW_PACKAGE_PREFIX}-python: for python modules")
install=${_realname}-${MSYSTEM}.install
source=(#${_realname}-${pkgver}::git+https://gitlab.com/graphviz/graphviz.git#tag=stable_release_${pkgver}
        https://gitlab.com/graphviz/graphviz/-/archive/${pkgver}/graphviz-${pkgver}.tar.gz
        001-msvc-pragma.patch.patch
        002-no-undefined-and-def-files.patch
        003-fix-dependency-detect.patch
        004-exports.patch
        005-plugin-exports.patch
        006-missing-libs.patch
        007-broken-freeglut.patch
        008-fix-dll-names-in-def.patch
        009-fix-warnings.patch
        010-no-extern-time.patch
        011-strcasecmp-mingw.patch
        012-cast-error.patch
        013-further-fixes.patch
        014-gdiplus-no-explicit-libstdc++.patch
        015-cast-function-pointer-to-void-pointer.patch
        016-makefile-dont-embed-build-system-path.patch
        017-fix-building-on-clang-15.patch)
noextract=("graphviz-${pkgver}.tar.gz")
sha256sums=('3aac783a15341c2808141cc38ead408bf3d6ad203e0ed3946c9df595b760edda'
            'a64e23a55481ff36641466ef80607bcdc1bbf20f992804620f4a58b5b8c04f8d'
            'd1e7e4dc1b55463123e3ed8f999745bf06078766ee24071be8866ac75fe1309e'
            'bd1d89894af4b89d14cfa028238aa87f0a6044c43f988f39a0c8512ab07285a2'
            'b5ce65be7a0f8012aecdf15229e3db8012ddc78152fa849a54ffe87ca6bfe119'
            '35ee3d44abcb6d30a10ea5a797b214b19e929a0555297a8dce35e4842c059b15'
            '45d7b942f56e65a5657db5304d3864be12c8f04913f920f69b253cbb62b9cc24'
            '6f066e2d08d296355da0e735429ade1a459940225288a70939f547c36562f982'
            '26a80a0071a0821de8019463788e966047551a93451386f5cf209c77cefe65e9'
            'd4a28c96e888be70589fe6e9ec1efa9488ae02c1cccbfdc3ab1348006b6582ca'
            '01387eb1c9544b9e8aeb66a6ec23777c5bb3e2770b1672d2596b2b3d550319fd'
            'f9a4aa81bf2f918cc608dc49852c57782b610c2e56fea7e43a53a7c5bd655e90'
            'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855'
            'a94ad4b026013ecd15ffd9f4695cde6d4ac4b9780482f7e98b901973773d40d8'
            '97a2655d52632b77700adeade13c9608e516676b5092fbc9786a0fcd557f6656'
            'c6a52798aef381cea84d2e0299ae7ffdd992b0663eff3d903b3aa5e7c34964ca'
            'a0b2fa94f5aa4042684525c0463b1e180fcd37fc5f1ca80265cd9e72b2d17225'
            '988598c46ed3234166142d0d912be4426887f5a75b8d405634234d38a9e4d9a5')

apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying ${_patch}"
    patch -p1 -i "${srcdir}/${_patch}"
  done
}

prepare() {
  tar -xf graphviz-${pkgver}.tar.gz || true

  cd "${srcdir}"/${_realname}-${pkgver}

  apply_patch_with_msg \
    001-msvc-pragma.patch.patch \
    002-no-undefined-and-def-files.patch \
    003-fix-dependency-detect.patch \
    004-exports.patch \
    005-plugin-exports.patch \
    006-missing-libs.patch \
    007-broken-freeglut.patch \
    008-fix-dll-names-in-def.patch \
    009-fix-warnings.patch \
    010-no-extern-time.patch \
    011-strcasecmp-mingw.patch \
    012-cast-error.patch \
    013-further-fixes.patch \
    014-gdiplus-no-explicit-libstdc++.patch \
    015-cast-function-pointer-to-void-pointer.patch \
  # This is a hack to work around an error in ucrt64.  The proper solution
  # would be to use mingw-w64-pathtools to construct the default path relative
  # to the exe.
  apply_patch_with_msg \
    016-makefile-dont-embed-build-system-path.patch \
    017-fix-building-on-clang-15.patch

  ./autogen.sh NOCONFIG
}

build() {
  local gd_incdir=$(pkg-config --variable=includedir gdlib)
  [[ -d "${srcdir}"/build-${MSYSTEM} ]] && rm -rf "${srcdir}"/build-${MSYSTEM}
  mkdir -p "${srcdir}"/build-${MSYSTEM} && cd "${srcdir}"/build-${MSYSTEM}

  export CFLAGS="${CFLAGS} -Wno-incompatible-function-pointer-types"
  # else the libgdi plugin refuses to link.
  export lt_cv_deplibs_check_method=${lt_cv_deplibs_check_method='pass_all'}
  # the -enable-stuff below is for old type linking to graphviz 
  # and yields some nasty surprises when swig is enabled. 
  ../${_realname}-${pkgver}/configure \
    --prefix=${MINGW_PREFIX} \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --enable-guile=no \
    --enable-go=no \
    --enable-perl=no \
    --enable-php=no \
    --enable-ocaml=no \
    --enable-tcl=no \
    --enable-ruby=no \
    --enable-python=no \
    --enable-lua=no \
    --enable-r=no \
    --enable-sharp=no \
    --enable-swig=yes \
    --enable-java=no \
    --with-webp=yes \
    --with-gdiplus=yes \
    --with-smyrna=no \
    --with-gtk=no \
    --with-gtkglext=no \
    --with-gdk=no \
    --with-qt \
    --with-platformsdkincludedir=${MINGW_PREFIX}/include \
    --with-platformsdklibdir=${MINGW_PREFIX}/lib \
    --with-gdincludedir=${gd_incdir} \
    --enable-shared \
    --disable-static

  make
}

package() {
  cd ${srcdir}/build-${MSYSTEM}

  make DESTDIR=${pkgdir} install
  # WTF happened here?
  local _winprefix="$(cygpath -m ${MINGW_PREFIX})"
  local _broken_path="${pkgdir}${_winprefix}"
  if [ -d "${_broken_path}" ]; then
    cp -Rf "${_broken_path}"/* "${pkgdir}${MINGW_PREFIX}"
    rm -rf "${pkgdir}${_winprefix%%/*}"
  fi
}
