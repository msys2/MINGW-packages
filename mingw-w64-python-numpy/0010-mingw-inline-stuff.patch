--- a/numpy/random/src/mt19937/mt19937.h	2019-09-19 14:43:38.757883000 +0200
+++ b/numpy/random/src/mt19937/mt19937.h	2019-09-19 14:43:08.257910100 +0200
@@ -2,7 +2,7 @@
 #include <math.h>
 #include <stdint.h>
 
-#ifdef _WIN32
+#if defined(_WIN32) && !defined (__MINGW32__)
 #define inline __forceinline
 #endif
 
--- a/numpy/random/src/pcg64/pcg64.h	2019-09-19 14:43:38.757883000 +0200
+++ b/numpy/random/src/pcg64/pcg64.h	2019-09-19 14:43:08.257910100 +0200
@@ -52,7 +52,7 @@
 
 #include <inttypes.h>
 
-#ifdef _WIN32
+#if defined(_WIN32) && !defined (__MINGW32__)
 #include <stdlib.h>
 #define inline __forceinline
 #endif
--- a/numpy/random/src/philox/philox.h    2019-09-19 21:22:05.822734300 +0200
+++ b/numpy/random/src/philox/philox.h    2019-09-06 01:59:07.000000000 +0200
@@ -33,7 +33,7 @@
   return (uint64_t)product;
 }
 #else
-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__MINGW32__)
 #include <intrin.h>
 #if defined(_WIN64) && defined(_M_AMD64)
 #pragma intrinsic(_umul128)
