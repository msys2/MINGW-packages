# Maintainer: Rafa≈Ç Brzegowy <rafal.brzegowy@yahoo.com>
# Contributor: Raed Rizqie <raed.rizqie@gmail.com>

# petsc don't have clang build because it depends on fortran lib,
# so we have to disable clang for now

_realname=precice
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=2.4.0
pkgrel=1
pkgdesc='A Coupling Library for Partitioned Multi-Physics Simulations on Massively Parallel Systems (mingw-w64)'
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64')
depends=("${MINGW_PACKAGE_PREFIX}-boost"
         "${MINGW_PACKAGE_PREFIX}-libxml2"
         "${MINGW_PACKAGE_PREFIX}-msmpi"
         "${MINGW_PACKAGE_PREFIX}-petsc"
         "${MINGW_PACKAGE_PREFIX}-python-numpy")
makedepends=("${MINGW_PACKAGE_PREFIX}-petsc-build"
             "${MINGW_PACKAGE_PREFIX}-eigen3"
             "${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "git")
license=('LGPL3')
url='https://www.precice.org'
source=(https://github.com/precice/precice/archive/v${pkgver}.tar.gz)
sha256sums=('762E603FBCAA96C4FB0B378B7CB6789D09DA0CF6193325603E5EEB13E4C7601C')

prepare() {
  cd "${_realname}-${pkgver}"
  sed -i 's/BYPRODUCTS binprecice/#BYPRODUCTS binprecice/' CMakeLists.txt
  #Temporary fix: https://github.com/msys2/MINGW-packages/pull/11685#issuecomment-1200834235
  sed -i 's/E create_symlink/E copy_if_different/' CMakeLists.txt
}

build() {
  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  . ${MINGW_PREFIX}/src/petsc-*/petsc
  for build in ${petsc_builds}; do
    #export PETSC_ARCH=${build}
    export PETSC_ARCH=dmo
    export PETSC_DIR=${MINGW_PREFIX}/src/petsc-${petsc_pkgver}
  done

  _pyver=$(${MINGW_PREFIX}/bin/python -c "import sys;sys.stdout.write('.'.join(map(str, sys.version_info[:2])))")

  #Static Build
  [[ -d "${srcdir}/build-${MSYSTEM}-static" ]] && rm -rf "${srcdir}/build-${MSYSTEM}-static"
  mkdir -p "${srcdir}/build-${MSYSTEM}-static" && cd "${srcdir}/build-${MSYSTEM}-static"

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    ${MINGW_PREFIX}/bin/cmake \
      -GNinja \
      -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
      -DCMAKE_CXX_STANDARD_LIBRARIES=-lws2_32 \
      -DBUILD_SHARED_LIBS=OFF \
      -DCMAKE_BUILD_TYPE=Release \
      -DBUILD_TESTING=OFF \
      -DPython3_EXECUTABLE=${MINGW_PREFIX}/bin/python.exe \
      -DPython3_FIND_REGISTRY=NEVER \
      -DPython3_ROOT_DIR=${MINGW_PREFIX} \
      -DPRECICE_MPICommunication=ON \
      -DPRECICE_PETScMapping=ON \
      -DPRECICE_PythonActions=ON \
      -DPC_PETSc_INCLUDE_DIRS="$PREFIX_WIN/src/petsc-${petsc_pkgver}/include;$PREFIX_WIN/src/petsc-${petsc_pkgver}/$PETSC_ARCH/include" \
      -Wno-dev \
      ../${_realname}-${pkgver}

  ${MINGW_PREFIX}/bin/cmake --build .

  #Shared Build
  [[ -d "${srcdir}/build-${MSYSTEM}-shared" ]] && rm -rf "${srcdir}/build-${MSYSTEM}-shared"
  mkdir -p "${srcdir}/build-${MSYSTEM}-shared" && cd "${srcdir}/build-${MSYSTEM}-shared"

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    ${MINGW_PREFIX}/bin/cmake \
      -GNinja \
      -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
      -DCMAKE_CXX_STANDARD_LIBRARIES=-lws2_32 \
      -DBUILD_SHARED_LIBS=ON \
      -DCMAKE_BUILD_TYPE=Release \
      -DBUILD_TESTING=OFF \
      -DPython3_EXECUTABLE=${MINGW_PREFIX}/bin/python.exe \
      -DPython3_FIND_REGISTRY=NEVER \
      -DPython3_ROOT_DIR=${MINGW_PREFIX} \
      -DPRECICE_MPICommunication=ON \
      -DPRECICE_PETScMapping=ON \
      -DPRECICE_PythonActions=ON \
      -DPC_PETSc_INCLUDE_DIRS="$PREFIX_WIN/src/petsc-${petsc_pkgver}/include;$PREFIX_WIN/src/petsc-${petsc_pkgver}/$PETSC_ARCH/include" \
      -Wno-dev \
      ../${_realname}-${pkgver}

  ${MINGW_PREFIX}/bin/cmake --build .
}

package() {
  #Static Install
  cd "${srcdir}/build-${MSYSTEM}-static"
  DESTDIR=${pkgdir} ${MINGW_PREFIX}/bin/cmake --install .

  #Shared Install
  cd "${srcdir}/build-${MSYSTEM}-shared"
  DESTDIR=${pkgdir} ${MINGW_PREFIX}/bin/cmake --install .
  install -Dm644 ${srcdir}/${_realname}-${pkgver}/LICENSE ${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE
}
