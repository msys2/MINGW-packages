diff -Naur ng-log-0.8.0-orig/CMakeLists.txt ng-log-0.8.0/CMakeLists.txt
--- ng-log-0.8.0-orig/CMakeLists.txt	2025-05-23 12:38:17.194540400 +0300
+++ ng-log-0.8.0/CMakeLists.txt	2025-05-23 13:26:56.438055500 +0300
@@ -323,6 +323,14 @@
 # Add additional CMake find modules here.
 set (_ng-log_CMake_MODULES)
 
+if (BUILD_SHARED_LIBS)
+  set (LIB_TYPE SHARED)
+  set (target_siffix "shared")
+else ()
+  set (LIB_TYPE STATIC)
+  set (target_siffix "static")
+endif()
+
 if (Unwind_FOUND)
   # Copy the module only if libunwind is actually used.
   list (APPEND _ng-log_CMake_MODULES ${ng-log_SOURCE_DIR}/cmake/FindUnwind.cmake)
@@ -404,7 +412,7 @@
   COMMAND ${CMAKE_COMMAND} -E touch ${_ng-log_EMPTY_SOURCE}
 )
 
-add_library (ng-log
+add_library (ng-log ${LIB_TYPE}
   $<TARGET_OBJECTS:ng-log_internal>
   ${_ng-log_EMPTY_SOURCE}
 )
@@ -506,9 +514,11 @@
 generate_export_header (ng-log
   BASE_NAME NGLOG
   EXPORT_FILE_NAME ${ng-log_BINARY_DIR}/ng-log/export.h)
+target_compile_definitions(
+    ng-log PUBLIC "$<$<NOT:$<BOOL:${BUILD_SHARED_LIBS}>>:NGLOG_STATIC_DEFINE>")
 
 if (BUILD_COMPAT)
-  add_library (glog
+  add_library (glog ${LIB_TYPE}
     ${ng-log_BINARY_DIR}/glog/export.h
     src/compat/glog/flags.h
     src/compat/glog/log_severity.h
@@ -545,6 +545,8 @@
   generate_export_header (glog
     BASE_NAME NGLOG_COMPAT
     EXPORT_FILE_NAME ${ng-log_BINARY_DIR}/glog/export.h)
+target_compile_definitions(
+    glog PUBLIC "$<$<NOT:$<BOOL:${BUILD_SHARED_LIBS}>>:NGLOG_COMPAT_STATIC_DEFINE>")
 
   set (_glog_CMake_INSTALLDIR ${_ng-log_CMake_LIBDIR}/cmake/glog)
 
@@ -553,7 +561,7 @@
     ${ng-log_BINARY_DIR}/glog-config-version.cmake
     COMPATIBILITY SameMajorVersion)
 
-  export (TARGETS glog NAMESPACE glog:: FILE glog-targets.cmake)
+  export (TARGETS glog NAMESPACE glog:: FILE glog-${target_siffix}-targets.cmake)
   export (PACKAGE glog)
 
   install (FILES ${ng-log_BINARY_DIR}/glog/export.h
@@ -579,8 +587,10 @@
     ${ng-log_BINARY_DIR}/glog-config-version.cmake
     DESTINATION ${_glog_CMake_INSTALLDIR})
 
-  install (EXPORT glog-targets NAMESPACE glog:: DESTINATION
-    ${_glog_CMake_INSTALLDIR})
+  install (EXPORT glog-targets 
+           NAMESPACE glog::
+           DESTINATION ${_glog_CMake_INSTALLDIR}
+           FILE glog-${target_siffix}-targets.cmake)
 endif (BUILD_COMPAT)
 
 string (STRIP "${ng-log_libraries_options_for_static_linking}" ng-log_libraries_options_for_static_linking)
@@ -1091,7 +1099,7 @@
   ${ng-log_BINARY_DIR}/ng-log-config-version.cmake
   COMPATIBILITY SameMajorVersion)
 
-export (TARGETS ng-log NAMESPACE ng-log:: FILE ng-log-targets.cmake)
+export (TARGETS ng-log NAMESPACE ng-log:: FILE ng-log-${target_siffix}-targets.cmake)
 export (PACKAGE ng-log)
 
 get_filename_component (_PREFIX "${CMAKE_INSTALL_PREFIX}" ABSOLUTE)
@@ -1142,5 +1152,7 @@
   FILES_MATCHING PATTERN "*.cmake"
 )
 
-install (EXPORT ng-log-targets NAMESPACE ng-log:: DESTINATION
-  ${_ng-log_CMake_INSTALLDIR})
+install (EXPORT ng-log-targets 
+         NAMESPACE ng-log::
+         DESTINATION ${_ng-log_CMake_INSTALLDIR}
+         FILE ng-log-${target_siffix}-targets.cmake)
diff -Naur ng-log-0.8.0-orig/glog-config.cmake.in ng-log-0.8.0/glog-config.cmake.in
--- ng-log-0.8.0-orig/glog-config.cmake.in	2025-04-07 09:05:36.000000000 +0300
+++ ng-log-0.8.0/glog-config.cmake.in	2025-05-23 13:29:38.486137500 +0300
@@ -4,4 +4,59 @@
 
 find_dependency (ng-log @ng-log_VERSION@)
 
-include (${CMAKE_CURRENT_LIST_DIR}/glog-targets.cmake)
+set(glog_known_comps static shared)
+set(glog_comp_static NO)
+set(glog_comp_shared NO)
+foreach (glog_comp IN LISTS ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
+    if (glog_comp IN_LIST glog_known_comps)
+        set(glog_comp_${glog_comp} YES)
+    else ()
+        set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
+            "glog does not recognize component `${glog_comp}`.")
+        set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
+        return()
+    endif ()
+endforeach ()
+
+if (glog_comp_static AND glog_comp_shared)
+    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
+        "glog `static` and `shared` components are mutually exclusive.")
+    set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
+    return()
+endif ()
+
+set(glog_static_targets "${CMAKE_CURRENT_LIST_DIR}/glog-static-targets.cmake")
+set(glog_shared_targets "${CMAKE_CURRENT_LIST_DIR}/glog-shared-targets.cmake")
+
+macro(glog_load_targets type)
+    if (NOT EXISTS "${glog_${type}_targets}")
+        set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
+            "glog `${type}` libraries were requested but not found.")
+        set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
+        return()
+    endif ()
+    include("${glog_${type}_targets}")
+endmacro()
+
+if (glog_comp_static)
+    glog_load_targets(static)
+elseif (glog_comp_shared)
+    glog_load_targets(shared)
+elseif (DEFINED glog_SHARED_LIBS AND glog_SHARED_LIBS)
+    glog_load_targets(shared)
+elseif (DEFINED glog_SHARED_LIBS AND NOT glog_SHARED_LIBS)
+    glog_load_targets(static)
+elseif (BUILD_SHARED_LIBS)
+    if (EXISTS "${glog_shared_targets}")
+        glog_load_targets(shared)
+    else ()
+        glog_load_targets(static)
+    endif ()
+else ()
+    if (EXISTS "${glog_static_targets}")
+        glog_load_targets(static)
+    else ()
+        glog_load_targets(shared)
+    endif ()
+endif ()
+
diff -Naur ng-log-0.8.0-orig/ng-log-config.cmake.in ng-log-0.8.0/ng-log-config.cmake.in
--- ng-log-0.8.0-orig/ng-log-config.cmake.in	2025-04-07 09:05:36.000000000 +0300
+++ ng-log-0.8.0/ng-log-config.cmake.in	2025-05-23 13:29:03.702984900 +0300
@@ -12,4 +12,59 @@
 @gflags_DEPENDENCY@
 @Unwind_DEPENDENCY@
 
-include (${CMAKE_CURRENT_LIST_DIR}/ng-log-targets.cmake)
+
+set(nglog_known_comps static shared)
+set(nglog_comp_static NO)
+set(nglog_comp_shared NO)
+foreach (nglog_comp IN LISTS ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
+    if (nglog_comp IN_LIST nglog_known_comps)
+        set(nglog_comp_${nglog_comp} YES)
+    else ()
+        set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
+            "ng-log does not recognize component `${nglog_comp}`.")
+        set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
+        return()
+    endif ()
+endforeach ()
+
+if (nglog_comp_static AND nglog_comp_shared)
+    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
+        "ng-log `static` and `shared` components are mutually exclusive.")
+    set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
+    return()
+endif ()
+
+set(nglog_static_targets "${CMAKE_CURRENT_LIST_DIR}/ng-log-static-targets.cmake")
+set(nglog_shared_targets "${CMAKE_CURRENT_LIST_DIR}/ng-log-shared-targets.cmake")
+
+macro(nglog_load_targets type)
+    if (NOT EXISTS "${nglog_${type}_targets}")
+        set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
+            "ng-log `${type}` libraries were requested but not found.")
+        set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
+        return()
+    endif ()
+    include("${nglog_${type}_targets}")
+endmacro()
+
+if (nglog_comp_static)
+    nglog_load_targets(static)
+elseif (nglog_comp_shared)
+    nglog_load_targets(shared)
+elseif (DEFINED ng_log_SHARED_LIBS AND ng_log_SHARED_LIBS)
+    nglog_load_targets(shared)
+elseif (DEFINED ng_log_SHARED_LIBS AND NOT ng_log_SHARED_LIBS)
+    nglog_load_targets(static)
+elseif (BUILD_SHARED_LIBS)
+    if (EXISTS "${nglog_shared_targets}")
+        nglog_load_targets(shared)
+    else ()
+        nglog_load_targets(static)
+    endif ()
+else ()
+    if (EXISTS "${nglog_static_targets}")
+        nglog_load_targets(static)
+    else ()
+        nglog_load_targets(shared)
+    endif ()
+endif ()
