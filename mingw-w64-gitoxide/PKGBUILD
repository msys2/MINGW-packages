# Maintainer: Maksim Bondarenkov <maksapple2306@gmail.com>

_realname=gitoxide
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=0.38.0
pkgrel=1
pkgdesc="An idiomatic, lean, fast & safe pure Rust implementation of Git (mingw-w64)"
arch=('any')
mingw_arch=('ucrt64' 'clang64' 'clangarm64')
url="https://github.com/GitoxideLabs/gitoxide"
license=('spdx:Apache-2.0 OR MIT')
msys2_references=(
  'archlinux: gitoxide'
)
depends=("${MINGW_PACKAGE_PREFIX}-sqlite3")
makedepends=("${MINGW_PACKAGE_PREFIX}-rust"
             "${MINGW_PACKAGE_PREFIX}-pkgconf"
             'git')
source=("git+${url}.git#tag=v${pkgver}"
        "ntapi-rs.tar.gz::https://crates.io/api/v1/crates/ntapi/0.4.1/download"
        "ntapi-link-ntdll-arm64.patch")
sha256sums=('c98c1d9af6077be1e0ef96870ddc792b1b831d53928da718f28398f8156c5d77'
            'e8a3895c6391c39d7fe7ebc444a87eb2991b2a0bc718fdabd071eec617fc68e4'
            '9994d5b61f020f85f67df54c56c793bd4faf41e39b62ddd4e67c482b9a11b73e')

_env() {
  export WINAPI_NO_BUNDLED_LIBRARIES=1
  export LIBSQLITE3_SYS_USE_PKG_CONFIG=1
}

prepare() {
  cd "${_realname}"

  patch -d ../ntapi-0.4.1 -Np1 -i "${srcdir}/ntapi-link-ntdll-arm64.patch"
  cat >> Cargo.toml <<END

[patch.crates-io]
ntapi = { path = "../ntapi-0.4.1" }
END

  cargo update -p ntapi
  cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
}

build() {
  cd "${_realname}"

  _env
  cargo build \
    --release \
    --locked \
    --no-default-features \
    --features max-pure \
    --bin gix \
    --bin ein
}

check() {
  cd "${_realname}"

  _env
  cargo test \
    --release \
    --locked \
    --no-default-features \
    --features max-pure \
    --bin gix \
    --bin ein
}

package() {
  install -Dm755 "${_realname}"/target/release/{gix,ein} -t "${pkgdir}${MINGW_PREFIX}/bin/"

  install -Dm644 "${_realname}"/LICENSE-{APACHE,MIT} -t "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/"
}
