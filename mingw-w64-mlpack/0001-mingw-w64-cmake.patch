--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -102,7 +102,7 @@
 
 # If we are on a Unix-like system, use the GNU install directories module.
 # Otherwise set the values manually.
-if (UNIX)
+if (NOT MSVC)
   include(GNUInstallDirs)
 else ()
   set(CMAKE_INSTALL_BINDIR ${CMAKE_INSTALL_PREFIX}/bin)
@@ -146,8 +146,8 @@
 # If we are using MINGW, we need sections and big-obj, otherwise we create too
 # many sections.
 if(CMAKE_COMPILER_IS_GNUCC AND WIN32)
-  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -ffunction-sections -fdata-sections -Wa,-mbig-obj")
-  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -ffunction-sections -fdata-sections -Wa,-mbig-obj")
+  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wa,-mbig-obj")
+  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wa,-mbig-obj")
 endif()
 
 # If using clang, we have to link against libc++ depending on the
@@ -503,7 +503,7 @@
 include_directories(BEFORE ${CMAKE_SOURCE_DIR}/src/)
 
 # On Windows, things end up under Debug/ or Release/.
-if (WIN32)
+if (MSVC)
   set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
   set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
   set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
