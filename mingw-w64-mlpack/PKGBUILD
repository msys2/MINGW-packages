# Maintainer: Sergey Popov <popov.sa@gmail.com>

_realname=mlpack
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=3.4.2
pkgrel=1
pkgdesc='An intuitive, fast, scalable C++ machine learning library (mingw-w64)'
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64')
url='https://mlpack.org/'
license=('BSD')
depends=("${MINGW_PACKAGE_PREFIX}-armadillo"
         "${MINGW_PACKAGE_PREFIX}-boost"
         "${MINGW_PACKAGE_PREFIX}-cython"
         "${MINGW_PACKAGE_PREFIX}-ensmallen"
         "${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-python-numpy"
         "${MINGW_PACKAGE_PREFIX}-python-pandas")
makedepends=("git"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-gcc"
             "${MINGW_PACKAGE_PREFIX}-stb"
             "${MINGW_PACKAGE_PREFIX}-go"
             "${MINGW_PACKAGE_PREFIX}-julia"
             "${MINGW_PACKAGE_PREFIX}-python-pip"
             "${MINGW_PACKAGE_PREFIX}-python-setuptools")
source=("${_realname}-${pkgver}.tar.gz::https://github.com/mlpack/mlpack/archive/${pkgver}.tar.gz"
        "0001-mingw-w64-cmake.patch"
        "0002-gcc10-openmp.patch"
        "0003-cython-flags.patch"
        "0004-fix-go-cmake-files.patch")
sha256sums=('7a7ad88c4c870b19e6c3946de23a1de1b0ee2768ddb83447bd72ea90d8cae49d'
            '02dee82887e869a14fad62ae7dd17c15d1fb7a60c4021d26a958219d47097ab6'
            'fd86fe8492cb57389a5324536ebbe02a328f040c5bbab516f083636e5a8cadde'
            'ebb28f580f3982c59b30c55f8d4d9439a00b27dc024d50879ff1b63b8cc91bd4'
            '6b6ebb34622e769d3e852a320a910cf9aea05164ffc0523f329a75a21b3f0e9c')

prepare() {
  cd "${_realname}-${pkgver}"
  patch -p1 -i "${srcdir}/0001-mingw-w64-cmake.patch"
  patch -p1 -i "${srcdir}/0002-gcc10-openmp.patch"
  patch -p1 -i "${srcdir}/0003-cython-flags.patch"
  patch -p1 -i "${srcdir}/0004-fix-go-cmake-files.patch"
  
  mkdir "${srcdir}/godir/"
  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  export GOROOT=${PREFIX_WIN}/lib/go/
  export GOPATH="${srcdir}/godir/"
  go env -w GO111MODULE=off
  go get -u gonum.org/v1/gonum/...
  go list gonum.org/v1/gonum/mat
}

build() {
  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  export GOROOT=${PREFIX_WIN}/lib/go/
  go env -w GO111MODULE=off
  export GOPATH="${srcdir}/godir/"

  [[ -d "${srcdir}/build-${CARCH}" ]] && rm -rf "${srcdir}/build-${CARCH}"
  mkdir -p "${srcdir}/build-${CARCH}" && cd "${srcdir}/build-${CARCH}"

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake.exe -Wno-dev \
    -G"MSYS Makefiles" \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DCMAKE_BUILD_TYPE=Release \
    -DBUILD_SHARED_LIBS=OFF \
    -DBUILD_TESTS=OFF \
    -D BUILD_CLI_EXECUTABLES=ON \
    -D BUILD_PYTHON_BINDINGS=ON\
    -D USE_OPENMP=ON \
    -D BUILD_GO_SHLIB=ON \
    -D BUILD_JULIA_BINDINGS=ON \
    -D BUILD_R_BINDINGS=OFF \
    ../${_realname}-${pkgver}

  ${MINGW_PREFIX}/bin/cmake --build .
}

package() {
  cd "${srcdir}/build-${CARCH}"
  DESTDIR="${pkgdir}" ${MINGW_PREFIX}/bin/cmake --build . --target install

  pushd "${pkgdir}${MINGW_PREFIX}" > /dev/null
  install -Dm644 "${srcdir}/${_realname}-${pkgver}/COPYRIGHT.txt" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYRIGHT.txt"
  install -Dm644 "${srcdir}/${_realname}-${pkgver}/LICENSE.txt" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE.txt"
  popd > /dev/null
}
