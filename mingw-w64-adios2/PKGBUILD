# Contributor: Mehdi Chinoune <mehdi.chinoune@hotmail.com>

_realname=ADIOS2
pkgbase=mingw-w64-${_realname,,}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname,,}")
pkgver=2.7.1
pkgrel=2
pkgdesc="The Adaptable Input/Output System version 2 (mingw-w64)"
arch=(any)
mingw_arch=('mingw64' 'mingw32' 'ucrt64' 'clang64' 'clang32')
url="https://adios2.readthedocs.io/en/latest/"
license=(Apache)
depends=("${MINGW_PACKAGE_PREFIX}-blosc"
         "${MINGW_PACKAGE_PREFIX}-bzip2"
         "${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-hdf5"
         "${MINGW_PACKAGE_PREFIX}-libpng"
         "${MINGW_PACKAGE_PREFIX}-nlohmann-json"
         "${MINGW_PACKAGE_PREFIX}-pugixml"
         "${MINGW_PACKAGE_PREFIX}-pybind11"
         "${MINGW_PACKAGE_PREFIX}-yaml-cpp"
         "${MINGW_PACKAGE_PREFIX}-zeromq"
         "${MINGW_PACKAGE_PREFIX}-zlib")
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             $([[ ${MINGW_PACKAGE_PREFIX} == *-clang-* ]] || echo "${MINGW_PACKAGE_PREFIX}-gcc-fortran")
             "${MINGW_PACKAGE_PREFIX}-python"
             "${MINGW_PACKAGE_PREFIX}-python-numpy")
source=(https://github.com/ornladios/ADIOS2/archive/v${pkgver}/${_realname}-${pkgver}.tar.gz
        001-no-unit-on-mingw.patch
        002-link-bpls-with-shlwapi.patch
        003-no-regex_h-with-clang.patch
        adios2-gcc11.patch::https://patch-diff.githubusercontent.com/raw/ornladios/ADIOS2/pull/2710.patch)
sha256sums=('c8e237fd51f49d8a62a0660db12b72ea5067512aa7970f3fcf80b70e3f87ca3e'
            'd226e54bdfff7a914e126ab50c4e9568c761a15276cdb189147e06d116cf6da7'
            '8e1f2076dd6f4e24a17261b366e6d8c7a7d93dbd29cd3cb19f343e5ced1c6588'
            '379fe5edf3df2474edfe6515e0592af681c17f082fb4885b5cd554bdee11cd36'
            '8d301e8232baf4049b547f22bd73774309662017a62dac36360d2965907062bf')

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying ${_patch}"
    patch -Nbp1 -i "${srcdir}/${_patch}"
  done
}

prepare() {
  cd "${srcdir}"/${_realname}-${pkgver}
  apply_patch_with_msg \
    001-no-unit-on-mingw.patch \
    002-link-bpls-with-shlwapi.patch \
    003-no-regex_h-with-clang.patch \
    adios2-gcc11.patch
}

build() {
  [[ -d "${srcdir}/build-${MSYSTEM}" ]] && rm -rf "${srcdir}/build-${MSYSTEM}"
  mkdir -p "${srcdir}/build-${MSYSTEM}" && cd "${srcdir}/build-${MSYSTEM}"

  declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  LDFLAGS+=" -Wl,--export-all-symbols"
  CXXFLAGS+=" -Wno-narrowing"

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake \
    -GNinja \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    ${extra_config[@]} \
    -DBUILD_SHARED_LIBS=ON \
    -DADIOS2_USE_EXTERNAL_DEPENDENCIES=ON \
    -DADIOS2_USE_Blosc=ON \
    -DADIOS2_USE_BZip2=ON \
    -DADIOS2_USE_DataMan=ON \
    -DADIOS2_USE_Fortran=$([[ ${MINGW_PACKAGE_PREFIX} != *-clang-* ]] && echo "ON" || echo "OFF") \
    -DADIOS2_USE_HDF5=ON \
    -DADIOS2_USE_Python=ON \
    -DADIOS2_USE_PNG=ON \
    -DADIOS2_USE_ZeroMQ=ON \
    -DADIOS2_USE_DataSpaces=OFF \
    -DADIOS2_USE_Endian_Reverse=OFF \
    -DADIOS2_USE_IME=OFF \
    -DADIOS2_USE_MGARD=OFF \
    -DADIOS2_USE_MPI=OFF \
    -DADIOS2_USE_Profiling=OFF \
    -DADIOS2_USE_SST=OFF \
    -DADIOS2_USE_SZ=OFF \
    -DADIOS2_USE_Table=OFF \
    -DADIOS2_USE_ZFP=OFF \
    -DPython_EXECUTABLE=${MINGW_PREFIX}/bin/python \
    -DADIOS2_BUILD_EXAMPLES=OFF \
    -DBUILD_TESTING=OFF \
    ../${_realname}-${pkgver}

  ${MINGW_PREFIX}/bin/cmake --build .
}

package() {
  cd "${srcdir}/build-${MSYSTEM}"
  DESTDIR="${pkgdir}" ${MINGW_PREFIX}/bin/cmake --install .

  install -D -m644 "${srcdir}"/${_realname}-${pkgver}/LICENSE \
    "${pkgdir}"${MINGW_PREFIX}/share/${_realname,,}/LICENSE
}
