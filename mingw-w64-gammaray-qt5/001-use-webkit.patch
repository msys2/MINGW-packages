diff -Naur gammaray-2.11.3-orig/CMakeLists.txt gammaray-2.11.3/CMakeLists.txt
--- gammaray-2.11.3-orig/CMakeLists.txt	2021-10-17 23:35:36.000000000 +0300
+++ gammaray-2.11.3/CMakeLists.txt	2021-11-18 09:21:32.996110300 +0300
@@ -406,7 +406,8 @@
   Script
   ScriptTools
   Test
-  WebEngineWidgets
+  WebKit
+  WebKitWidgets
   Widgets
   WaylandCompositor
 )
@@ -489,6 +489,8 @@
 set(HAVE_QT_SVG ${Qt5Svg_FOUND})
 set(HAVE_QT_SCXML ${Qt5Scxml_FOUND})
 set(HAVE_QT_DESIGNER ${Qt5Designer_FOUND})
+set(HAVE_QT_WEBKIT ${Qt5WebKit_FOUND})
+set(HAVE_QT_WEBKIT1 ${Qt5WebKitWidgets_FOUND})
 
 if(Qt5Gui_FOUND)
   cmake_push_check_state()
@@ -508,6 +511,20 @@
   endif()
 endif()
 
+
+if(Qt5WebKit_FOUND)
+  cmake_push_check_state()
+  set(CMAKE_REQUIRED_LIBRARIES Qt5::WebKit)
+  cmake_pop_check_state()
+  set(HAVE_QT_WEBKIT ${QT_QTWEBKIT_FOUND})
+endif()
+
+if(Qt5WebKitWidgets_FOUND)
+  cmake_push_check_state()
+  set(CMAKE_REQUIRED_LIBRARIES Qt5::WebKitWidgets)
+  cmake_pop_check_state()
+endif()
+
 add_definitions(-DQT_DISABLE_DEPRECATED_BEFORE=0x050500)
 #add_definitions(-DQT_DEPRECATED_WARNINGS)
 
@@ -552,6 +575,7 @@
 endif()
 
 add_feature_info("QtScript debugger" Qt5ScriptTools_FOUND "Requires QtScript and QtScriptTools.")
+add_feature_info("Web inspector" HAVE_QT_WEBKIT1 "Requires QtWebKit.")
 add_feature_info("Widget .ui file export" HAVE_QT_DESIGNER "Requires QtDesigner library.")
 add_feature_info("3D Widget Inspector" GAMMARAY_WITH_WIDGET3D "Requires Qt5 >= 5.7, Qt3D and QtQuick Controls")
 
diff -Naur gammaray-2.11.3-orig/client/main.cpp gammaray-2.11.3/client/main.cpp
--- gammaray-2.11.3-orig/client/main.cpp	2021-10-17 23:35:36.000000000 +0300
+++ gammaray-2.11.3/client/main.cpp	2021-11-18 08:57:04.812251800 +0300
@@ -49,7 +49,6 @@
     QCoreApplication::setApplicationVersion(GAMMARAY_COMPACT_VERSION_STRING);
 #if QT_VERSION >= QT_VERSION_CHECK(5, 6, 0)
     QCoreApplication::setAttribute(Qt::AA_UseHighDpiPixmaps);
-    QCoreApplication::setAttribute(Qt::AA_ShareOpenGLContexts); // for QWebEngine
 #endif
 
 #if QT_VERSION >= QT_VERSION_CHECK(5, 7, 0)
diff -Naur gammaray-2.11.3-orig/config-gammaray.h.cmake gammaray-2.11.3/config-gammaray.h.cmake
--- gammaray-2.11.3-orig/config-gammaray.h.cmake	2021-10-17 23:35:36.000000000 +0300
+++ gammaray-2.11.3/config-gammaray.h.cmake	2021-11-18 09:19:17.379908300 +0300
@@ -46,6 +46,7 @@
 #cmakedefine HAVE_QT_SVG
 #cmakedefine HAVE_QT_DESIGNER
 #cmakedefine HAVE_QT_PRINTSUPPORT
+#cmakedefine HAVE_QT_WEBKIT1
 
 #cmakedefine HAVE_SYNTAX_HIGHLIGHTING
 
diff -Naur gammaray-2.11.3-orig/plugins/webinspector/CMakeLists.txt gammaray-2.11.3/plugins/webinspector/CMakeLists.txt
--- gammaray-2.11.3-orig/plugins/webinspector/CMakeLists.txt	2021-10-17 23:35:36.000000000 +0300
+++ gammaray-2.11.3/plugins/webinspector/CMakeLists.txt	2021-11-18 09:13:16.759637400 +0300
@@ -11,12 +11,12 @@
     )
 
     target_link_libraries(gammaray_webinspector_plugin
-        gammaray_core
+        gammaray_core Qt5::WebKitWidgets
     )
 endif()
 
 # ui part
-if(GAMMARAY_BUILD_UI AND TARGET Qt5::WebEngineWidgets)
+if(GAMMARAY_BUILD_UI AND TARGET Qt5::WebKitWidgets)
     set(gammaray_webinspector_ui_plugin_srcs
         webinspectorwidget.cpp
     )
@@ -27,7 +27,7 @@
     )
 
     target_link_libraries(gammaray_webinspector_ui_plugin
-        Qt5::WebEngineWidgets
+        Qt5::WebKitWidgets
         gammaray_ui
     )
 endif()
diff -Naur gammaray-2.11.3-orig/plugins/webinspector/gammaray_webinspector.desktop.in gammaray-2.11.3/plugins/webinspector/gammaray_webinspector.desktop.in
--- gammaray-2.11.3-orig/plugins/webinspector/gammaray_webinspector.desktop.in	1970-01-01 03:00:00.000000000 +0300
+++ gammaray-2.11.3/plugins/webinspector/gammaray_webinspector.desktop.in	2021-11-18 08:57:04.815252000 +0300
@@ -0,0 +1,6 @@
+[Desktop Entry]
+Name=Web Inspector
+X-GammaRay-Id=gammaray_webinspector
+X-GammaRay-Types="QWebPage;QQuickWebView"
+X-GammaRay-ServiceTypes=com.kdab.GammaRay.ToolFactory
+Exec=${plugin_exec}
diff -Naur gammaray-2.11.3-orig/plugins/webinspector/gammaray_webinspector.json gammaray-2.11.3/plugins/webinspector/gammaray_webinspector.json
--- gammaray-2.11.3-orig/plugins/webinspector/gammaray_webinspector.json	2021-10-17 23:35:36.000000000 +0300
+++ gammaray-2.11.3/plugins/webinspector/gammaray_webinspector.json	2021-11-18 08:57:04.816252000 +0300
@@ -3,8 +3,7 @@
     "name": "Web Inspector",
     "name[de]": "Web Inspektor",
     "types": [
-        "QWebEnginePage",
-        "QQuickWebView",
-        "QQuickWebEngineView"
+        "QWebPage",
+        "QQuickWebView"
     ]
 }
diff -Naur gammaray-2.11.3-orig/plugins/webinspector/gammaray_webinspector_ui.desktop.in gammaray-2.11.3/plugins/webinspector/gammaray_webinspector_ui.desktop.in
--- gammaray-2.11.3-orig/plugins/webinspector/gammaray_webinspector_ui.desktop.in	1970-01-01 03:00:00.000000000 +0300
+++ gammaray-2.11.3/plugins/webinspector/gammaray_webinspector_ui.desktop.in	2021-11-18 08:57:04.817252500 +0300
@@ -0,0 +1,5 @@
+[Desktop Entry]
+Name=Web Inspector
+X-GammaRay-Id=gammaray_webinspector
+X-GammaRay-ServiceTypes=com.kdab.GammaRay.ToolUiFactory
+Exec=${plugin_exec}
diff -Naur gammaray-2.11.3-orig/plugins/webinspector/webinspector.cpp gammaray-2.11.3/plugins/webinspector/webinspector.cpp
--- gammaray-2.11.3-orig/plugins/webinspector/webinspector.cpp	2021-10-17 23:35:36.000000000 +0300
+++ gammaray-2.11.3/plugins/webinspector/webinspector.cpp	2021-11-18 08:57:04.818251000 +0300
@@ -27,6 +27,7 @@
 */
 
 #include <config-gammaray.h>
+
 #include "webinspector.h"
 #include "webviewmodel.h"
 
@@ -38,6 +39,10 @@
 #include <QUrl>
 #include <QtPlugin>
 
+#ifdef HAVE_QT_WEBKIT1
+#include <QWebPage>
+#endif
+
 using namespace GammaRay;
 
 WebInspector::WebInspector(Probe *probe, QObject *parent)
@@ -53,10 +58,8 @@
     QString serverAddress(GAMMARAY_DEFAULT_ANY_ADDRESS);
     if (serverUrl.scheme() == QLatin1String("tcp"))
         serverAddress = serverUrl.host();
-    // see also probecreator.cpp
     qputenv("QTWEBKIT_INSPECTOR_SERVER",
             serverAddress.toLocal8Bit() + ':' + QByteArray::number(Endpoint::defaultPort() + 1));
-    qputenv("QTWEBENGINE_REMOTE_DEBUGGING", QByteArray::number(Endpoint::defaultPort() + 1));
 }
 
 void WebInspector::objectAdded(QObject *obj)
@@ -83,6 +86,12 @@
 WebInspectorFactory::WebInspectorFactory(QObject *parent)
     : QObject(parent)
 {
+    QVector<QByteArray> types;
+#ifdef HAVE_QT_WEBKIT1
+    types << QWebPage::staticMetaObject.className();
+#endif
+    types << QByteArrayLiteral("QQuickWebView");
+    setSupportedTypes(types);
 }
 
 QString WebInspectorFactory::id() const
diff -Naur gammaray-2.11.3-orig/plugins/webinspector/webinspectorwidget.cpp gammaray-2.11.3/plugins/webinspector/webinspectorwidget.cpp
--- gammaray-2.11.3-orig/plugins/webinspector/webinspectorwidget.cpp	2021-10-17 23:35:36.000000000 +0300
+++ gammaray-2.11.3/plugins/webinspector/webinspectorwidget.cpp	2021-11-18 09:24:26.156474200 +0300
@@ -44,20 +44,41 @@
     ui->webPageComboBox->setModel(ObjectBroker::model(QStringLiteral("com.kdab.GammaRay.WebPages")));
     connect(ui->webPageComboBox, static_cast<void(QComboBox::*)(int)>(&QComboBox::activated),
             this, &WebInspectorWidget::webPageSelected);
-    webPageSelected(0);
 }
 
 WebInspectorWidget::~WebInspectorWidget() = default;
 
 void WebInspectorWidget::webPageSelected(int index)
 {
-    Q_UNUSED(index);
-    const QUrl serverUrl = Endpoint::instance()->serverAddress();
-    if (serverUrl.scheme() == QLatin1String("tcp")) {
-        QUrl inspectorUrl;
-        inspectorUrl.setScheme(QStringLiteral("http"));
-        inspectorUrl.setHost(serverUrl.host());
-        inspectorUrl.setPort(Endpoint::defaultPort() + 1);
-        ui->webView->setUrl(inspectorUrl);
+    QObject *obj = ui->webPageComboBox->itemData(index, ObjectModel::ObjectRole).value<QObject *>();
+
+    // Wk 1, local
+    if (QWebPage *page = qobject_cast<QWebPage *>(obj)) {
+        page->settings()->setAttribute(QWebSettings::DeveloperExtrasEnabled, true);
+        ui->webInspector->setPage(page);
+        // webinspector needs a show event to actually show anything, just setting the page is not enough...
+        ui->webInspector->hide();
+        ui->webInspector->show();
+
+        ui->stack->setCurrentWidget(ui->wk1LocalPage);
+    } else if (ui->webPageComboBox->itemData(index,
+                                             WebViewModelRoles::WebKitVersionRole).toInt() == 2) {
+        const QUrl serverUrl = Endpoint::instance()->serverAddress();
+        if (serverUrl.scheme() == QLatin1String("tcp")) {
+            QUrl inspectorUrl;
+            inspectorUrl.setScheme(QStringLiteral("http"));
+            inspectorUrl.setHost(serverUrl.host());
+            inspectorUrl.setPort(Endpoint::defaultPort() + 1);
+            ui->webView->setUrl(inspectorUrl);
+            ui->stack->setCurrentWidget(ui->wk2Page);
+        }
+    }
+    // WK1, remote
+    else {
+        ui->stack->setCurrentWidget(ui->wk1RemotePage);
     }
 }
+
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
+Q_EXPORT_PLUGIN(WebInspectorUiFactory)
+#endif
diff -Naur gammaray-2.11.3-orig/plugins/webinspector/webinspectorwidget.h gammaray-2.11.3/plugins/webinspector/webinspectorwidget.h
--- gammaray-2.11.3-orig/plugins/webinspector/webinspectorwidget.h	2021-10-17 23:35:36.000000000 +0300
+++ gammaray-2.11.3/plugins/webinspector/webinspectorwidget.h	2021-11-18 08:57:04.820250600 +0300
@@ -31,6 +31,7 @@
 
 #include <ui/tooluifactory.h>
 
+#include <QWebPage>
 #include <QWidget>
 
 namespace GammaRay {
diff -Naur gammaray-2.11.3-orig/plugins/webinspector/webinspectorwidget.ui gammaray-2.11.3/plugins/webinspector/webinspectorwidget.ui
--- gammaray-2.11.3-orig/plugins/webinspector/webinspectorwidget.ui	2021-10-17 23:35:36.000000000 +0300
+++ gammaray-2.11.3/plugins/webinspector/webinspectorwidget.ui	2021-11-18 08:57:04.821250400 +0300
@@ -15,21 +15,55 @@
     <widget class="QComboBox" name="webPageComboBox"/>
    </item>
    <item>
-    <widget class="QWebEngineView" name="webView">
-     <property name="url">
-      <url>
-       <string>about:blank</string>
-      </url>
-     </property>
+    <widget class="QStackedWidget" name="stack">
+     <widget class="QWidget" name="wk1LocalPage">
+      <layout class="QVBoxLayout" name="verticalLayout_2">
+       <item>
+        <widget class="QWebInspector" name="webInspector" native="true"/>
+       </item>
+      </layout>
+     </widget>
+     <widget class="QWidget" name="wk1RemotePage">
+      <layout class="QVBoxLayout" name="verticalLayout_3">
+       <item>
+        <widget class="QLabel" name="label">
+         <property name="text">
+          <string>Sorry, WebKit1 introspection is not available remotely/out-of-process.</string>
+         </property>
+         <property name="alignment">
+          <set>Qt::AlignCenter</set>
+         </property>
+        </widget>
+       </item>
+      </layout>
+     </widget>
+     <widget class="QWidget" name="wk2Page">
+      <layout class="QVBoxLayout" name="verticalLayout_4">
+       <item>
+        <widget class="QWebView" name="webView">
+         <property name="url">
+          <url>
+           <string>about:blank</string>
+          </url>
+         </property>
+        </widget>
+       </item>
+      </layout>
+     </widget>
     </widget>
    </item>
   </layout>
  </widget>
  <customwidgets>
   <customwidget>
-   <class>QWebEngineView</class>
+   <class>QWebView</class>
    <extends>QWidget</extends>
-   <header location="global">QtWebEngineWidgets/QWebEngineView</header>
+   <header>QtWebKitWidgets/QWebView</header>
+  </customwidget>
+  <customwidget>
+   <class>QWebInspector</class>
+   <extends>QWidget</extends>
+   <header>qwebinspector.h</header>
   </customwidget>
  </customwidgets>
  <resources/>
diff -Naur gammaray-2.11.3-orig/plugins/webinspector/webviewmodel.cpp gammaray-2.11.3/plugins/webinspector/webviewmodel.cpp
--- gammaray-2.11.3-orig/plugins/webinspector/webviewmodel.cpp	2021-10-17 23:35:36.000000000 +0300
+++ gammaray-2.11.3/plugins/webinspector/webviewmodel.cpp	2021-11-18 09:25:01.442237000 +0300
@@ -26,11 +26,16 @@
   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <config-gammaray.h>
 #include "webviewmodel.h"
 #include "webviewmodelroles.h"
 
 #include "common/objectmodel.h"
 
+#ifdef HAVE_QT_WEBKIT1
+#include <QWebPage>
+#endif
+
 using namespace GammaRay;
 
 WebViewModel::WebViewModel(QObject *parent)
@@ -50,12 +55,16 @@
         return QSortFilterProxyModel::data(index, role);
 
     const QObject *obj = index.data(ObjectModel::ObjectRole).value<QObject *>();
-    const bool isWk2 = obj->inherits("QQuickWebView");
+#ifdef HAVE_QT_WEBKIT1
+    const bool isWk1 = qobject_cast<const QWebPage *>(obj);
+#else
+    const bool isWk1 = false;
+#endif
 
     if (role == Qt::DisplayRole)
-        return QString(Util::displayString(obj) + (isWk2 ? QStringLiteral(" [WebKit2]") : QStringLiteral(" [WebEngine]")));
+        return QString(Util::displayString(obj) + (isWk1 ? " [WebKit1]" : " [WebKit2]"));
     if (role == WebViewModelRoles::WebKitVersionRole)
-        return isWk2 ? 2 : 3;
+        return isWk1 ? 1 : 2;
 
     Q_ASSERT(!"WTF?");
     return QVariant();
@@ -63,8 +72,7 @@
 
 QMap< int, QVariant > WebViewModel::itemData(const QModelIndex &index) const
 {
-    QMap<int, QVariant> d;
-    d.insert(Qt::DisplayRole, data(index, Qt::DisplayRole));
+    QMap<int, QVariant> d = ObjectFilterProxyModelBase::itemData(index);
     d.insert(WebViewModelRoles::WebKitVersionRole,
              data(index, WebViewModelRoles::WebKitVersionRole));
     return d;
@@ -73,7 +81,8 @@
 bool WebViewModel::filterAcceptsObject(QObject *object) const
 {
     return
-        object->inherits("QQuickWebView") ||
-        object->inherits("QQuickWebEngineView") ||
-        object->inherits("QWebEnginePage");
+#ifdef HAVE_QT_WEBKIT1
+        qobject_cast<QWebPage *>(object) ||
+#endif
+        object->inherits("QQuickWebView");
 }
diff -Naur gammaray-2.11.3-orig/probe/probecreator.cpp gammaray-2.11.3/probe/probecreator.cpp
--- gammaray-2.11.3-orig/probe/probecreator.cpp	2021-10-17 23:35:36.000000000 +0300
+++ gammaray-2.11.3/probe/probecreator.cpp	2021-11-18 08:57:04.822251700 +0300
@@ -64,9 +64,6 @@
     qputenv("QTWEBKIT_INSPECTOR_SERVER",
             QByteArray(GAMMARAY_DEFAULT_ANY_ADDRESS) + ':'
             + QByteArray::number(Endpoint::defaultPort() + 1));
-    qputenv("QTWEBENGINE_REMOTE_DEBUGGING",
-            QByteArray(GAMMARAY_DEFAULT_ANY_ADDRESS) + ':'
-            + QByteArray::number(Endpoint::defaultPort() + 1));
 }
 
 void ProbeCreator::createProbe()
