--- codelite/CMakeLists.txt.orig	2015-03-11 00:04:27.169200000 +0300
+++ codelite/CMakeLists.txt	2015-03-11 00:05:10.755600000 +0300
@@ -496,7 +496,7 @@
     add_definitions( -mmacosx-version-min=10.8 )
 endif()
 
-if(APPLE)
+if(NOT SQLITE3_FOUND)
     # On Linux, we use the distro's libsqlite3
     add_subdirectory(sqlite3)
 endif()
@@ -574,8 +574,11 @@
     if ( USE_PCH )
         add_dependencies(sqlite3lib ${CL_PCH_TARGET})
     endif ( USE_PCH )
-    add_dependencies(wxsqlite3 sqlite3lib)
 endif()
+
+if(NOT SQLITE3_FOUND)
+    add_dependencies(wxsqlite3 sqlite3lib)
+endif()
 
 add_dependencies(databaselayersqlite wxsqlite3)
 add_dependencies(wxshapeframework wxsqlite3)
--- codelite/cmake/Modules/FindSqlite3.cmake.orig	2015-12-24 15:02:52.639852500 +0300
+++ codelite/cmake/Modules/FindSqlite3.cmake	2015-12-24 15:07:28.933929700 +0300
@@ -1,27 +1,76 @@
-if(UNIX AND NOT APPLE)
+#  Try to find Sqlite3
+#  Once done this will define
+#
+#  SQLITE3_FOUND - system has Sqlite3
+#  SQLITE3_INCLUDE_DIRS - the Sqlite3 include directory
+#  SQLITE3_LIBRARIES - Link these to use Sqlite3
+#  SQLITE3_DEFINITIONS - Compiler switches required for using Sqlite3
+#
+
+if(NOT APPLE)
+  if (SQLITE3_LIBRARIES AND SQLITE3_INCLUDE_DIRS)
+    # in cache already
+    set(SQLITE3_FOUND TRUE)
+  else()
+    # use pkg-config to get the directories and then use these values
+    # in the FIND_PATH() and FIND_LIBRARY() calls
+    find_package(PkgConfig)
+    if(PKG_CONFIG_FOUND)
+      pkg_check_modules(_SQLITE3 sqlite3)
+    endif()
+    find_path(SQLITE3_INCLUDE_DIR
+      NAMES
+        sqlite3.h
+      HINTS
+        ${_SQLITE3_INCLUDE_DIRS}
+        $ENV{SQLITE3DIR}/include
+        /usr/include
+        /usr/include/sqlite3
+        /usr/local/include
+        /opt/local/include
+    )
+
     find_library(SQLITE3_LIBRARY
-                 NAMES libsqlite3.so
-                 HINTS
-                 /usr/local/lib
-                 /usr/lib
-                 /usr/lib/x86_64-linux-gnu
-                 /usr/lib/i386-linux-gnu
-                 )
-                 
-    find_path(SQLITE3_INCLUDE_DIR NAMES sqlite3.h
-              HINTS 
-              /usr/local/include
-              /usr/include
-              /usr/include/sqlite3
-              )
-    if (SQLITE3_INCLUDE_DIR AND SQLITE3_LIBRARY)
+      NAMES
+        sqlite3
+      HINTS
+        ${_SQLITE3_LIBRARY_DIRS}
+        $ENV{SQLITE3DIR}/lib
+        /usr/lib
+        /usr/lib/x86_64-linux-gnu
+        /usr/lib/i386-linux-gnu
+        /usr/local/lib
+        /opt/local/lib
+    )
+
+    if(SQLITE3_LIBRARY)
+      set(SQLITE3_FOUND TRUE)
+    endif()
+
+    set(SQLITE3_INCLUDE_DIRS
+      ${SQLITE3_INCLUDE_DIR}
+    )
+
+    if(SQLITE3_FOUND)
+      set(SQLITE3_LIBRARIES
+        ${SQLITE3_LIBRARIES}
+        ${SQLITE3_LIBRARY}
+      )
+    endif()
+
+    if(SQLITE3_INCLUDE_DIRS AND SQLITE3_LIBRARIES)
        set(SQLITE3_FOUND TRUE)
     endif()
-    
-    if(NOT SQLITE3_FOUND)
-        message(FATAL_ERROR " **** Could not find Sqlite3. Please install libsqlite3-dev package **** ")
+
+    if(SQLITE3_FOUND)
+      message("-- SQLITE3_INCLUDE_DIR: " ${SQLITE3_INCLUDE_DIR})
+      message("-- SQLITE3_LIBRARY: " ${SQLITE3_LIBRARY})
     else()
-        message("-- SQLITE3_INCLUDE_DIR: " ${SQLITE3_INCLUDE_DIR})
-        message("-- SQLITE3_LIBRARY: " ${SQLITE3_LIBRARY})
+      message(-- "Could not find system Sqlite3. Using bundled sqlite3")
     endif()
+
+    # show the SQLITE3_INCLUDE_DIRS and SQLITE3_LIBRARIES variables only in the advanced view
+    mark_as_advanced(SQLITE3_INCLUDE_DIRS SQLITE3_LIBRARIES)
+
+  endif ()
 endif()
--- codelite/sdk/databaselayer/CMakeLists.txt.orig	2015-12-24 15:15:22.810929700 +0300
+++ codelite/sdk/databaselayer/CMakeLists.txt	2015-12-24 15:16:23.103929700 +0300
@@ -12,7 +12,7 @@
 include( "${wxWidgets_USE_FILE}" )
 
 # Include paths
-include_directories(./include/wx/dblayer/include src/sqlite3)
+include_directories(./include/wx/dblayer/include ${SQLITE3_INCLUDE_DIR})
 
 if ( USE_PCH )
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -include ${CL_PCH_FILE} -Winvalid-pch ")
@@ -60,7 +60,7 @@
 
 # Define the output
 add_library(databaselayersqlite SHARED ${SRCS} ${MYSQL_SRCS})
-target_link_libraries(databaselayersqlite ${LINKER_OPTIONS} ${wxWidgets_LIBRARIES})
+target_link_libraries(databaselayersqlite ${LINKER_OPTIONS} ${wxWidgets_LIBRARIES} -L"${CL_LIBPATH}" ${SQLITE3_LIBRARY})
 
 if(APPLE)
     install(TARGETS databaselayersqlite DESTINATION ${CMAKE_BINARY_DIR}/codelite.app/Contents/MacOS/)
--- codelite/CodeLite/CMakeLists.txt.orig	2015-12-24 15:15:22.810929700 +0300
+++ codelite/CodeLite/CMakeLists.txt	2015-12-24 15:16:23.103929700 +0300
@@ -100,16 +100,16 @@
 
 # Define the output
 add_library(libcodelite SHARED ${SRCS})
-if (UNIX AND NOT APPLE )
+if ( NOT APPLE )
     target_link_libraries(libcodelite 
                          ${LINKER_OPTIONS} 
                          ${wxWidgets_LIBRARIES} 
                          -L"${CL_LIBPATH}" 
                          ${SQLITE3_LIBRARY}
                          wxsqlite3 
                          ${LIBSSH_LIB} 
                          ${ADDITIONAL_LIBRARIES})
-else (UNIX AND NOT APPLE)
+else ( NOT APPLE)
     target_link_libraries(libcodelite 
                           ${LINKER_OPTIONS} 
                           ${wxWidgets_LIBRARIES} 
