diff --git a/CMakeLists.txt b/CMakeLists.txt
index c2df39e..efd8df0 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -78,30 +78,41 @@ elseif (${CMINPACK_PRECISION} STREQUAL all)
   endif ()
 endif ()
 
+
+set(cminpack_lib_suffix "")
+
 if (BUILD_SHARED_LIBS)
   message (STATUS "Building shared libraries.")
-  if (NOT DEFINED CMAKE_DEBUG_POSTFIX)
-    set (CMAKE_DEBUG_POSTFIX _d)
-  endif ()
+  if ("${CMAKE_BUILD_TYPE}" MATCHES "Debug")
+   set(cminpack_lib_suffix "_d")
+  endif()
 else ()
   message (STATUS "Building static libraries.")
-  if (NOT DEFINED CMAKE_RELEASE_POSTFIX)
-    set (CMAKE_RELEASE_POSTFIX _s)
+  if ("${CMAKE_BUILD_TYPE}" MATCHES "Release")
+    set (cminpack_lib_suffix "_s")
   endif ()
-  if (NOT DEFINED CMAKE_RELWITHDEBINFO_POSTFIX)
-    set (CMAKE_RELWITHDEBINFO_POSTFIX _s)
+  if ("${CMAKE_BUILD_TYPE}" MATCHES "RelWithDebInfo")
+    set (cminpack_lib_suffix "_s")
   endif ()
-  if (NOT DEFINED CMAKE_DEBUG_POSTFIX)
-    set (CMAKE_DEBUG_POSTFIX _s_d)
+  if ("${CMAKE_BUILD_TYPE}" MATCHES "Debug")
+    set (cminpack_lib_suffix "_s_d")
   endif ()
-  if (NOT DEFINED CMAKE_MINSIZEREL_POSTFIX)
-    set (CMAKE_MINSIZEREL_POSTFIX _s)
+  if ("${CMAKE_BUILD_TYPE}" MATCHES "MinSizeRel")
+    set (cminpack_lib_suffix "_s")
   endif ()
 endif ()
 
-foreach (cminpack_lib ${cminpack_libs})
-  add_library (${cminpack_lib} ${cminpack_srcs})
+set(cminpack_targets_to_export "")
+
+foreach (cminpack_lib_name ${cminpack_libs})
+  
+  set(cminpack_lib "${cminpack_lib_name}${cminpack_lib_suffix}")
+  list(APPEND cminpack_targets_to_export ${cminpack_lib})
+
+  set(PC_CMINPACK_CFLAGS "")
   
+  add_library (${cminpack_lib} ${cminpack_srcs})
+
   if (OS_WIN AND BUILD_SHARED_LIBS)
     add_custom_command(
       TARGET ${cminpack_lib} POST_BUILD
@@ -109,10 +120,12 @@ foreach (cminpack_lib ${cminpack_libs})
     )
   endif ()
 
-  if (${cminpack_lib} STREQUAL "cminpacks")
-    target_compile_definitions (cminpacks PUBLIC __cminpack_float__)
-  elseif (${cminpack_lib} STREQUAL "cminpackld")
-    target_compile_definitions (cminpackld PUBLIC __cminpack_long_double__)
+  if (${cminpack_lib_name} STREQUAL "cminpacks")
+    target_compile_definitions (${cminpack_lib} PUBLIC __cminpack_float__)
+    list(APPEND PC_CMINPACK_CFLAGS "-D__cminpack_float__")
+  elseif (${cminpack_lib_name} STREQUAL "cminpackld")
+    target_compile_definitions (${cminpack_lib} PUBLIC __cminpack_long_double__)
+    list(APPEND PC_CMINPACK_CFLAGS "-D__cminpack_long_double__")
   endif ()
 
   if (BUILD_SHARED_LIBS)
@@ -142,49 +155,61 @@ foreach (cminpack_lib ${cminpack_libs})
 
   # Link with BLAS library if requested
   if (USE_BLAS)
-    if (${cminpack_lib} STREQUAL cminpackld)
+    if (${cminpack_lib_name} STREQUAL cminpackld)
       message (WARNING "BLAS cannot be used for the extended precision version")
     else ()
       find_package (BLAS)
       if (BLAS_FOUND)
         target_link_libraries (${cminpack_lib} PUBLIC ${BLAS_LIBRARIES})
-        set_target_properties (${cminpack_lib} PROPERTIES LINK_FLAGS "${BLAS_LINKER_FLAGS}")
         target_compile_definitions (${cminpack_lib} PUBLIC USE_BLAS)
+        list(APPEND PC_CMINPACK_CFLAGS "-DUSE_BLAS")
       endif ()
     endif ()
   endif ()
 
-  install (TARGETS ${cminpack_lib} EXPORT CMinpackConfig
-    LIBRARY DESTINATION ${CMINPACK_LIB_INSTALL_DIR} COMPONENT library
-    ARCHIVE DESTINATION ${CMINPACK_LIB_INSTALL_DIR} COMPONENT library
-    RUNTIME DESTINATION bin COMPONENT library)
   install (FILES ${cminpack_hdrs} DESTINATION ${CMINPACK_INCLUDE_INSTALL_DIR}
     COMPONENT cminpack_hdrs)
 
-  set_target_properties (${cminpack_lib} PROPERTIES
-    POSITION_INDEPENDENT_CODE ON
-    VERSION ${CMINPACK_VERSION}
-    SOVERSION ${CMINPACK_SOVERSION}
+  if (USE_BLAS AND BLAS_FOUND)
+    set_target_properties (${cminpack_lib} PROPERTIES
+      LINK_FLAGS "${BLAS_LINKER_FLAGS}"
+      POSITION_INDEPENDENT_CODE ON
+      VERSION ${CMINPACK_VERSION}
+      SOVERSION ${CMINPACK_SOVERSION}
+    )
+  else()
+    set_target_properties (${cminpack_lib} PROPERTIES
+      POSITION_INDEPENDENT_CODE ON
+      VERSION ${CMINPACK_VERSION}
+      SOVERSION ${CMINPACK_SOVERSION}
     )
+  endif()
 
   set (pkg_conf_file ${CMAKE_CURRENT_BINARY_DIR}/${cminpack_lib}.pc)
   if (HAVE_LIBM)
     set (PC_CMINPACK_LIBM "-lm")
   endif ()
   if (USE_BLAS AND BLAS_FOUND)
-    set (PC_CMINPACK_CFLAGS "-DUSE_BLAS")
     if (NOT "${BLAS_LIBRARIES}" STREQUAL "")
       string (REPLACE ";" " -l" PC_CMINPACK_LIBBLAS "${BLAS_LIBRARIES}")
       set (PC_CMINPACK_LIBBLAS "-l${PC_CMINPACK_LIBBLAS}")
     endif ()
     set (PC_CMINPACK_LDFLAGS "${BLAS_LINKER_FLAGS}")
   endif ()
+
+  list(JOIN PC_CMINPACK_CFLAGS " " PC_CMINPACK_CFLAGS)
+
   configure_file (cmake/cminpack.pc.in ${pkg_conf_file} @ONLY)
   install (FILES ${pkg_conf_file}
     DESTINATION ${CMINPACK_LIB_INSTALL_DIR}/pkgconfig/ COMPONENT pkgconfig)
 
 endforeach ()
 
+install (TARGETS ${cminpack_targets_to_export} EXPORT CMinpackConfig
+LIBRARY DESTINATION ${CMINPACK_LIB_INSTALL_DIR} COMPONENT library
+ARCHIVE DESTINATION ${CMINPACK_LIB_INSTALL_DIR} COMPONENT library
+RUNTIME DESTINATION bin COMPONENT library)
+
 install (EXPORT CMinpackConfig DESTINATION share/cminpack NAMESPACE cminpack::)
 
 add_subdirectory (examples)
diff --git a/cmake/cminpack.pc.in b/cmake/cminpack.pc.in
index 6f09c51..548a717 100644
--- a/cmake/cminpack.pc.in
+++ b/cmake/cminpack.pc.in
@@ -9,4 +9,4 @@ Description: CMinPack
 Version: @CMINPACK_VERSION@
 Requires:
 Libs: -L${libdir} -l@cminpack_lib@ @PC_CMINPACK_LIBM@ @PC_CMINPACK_LIBBLAS@ @PC_CMINPACK_LDFLAGS@
-Cflags: -I${includedir} @CMINPACK_CFLAGS@
+Cflags: -I${includedir} @PC_CMINPACK_CFLAGS@ @CMINPACK_CFLAGS@
diff --git a/examples/CMakeLists.txt b/examples/CMakeLists.txt
index 2dbb955..6a33136 100644
--- a/examples/CMakeLists.txt
+++ b/examples/CMakeLists.txt
@@ -1,7 +1,21 @@
 option (BUILD_EXAMPLES "Build the examples and tests." ON)
 option (BUILD_EXAMPLES_FORTRAN "Build the FORTRAN examples and tests." OFF)
 
-if (BUILD_EXAMPLES)
+list(FIND cminpack_libs "cminpack" index_cminpack)
+
+if ("${index_cminpack}" GREATER -1)
+  set(has_double_precision TRUE)
+else()
+  set(has_double_precision FALSE)
+endif()
+
+if (USE_BLAS AND BLAS_FOUND)
+  set(is_using_blas TRUE)
+else()
+  set(is_using_blas FALSE)
+endif()
+
+if (BUILD_EXAMPLES AND has_double_precision AND NOT is_using_blas)
   # Make sure the compiler can find include files from our cminpack library.
   include_directories (${CMINPACK_SOURCE_DIR})
 
@@ -30,21 +44,21 @@ if (BUILD_EXAMPLES)
 
   foreach (source ${CPGM})
     add_executable (${source}_ ${source}_.c)
-    target_link_libraries (${source}_ cminpack)
+    target_link_libraries (${source}_ cminpack${cminpack_lib_suffix})
     if (OS_LINUX)
       target_link_libraries (${source}_ m)
     endif (OS_LINUX)
     add_minpack_test(${source}_ ${source}c)
     add_executable (${source}c ${source}c.c)
-    target_link_libraries (${source}c cminpack)
+    target_link_libraries (${source}c cminpack${cminpack_lib_suffix})
     if (OS_LINUX)
       target_link_libraries (${source}c m)
     endif (OS_LINUX)
     add_minpack_test(${source}c ${source}c)
   endforeach(source)
-endif (BUILD_EXAMPLES)
+endif ()
 
-if (BUILD_EXAMPLES_FORTRAN)
+if (BUILD_EXAMPLES_FORTRAN AND has_double_precision AND NOT is_using_blas)
   enable_language (Fortran OPTIONAL)
   if (CMAKE_Fortran_COMPILER_WORKS)
     foreach (FPGM_item ${FPGM})
@@ -63,9 +77,9 @@ if (BUILD_EXAMPLES_FORTRAN)
       )
     foreach (source ${FPGM})
       add_executable (${source} ${source}.f)
-      target_link_libraries (${source} cminpack)
+      target_link_libraries (${source} cminpack${cminpack_lib_suffix})
       add_minpack_test(${source} ${source})
     endforeach (source)
   endif (CMAKE_Fortran_COMPILER_WORKS)
-endif (BUILD_EXAMPLES_FORTRAN)
+endif ()
 
