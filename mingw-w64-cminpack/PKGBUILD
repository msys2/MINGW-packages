# Maintainer: luau-project <luau.project@gmail.com>

_realname=cminpack
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=1.3.9
pkgrel=1
pkgdesc="A C/C++ rewrite of the MINPACK software for solving nonlinear equations and nonlinear least squares problems (mingw-w64)"
arch=('any')
mingw_arch=('mingw64' 'ucrt64' 'clang64' 'clangarm64')
url='http://devernay.free.fr/hacks/cminpack'
license=('spdx:Minpack')
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja")
<<<<<<< HEAD
source=("https://github.com/devernay/cminpack/archive/v1.3.9.tar.gz")
sha256sums=("aa37bac5b5caaa4f5805ea5c4240e3834c993672f6dab0b17190ee645e251c9f")

prepare() {
  # on Windows, EOL must be CRLF (\r\n)
  # for reference test files,
  # but the tarball is packed with LF (\n).
  # So, we replace LF with CRLF.
  for ref in ./${_realname}-${pkgver}/examples/ref/*.ref;
  do
    mv $ref $ref.bak;
    unix2dos -n $ref.bak $ref;
  done
=======
source=("https://github.com/devernay/cminpack/archive/v1.3.9.tar.gz"
        "001-fix-cmake-eol-for-tests.patch"
        "002-fix-pkg-config.patch")
sha256sums=("aa37bac5b5caaa4f5805ea5c4240e3834c993672f6dab0b17190ee645e251c9f"
            "20bcdd676821ad984c20858fc9882ee0c55a266ccba2e67ce839c094d0513936"
            "7211985e203ae0afe0b860df3b5aa8e7f2027828f8020a3339ef91ef14ddb861")

prepare() {
  cd "${srcdir}/${_realname}-${pkgver}"

  patch -Np1 -i "${srcdir}"/001-fix-cmake-eol-for-tests.patch
  patch -Np1 -i "${srcdir}"/002-fix-pkg-config.patch
>>>>>>> cminpack-update
}

build() {
  declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

<<<<<<< HEAD
  # Configure the static version
  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  "${MINGW_PREFIX}"/bin/cmake.exe \
    -G Ninja \
    -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}" \
    "${extra_config[@]}" \
    -DUSE_BLAS=OFF \
    -DBUILD_SHARED_LIBS=OFF \
    -S "${_realname}-${pkgver}" \
    -B build-${MSYSTEM}-static

  "${MINGW_PREFIX}"/bin/cmake.exe --build build-${MSYSTEM}-static

  # Configure the shared version
=======
>>>>>>> cminpack-update
  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  "${MINGW_PREFIX}"/bin/cmake.exe \
    -G Ninja \
    -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}" \
    "${extra_config[@]}" \
    -DUSE_BLAS=OFF \
<<<<<<< HEAD
=======
    -DCMINPACK_PRECISION=d \
>>>>>>> cminpack-update
    -DBUILD_SHARED_LIBS=ON \
    -S "${_realname}-${pkgver}" \
    -B build-${MSYSTEM}-shared

  "${MINGW_PREFIX}"/bin/cmake.exe --build build-${MSYSTEM}-shared
}

check() {
<<<<<<< HEAD
  # test the static version
  "${MINGW_PREFIX}"/bin/cmake.exe --build build-${MSYSTEM}-static --target test

  # test the shared version
=======
>>>>>>> cminpack-update
  "${MINGW_PREFIX}"/bin/cmake.exe --build build-${MSYSTEM}-shared --target test
}

package() {
<<<<<<< HEAD
  # install the static version
  DESTDIR="${pkgdir}" "${MINGW_PREFIX}"/bin/cmake.exe --install build-${MSYSTEM}-static

  # install the shared version
=======
>>>>>>> cminpack-update
  DESTDIR="${pkgdir}" "${MINGW_PREFIX}"/bin/cmake.exe --install build-${MSYSTEM}-shared

  install -Dm644 "${srcdir}/${_realname}-${pkgver}/CopyrightMINPACK.txt" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE"
}
