diff --git a/build/build_linux.ninja.template b/build/build_linux.ninja.template
index ab117fb4..27339a7f 100644
--- a/build/build_linux.ninja.template
+++ b/build/build_linux.ninja.template
@@ -5,7 +5,7 @@ rule cxx
   deps = gcc
 
 rule alink_thin
-  command = rm -f $out && $ar rcsT $out $in
+  command = $ar rcsT $out $in
   description = AR $out
 
 rule link
diff --git a/build/gen.py b/build/gen.py
index 922bf46f..522d4e43 100755
--- a/build/gen.py
+++ b/build/gen.py
@@ -306,6 +306,7 @@ def WriteGNNinja(path, platform, host, options):
     cxx = os.environ.get('CXX', 'g++')
     ld = os.environ.get('LD', 'g++')
     ar = os.environ.get('AR', 'ar')
+    msystem = os.environ.get('MSYSTEM', '')
   else:
     cxx = os.environ.get('CXX', 'clang++')
     ld = cxx
@@ -375,7 +376,8 @@ def WriteGNNinja(path, platform, host, options):
     ])
 
     if platform.is_linux() or platform.is_mingw() or platform.is_msys():
-      ldflags.append('-Wl,--as-needed')
+      if msystem != 'CLANG32' and msystem != 'CLANG64':
+        ldflags.append('-Wl,--as-needed')
 
       if not options.no_static_libstdcpp:
         ldflags.append('-static-libstdc++')
@@ -389,9 +391,12 @@ def WriteGNNinja(path, platform, host, options):
           '-Wno-unused-variable',
           '-Wno-format',             # Use of %llx, which is supported by _UCRT, false positive
           '-Wno-strict-aliasing',    # Dereferencing punned pointer
-          '-Wno-cast-function-type', # Casting FARPROC to RegDeleteKeyExPtr
           '-std=gnu++17',
         ])
+        if msystem != 'CLANG32' and msystem != 'CLANG64':
+          cflags.extend([
+            '-Wno-cast-function-type', # Casting FARPROC to RegDeleteKeyExPtr
+          ])
       else:
         # This is needed by libc++.
         libs.append('-ldl')
