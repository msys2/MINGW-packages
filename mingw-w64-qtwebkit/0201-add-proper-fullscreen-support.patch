From 2baa118166d65f9eefe3bc84f2eef871ed83b739 Mon Sep 17 00:00:00 2001
From: Leszek Lesner <leszek.lsner@web.de>
Date: Wed, 6 Sep 2017 23:31:38 +0200
Subject: [PATCH] Add proper full screen support

Change-Id: I7a354847dc2faee139f477c73d1b338c3a09f00d
---
 Source/WebKit2/UIProcess/qt/QtPageClient.cpp       | 13 +++-
 .../WebKit2/UIProcess/qt/QtWebPageEventHandler.h   |  1 +
 .../UIProcess/qt/WebFullScreenManagerProxyQt.cpp   | 86 ----------------------
 3 files changed, 12 insertions(+), 88 deletions(-)
 delete mode 100644 Source/WebKit2/UIProcess/qt/WebFullScreenManagerProxyQt.cpp

diff --git a/Source/WebKit2/UIProcess/qt/QtPageClient.cpp b/Source/WebKit2/UIProcess/qt/QtPageClient.cpp
index 5f62dc600762..53faa7647bdb 100644
--- a/Source/WebKit2/UIProcess/qt/QtPageClient.cpp
+++ b/Source/WebKit2/UIProcess/qt/QtPageClient.cpp
@@ -288,12 +288,21 @@ bool QtPageClient::isFullScreen()
 
 void QtPageClient::enterFullScreen()
 {
-    notImplemented();
+    if (!m_webView)
+        return;
+
+    WebFullScreenManagerProxy* manager = m_eventHandler->webPageProxy()->fullScreenManager();
+    manager->willEnterFullScreen();
+    emit m_webView->experimental()->enterFullScreenRequested();
+    manager->didEnterFullScreen();
 }
 
 void QtPageClient::exitFullScreen()
 {
-    notImplemented();
+    WebFullScreenManagerProxy* manager = m_eventHandler->webPageProxy()->fullScreenManager();
+    manager->willExitFullScreen();
+    emit m_webView->experimental()->exitFullScreenRequested();
+    manager->didExitFullScreen();
 }
 
 void QtPageClient::beganEnterFullScreen(const IntRect& initialFrame, const IntRect& finalFrame)
diff --git a/Source/WebKit2/UIProcess/qt/QtWebPageEventHandler.h b/Source/WebKit2/UIProcess/qt/QtWebPageEventHandler.h
index 2fe82e8e0999..32c7f3f0ddba 100644
--- a/Source/WebKit2/UIProcess/qt/QtWebPageEventHandler.h
+++ b/Source/WebKit2/UIProcess/qt/QtWebPageEventHandler.h
@@ -93,6 +93,7 @@ class QtWebPageEventHandler final : public QObject {
     void resetGestureRecognizers();
 
     PageViewportControllerClientQt* viewportController() { return m_viewportController; }
+    WebPageProxy* webPageProxy() { return m_webPageProxy; }
 
     void startDrag(const WebCore::DragData&, PassRefPtr<ShareableBitmap> dragImage);
 
diff --git a/Source/WebKit2/UIProcess/qt/WebFullScreenManagerProxyQt.cpp b/Source/WebKit2/UIProcess/qt/WebFullScreenManagerProxyQt.cpp
deleted file mode 100644
index 2b97dc722e49..000000000000
--- a/Source/WebKit2/UIProcess/qt/WebFullScreenManagerProxyQt.cpp
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies)
- *
- *  This library is free software; you can redistribute it and/or
- *  modify it under the terms of the GNU Library General Public
- *  License as published by the Free Software Foundation; either
- *  version 2 of the License, or (at your option) any later version.
- *
- *  This library is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- *  Library General Public License for more details.
- *
- *  You should have received a copy of the GNU Library General Public License
- *  along with this library; see the file COPYING.LIB.  If not, write to
- *  the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
- *  Boston, MA 02110-1301, USA.
- */
-
-#include "config.h"
-#include "WebFullScreenManagerProxy.h"
-
-#if ENABLE(FULLSCREEN_API)
-
-#include "WebContext.h"
-#include "WebFullScreenManagerMessages.h"
-#include "WebFullScreenManagerProxyMessages.h"
-#include "WebProcess.h"
-#include <WebCore/NotImplemented.h>
-
-#if HAVE(QTQUICK)
-#include "qquickwebview_p.h"
-#endif
-
-using namespace WebCore;
-
-namespace WebKit {
-
-void WebFullScreenManagerProxy::invalidate()
-{
-#if HAVE(QTQUICK)
-    m_webView = 0;
-#endif
-}
-
-void WebFullScreenManagerProxy::close()
-{
-    notImplemented();
-}
-
-bool WebFullScreenManagerProxy::isFullScreen()
-{
-    notImplemented();
-    return false;
-}
-
-void WebFullScreenManagerProxy::enterFullScreen()
-{
-    willEnterFullScreen();
-#if HAVE(QTQUICK)
-    emit m_webView->experimental()->enterFullScreenRequested();
-#endif
-    didEnterFullScreen();
-}
-
-void WebFullScreenManagerProxy::exitFullScreen()
-{
-    willExitFullScreen();
-#if HAVE(QTQUICK)
-    emit m_webView->experimental()->exitFullScreenRequested();
-#endif
-    didExitFullScreen();
-}
-
-void WebFullScreenManagerProxy::beganEnterFullScreen(const IntRect& initialFrame, const IntRect& finalFrame)
-{
-    notImplemented();
-}
-
-void WebFullScreenManagerProxy::beganExitFullScreen(const IntRect& initialFrame, const IntRect& finalFrame)
-{
-    notImplemented();
-}
-
-} // namespace WebKit
-
-#endif // ENABLE(FULLSCREEN_API)
