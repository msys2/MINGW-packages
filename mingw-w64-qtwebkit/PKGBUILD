# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=qtwebkit
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=tp5
pkgrel=3
pkgdesc="Webkit module for Qt5 (mingw-w64)"
arch=('any')
url="https://github.com/annulen/webkit/wiki"
options=(!strip)
license=(GPL3 LGPL3 FDL custom)
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ruby"
             "${MINGW_PACKAGE_PREFIX}-gcc"
             "${MINGW_PACKAGE_PREFIX}-pkg-config"
             "${MINGW_PACKAGE_PREFIX}-python2"
             "dos2unix"
             "gperf")
depends=("${MINGW_PACKAGE_PREFIX}-icu"
         "${MINGW_PACKAGE_PREFIX}-libxml2"
         "${MINGW_PACKAGE_PREFIX}-libxslt"
         "${MINGW_PACKAGE_PREFIX}-libwebp"
         "${MINGW_PACKAGE_PREFIX}-fontconfig"
         "${MINGW_PACKAGE_PREFIX}-sqlite3"
         "${MINGW_PACKAGE_PREFIX}-qt5")
#install=${_realname}-qt5-git-${CARCH}.install
source=(https://github.com/annulen/webkit/releases/download/qtwebkit-tp5/${_realname}-${pkgver}.tar.xz
        0001-gettickcount64-compatibility-xp.patch
        0002-qtwebkit-workaround-build-breakage-after-svn-commit-136242.patch
        0003-qtwebkit-mfence-mingw.patch
        0004-msvc-bug-not-mingw.patch
        0005-fix-icu-find.patch
        0006-python-output-unix-line-endings.patch
        0007-fix-set-pythonpath-under-bash.patch
        0008-fix-using-msys-perl.patch
        0009-missing-includes.patch
        0010-generate-proper-library-names.patch
        0011-mingw-posix-layout-files.patch
        0012-install-additional-pri-files.patch
        0013-minimal-debug.patch
        0014-disable-asm-win64.patch)
sha256sums=('553dfb47a10d256314b74105d0eafadab0efc0ebd32d77a09cffbe2fed09def8'
            'da74b0cefbbe9e7afc58de231db1e5101c49cf96f42c9e6245ea3a7e03ec8a32'
            '5edcff1f6a59d89d9a2de32e34f7a2523f07dffbec502e845cc40d6ac526d7db'
            'ed80d9a31cb1f9565841e3e206d76810881b7fce30210022270bd19694a9c906'
            'd6340dbcf58b3c031735c23d63e1c58d14baf6fbf2b085cbb7110ea81ade6b1f'
            'b9e39597d140f3fc40d07ae0f0eea0cbabd7b16d8e430d26445ae3063b8ad055'
            '16410ad976524b40e7b9d906e67e4f46b86b58db6d7bb61e929f500387d7937f'
            'ecb8ce93fc111611f82d7edc2eb91f78f1f1cf35ce00b0501cb345b5a828ee92'
            '9ef33dc05e5652362e10d34d75fd2cf9e7952c1c99306eb2402367401f86770b'
            'e365ccf6748b0ad1a4cba3dcc35fdb286cddc553b54e1242908a5b4019fd6d41'
            '1f1b3eabbb200e0aa694eddaba5b5d38a52f467d2cee5a2aa1e64b1fc0c097a0'
            'a1ef305a81b4e1b70290d4c3f70bee545f06c17736fe77abde474dba0df8c5c7'
            '054ab5d003e5436e6b5e59d9d61895fed88d8c4eb9cdff39b1d5ef8b89528c68'
            'c5c39dd972529041715b94e0cdf54ddda9008c64afbedd8c148497aacc6efad1'
            'c39b65235a61217bf4197285d21765a47a91d2e8c267f4b777c982d56d32b408')

prepare() {
  cd "${srcdir}/${_realname}-${pkgver}"
  patch -p1 -i ${srcdir}/0001-gettickcount64-compatibility-xp.patch
  patch -p1 -i ${srcdir}/0002-qtwebkit-workaround-build-breakage-after-svn-commit-136242.patch
  patch -p1 -i ${srcdir}/0003-qtwebkit-mfence-mingw.patch
  patch -p1 -i ${srcdir}/0004-msvc-bug-not-mingw.patch
  patch -p1 -i ${srcdir}/0005-fix-icu-find.patch
  patch -p1 -i ${srcdir}/0006-python-output-unix-line-endings.patch
  patch -p1 -i ${srcdir}/0007-fix-set-pythonpath-under-bash.patch
  patch -p1 -i ${srcdir}/0008-fix-using-msys-perl.patch
  patch -p1 -i ${srcdir}/0009-missing-includes.patch
  patch -p1 -i ${srcdir}/0010-generate-proper-library-names.patch
  patch -p1 -i ${srcdir}/0011-mingw-posix-layout-files.patch
  patch -p1 -i ${srcdir}/0012-install-additional-pri-files.patch
  patch -p1 -i ${srcdir}/0013-minimal-debug.patch
  patch -p1 -i ${srcdir}/0014-disable-asm-win64.patch

  # MSYS2 gperf cannot handle \r\n.
  find . -name "*.gperf" -exec dos2unix "{}" \;
}

build() {

  msg2 "Build debug version ..."
  [[ -d ${srcdir}/build-${MINGW_CHOST}-debug ]] && rm -rf ${srcdir}/build-${MINGW_CHOST}-debug
  mkdir ${srcdir}/build-${MINGW_CHOST}-debug
  cd ${srcdir}/build-${MINGW_CHOST}-debug

  local jit_opt="-DENABLE_JIT=ON"
  if [ "${CARCH}" = "x86_64" ]; then
    local jit_opt="-DENABLE_JIT=OFF"
  fi

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake \
    -G"MSYS Makefiles" \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DCMAKE_BUILD_TYPE=Debug \
    -DPORT=Qt \
    ${jit_opt} \
    ../${_realname}-${pkgver}

  make

  msg2 "Build release version ..."
  [[ -d ${srcdir}/build-${MINGW_CHOST}-release ]] && rm -rf ${srcdir}/build-${MINGW_CHOST}-release
  mkdir ${srcdir}/build-${MINGW_CHOST}-release
  cd ${srcdir}/build-${MINGW_CHOST}-release

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake \
    -G"MSYS Makefiles" \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DCMAKE_BUILD_TYPE=Release \
    -DPORT=Qt \
    ${jit_opt} \
    ../${_realname}-${pkgver}

  make

}

package() {
  cd ${srcdir}/build-${MINGW_CHOST}-debug
  make DESTDIR="${pkgdir}" install

  cd ${srcdir}/build-${MINGW_CHOST}-release
  make DESTDIR="${pkgdir}" install
}
