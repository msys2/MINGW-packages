# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=qtwebkit
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
_pkgver=5.212.0-alpha2
pkgver=5.212.0alpha2
pkgrel=2
pkgdesc="Webkit module for Qt5 (mingw-w64)"
arch=('any')
url="https://github.com/annulen/webkit/wiki"
options=(!strip)
license=(GPL3 LGPL3 FDL custom)
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-gcc"
             "${MINGW_PACKAGE_PREFIX}-pkg-config"
             "dos2unix"
             "python2"
             "ruby"
             "perl"
             "bison"
             "gperf")
depends=("${MINGW_PACKAGE_PREFIX}-icu"
         "${MINGW_PACKAGE_PREFIX}-libxml2"
         "${MINGW_PACKAGE_PREFIX}-libxslt"
         "${MINGW_PACKAGE_PREFIX}-libwebp"
         "${MINGW_PACKAGE_PREFIX}-fontconfig"
         "${MINGW_PACKAGE_PREFIX}-sqlite3"
         "${MINGW_PACKAGE_PREFIX}-gstreamer"
         "${MINGW_PACKAGE_PREFIX}-gst-plugins-base"
         "${MINGW_PACKAGE_PREFIX}-gst-plugins-good"
         "${MINGW_PACKAGE_PREFIX}-gst-plugins-bad"
         "${MINGW_PACKAGE_PREFIX}-gst-libav"
         "${MINGW_PACKAGE_PREFIX}-qt5")
#install=${_realname}-qt5-git-${CARCH}.install
source=(https://github.com/annulen/webkit/releases/download/qtwebkit-${_pkgver}/${_realname}-${_pkgver}.tar.xz
        0001-gettickcount64-compatibility-xp.patch
        0003-qtwebkit-mfence-mingw.patch
        0004-msvc-bug-not-mingw.patch
        0005-fix-icu-find.patch
        0006-python-output-unix-line-endings.patch
        0008-fix-using-msys-perl.patch
        0009-missing-includes.patch
        0011-mingw-posix-layout-files.patch
        0012-install-additional-pri-files.patch
        0014-disable-asm-win64.patch
        0015-gcc7.patch
        0016-move-make-js-file-arrays-py.patch)
sha256sums=('f8f901de567e11fc5659402b6b827eac75505ff9c5072d8e919aa306003f8f8a'
            '0c3e99ab770752b41782fed1b551353ebdee2b8f8c1c408b09b6d5550eb43dc1'
            'ed80d9a31cb1f9565841e3e206d76810881b7fce30210022270bd19694a9c906'
            'd6340dbcf58b3c031735c23d63e1c58d14baf6fbf2b085cbb7110ea81ade6b1f'
            'b9e39597d140f3fc40d07ae0f0eea0cbabd7b16d8e430d26445ae3063b8ad055'
            '16410ad976524b40e7b9d906e67e4f46b86b58db6d7bb61e929f500387d7937f'
            '9ef33dc05e5652362e10d34d75fd2cf9e7952c1c99306eb2402367401f86770b'
            'e365ccf6748b0ad1a4cba3dcc35fdb286cddc553b54e1242908a5b4019fd6d41'
            'a1ef305a81b4e1b70290d4c3f70bee545f06c17736fe77abde474dba0df8c5c7'
            '054ab5d003e5436e6b5e59d9d61895fed88d8c4eb9cdff39b1d5ef8b89528c68'
            'c39b65235a61217bf4197285d21765a47a91d2e8c267f4b777c982d56d32b408'
            'd67b006cc6d3d7b06d3a61b8649dfef1d67fb72c51f1355675d02eda17695f7b'
            '6cf4987af297fd4418329c9887a3b188269606192aa27ebd03c0af4f6c380f99')

prepare() {
  cd "${srcdir}/${_realname}-${_pkgver}"
  patch -p1 -i ${srcdir}/0001-gettickcount64-compatibility-xp.patch
  patch -p1 -i ${srcdir}/0003-qtwebkit-mfence-mingw.patch
  patch -p1 -i ${srcdir}/0004-msvc-bug-not-mingw.patch
  patch -p1 -i ${srcdir}/0005-fix-icu-find.patch
  patch -p1 -i ${srcdir}/0006-python-output-unix-line-endings.patch
  patch -p1 -i ${srcdir}/0008-fix-using-msys-perl.patch
  patch -p1 -i ${srcdir}/0009-missing-includes.patch
  patch -p1 -i ${srcdir}/0011-mingw-posix-layout-files.patch
  patch -p1 -i ${srcdir}/0012-install-additional-pri-files.patch
  patch -p1 -i ${srcdir}/0014-disable-asm-win64.patch
  patch -p1 -i ${srcdir}/0015-gcc7.patch
  patch -p1 -i ${srcdir}/0016-move-make-js-file-arrays-py.patch

  # MSYS2 gperf cannot handle \r\n.
  find . -name "*.gperf" -exec dos2unix "{}" \;
}

build() {
  export PKG_CONFIG="${MINGW_PREFIX}/bin/pkg-config.exe"
  msg2 "Build debug version ..."
  [[ -d ${srcdir}/build-${MINGW_CHOST}-debug ]] && rm -rf ${srcdir}/build-${MINGW_CHOST}-debug
  mkdir ${srcdir}/build-${MINGW_CHOST}-debug
  cd ${srcdir}/build-${MINGW_CHOST}-debug

  local jit_opt="-DENABLE_JIT=ON"
  if [ "${CARCH}" = "x86_64" ]; then
    local jit_opt="-DENABLE_JIT=OFF"
  fi

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake \
    -G"MSYS Makefiles" \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DCMAKE_BUILD_TYPE=Debug \
    -DPORT=Qt \
    -DBISON_EXECUTABLE=/usr/bin/bison.exe \
    -DGPERF_EXECUTABLE=/usr/bin/gperf.exe \
    -DPERL_EXECUTABLE=/usr/bin/perl.exe \
    -DRUBY_EXECUTABLE=/usr/bin/ruby.exe \
    -DPYTHON_EXECUTABLE=/usr/bin/python2.exe \
    -DUSE_MEDIA_FOUNDATION=OFF \
    -DUSE_QT_MULTIMEDIA=OFF \
    -DUSE_GSTREAMER=ON \
    -DENABLE_WEB_AUDIO=ON \
    -DENABLE_MEDIA_SOURCE=ON \
    -DENABLE_LEGACY_WEB_AUDIO=ON \
    ${jit_opt} \
    ../${_realname}-${_pkgver}

  make

  msg2 "Build release version ..."
  [[ -d ${srcdir}/build-${MINGW_CHOST}-release ]] && rm -rf ${srcdir}/build-${MINGW_CHOST}-release
  mkdir ${srcdir}/build-${MINGW_CHOST}-release
  cd ${srcdir}/build-${MINGW_CHOST}-release

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake \
    -G"MSYS Makefiles" \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DCMAKE_BUILD_TYPE=Release \
    -DPORT=Qt \
    -DBISON_EXECUTABLE=/usr/bin/bison.exe \
    -DGPERF_EXECUTABLE=/usr/bin/gperf.exe \
    -DPERL_EXECUTABLE=/usr/bin/perl.exe \
    -DRUBY_EXECUTABLE=/usr/bin/ruby.exe \
    -DPYTHON_EXECUTABLE=/usr/bin/python2.exe \
    -DUSE_MEDIA_FOUNDATION=OFF \
    -DUSE_QT_MULTIMEDIA=OFF \
    -DUSE_GSTREAMER=ON \
    -DENABLE_WEB_AUDIO=ON \
    -DENABLE_MEDIA_SOURCE=ON \
    -DENABLE_LEGACY_WEB_AUDIO=ON \
    ${jit_opt} \
    ../${_realname}-${_pkgver}

  make

}

package() {
  cd ${srcdir}/build-${MINGW_CHOST}-debug
  make DESTDIR="${pkgdir}" install

  cd ${srcdir}/build-${MINGW_CHOST}-release
  make DESTDIR="${pkgdir}" install
}
