commit d60a1297d6d34983eb9f571afe2a3b1d8c2bbf97
Author: carlosgc@webkit.org <carlosgc@webkit.org@268f45cc-cd09-0410-ab3c-d52691b4dbfc>
Date:   Mon Jul 10 13:19:55 2017 +0000

    Move make-js-file-arrays.py from WebCore to JavaScriptCore
    https://bugs.webkit.org/show_bug.cgi?id=174024
    
    Reviewed by Michael Catanzaro.
    
    .:
    
    Make MAKE_JS_FILE_ARRAYS independent of WebCore and update it to use make-js-file-arrays.py from
    JavaScriptCore. It's no longer needed to set PYTHON_PATH to find jsmin.py.
    
    * Source/cmake/WebKitMacros.cmake:
    
    Source/JavaScriptCore:
    
    It's currently used only by WebCore, but it depends on other JavaScriptCore scripts and it's not WebCore
    specific at all. I plan to use it to compile the JavaScript atoms used by the WebDriver implementation.
    Added command line option to pass the namespace to use instead of using WebCore.
    
    * JavaScriptCore.xcodeproj/project.pbxproj:
    * Scripts/make-js-file-arrays.py: Renamed from Source/WebCore/Scripts/make-js-file-arrays.py.
    (main):
    
    Source/WebCore:
    
    * CMakeLists.txt: Explicitly add files generated by MAKE_JS_FILE_ARRAYS to the build, since the macro no longer
    does it.
    * DerivedSources.make: Updated to use make-js-file-arrays.py from JavaScriptCore. It's no longer needed to set
    PYTHON_PATH to find jsmin.py.
    
    Change-Id: Ie56a702538c244aa45c05b47ed6e49013b39dc33
    git-svn-id: http://svn.webkit.org/repository/webkit/trunk@219289 268f45cc-cd09-0410-ab3c-d52691b4dbfc

diff --git a/Source/WebCore/Scripts/make-js-file-arrays.py b/Source/JavaScriptCore/Scripts/make-js-file-arrays.py
similarity index 84%
rename from Source/WebCore/Scripts/make-js-file-arrays.py
rename to Source/JavaScriptCore/Scripts/make-js-file-arrays.py
index 3116a11bb77..65056646a3f 100755
--- a/Source/WebCore/Scripts/make-js-file-arrays.py
+++ b/Source/JavaScriptCore/Scripts/make-js-file-arrays.py
@@ -41,24 +41,30 @@ def chunk(list, chunkSize):
 
 
 def main():
-    parser = OptionParser(usage="usage: %prog [--no-minify] header source [input [input...]]")
+    parser = OptionParser(usage="usage: %prog [options] header source [input [input...]]")
     parser.add_option('--no-minify', action='store_true', help='Do not run the input files through jsmin')
+    parser.add_option('-n', '--namespace', help='Namespace to use')
     (options, arguments) = parser.parse_args()
+    if not options.namespace:
+        print 'Error: must provide a namespace'
+        parser.print_usage()
+        exit(-1)
     if len(arguments) < 3:
         print 'Error: must provide at least 3 arguments'
         parser.print_usage()
         exit(-1)
 
+    namespace = options.namespace
     headerPath = arguments[0]
     sourcePath = arguments[1]
     inputPaths = arguments[2:]
 
     headerFile = open(headerPath, 'w')
-    print >> headerFile, 'namespace WebCore {'
+    print >> headerFile, 'namespace {0:s} {{'.format(namespace)
 
     sourceFile = open(sourcePath, 'w')
     print >> sourceFile, '#include "{0:s}"'.format(os.path.basename(headerPath))
-    print >> sourceFile, 'namespace WebCore {'
+    print >> sourceFile, 'namespace {0:s} {{'.format(namespace)
 
     jsm = JavascriptMinify()
 
@@ -84,8 +90,8 @@ def main():
 
         print >> sourceFile, '};'
 
-    print >> headerFile, '}'
-    print >> sourceFile, '}'
+    print >> headerFile, '}} // namespace {0:s}'.format(namespace)
+    print >> sourceFile, '}} // namespace {0:s}'.format(namespace)
 
 if __name__ == '__main__':
     main()
diff --git a/Source/WebCore/CMakeLists.txt b/Source/WebCore/CMakeLists.txt
index 7d0ad0433ec..e1efb999158 100644
--- a/Source/WebCore/CMakeLists.txt
+++ b/Source/WebCore/CMakeLists.txt
@@ -3558,9 +3558,11 @@ if (WebCore_USER_AGENT_SCRIPTS)
     MAKE_JS_FILE_ARRAYS(
         ${DERIVED_SOURCES_WEBCORE_DIR}/UserAgentScriptsData.cpp
         ${DERIVED_SOURCES_WEBCORE_DIR}/UserAgentScripts.h
+        WebCore
         WebCore_USER_AGENT_SCRIPTS
         WebCore_USER_AGENT_SCRIPTS_DEPENDENCIES
     )
+    list(APPEND WebCore_DERIVED_SOURCES ${DERIVED_SOURCES_WEBCORE_DIR}/UserAgentScriptsData.cpp)
 endif ()
 
 # Generate plug-in resources
diff --git a/Source/cmake/WebKitMacros.cmake b/Source/cmake/WebKitMacros.cmake
index 858e2e47d8d..07e31432a28 100644
--- a/Source/cmake/WebKitMacros.cmake
+++ b/Source/cmake/WebKitMacros.cmake
@@ -377,22 +377,12 @@ macro(GENERATE_WEBKIT2_MESSAGE_SOURCES _output_source _input_files)
     endforeach ()
 endmacro()
 
-macro(MAKE_JS_FILE_ARRAYS _output_cpp _output_h _scripts _scripts_dependencies)
-    if (NOT CMAKE_VERSION VERSION_LESS 3.1)
-        set(_python_path ${CMAKE_COMMAND} -E env "PYTHONPATH=${JavaScriptCore_SCRIPTS_DIR}")
-    elseif (WIN32)
-        set(_python_path set "PYTHONPATH=${JavaScriptCore_SCRIPTS_DIR}" &&)
-    else ()
-        set(_python_path "PYTHONPATH=${JavaScriptCore_SCRIPTS_DIR}")
-    endif ()
-
+macro(MAKE_JS_FILE_ARRAYS _output_cpp _output_h _namespace _scripts _scripts_dependencies)
     add_custom_command(
         OUTPUT ${_output_h} ${_output_cpp}
-        MAIN_DEPENDENCY ${WEBCORE_DIR}/Scripts/make-js-file-arrays.py
-        DEPENDS ${${_scripts}}
-        COMMAND ${_python_path} ${PYTHON_EXECUTABLE} ${WEBCORE_DIR}/Scripts/make-js-file-arrays.py ${_output_h} ${_output_cpp} ${${_scripts}}
+        DEPENDS ${JavaScriptCore_SCRIPTS_DIR}/make-js-file-arrays.py ${${_scripts}}
+        COMMAND ${PYTHON_EXECUTABLE} ${JavaScriptCore_SCRIPTS_DIR}/make-js-file-arrays.py -n ${_namespace} ${_output_h} ${_output_cpp} ${${_scripts}}
         VERBATIM)
-    list(APPEND WebCore_DERIVED_SOURCES ${_output_cpp})
     ADD_SOURCE_DEPENDENCIES(${${_scripts_dependencies}} ${_output_h} ${_output_cpp})
 endmacro()
 
