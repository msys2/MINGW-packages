--- a/src/tbb/allocator.cpp
+++ b/src/tbb/allocator.cpp
@@ -27,11 +27,11 @@
 
 #include <cstdlib>
 
-#if _WIN32 || _WIN64
-#include <Windows.h>
+#ifdef _WIN32
+#include <windows.h>
 #else
 #include <dlfcn.h>
-#endif /* _WIN32||_WIN64 */
+#endif
 
 #if __TBB_WEAK_SYMBOLS_PRESENT
 
--- a/src/tbb/dynamic_link.h
+++ b/src/tbb/dynamic_link.h
@@ -29,8 +29,8 @@
     and CLOSE_INTERNAL_NAMESPACE to override the following default definitions. **/
 
 #include <cstddef>
-#if _WIN32
-#include <Windows.h>
+#ifdef _WIN32
+#include <windows.h>
 #endif /* _WIN32 */
 
 namespace tbb {
--- a/test/common/utils_dynamic_libs.h
+++ b/test/common/utils_dynamic_libs.h
@@ -22,8 +22,8 @@
 
 #if __TBB_DYNAMIC_LOAD_ENABLED
 
-#if _WIN32 || _WIN64
-#include <Windows.h>
+#ifdef _WIN32
+#include <windows.h>
 #else
 #include <dlfcn.h>
 #endif
--- a/include/oneapi/tbb/detail/_machine.h
+++ b/include/oneapi/tbb/detail/_machine.h
@@ -29,7 +29,9 @@
 #include <intrin.h>
 #ifdef __TBBMALLOC_BUILD
 #define WIN32_LEAN_AND_MEAN
+#ifndef NOMINMAX
 #define NOMINMAX
+#endif
 #include <windows.h> // SwitchToThread()
 #endif
 #ifdef _MSC_VER
--- a/cmake/compilers/GNU.cmake
+++ b/cmake/compilers/GNU.cmake
@@ -59,16 +59,16 @@ if ("${CMAKE_SYSTEM_PROCESSOR}" MATCHES "mips")
     set(TBB_TEST_COMPILE_FLAGS ${TBB_TEST_COMPILE_FLAGS} -DTBB_TEST_LOW_WORKLOAD $<$<CONFIG:DEBUG>:-mxgot>)
 endif()
 
-if (MINGW)
-    list(APPEND TBB_COMMON_COMPILE_FLAGS -U__STRICT_ANSI__)
-endif()
-
 # For some reason GCC does not instrument code with Thread Sanitizer when lto is enabled and C linker is used.
 if (NOT TBB_SANITIZE MATCHES "thread")
     set(TBB_IPO_COMPILE_FLAGS $<$<NOT:$<CONFIG:Debug>>:-flto>)
     set(TBB_IPO_LINK_FLAGS $<$<NOT:$<CONFIG:Debug>>:-flto>)
 endif()
 
+if (MINGW AND CMAKE_SYSTEM_PROCESSOR MATCHES "i.86")
+    list (APPEND TBB_COMMON_COMPILE_FLAGS -msse2)
+endif ()
+
 # TBB malloc settings
 set(TBBMALLOC_LIB_COMPILE_FLAGS -fno-rtti -fno-exceptions)
 set(TBB_OPENMP_FLAG -fopenmp)
