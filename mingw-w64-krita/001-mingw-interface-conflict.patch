--- a/libs/image/kis_painter.cc
+++ b/libs/image/kis_painter.cc
@@ -2857,9 +2857,9 @@
     d->conversionFlags = conversionFlags;
 }
 
-void KisPainter::setRunnableStrokeJobsInterface(KisRunnableStrokeJobsInterface *interface)
+void KisPainter::setRunnableStrokeJobsInterface(KisRunnableStrokeJobsInterface *iface)
 {
-    d->runnableStrokeJobsInterface = interface;
+    d->runnableStrokeJobsInterface = iface;
 }
 
 KisRunnableStrokeJobsInterface *KisPainter::runnableStrokeJobsInterface() const
--- a/libs/image/kis_painter.h
+++ b/libs/image/kis_painter.h
@@ -847,7 +847,7 @@
      *       of the caller to ensure that the interface object is alive during the lifetime
      *       of the painter.
      */
-    void setRunnableStrokeJobsInterface(KisRunnableStrokeJobsInterface *interface);
+    void setRunnableStrokeJobsInterface(KisRunnableStrokeJobsInterface *iface);
 
     /**
      * Get the interface for running asynchronous jobs. It is used by paintops mostly.
--- a/libs/ui/KisImportExportFilter.cpp
+++ b/libs/ui/KisImportExportFilter.cpp
@@ -96,9 +96,9 @@
     d->batchmode = batchmode;
 }
 
-void KisImportExportFilter::setImportUserFeedBackInterface(KisImportUserFeedbackInterface *interface)
+void KisImportExportFilter::setImportUserFeedBackInterface(KisImportUserFeedbackInterface *iface)
 {
-    d->importUserFeedBackInterface = interface;
+    d->importUserFeedBackInterface = iface;
 }
 
 void KisImportExportFilter::setFilename(const QString &filename)
--- a/libs/ui/KisImportExportFilter.h
+++ b/libs/ui/KisImportExportFilter.h
@@ -67,7 +67,7 @@
     ~KisImportExportFilter() override;
 
     void setBatchMode(bool batchmode);
-    void setImportUserFeedBackInterface(KisImportUserFeedbackInterface *interface);
+    void setImportUserFeedBackInterface(KisImportUserFeedbackInterface *iface);
     void setFilename(const QString &filename);
     void setRealFilename(const QString &filename);
     void setMimeType(const QString &mime);
