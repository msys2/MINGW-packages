# Maintainer: J. Peter Mugaas <jpmugaas@suddenlink.net>

_realname=pytest-runner
pkgbase=mingw-w64-python-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-python-${_realname}")
pkgver=5.2
pkgrel=1
provides=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}=${pkgver}")
conflicts=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
replaces=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
pkgdesc="Invoke py.test as distutils command with dependency resolution (mingw-w64)"
arch=('any')
url='https://github.com/pytest-dev/pytest-runner'
license=('MIT')
depends=("${MINGW_PACKAGE_PREFIX}-python"
         "${MINGW_PACKAGE_PREFIX}-python-pytest")
makedepends=("${MINGW_PACKAGE_PREFIX}-python-setuptools"
             "${MINGW_PACKAGE_PREFIX}-python-setuptools-scm")
#checkdepends=("${MINGW_PACKAGE_PREFIX}-python-pytest-black"
#              "${MINGW_PACKAGE_PREFIX}-python-pytest-flake8"
#              "${MINGW_PACKAGE_PREFIX}-python-pytest-virtualenv")
options=('staticlibs' 'strip' '!debug')
source=("${_realname}-$pkgver.tar.gz::https://github.com/pytest-dev/${_realname}/archive/${pkgver}.tar.gz")
sha256sums=('d890730051292601cc8cf2c160d214c10322a4f179d3a7d2029c6d867b7db199')

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying $_patch"
    patch -Nbp1 -i "${srcdir}/$_patch"
  done
}

del_file_exists() {
  for _fname in "$@"
  do
    if [ -f $_fname ]; then
      rm -rf $_fname
    fi
  done
}
# =========================================== #

prepare() {
  cd "${srcdir}"

  rm -rf python-build-${CARCH} | true
  cp -r "${_realname}-${pkgver}" "python-build-${CARCH}"

  export SETUPTOOLS_SCM_PRETEND_VERSION=${pkgver}
}

# Note that build() is sometimes skipped because it's done in 
# the packages setup.py install for simplicity if you can do so.
# but sometimes, you want to do a check before install which would
# also trigger the build.
build() {
  msg "Python build for ${CARCH}"  
  cd "${srcdir}/python-build-${CARCH}"
  ${MINGW_PREFIX}/bin/python setup.py build
}

# enable only when we have "${MINGW_PACKAGE_PREFIX}-python-pytest-virtualenv"
check() {
  msg "Python test for ${CARCH}"
  cd "${srcdir}/python-build-${CARCH}"
  ${MINGW_PREFIX}/bin/python setup.py egg_info
  # we need the flake8 package for this
  PYTHONPATH="$PWD" ${MINGW_PREFIX}/bin/pytest
}

package() {
  cd "${srcdir}/python-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build

  install -Dm644 LICENSE "${pkgdir}${MINGW_PREFIX}/share/licenses/python-${_realname}/LICENSE"
}
