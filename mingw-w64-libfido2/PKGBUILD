# Maintainer: taozuhong <taozuhong@gmail.com>

_realname=libfido2
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=1.15.0
pkgrel=1
pkgdesc="Library functionality for FIDO 2.0, including communication with a device over USB (mingw-w64)"
arch=('any')
mingw_arch=('mingw64' 'ucrt64' 'clang64' 'clangarm64')
url="https://developers.yubico.com/libfido2/"
license=('BSD-2-Clause')
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-pkgconf")
depends=("${MINGW_PACKAGE_PREFIX}-libcbor"
		 "${MINGW_PACKAGE_PREFIX}-openssl"
		 "${MINGW_PACKAGE_PREFIX}-zlib")
source=("https://github.com/Yubico/libfido2/archive/refs/tags/${pkgver}.tar.gz"
		"001-fixed-link-cmd.patch")
sha256sums=('32e3e431cfe29b45f497300fdb7076971cb77fc584fcfa80084d823a6ed94fbb'
			'3134757a26e80eb1917036d4402551fa517e4e0e678c54dcf6c166b714de2bf2')

prepare() {
	cd "${srcdir}"/${_realname}-${pkgver}
	patch -p1 -i ${srcdir}/001-fixed-link-cmd.patch
}

build() {
	declare -a _extra_config
	if check_option "debug" "n"; then
		_extra_config+=("-DCMAKE_BUILD_TYPE=Release")
	else
		_extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
	fi

	mkdir -p "${srcdir}/build-${MSYSTEM}" && cd "${srcdir}/build-${MSYSTEM}"

	CFLAGS+=" -Wno-int-conversion" \
	MSYS2_ARG_CONV_EXCL=- \
	${MINGW_PREFIX}/bin/cmake \
		-GNinja \
		${_extra_config[@]} \
		-DCMAKE_INSTALL_PREFIX=$MINGW_PREFIX \
		-DBUILD_TESTS=OFF \
		-DBUILD_TOOLS=OFF \
		-DBUILD_EXAMPLES=OFF \
		-DBUILD_STATIC_LIBS=ON \
		-DBUILD_SHARED_LIBS=ON \
		-DUSE_WINHELLO=ON \
		../${_realname}-${pkgver}


	${MINGW_PREFIX}/bin/cmake --build .
}

package() {
	cd "${srcdir}/build-${MSYSTEM}"
	DESTDIR="${pkgdir}" ${MINGW_PREFIX}/bin/cmake --install .

	install -Dm644 "${srcdir}/${_realname}-${pkgver}/LICENSE" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE"
}