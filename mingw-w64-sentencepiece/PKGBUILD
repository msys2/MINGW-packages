# Maintainer: kreijstal <kreijstal@hotmail.com>

_realname=sentencepiece
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}" "${MINGW_PACKAGE_PREFIX}-python-${_realname}")
pkgver=0.2.0
pkgrel=1
pkgdesc="Unsupervised text tokenizer for Neural Network-based text generation (MinGW-w64)"
arch=('any')
mingw_arch=('mingw64' 'ucrt64' 'clang64' 'clangarm64')
url='https://github.com/google/sentencepiece'
license=('spdx:Apache-2.0')
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-protobuf"
             "${MINGW_PACKAGE_PREFIX}-python-build"
             "${MINGW_PACKAGE_PREFIX}-python-installer"
             "${MINGW_PACKAGE_PREFIX}-python-setuptools"
             "${MINGW_PACKAGE_PREFIX}-python-wheel")
source=("https://github.com/google/sentencepiece/archive/v${pkgver}.tar.gz"
        "0001-make-it-more-friendly-for-mingw-enviroments.patch")
sha256sums=('SKIP'
            'SKIP')

prepare() {
  cd "${srcdir}/${_realname}-${pkgver}"
  patch -Np1 -i "${srcdir}/0001-make-it-more-friendly-for-mingw-enviroments.patch"

  # Use shared libs for python module
  sed -i 's/libsentencepiece.a/libsentencepiece.dll.a/g' python/setup.py
  sed -i 's/libsentencepiece_train.a/libsentencepiece_train.dll.a/g' python/setup.py
}

build() {
 declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

 MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    cmake \
      -GNinja \
      -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}" \
      "${extra_config[@]}" \
      -DBUILD_{SHARED,STATIC}_LIBS=ON \
      -DSPM_ENABLE_SHARED=ON \
      -S "${_realname}-${pkgver}" \
      -B "build-${MSYSTEM}"
  cmake --build "build-${MSYSTEM}"

  # Temporary install for Python to pick up
  mkdir -p "${srcdir}/${_realname}-${pkgver}/build/root"
  cd "${srcdir}/${_realname}-${pkgver}"
  MSYS2_ENV_CONV_EXCL="*" cmake --install "../build-${MSYSTEM}" --prefix="build/root"


  # Python build
  cd python
  python -m build --wheel --skip-dependency-check --no-isolation
}

package_sentencepiece() {
  pkgdesc="Unsupervised text tokenizer for Neural Network-based text generation"
  depends=("${MINGW_PACKAGE_PREFIX}-protobuf")
  cd "${srcdir}"
  DESTDIR=${pkgdir} cmake --install "build-${MSYSTEM}"
}

package_python-sentencepiece() {
  pkgdesc="Python bindings for sentencepiece (MinGW-w64)"
  depends=("${MINGW_PACKAGE_PREFIX}-${_realname}")

  cd "${srcdir}/${_realname}-${pkgver}/python"
  MSYS2_ARG_CONV_EXCL="--prefix=" \
    python -m installer --prefix=${MINGW_PREFIX} \
    --destdir="${pkgdir}" dist/*.whl
}

for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
