--- Vulkan-Loader-1.2.158.orig/loader/CMakeLists.txt
+++ Vulkan-Loader-1.2.158/loader/CMakeLists.txt
@@ -66,6 +66,7 @@
 set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DDEBUG")
 
 if(WIN32)
+    if(MSVC)
     # Use static MSVCRT libraries
     foreach(configuration
             in
@@ -85,6 +86,7 @@
                            "${${configuration}}")
         endif()
     endforeach()
+    endif()
 
     if(ENABLE_WIN10_ONECORE)
         # Note: When linking your app or driver to OneCore.lib, be sure to remove any links to non-umbrella libs (such as
@@ -133,7 +135,7 @@
 set(ASM_FAILURE_MSG "${ASM_FAILURE_MSG} the stack frame for certain calls. If the compiler does not do this, then unknown device")
 set(ASM_FAILURE_MSG "${ASM_FAILURE_MSG} extensions will suffer from a corrupted stack.")
 if(WIN32)
-    if(MINGW)
+    if(NOT MINGW)
         find_program(JWASM_FOUND jwasm)
         if (JWASM_FOUND)
             set(CMAKE_ASM_MASM_COMPILER ${JWASM_FOUND})
@@ -148,7 +150,7 @@
         endif()
     endif()
     enable_language(ASM_MASM)
-    if(CMAKE_ASM_MASM_COMPILER_WORKS OR JWASM_FOUND)
+    if(MSVC AND CMAKE_ASM_MASM_COMPILER_WORKS OR JWASM_FOUND)
         if(MINGW)
             set(CMAKE_ASM_MASM_FLAGS ${CMAKE_ASM_MASM_FLAGS} ${JWASM_FLAGS})
         elseif(NOT CMAKE_CL_64 AND NOT JWASM_FOUND)
@@ -217,14 +219,22 @@
                 $<TARGET_OBJECTS:loader-unknown-chain>
                 ${CMAKE_CURRENT_SOURCE_DIR}/vulkan-1.def
                 ${CMAKE_CURRENT_SOURCE_DIR}/loader.rc)
+    if(MSVC)
     set_target_properties(vulkan
                           PROPERTIES LINK_FLAGS_DEBUG
                                      "/ignore:4098"
                                      OUTPUT_NAME
                                      vulkan-1)
+    else()
+    set_target_properties(vulkan
+                          PROPERTIES
+                          LIBRARY_OUTPUT_NAME vulkan
+                          RUNTIME_OUTPUT_NAME vulkan-1
+                          ARCHIVE_OUTPUT_NAME vulkan)
+    endif()
     target_link_libraries(vulkan Vulkan::Headers)
 
-    if(ENABLE_WIN10_ONECORE)
+    if(ENABLE_WIN10_ONECORE AND MSVC)
         target_link_libraries(vulkan OneCoreUAP.lib LIBCMT.LIB LIBCMTD.LIB LIBVCRUNTIME.LIB LIBUCRT.LIB)
         set_target_properties(vulkan PROPERTIES LINK_FLAGS "/NODEFAULTLIB")
     else()
--- Vulkan-Loader-1.2.158.orig/loader/loader.h
+++ Vulkan-Loader-1.2.158/loader/loader.h
@@ -38,7 +38,9 @@
 #include "vk_layer_dispatch_table.h"
 #include "vk_loader_extensions.h"
 
-#if defined(__GNUC__) && __GNUC__ >= 4
+#if defined(_WIN32)
+#define LOADER_EXPORT __declspec(dllexport)
+#elif defined(__GNUC__) && __GNUC__ >= 4
 #define LOADER_EXPORT __attribute__((visibility("default")))
 #elif defined(__SUNPRO_C) && (__SUNPRO_C >= 0x590)
 #define LOADER_EXPORT __attribute__((visibility("default")))
--- Vulkan-Loader-1.2.158.orig/loader/vulkan-1.def
+++ Vulkan-Loader-1.2.158/loader/vulkan-1.def
@@ -21,7 +21,7 @@
 ;
 ;;;;  End Copyright Notice ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 
-LIBRARY vulkan-1.dll
+LIBRARY libvulkan-1.dll
 EXPORTS
    vkCreateInstance
    vkDestroyInstance
--- Vulkan-Loader-1.2.158.orig/tests/layers/vk_format_utils.h
+++ Vulkan-Loader-1.2.158/tests/layers/vk_format_utils.h
@@ -25,7 +25,9 @@
 #include "vulkan/vulkan.h"
 
 #if !defined(VK_LAYER_EXPORT)
-#if defined(__GNUC__) && __GNUC__ >= 4
+#if defined(_WIN32)
+#define VK_LAYER_EXPORT __declspec(dllexport)
+#elif defined(__GNUC__) && __GNUC__ >= 4
 #define VK_LAYER_EXPORT __attribute__((visibility("default")))
 #elif defined(__SUNPRO_C) && (__SUNPRO_C >= 0x590)
 #define VK_LAYER_EXPORT __attribute__((visibility("default")))
