--- Vulkan-LoaderAndValidationLayers-sdk-1.1.73.0/loader/vulkan-1.def.orig	2018-05-16 11:55:36.673944400 +0300
+++ Vulkan-LoaderAndValidationLayers-sdk-1.1.73.0/loader/vulkan-1.def	2018-05-16 11:55:41.307152500 +0300
@@ -21,7 +21,7 @@
 ;
 ;;;;  End Copyright Notice ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 
-LIBRARY vulkan-1.dll
+LIBRARY libvulkan-1.dll
 EXPORTS
    vkCreateInstance
    vkDestroyInstance
diff -Naur Vulkan-LoaderAndValidationLayers-sdk-1.0.46.0-orig/tests/layers/CMakeLists.txt Vulkan-LoaderAndValidationLayers-sdk-1.0.46.0/tests/layers/CMakeLists.txt
--- Vulkan-LoaderAndValidationLayers-sdk-1.1.73.0-orig/tests/layers/CMakeLists.txt	2017-04-05 00:36:39.000000000 +0300
+++ Vulkan-LoaderAndValidationLayers-sdk-1.1.73.0/tests/layers/CMakeLists.txt	2017-06-29 08:39:07.115088000 +0300
@@ -25,7 +25,11 @@
                           COMMAND ${CMAKE_COMMAND} -E copy_if_different ${DEF_FILE} VkLayer_${target}.def
                           VERBATIM)
         set_target_properties(copy-${target}-def-file PROPERTIES FOLDER ${LOADER_HELPER_FOLDER})
+        if(MINGW)
+        add_library(VkLayer_${target} SHARED ${ARGN})
+        else()
         add_library(VkLayer_${target} SHARED ${ARGN} VkLayer_${target}.def)
+        endif()
         target_compile_options(VkLayer_${target} PUBLIC ${MSVC_LOADER_COMPILE_OPTIONS})
         add_dependencies(VkLayer_${target} generate_helper_files)
     endmacro()
--- Vulkan-Loader-1.2.133/loader/loader.h.orig	2020-02-28 11:47:43.202842000 +0300
+++ Vulkan-Loader-1.2.133/loader/loader.h	2020-02-28 11:49:39.745519200 +0300
@@ -38,7 +38,9 @@
 #include "vk_layer_dispatch_table.h"
 #include "vk_loader_extensions.h"
 
-#if defined(__GNUC__) && __GNUC__ >= 4
+#if defined(_WIN32)
+#define LOADER_EXPORT __declspec(dllexport)
+#elif defined(__GNUC__) && __GNUC__ >= 4
 #define LOADER_EXPORT __attribute__((visibility("default")))
 #elif defined(__SUNPRO_C) && (__SUNPRO_C >= 0x590)
 #define LOADER_EXPORT __attribute__((visibility("default")))
--- Vulkan-Loader-1.2.133/tests/layers/vk_format_utils.h.orig	2020-02-28 11:50:38.167672800 +0300
+++ Vulkan-Loader-1.2.133/tests/layers/vk_format_utils.h	2020-02-28 11:51:10.078172600 +0300
@@ -25,7 +25,9 @@
 #include "vulkan/vulkan.h"
 
 #if !defined(VK_LAYER_EXPORT)
-#if defined(__GNUC__) && __GNUC__ >= 4
+#if defined(_WIN32)
+#define VK_LAYER_EXPORT __declspec(dllexport)
+#elif defined(__GNUC__) && __GNUC__ >= 4
 #define VK_LAYER_EXPORT __attribute__((visibility("default")))
 #elif defined(__SUNPRO_C) && (__SUNPRO_C >= 0x590)
 #define VK_LAYER_EXPORT __attribute__((visibility("default")))
--- Vulkan-Loader-1.2.133/loader/CMakeLists.txt.orig	2020-02-18 00:49:43.000000000 +0300
+++ Vulkan-Loader-1.2.133/loader/CMakeLists.txt	2020-02-28 12:03:23.323634600 +0300
@@ -62,6 +62,7 @@
 set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DDEBUG")
 
 if(WIN32)
+    if(MSVC)
     # Use static MSVCRT libraries
     foreach(configuration
             in
@@ -81,6 +82,7 @@
                            "${${configuration}}")
         endif()
     endforeach()
+    endif()
 
     if(ENABLE_WIN10_ONECORE)
         # Note: When linking your app or driver to OneCore.lib, be sure to remove any links to non-umbrella libs (such as
@@ -86,7 +86,7 @@
 set(ASM_FAILURE_MSG "${ASM_FAILURE_MSG} extensions will suffer from a corrupted stack.")
 if(WIN32)
     enable_language(ASM_MASM)
-    if(CMAKE_ASM_MASM_COMPILER_WORKS)
+    if (MSVC AND CMAKE_ASM_MASM_COMPILER_WORKS)
         if(NOT CMAKE_CL_64)
             set(CMAKE_ASM_MASM_FLAGS ${CMAKE_ASM_MASM_FLAGS} /safeseh)
         endif()
@@ -189,21 +191,32 @@
     target_compile_options(loader-opt PUBLIC ${MSVC_LOADER_COMPILE_OPTIONS})
     target_include_directories(loader-opt PRIVATE "$<TARGET_PROPERTY:Vulkan::Headers,INTERFACE_INCLUDE_DIRECTORIES>")
 
+    if (MSVC)
+    set(MSVC_DEF_FILE ${CMAKE_CURRENT_SOURCE_DIR}/vulkan-1.def)
+    endif()
     add_library(vulkan
                 SHARED
                 $<TARGET_OBJECTS:loader-opt>
                 $<TARGET_OBJECTS:loader-norm>
                 $<TARGET_OBJECTS:loader-unknown-chain>
-                ${CMAKE_CURRENT_SOURCE_DIR}/vulkan-1.def
+                ${MSVC_DEF_FILE}
                 ${CMAKE_CURRENT_SOURCE_DIR}/loader.rc)
+    if(MSVC)
     set_target_properties(vulkan
                           PROPERTIES LINK_FLAGS_DEBUG
                                      "/ignore:4098"
                                      OUTPUT_NAME
                                      vulkan-1)
+    else()
+    set_target_properties(vulkan
+                          PROPERTIES
+                          LIBRARY_OUTPUT_NAME vulkan
+                          RUNTIME_OUTPUT_NAME vulkan-1
+                          ARCHIVE_OUTPUT_NAME vulkan)
+    endif()
     target_link_libraries(vulkan Vulkan::Headers)
 
-    if(ENABLE_WIN10_ONECORE)
+    if(ENABLE_WIN10_ONECORE AND MSVC)
         target_link_libraries(vulkan OneCoreUAP.lib LIBCMT.LIB LIBCMTD.LIB LIBVCRUNTIME.LIB LIBUCRT.LIB)
         set_target_properties(vulkan PROPERTIES LINK_FLAGS "/NODEFAULTLIB")
     else()
