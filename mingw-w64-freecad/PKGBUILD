# Contributor: Mehdi Chinoune <mehdi.chinoune@hotmail.com>

_realname=freecad
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=0.21.2
pkgrel=3
pkgdesc="Free and Opensource multiplatform 3D parametric modeler (mingw-w64)"
arch=('any')
mingw_arch=('ucrt64' 'clang64' 'clangarm64')
url='https://freecadweb.org/'
msys2_repository_url="https://github.com/FreeCAD/FreeCAD"
msys2_references=(
  'archlinux: freecad'
)
license=('spdx:GPL-2.0-or-later')
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-boost"
         "${MINGW_PACKAGE_PREFIX}-coin"
         "${MINGW_PACKAGE_PREFIX}-fmt"
         "${MINGW_PACKAGE_PREFIX}-freetype"
         "${MINGW_PACKAGE_PREFIX}-med"
         "${MINGW_PACKAGE_PREFIX}-openmp"
         "${MINGW_PACKAGE_PREFIX}-opencascade"
         "${MINGW_PACKAGE_PREFIX}-openscad"
         "${MINGW_PACKAGE_PREFIX}-python"
         "${MINGW_PACKAGE_PREFIX}-python-numpy"
         "${MINGW_PACKAGE_PREFIX}-python-packaging"
         "${MINGW_PACKAGE_PREFIX}-python-pivy"
         "${MINGW_PACKAGE_PREFIX}-pyside6"
         "${MINGW_PACKAGE_PREFIX}-qt6-base"
         "${MINGW_PACKAGE_PREFIX}-qt6-svg"
         "${MINGW_PACKAGE_PREFIX}-xerces-c"
         $([[ ${MINGW_PACKAGE_PREFIX} != *-clang-* ]] || echo "${MINGW_PACKAGE_PREFIX}-vtk")
         "${MINGW_PACKAGE_PREFIX}-zlib")
makedepends=("${MINGW_PACKAGE_PREFIX}-clang"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-eigen3"
             "${MINGW_PACKAGE_PREFIX}-python-matplotlib"
             "${MINGW_PACKAGE_PREFIX}-qt6-tools"
             "${MINGW_PACKAGE_PREFIX}-swig"
             $([[ ${MINGW_PACKAGE_PREFIX} != *-clang-* ]] || echo \
               "${MINGW_PACKAGE_PREFIX}-fast_float" \
               "${MINGW_PACKAGE_PREFIX}-utf8cpp"))
source=("https://github.com/FreeCAD/FreeCAD/archive/${pkgver}/${_realname}-${pkgver}.tar.gz"
        "001-fix-build-on-mingw.patch"
        "002-fix-building-against-vtk9.3.patch")
sha256sums=('ceaf77cd12e8ad533d1535cc27ae4ca2a6e80778502dc9cdec906415d674b674'
            'f452aca0557806f61ffb767e0c296305b9271788a76f675bf254aa7d464ea325'
            '194db658ae660d7e10385a4ef9521b2dc6b4264b8b0aedca33eb955fdfda5890')

apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying $_patch"
    patch -Nbp1 -i "${srcdir}/$_patch"
  done
}

prepare() {
  cd "${srcdir}"/${_realname}-${pkgver}
  apply_patch_with_msg \
    001-fix-build-on-mingw.patch \
    002-fix-building-against-vtk9.3.patch
}

build() {
  mkdir -p "${srcdir}/build-${MSYSTEM}" && cd "${srcdir}/build-${MSYSTEM}"

  declare -a _extra_config
  if check_option "debug" "n"; then
    _extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    _extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  if [[ ${MINGW_PACKAGE_PREFIX} != *-clang-* ]]; then
    _extra_config+=("-DBUILD_FEM=OFF" "-DBUILD_SMESH=OFF")
  fi

  CC=clang \
  CXX=clang++ \
  CXXFLAGS+=" -Wno-deprecated-declarations -Wno-unknown-pragmas -Wno-macro-redefined" \
  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=;" \
    "${MINGW_PREFIX}"/bin/cmake.exe -Wno-dev \
      -GNinja \
      -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}" \
      -DFREECAD_QT_VERSION="6" \
      -DBUILD_TEST=OFF \
      -DBUILD_WEB=OFF \
      -DENABLE_DEVELOPER_TESTS=OFF \
      -DPython3_EXECUTABLE=${MINGW_PREFIX}/bin/python \
      -DPYTHON_EXECUTABLE=${MINGW_PREFIX}/bin/python \
      "${_extra_config[@]}" \
      ../${_realname}-${pkgver}

  "${MINGW_PREFIX}"/bin/cmake.exe --build .
}

package() {
  cd "${srcdir}/build-${MSYSTEM}"

  DESTDIR="${pkgdir}" "${MINGW_PREFIX}"/bin/cmake.exe --install .

  install -Dm644 "${srcdir}/${_realname}-${pkgver}/LICENSE" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE"

  MSYS2_ARG_CONV_EXCL="-d" \
    python -m compileall -o 0 -o 1 -q -d"${MINGW_PREFIX}" "${pkgdir}${MINGW_PREFIX}"
}
