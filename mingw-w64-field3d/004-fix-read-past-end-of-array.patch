From 5e00980fb1961488af8160fc0040d9429e93e912 Mon Sep 17 00:00:00 2001
From: Morten Bojsen-Hansen <morten@alas.dk>
Date: Wed, 21 Mar 2018 13:19:59 +0100
Subject: [PATCH] SparseFieldIO: Fix read past end of array.

---
 src/SparseFieldIO.cpp | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

diff --git a/src/SparseFieldIO.cpp b/src/SparseFieldIO.cpp
index 9b18412..44f266b 100644
--- a/src/SparseFieldIO.cpp
+++ b/src/SparseFieldIO.cpp
@@ -221,13 +221,13 @@ class WriteBlockOp
     size_t blockIdx;
     {
       boost::mutex::scoped_lock lock(m_state.compressMutex);
-      blockIdx = m_state.nextBlockToCompress;
+      blockIdx = m_state.nextBlockToCompress++;
       // Step counter to next
       while (m_state.nextBlockToCompress < m_state.numBlocks) {
-        m_state.nextBlockToCompress++;
         if (m_state.blocks[m_state.nextBlockToCompress].isAllocated) {
           break;
         }
+        m_state.nextBlockToCompress++;
       }
     }
     // Loop over blocks until we run out
@@ -261,24 +261,25 @@ class WriteBlockOp
         // Do the writing
         m_state.data.addData(cmpLen, &m_cache[0]);
         // Let next block write
+        m_state.nextBlockToWrite++;
         while (m_state.nextBlockToWrite < m_state.numBlocks){
           // Increment to next
-          m_state.nextBlockToWrite++;
           if (m_state.blocks[m_state.nextBlockToWrite].isAllocated) {
             break;
           }
+          m_state.nextBlockToWrite++;
         }
       }
       // Get next block idx
       {
         boost::mutex::scoped_lock lock(m_state.compressMutex);
-        blockIdx = m_state.nextBlockToCompress;
+        blockIdx = m_state.nextBlockToCompress++;
         // Step counter to next
         while (m_state.nextBlockToCompress < m_state.numBlocks) {
-          m_state.nextBlockToCompress++;
           if (m_state.blocks[m_state.nextBlockToCompress].isAllocated) {
             break;
           }
+          m_state.nextBlockToCompress++;
         }
       }
     }
