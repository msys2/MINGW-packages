diff -urN Field3D-1.7.3-orig/export/Traits.h Field3D-1.7.3/export/Traits.h
--- Field3D-1.7.3-orig/export/Traits.h	2020-03-11 23:54:36 +0800
+++ Field3D-1.7.3/export/Traits.h	2021-11-17 17:44:22 +0800
@@ -63,7 +63,7 @@
 // Types
 //----------------------------------------------------------------------------//
 
-#if !defined(_MSC_VER)
+#if !defined(WIN32)
 using ::uint8_t;
 using ::int8_t;
 using ::uint16_t;
diff -urN Field3D-1.7.3-orig/include/UtilFoundation.h Field3D-1.7.3/include/UtilFoundation.h
--- Field3D-1.7.3-orig/include/UtilFoundation.h	2020-03-11 23:54:36 +0800
+++ Field3D-1.7.3/include/UtilFoundation.h	2021-11-17 17:47:53 +0800
@@ -85,7 +85,7 @@
 #include <string.h>
 #include <assert.h>
 
-#ifdef _MSC_VER
+#ifdef _WIN32
 
 #ifndef WIN32_LEAN_AND_MEAN
 #define WIN32_LEAN_AND_MEAN
@@ -169,7 +169,7 @@
 };
 
 // inspired by boost::mutex
-#ifdef _MSC_VER
+#ifdef _WIN32
 
 class mutex : noncopyable
 {
diff -urN Field3D-1.7.3-orig/include/UtilPlainOldDataType.h Field3D-1.7.3/include/UtilPlainOldDataType.h
--- Field3D-1.7.3-orig/include/UtilPlainOldDataType.h	2020-03-11 23:54:36 +0800
+++ Field3D-1.7.3/include/UtilPlainOldDataType.h	2021-11-17 17:46:22 +0800
@@ -135,7 +135,7 @@
     return a != b.asBool();
 }
 
-#if !defined(_MSC_VER)
+#if !defined(WIN32)
 using ::uint8_t;
 using ::int8_t;
 using ::uint16_t;
diff -urN Field3D-1.7.3-orig/src/Field3DFile.cpp Field3D-1.7.3/src/Field3DFile.cpp
--- Field3D-1.7.3-orig/src/Field3DFile.cpp	2020-03-11 23:54:36 +0800
+++ Field3D-1.7.3/src/Field3DFile.cpp	2021-11-19 19:49:50 +0800
@@ -187,7 +187,7 @@
 
   //! This function creates a FieldMappingIO instance based on className 
   //! read from mappingGroup location which then reads FieldMapping data
-  FIELD3D_API FieldMapping::Ptr readFieldMapping(const OgIGroup &mappingGroup)
+  FieldMapping::Ptr readFieldMapping(const OgIGroup &mappingGroup)
   {
     ClassFactory &factory = ClassFactory::singleton();
     
@@ -220,7 +220,7 @@
 
   //! This function creates a FieldIO instance based on field->className()
   //! which then writes the field data in layerGroup location
-  FIELD3D_API bool writeField(OgOGroup &layerGroup, FieldBase::Ptr field)
+  bool writeField(OgOGroup &layerGroup, FieldBase::Ptr field)
   {
     ClassFactory &factory = ClassFactory::singleton();
     
