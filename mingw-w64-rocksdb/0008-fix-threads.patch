--- rocksdb-6.12.7/port/win/env_win.h.orig	2020-10-14 20:55:43.000000000 +0300
+++ rocksdb-6.12.7/port/win/env_win.h	2020-10-22 09:01:18.812735500 +0300
@@ -16,12 +16,13 @@
 
 #pragma once
 
-#include "port/win/win_thread.h"
+#include "port/win/port_win.h"
 #include <rocksdb/env.h>
 #include "util/threadpool_imp.h"
 
 #include <stdint.h>
 #include <windows.h>
+#include <winioctl.h>
 
 #include <mutex>
 #include <vector>
@@ -74,7 +75,7 @@
   Env* hosted_env_;
   mutable std::mutex mu_;
   std::vector<ThreadPoolImpl> thread_pools_;
-  std::vector<WindowsThread> threads_to_join_;
+  std::vector<Thread> threads_to_join_;
 
 };
 
--- rocksdb-6.12.7/port/win/env_win.cc.orig	2020-10-14 20:55:43.000000000 +0300
+++ rocksdb-6.12.7/port/win/env_win.cc	2020-10-22 08:53:50.063161300 +0300
@@ -8,7 +8,6 @@
 // found in the LICENSE file. See the AUTHORS file for names of contributors.
 
 #include "port/win/env_win.h"
-#include "port/win/win_thread.h"
 #include <algorithm>
 #include <ctime>
 #include <thread>
@@ -1250,7 +1256,7 @@
   state->user_function = function;
   state->arg = arg;
   try {
-    ROCKSDB_NAMESPACE::port::WindowsThread th(&StartThreadWrapper, state.get());
+    ROCKSDB_NAMESPACE::port::Thread th(&StartThreadWrapper, state.get());
     state.release();
 
     std::lock_guard<std::mutex> lg(mu_);
