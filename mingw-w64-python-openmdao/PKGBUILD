# Maintainer: Ryuta Suzuki <oroppas@gmail.com>

_realname=openmdao
pkgbase=mingw-w64-python-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}"
         "${MINGW_PACKAGE_PREFIX}-python2-${_realname}")
pkgver=2.6.0
pkgrel=1
pkgdesc="An open-source MDAO framework written in Python (mingw-w64)"
arch=('any')
license=('apache')
url="https://openmdao.org/"
makedepends=("${MINGW_PACKAGE_PREFIX}-python3-setuptools"
             "${MINGW_PACKAGE_PREFIX}-python2-setuptools")
source=("OpenMDAO-${pkgver}.tar.gz::https://github.com/OpenMDAO/OpenMDAO/archive/${pkgver}.tar.gz")
sha256sums=('18ba7aff81a172383a0f51503895e6334ca8b9bc91e72df7de2f9f56f2e04346')


prepare() {
  sed -i "s|from distutils.core import setup|from setuptools import setup|" OpenMDAO-${pkgver}/setup.py
  cp -a OpenMDAO-${pkgver}{,-py2}
}

build() {
  cd ${srcdir}/OpenMDAO-${pkgver}
  python3 setup.py build

  cd ${srcdir}/OpenMDAO-${pkgver}-py2
  python2 setup.py build
}

#check() {
#  cd ${srcdir}/OpenMDAO1-${_realname}-${pkgver}
#  nosetests-3.7
#
#  cd ${srcdir}/OpenMDAO1-${_realname}-${pkgver}-py2
#  nosetests-2.7
#}

package_python3-openmdao() {
  depends=(
    "${MINGW_PACKAGE_PREFIX}-python3-numpy"
    "${MINGW_PACKAGE_PREFIX}-python3-scipy"
    "${MINGW_PACKAGE_PREFIX}-python3-networkx"
    "${MINGW_PACKAGE_PREFIX}-python3-sqlitedict"
    "${MINGW_PACKAGE_PREFIX}-python3-pyparsing"
    "${MINGW_PACKAGE_PREFIX}-python3-six"
  )

  cd OpenMDAO-${pkgver}
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python3 setup.py install --root=${pkgdir} --prefix=${MINGW_PREFIX} --optimize=1
  install -D -m644 LICENSE.txt "${pkgdir}${MINGW_PREFIX}/share/licenses/python3-${_realname}/LICENSE"

  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  # fix python command in files
  for _f in "${pkgdir}${MINGW_PREFIX}"/bin/*.py; do
    sed -e "s|/usr/bin/env |${MINGW_PREFIX}|g" \
        -e "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" -i ${_f}
  done
}

package_python2-openmdao() {
  depends=(
    "${MINGW_PACKAGE_PREFIX}-python2-numpy"
    "${MINGW_PACKAGE_PREFIX}-python2-scipy"
    "${MINGW_PACKAGE_PREFIX}-python2-networkx"
    "${MINGW_PACKAGE_PREFIX}-python2-sqlitedict"
    "${MINGW_PACKAGE_PREFIX}-python2-pyparsing"
    "${MINGW_PACKAGE_PREFIX}-python2-six"
  )

  cd OpenMDAO-${pkgver}-py2
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python2 setup.py install --root=${pkgdir} --prefix=${MINGW_PREFIX} --optimize=1
  install -D -m644 LICENSE.txt "${pkgdir}${MINGW_PREFIX}/share/licenses/python2-${_realname}/LICENSE"

  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  # fix python command in files
  for _f in "${pkgdir}${MINGW_PREFIX}"/bin/*.py; do
    sed -e "s|/usr/bin/env |${MINGW_PREFIX}|g" \
        -e "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" -i ${_f}
  done

  # Rename executables to not conflict with python3 versions
  for f in {openmdao,run_test,webview,wingproj}; do
    mv "${pkgdir}${MINGW_PREFIX}"/bin/${f}{,2}.exe
    if [ -f "${pkgdir}${MINGW_PREFIX}"/bin/${f}.exe.manifest ]; then
      mv "${pkgdir}${MINGW_PREFIX}"/bin/${f}{,2}.exe.manifest
      sed -e "s|${f}|${f}2|g" -i "${pkgdir}${MINGW_PREFIX}"/bin/${f}2.exe.manifest
    fi
    mv "${pkgdir}${MINGW_PREFIX}"/bin/${f}{,2}-script.py
  done 
}

package_mingw-w64-i686-python2-openmdao() {
  package_python2-openmdao
}

package_mingw-w64-i686-python3-openmdao() {
  package_python3-openmdao
}

package_mingw-w64-x86_64-python2-openmdao() {
  package_python2-openmdao
}

package_mingw-w64-x86_64-python3-openmdao() {
  package_python3-openmdao
}

# vim:set ts=2 sw=2 et:
