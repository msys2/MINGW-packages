# Maintainer: Ray Donnelly <mingw.android@gmail.com>

_realname=suitesparse
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-suitesparse")
pkgver=6.0.2
pkgrel=2
pkgdesc='A suite of sparse matrix algorithms (mingw-w64)'
url="https://faculty.cse.tamu.edu/davis/suitesparse.html"
license=('spdx:LGPL-3.0-or-later AND BSD-3-Clause AND LGPL-2.1-or-later AND GPL-2.0-or-later AND LGPL-2.0-or-later AND Apache-2.0 AND GPL-3.0-or-later')
arch=('any')
# Large parts of the API are broken on 32-bit.
# See: https://github.com/DrTimothyAldenDavis/SuiteSparse/issues/221
# Use mingw-w64-suitesparse5 instead for those environments.
mingw_arch=('mingw64' 'ucrt64' 'clang64' 'clangarm64')
depends=("${MINGW_PACKAGE_PREFIX}-openblas"
         "${MINGW_PACKAGE_PREFIX}-omp"
         "${MINGW_PACKAGE_PREFIX}-gmp")
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-mpfr")
source=(${_realname}-${pkgver}.tar.gz::"https://github.com/DrTimothyAldenDavis/SuiteSparse/archive/v${pkgver}.tar.gz"
        "0001-SPEX-Link-to-gmp-after-mpfr.patch"::"https://github.com/DrTimothyAldenDavis/SuiteSparse/commit/3b20a70ddf9e7d226ebfd870022b393760c3595d.patch")
sha256sums=('c5d960cd210279c3c83a27747aca2fdeb2e4a13af42870ca0635739accdc6847'
            'c296e783a973a4bbfbab520ab638518755faf8329b1d7c3ceaa812bc2b2877f0')
noextract=(${_realname}-${pkgver}.tar.gz)

apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying $_patch"
    patch -Np1 -i "${srcdir}/$_patch"
  done
}

prepare() {
  cd ${srcdir}
  rm -rf SuiteSparse-${pkgver}
  tar -xzf ${_realname}-${pkgver}.tar.gz || true

  cd "${srcdir}"/SuiteSparse-${pkgver}

  apply_patch_with_msg \
    0001-SPEX-Link-to-gmp-after-mpfr.patch
}

build() {
  [[ -d "${srcdir}/build-${MSYSTEM}" ]] && rm -rf "${srcdir}/build-${MSYSTEM}"
  cp -rf "${srcdir}/SuiteSparse-${pkgver}" "${srcdir}/build-${MSYSTEM}"
  cd "${srcdir}/build-${MSYSTEM}"

  declare -a _extra_config
  if check_option "debug" "n"; then
    _extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    _extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    make CMAKE_OPTIONS="-DCMAKE_INSTALL_PREFIX=\"${MINGW_PREFIX}\" ${_extra_config[@]} -DBLA_VENDOR=OpenBLAS"
}

package() {
  cd "${srcdir}/build-${MSYSTEM}"

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    make install DESTDIR="${pkgdir}"
}
