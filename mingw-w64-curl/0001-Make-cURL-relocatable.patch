From 5176fc67557291c1774c363640c72f80ad409563 Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Wed, 22 Feb 2017 11:03:04 +0100
Subject: [PATCH] Make cURL relocatable

This adds the ability to specify CA_BUNDLE paths that are relative to
the MSYS2 pseudo-root directory.

To make it truly relocatable, we use the path to the *cURL library*
instead of the path to the current .exe to determine the location of the
pseudo-root directory (allowing the .exe file to live completely outside
of the MSYS2 system, e.g. in $HOME/bin). This requires Win32 API
available in Windows XP & 2003 and later, well within the Windows
versions supported by Cygwin (and therefore MSYS2).

We also need to be extra careful to extend that path logic to the
ca-bundle.crt used to validate HTTPS *proxies*, not only HTTPS servers.

Original-patch-by: Ray Donnelly <mingw.android@gmail.com>
Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>
---
 configure.ac         |   1 +
 lib/Makefile.inc     |   5 +-
 lib/curl_config.h.in |   3 +
 lib/url.c            |  26 ++-
 6 files changed, 624 insertions(+), 3 deletions(-)

diff --git a/configure.ac b/configure.ac
index 798fa5f1e..2ed766c0d 100755
--- a/configure.ac
+++ b/configure.ac
@@ -3474,6 +3474,7 @@ if test "xyes" = "x$longlong"; then
   ])
 fi
 
+AC_DEFINE_UNQUOTED(CURL_BINDIR, "${prefix}/bin", [bindir])
 
 # check for ssize_t
 AC_CHECK_TYPE(ssize_t, ,
diff --git a/lib/Makefile.inc b/lib/Makefile.inc
index 69f9b403d..44e2dc039 100644
--- a/lib/Makefile.inc
+++ b/lib/Makefile.inc
@@ -170,6 +170,7 @@
   nonblock.c         \
   openldap.c         \
   parsedate.c        \
+  pathtools.c        \
   pingpong.c         \
   pop3.c             \
   progress.c         \
@@ -289,6 +290,7 @@
   non-ascii.h        \
   nonblock.h         \
   parsedate.h        \
+  pathtools.h        \
   pingpong.h         \
   pop3.h             \
   progress.h         \
diff --git a/lib/curl_config.h.in b/lib/curl_config.h.in
index 0f2a80403..9bad51f8d 100644
--- a/lib/curl_config.h.in
+++ b/lib/curl_config.h.in
@@ -12,6 +12,9 @@
 /* Default SSL backend */
 #undef CURL_DEFAULT_SSL_BACKEND
 
+/* Location of executable */
+#undef CURL_BINDIR
+
 /* to disable cookies support */
 #undef CURL_DISABLE_COOKIES
 
diff --git a/lib/url.c b/lib/url.c
index 945d4e327..981e60d26 100644
--- a/lib/url.c
+++ b/lib/url.c
@@ -120,6 +120,9 @@
 #include "setopt.h"
 #include "altsvc.h"
 #include "dynbuf.h"
+#if defined(__MINGW32__)
+#include "pathtools.h"
+#endif
 
 /* The last 3 #include files should be in this order */
 #include "curl_printf.h"
@@ -575,21 +575,54 @@
    */
   if(Curl_ssl_backend() != CURLSSLBACKEND_SCHANNEL) {
 #if defined(CURL_CA_BUNDLE)
+#if defined(__MINGW32__)
+    const size_t path_max = PATH_MAX;
+    char relocated_bundle[path_max];
+    get_dll_path(relocated_bundle, path_max);
+    strip_n_suffix_folders(relocated_bundle, 1);
+    strncat(relocated_bundle, "/", path_max);
+    char *relative = get_relative_path(CURL_BINDIR, CURL_CA_BUNDLE);
+    strncat(relocated_bundle, relative, path_max);
+    free((void*)relative);
+    simplify_path(relocated_bundle);
+    result = Curl_setstropt(&set->str[STRING_SSL_CAFILE], relocated_bundle);
+#else
     result = Curl_setstropt(&set->str[STRING_SSL_CAFILE], CURL_CA_BUNDLE);
+#endif /* defined(__MINGW32__) */
     if(result)
       return result;
 
-    result = Curl_setstropt(&set->str[STRING_SSL_CAFILE_PROXY],
-                            CURL_CA_BUNDLE);
+#if defined(__MINGW32__)
+    result = Curl_setstropt(&set->str[STRING_SSL_CAFILE_PROXY], relocated_bundle);
+#else
+    result = Curl_setstropt(&set->str[STRING_SSL_CAFILE_PROXY], CURL_CA_BUNDLE);
+#endif
     if(result)
       return result;
 #endif
 #if defined(CURL_CA_PATH)
+#if defined(__MINGW32__)
+    const size_t path_max = PATH_MAX;
+    char relocated_ca_path[path_max];
+    get_dll_path(relocated_ca_path, path_max);
+    strip_n_suffix_folders(relocated_ca_path, 1);
+    strncat(relocated_ca_path, "/", path_max);
+    char *relative = get_relative_path(CURL_BINDIR, CURL_CA_PATH);
+    strncat(relocated_ca_path, relative, path_max);
+    free((void*)relative);
+    simplify_path(relocated_ca_path);
+    result = Curl_setstropt(&set->str[STRING_SSL_CAPATH], relocated_ca_path);
+#else
     result = Curl_setstropt(&set->str[STRING_SSL_CAPATH], CURL_CA_PATH);
+#endif /* defined(__MINGW32__) */
     if(result)
       return result;
 
+#if defined(__MINGW32__)
+    result = Curl_setstropt(&set->str[STRING_SSL_CAPATH_PROXY], relocated_ca_path);
+#else
     result = Curl_setstropt(&set->str[STRING_SSL_CAPATH_PROXY], CURL_CA_PATH);
+#endif
     if(result)
       return result;
 #endif
-- 
2.16.1.windows.4

