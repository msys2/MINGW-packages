--- a/CMake/FindBrotli.cmake
+++ b/CMake/FindBrotli.cmake
@@ -41,3 +41,4 @@
 
 set(BROTLI_INCLUDE_DIRS ${BROTLI_INCLUDE_DIR})
 set(BROTLI_LIBRARIES ${BROTLICOMMON_LIBRARY} ${BROTLIDEC_LIBRARY})
+set(LIBCURL_REQUIRES_PRIVATE "libbrotlidec ${LIBCURL_REQUIRES_PRIVATE}")
--- a/CMake/FindNGHTTP2.cmake
+++ b/CMake/FindNGHTTP2.cmake
@@ -37,5 +37,6 @@
 
 set(NGHTTP2_INCLUDE_DIRS ${NGHTTP2_INCLUDE_DIR})
 set(NGHTTP2_LIBRARIES ${NGHTTP2_LIBRARY})
+set(LIBCURL_REQUIRES_PRIVATE "libnghttp2 ${LIBCURL_REQUIRES_PRIVATE}")
 
 mark_as_advanced(NGHTTP2_INCLUDE_DIRS NGHTTP2_LIBRARIES)
--- a/CMake/FindNGHTTP3.cmake
+++ b/CMake/FindNGHTTP3.cmake
@@ -73,6 +73,7 @@
 if(NGHTTP3_FOUND)
   set(NGHTTP3_LIBRARIES    ${NGHTTP3_LIBRARY})
   set(NGHTTP3_INCLUDE_DIRS ${NGHTTP3_INCLUDE_DIR})
+  set(LIBCURL_REQUIRES_PRIVATE "libnghttp3 ${LIBCURL_REQUIRES_PRIVATE}")
 endif()
 
 mark_as_advanced(NGHTTP3_INCLUDE_DIRS NGHTTP3_LIBRARIES)
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -886,6 +886,7 @@
   check_library_exists("idn2" "idn2_lookup_ul" "" HAVE_LIBIDN2)
   if(HAVE_LIBIDN2)
     set(CURL_LIBS "idn2;${CURL_LIBS}")
+    set(LIBCURL_REQUIRES_PRIVATE "libidn2 ${LIBCURL_REQUIRES_PRIVATE}")
     check_include_file_concat("idn2.h" HAVE_IDN2_H)
   endif()
 else()
--- a/libcurl.pc.in
+++ b/libcurl.pc.in
@@ -36,6 +36,8 @@
 URL: https://curl.se/
 Description: Library to transfer files with ftp, http, etc.
 Version: @CURLVERSION@
+Requires.private: @LIBCURL_REQUIRES_PRIVATE@
 Libs: -L${libdir} -lcurl @LIBCURL_NO_SHARED@
 Libs.private: @LIBCURL_LIBS@
 Cflags: -I${includedir} @CPPFLAG_CURL_STATICLIB@
+Cflags.private: -DCURL_STATICLIB
