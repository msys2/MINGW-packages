# Maintainer: Kouhei Sutou <kou@clear-code.com>

_realname=arrow
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=0.11.1
pkgrel=1
pkgdesc="Apache Arrow is a cross-language development platform for in-memory data (mingw-w64)"
arch=("any")
url="https://arrow.apache.org/"
license=("Apache-2.0")
depends=("${MINGW_PACKAGE_PREFIX}-boost"
         "${MINGW_PACKAGE_PREFIX}-brotli"
         "${MINGW_PACKAGE_PREFIX}-flatbuffers"
         "${MINGW_PACKAGE_PREFIX}-gobject-introspection"
         "${MINGW_PACKAGE_PREFIX}-lz4"
         "${MINGW_PACKAGE_PREFIX}-protobuf"
         "${MINGW_PACKAGE_PREFIX}-python3-numpy"
         "${MINGW_PACKAGE_PREFIX}-snappy"
         "${MINGW_PACKAGE_PREFIX}-zlib"
         "${MINGW_PACKAGE_PREFIX}-zstd")
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-gcc"
             "${MINGW_PACKAGE_PREFIX}-gtk-doc"
             "${MINGW_PACKAGE_PREFIX}-meson")
options=("staticlibs" "strip" "!buildflags")
source=("https://www.apache.org/dist/arrow/arrow-${pkgver}/apache-${_realname}-${pkgver}.tar.gz"
        "https://github.com/apache/arrow/commit/aaf70a41575f5eff590b4f73b8160ae896e6c24e.patch"
        "https://github.com/apache/arrow/commit/eb500b657895ed5f762aa7b819fcea2cb898358d.patch")
sha256sums=("c524f3d47f0cdb7445c0326b20e79f60485e12daeb2adc8ad6a845ad6c19c1ac"
            "bebf9c852d36bd16c218c8965ec4899c9b82434a9cd143b19f439e060bb57e1d"
            "a5e8a16ab51b728d00a74af57ae07e3d6fb6dd63ef71c805dc6fb3e07a369db0")

cmake_build_type=release
meson_build_type=debugoptimized

source_dir=apache-${_realname}-${pkgver}
cpp_build_dir=build-${CARCH}-cpp
c_glib_build_dir=build-${CARCH}-c-glib

prepare() {
  pushd ${source_dir}
  patch -p1 -i ${srcdir}/aaf70a41575f5eff590b4f73b8160ae896e6c24e.patch
  patch -p1 -i ${srcdir}/eb500b657895ed5f762aa7b819fcea2cb898358d.patch
  popd
}

build() {
  [[ -d ${cpp_build_dir} ]] && rm -rf ${cpp_build_dir}
  mkdir -p ${cpp_build_dir}
  pushd ${cpp_build_dir}

  LZ4_HOME=${MINGW_PREFIX} \
  ZSTD_HOME=${MINGW_PREFIX} \
  SNAPPY_HOME=${MINGW_PREFIX} \
  BROTLI_HOME=${MINGW_PREFIX} \
  FLATBUFFERS_HOME=${MINGW_PREFIX} \
  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    ${MINGW_PREFIX}/bin/cmake.exe \
      ../${source_dir}/cpp \
      -G "MSYS Makefiles" \
      -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
      -DCMAKE_BUILD_TYPE=${cmake_build_type} \
      -DARROW_BUILD_TESTS=OFF \
      -DARROW_PYTHON=ON \
      -DARROW_BOOST_USE_SHARED=ON \
      -DPythonInterp_FIND_VERSION=ON \
      -DPythonInterp_FIND_VERSION_MAJOR=3

  make
  popd

  [[ -d ${c_glib_build_dir} ]] && rm -rf ${c_glib_build_dir}
  meson \
    ${c_glib_build_dir} \
    ${source_dir}/c_glib \
    --buildtype=${meson_build_type} \
    --prefix=${MINGW_PREFIX} \
    -Darrow_cpp_build_dir=$(pwd)/${cpp_build_dir} \
    -Darrow_cpp_build_type=${cmake_build_type} \
    -Dgtk_doc=true
  sed -i'' -s 's/\r//g' ${c_glib_build_dir}/arrow-glib/version.h
  PATH=$(pwd)/${cpp_build_dir}/${cmake_build_type}:$PATH \
    ninja -C ${c_glib_build_dir}
}

check() {
  # TODO
  # make -C ${cpp_build_dir} test

  # PATH=$(pwd)/${c_glib_build_dir}/arrow-glib:$(pwd)/${cpp_build_dir}/${cmake_build_type}:$PATH \
  #   ninja -C ${c_glib_build_dir} test

  :
}

package() {
  make -C ${cpp_build_dir} DESTDIR="${pkgdir}" install

  PATH=$(pwd)/${c_glib_build_dir}/arrow-glib:$(pwd)/${cpp_build_dir}/${cmake_build_type}:$PATH \
  DESTDIR="${pkgdir}${MINGW_PREFIX}" \
    ninja -C ${c_glib_build_dir} install

  local PREFIX_DEPS=$(cygpath -am ${MINGW_PREFIX})
  pushd "${pkgdir}${MINGW_PREFIX}/lib/pkgconfig"
  for pc in *.pc; do
    sed -s "s|${PREFIX_DEPS}|${MINGW_PREFIX}|g" -i $pc
  done
  popd
}
