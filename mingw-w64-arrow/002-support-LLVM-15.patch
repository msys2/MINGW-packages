From 8208b20cc376b43972a4497b743748c26c4f7cee Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D9=85=D9=87=D8=AF=D9=8A=20=D8=B4=D9=8A=D9=86=D9=88=D9=86?=
 =?UTF-8?q?=20=28Mehdi=20Chinoune=29?= <mehdi.chinoune@hotmail.com>
Date: Wed, 21 Sep 2022 17:36:18 +0100
Subject: [PATCH 2/2] support LLVM 15

---
 cpp/CMakeLists.txt                            |  1 +
 .../{Findzstd.cmake => FindzstdAlt.cmake}     | 31 ++++++++++++++++---
 cpp/cmake_modules/ThirdpartyToolchain.cmake   | 18 ++++++-----
 3 files changed, 38 insertions(+), 12 deletions(-)
 rename cpp/cmake_modules/{Findzstd.cmake => FindzstdAlt.cmake} (81%)

diff --git a/cpp/CMakeLists.txt b/cpp/CMakeLists.txt
index bca86d4..215b270 100644
--- a/cpp/CMakeLists.txt
+++ b/cpp/CMakeLists.txt
@@ -128,6 +128,7 @@ set(ARROW_DOC_DIR "share/doc/${PROJECT_NAME}")
 set(BUILD_SUPPORT_DIR "${CMAKE_SOURCE_DIR}/build-support")
 
 set(ARROW_LLVM_VERSIONS
+    "15.0"
     "14.0"
     "13.0"
     "12.0"
diff --git a/cpp/cmake_modules/Findzstd.cmake b/cpp/cmake_modules/FindzstdAlt.cmake
similarity index 81%
rename from cpp/cmake_modules/Findzstd.cmake
rename to cpp/cmake_modules/FindzstdAlt.cmake
index 3fc14ec..476006a 100644
--- a/cpp/cmake_modules/Findzstd.cmake
+++ b/cpp/cmake_modules/FindzstdAlt.cmake
@@ -15,6 +15,23 @@
 # specific language governing permissions and limitations
 # under the License.
 
+if(zstdAlt_FOUND)
+  return()
+endif()
+
+set(find_package_args)
+if(zstdAlt_FIND_VERSION)
+  list(APPEND find_package_args ${zstdAlt_FIND_VERSION})
+endif()
+if(zstdAlt_FIND_QUIETLY)
+  list(APPEND find_package_args QUIET)
+endif()
+find_package(zstd ${find_package_args})
+if(zstd_FOUND)
+  set(zstdAlt_FOUND TRUE)
+  return()
+endif()
+
 if(MSVC AND NOT DEFINED ZSTD_MSVC_LIB_PREFIX)
   set(ZSTD_MSVC_LIB_PREFIX "lib")
 endif()
@@ -79,11 +96,17 @@ else()
   endif()
 endif()
 
-find_package_handle_standard_args(zstd REQUIRED_VARS ZSTD_LIB ZSTD_INCLUDE_DIR)
+find_package_handle_standard_args(zstdAlt REQUIRED_VARS ZSTD_LIB ZSTD_INCLUDE_DIR)
 
-if(zstd_FOUND)
-  add_library(zstd::libzstd UNKNOWN IMPORTED)
-  set_target_properties(zstd::libzstd
+if(zstdAlt_FOUND)
+  if(ARROW_ZSTD_USE_SHARED)
+    set(zstd_TARGET zstd::libzstd_shared)
+    add_library(${zstd_TARGET} SHARED IMPORTED)
+  else()
+    set(zstd_TARGET zstd::libzstd_static)
+    add_library(${zstd_TARGET} STATIC IMPORTED)
+  endif()
+  set_target_properties(${zstd_TARGET}
                         PROPERTIES IMPORTED_LOCATION "${ZSTD_LIB}"
                                    INTERFACE_INCLUDE_DIRECTORIES "${ZSTD_INCLUDE_DIR}")
 endif()
diff --git a/cpp/cmake_modules/ThirdpartyToolchain.cmake b/cpp/cmake_modules/ThirdpartyToolchain.cmake
index 5d1da18..88a49bb 100644
--- a/cpp/cmake_modules/ThirdpartyToolchain.cmake
+++ b/cpp/cmake_modules/ThirdpartyToolchain.cmake
@@ -2403,30 +2403,32 @@ macro(build_zstd)
 
   file(MAKE_DIRECTORY "${ZSTD_PREFIX}/include")
 
-  add_library(zstd::libzstd STATIC IMPORTED)
-  set_target_properties(zstd::libzstd
+  add_library(zstd::libzstd_static STATIC IMPORTED)
+  set_target_properties(zstd::libzstd_static
                         PROPERTIES IMPORTED_LOCATION "${ZSTD_STATIC_LIB}"
                                    INTERFACE_INCLUDE_DIRECTORIES "${ZSTD_PREFIX}/include")
 
   add_dependencies(toolchain zstd_ep)
-  add_dependencies(zstd::libzstd zstd_ep)
+  add_dependencies(zstd::libzstd_static zstd_ep)
 
-  list(APPEND ARROW_BUNDLED_STATIC_LIBS zstd::libzstd)
+  list(APPEND ARROW_BUNDLED_STATIC_LIBS zstd::libzstd_static)
+
+  set(ZSTD_VENDORED TRUE)
 endmacro()
 
 if(ARROW_WITH_ZSTD)
   # ARROW-13384: ZSTD_minCLevel was added in v1.4.0, required by ARROW-13091
   resolve_dependency(zstd
+                     HAVE_ALT
+                     TRUE
                      PC_PACKAGE_NAMES
                      libzstd
                      REQUIRED_VERSION
                      1.4.0)
 
-  if(TARGET zstd::libzstd)
-    set(ARROW_ZSTD_LIBZSTD zstd::libzstd)
+  if(ZSTD_VENDORED)
+    set(ARROW_ZSTD_LIBZSTD zstd::libzstd_static)
   else()
-    # "SYSTEM" source will prioritize cmake config, which exports
-    # zstd::libzstd_{static,shared}
     if(ARROW_ZSTD_USE_SHARED)
       if(TARGET zstd::libzstd_shared)
         set(ARROW_ZSTD_LIBZSTD zstd::libzstd_shared)
-- 
2.37.3.windows.1

