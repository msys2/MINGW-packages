diff --git a/src/librssguard/miscellaneous/application.cpp b/src/librssguard/miscellaneous/application.cpp
index ceca2d0..111e9ba 100644
--- a/src/librssguard/miscellaneous/application.cpp
+++ b/src/librssguard/miscellaneous/application.cpp
@@ -572,7 +572,12 @@ QString Application::userDataAppFolder() const {
 
   // In "app" folder, we would like to separate all user data into own subfolder,
   // therefore stick to "data" folder in this mode.
+#ifdef _MSC_VER
   return QDir::toNativeSeparators(applicationDirPath() + QDir::separator() + QSL("data%1").arg(major_version));
+#else
+  return QDir::toNativeSeparators(applicationDirPath() + QDir::separator() + QSL("..") + QDir::separator() +
+    QSL("share") + QDir::separator() + QSL(APP_LOW_NAME) + QDir::separator() + QSL("data%1").arg(major_version));
+#endif
 }
 
 QString Application::userDataFolder() {
diff --git a/src/librssguard/miscellaneous/pluginfactory.cpp b/src/librssguard/miscellaneous/pluginfactory.cpp
index 055b85a..d566080 100644
--- a/src/librssguard/miscellaneous/pluginfactory.cpp
+++ b/src/librssguard/miscellaneous/pluginfactory.cpp
@@ -77,7 +77,12 @@ QStringList PluginFactory::pluginPaths() const {
   paths << QCoreApplication::applicationDirPath() + QDir::separator() + QL1S("..") + QDir::separator() +
              QL1S(RSSGUARD_LIBDIR) + QDir::separator() + QL1S(APP_LOW_NAME);
 #elif defined(Q_OS_WIN)
+#ifdef _MSC_VER
   paths << QCoreApplication::applicationDirPath() + QDir::separator() + QL1S("plugins");
+#else
+  paths << QCoreApplication::applicationDirPath() + QDir::separator() + QL1S("..") + QDir::separator() +
+             QL1S("share") + QDir::separator() + QL1S(APP_LOW_NAME) + QDir::separator() + QL1S("plugins");
+#endif
 #else
   paths << QCoreApplication::applicationDirPath();
 #endif
