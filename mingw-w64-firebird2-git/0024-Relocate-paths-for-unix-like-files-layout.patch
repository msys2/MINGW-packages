From 6694e24ed8e6a86db3f6518e63cfa8581d838d5e Mon Sep 17 00:00:00 2001
From: Alexpux <alexey.pawlow@gmail.com>
Date: Sun, 23 Nov 2014 09:27:40 +0300
Subject: [PATCH 24/27] Relocate paths for unix-like files layout.

---
 builds/posix/make.shared.variables |   4 +-
 src/common/utils.cpp               |  21 +-
 src/jrd/gds.cpp                    |   7 +-
 src/jrd/os/win32/config_root.cpp   |   7 +-
 src/jrd/os/win32/path_utils.cpp    |   5 +-
 7 files changed, 623 insertions(+), 12 deletions(-)

diff --git a/builds/posix/make.shared.variables b/builds/posix/make.shared.variables
index ef6099ed83..b10dae4cbc 100644
--- a/builds/posix/make.shared.variables
+++ b/builds/posix/make.shared.variables
@@ -259,7 +259,7 @@ VULCAN_Objects = $(addprefix $(OBJ)/, $(addsuffix .o, $(basename $(VULCAN_Source
 # common
 
 FBCOMMON_ClientFiles = fb_exception.cpp thd.cpp classes/MetaName.cpp StatusHolder.cpp classes/init.cpp StatusArg.cpp
-FBCOMMON_ServerFiles = utils.cpp
+FBCOMMON_ServerFiles = utils.cpp pathtools.cpp
 
 FBCOMMON_ClientObjects = $(addprefix $(OBJ)/common/, $(addsuffix .o, $(basename $(FBCOMMON_ClientFiles)))) \
 		$(addprefix $(OBJ)/jrd/, $(addsuffix .o, $(basename fbsyslog.cpp)))
@@ -287,7 +287,7 @@ CLUMPLETS_Objects = $(addprefix $(OBJ)/, $(addsuffix .o, $(basename $(CLUMPLETS_
 # just in case if make.platform defined some files
 OS_SPECIFIC_Files += config_root.cpp path_utils.cpp mod_loader.cpp guid.cpp os_utils.cpp
 
-OS_SPECIFIC_Sources = $(addprefix jrd/, $(OS_SPECIFIC_Files)) common/dllinst.cpp
+OS_SPECIFIC_Sources = $(addprefix jrd/, $(OS_SPECIFIC_Files)) common/dllinst.cpp common/pathtools.cpp
 ifneq ($(strip @BINRELOC_CFLAGS@),)
 OS_SPECIFIC_Sources += $(ROOT)/extern/binreloc/binreloc.c
 endif
diff --git a/src/common/utils.cpp b/src/common/utils.cpp
index 34c7c5c263..5991363f10 100644
--- a/src/common/utils.cpp
+++ b/src/common/utils.cpp
@@ -43,6 +43,7 @@
 #include "../common/utils_proto.h"
 #include "../common/classes/locks.h"
 #include "../common/classes/init.h"
+#include "../common/pathtools.h"
 #include "../jrd/constants.h"
 #include "../jrd/os/path_utils.h"
 #include "../jrd/os/fbsyslog.h"
@@ -929,9 +930,23 @@ Firebird::PathName getPrefix(FB_DIR prefType, const char* name)
 
 #ifndef BOOT_BUILD
 	const char* configDir[] = {
-		FB_BINDIR, FB_SBINDIR, FB_CONFDIR, FB_LIBDIR, FB_INCDIR, FB_DOCDIR, FB_UDFDIR, FB_SAMPLEDIR,
-		FB_SAMPLEDBDIR, FB_HELPDIR, FB_INTLDIR, FB_MISCDIR, FB_SECDBDIR, FB_MSGDIR, FB_LOGDIR,
-		FB_GUARDDIR, FB_PLUGDIR
+		single_path_relocation(FB_BINDIR,FB_BINDIR),
+		single_path_relocation(FB_BINDIR,FB_SBINDIR),
+		single_path_relocation(FB_BINDIR,FB_CONFDIR),
+		single_path_relocation(FB_BINDIR,FB_LIBDIR),
+		single_path_relocation(FB_BINDIR,FB_INCDIR),
+		single_path_relocation(FB_BINDIR,FB_DOCDIR),
+		single_path_relocation(FB_BINDIR,FB_UDFDIR),
+		single_path_relocation(FB_BINDIR,FB_SAMPLEDIR),
+		single_path_relocation(FB_BINDIR,FB_SAMPLEDBDIR),
+		single_path_relocation(FB_BINDIR,FB_HELPDIR),
+		single_path_relocation(FB_BINDIR,FB_INTLDIR),
+		single_path_relocation(FB_BINDIR,FB_MISCDIR),
+		single_path_relocation(FB_BINDIR,FB_SECDBDIR),
+		single_path_relocation(FB_BINDIR,FB_MSGDIR),
+		single_path_relocation(FB_BINDIR,FB_LOGDIR),
+		single_path_relocation(FB_BINDIR,FB_GUARDDIR),
+		single_path_relocation(FB_BINDIR,FB_PLUGDIR)
 	};
 
 	fb_assert(FB_NELEM(configDir) == FB_DIR_LAST);
diff --git a/src/jrd/gds.cpp b/src/jrd/gds.cpp
index a4ccaa9ac7..a802e8ce90 100644
--- a/src/jrd/gds.cpp
+++ b/src/jrd/gds.cpp
@@ -56,6 +56,7 @@
 #include "../common/classes/timestamp.h"
 #include "../common/classes/init.h"
 #include "../common/classes/TempFile.h"
+#include "../common/pathtools.h"
 #include "../common/utils_proto.h"
 
 #ifdef HAVE_UNISTD_H
@@ -3604,13 +3605,13 @@ public:
 		{
 			prefix = Config::getRootDirectory();
 			if (prefix.isEmpty() && !GetProgramFilesDir(prefix))
-				prefix = FB_CONFDIR[0] ? FB_CONFDIR : FB_PREFIX;
+				prefix = FB_CONFDIR[0] ? single_path_relocation(FB_BINDIR,FB_CONFDIR) : single_path_relocation(FB_BINDIR,FB_PREFIX);
 		}
 		catch (Firebird::fatal_exception&)
 		{
 			// CVC: Presumably here we failed because the config file can't be located.
 			if (!GetProgramFilesDir(prefix))
-				prefix = FB_CONFDIR[0] ? FB_CONFDIR : FB_PREFIX;
+				prefix = FB_CONFDIR[0] ? single_path_relocation(FB_BINDIR,FB_CONFDIR) : single_path_relocation(FB_BINDIR,FB_PREFIX);
 		}
 		prefix.copyTo(fb_prefix_val, sizeof(fb_prefix_val));
 		fb_prefix = fb_prefix_val;
@@ -3693,7 +3694,7 @@ public:
 		Firebird::PathName msgPrefix;
 		if (!fb_utils::readenv(FB_MSG_ENV, msgPrefix))
 		{
-			msgPrefix = FB_MSGDIR[0] ? FB_MSGDIR : prefix;
+			msgPrefix = FB_MSGDIR[0] ? single_path_relocation(FB_BINDIR,FB_MSGDIR) : prefix;
 		}
 		msgPrefix.copyTo(fb_prefix_msg_val, sizeof(fb_prefix_msg_val));
 		fb_prefix_msg = fb_prefix_msg_val;
diff --git a/src/jrd/os/win32/config_root.cpp b/src/jrd/os/win32/config_root.cpp
index f5c7d54b51..deb33cc713 100644
--- a/src/jrd/os/win32/config_root.cpp
+++ b/src/jrd/os/win32/config_root.cpp
@@ -28,6 +28,7 @@
 #include "fb_types.h"
 #include "../../../common/classes/fb_string.h"
 #include "../../../common/dllinst.h"
+#include "../../../common/pathtools.h"
 
 #include "../jrd/os/config_root.h"
 #include "../utilities/install/registry.h"
@@ -88,7 +89,7 @@ bool getBinFromHInstance(PathName& root)
 void ConfigRoot::osConfigRoot()
 {
 	// check the registry first
-#if defined(SUPERCLIENT)
+#if defined(SUPERCLIENT) && !defined(__MINGW32__)
 	if (getRootFromRegistry(root_dir))
 	{
 		addSlash();
@@ -125,7 +126,7 @@ void ConfigRoot::osConfigRoot()
 	}
 
 	// As a last resort get it from the default install directory
-	root_dir = FB_PREFIX;
+	root_dir = single_path_relocation(FB_BINDIR,FB_PREFIX);
 }
 
 void ConfigRoot::osConfigInstallDir()
@@ -159,5 +160,5 @@ void ConfigRoot::osConfigInstallDir()
 	}
 
 	// As a last resort get it from the default install directory
-	install_dir = FB_PREFIX;
+	install_dir = single_path_relocation(FB_BINDIR,FB_PREFIX);
 }
diff --git a/src/jrd/os/win32/path_utils.cpp b/src/jrd/os/win32/path_utils.cpp
index 6e22f15704..48186bcec4 100644
--- a/src/jrd/os/win32/path_utils.cpp
+++ b/src/jrd/os/win32/path_utils.cpp
@@ -4,8 +4,11 @@
 #include <io.h> // _access
 
 /// The Win32 implementation of the path_utils abstraction.
-
+#if defined(__MINGW32__)
+const char PathUtils::dir_sep = '/';
+#else
 const char PathUtils::dir_sep = '\\';
+#endif
 const char* PathUtils::up_dir_link = "..";
 
 class Win32DirItr : public PathUtils::dir_iterator
-- 
2.13.0

