--- a/channels/urbdrc/client/data_transfer.c
+++ b/channels/urbdrc/client/data_transfer.c
@@ -1320,7 +1320,7 @@
 {
 	size_t out_size;
 	UINT32 InterfaceId, OutputBufferSize, usbd_status;
-	UINT16 interface;
+	UINT16 iface;
 	wStream* out;
 	URBDRC_PLUGIN* urbdrc;
 	const BOOL noAck = (RequestField & 0x80000000U) != 0;
@@ -1345,7 +1345,7 @@
 	}
 
 	InterfaceId = ((STREAM_ID_PROXY << 30) | pdev->get_ReqCompletion(pdev));
-	Stream_Read_UINT16(s, interface);
+	Stream_Read_UINT16(s, iface);
 	Stream_Seek(s, 2);
 	Stream_Read_UINT32(s, OutputBufferSize);
 	if (OutputBufferSize > UINT32_MAX - 36)
@@ -1360,7 +1360,7 @@
 
 	if (!pdev->control_transfer(
 	        pdev, RequestId, 0, 0, 0x80 | 0x01, 0x0A, /* REQUEST_GET_INTERFACE */
-	        0, interface, &usbd_status, &OutputBufferSize, Stream_Pointer(out), 1000))
+	        0, iface, &usbd_status, &OutputBufferSize, Stream_Pointer(out), 1000))
 	{
 		WLog_Print(urbdrc->log, WLOG_DEBUG, "control_transfer failed");
 		Stream_Free(out, TRUE);
--- a/channels/urbdrc/common/urbdrc_helpers.c
+++ b/channels/urbdrc/common/urbdrc_helpers.c
@@ -199,10 +199,10 @@
 	return "QUERY_DEVICE_TEXT_RSP             [stub  |client]";
 }
 
-const char* call_to_string(BOOL client, UINT32 interface, UINT32 functionId)
+const char* call_to_string(BOOL client, UINT32 iface, UINT32 functionId)
 {
-	const UINT32 mask = (interface & STREAM_ID_MASK) >> 30;
-	const UINT32 interfaceId = interface & INTERFACE_ID_MASK;
+	const UINT32 mask = (iface & STREAM_ID_MASK) >> 30;
+	const UINT32 interfaceId = iface & INTERFACE_ID_MASK;
 
 	switch (mask)
 	{
--- a/channels/urbdrc/common/urbdrc_helpers.h
+++ b/channels/urbdrc/common/urbdrc_helpers.h
@@ -34,7 +34,7 @@
 	const char* urb_function_string(UINT16 urb);
 	const char* mask_to_string(UINT32 mask);
 	const char* interface_to_string(UINT32 id);
-	const char* call_to_string(BOOL client, UINT32 interface, UINT32 functionId);
+	const char* call_to_string(BOOL client, UINT32 iface, UINT32 functionId);
 
 	void urbdrc_dump_message(wLog* log, BOOL client, BOOL write, wStream* s);
 
