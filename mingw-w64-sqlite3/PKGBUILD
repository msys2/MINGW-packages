# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Renato Silva <br.renatosilva@gmail.com>
# Contributor: Brisingr Aerowing <ztgreve@live.com>

_realname=sqlite3
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
_amalgamationver=3300000
_docver=${_amalgamationver}
pkgver=3.30.0
pkgrel=1
pkgdesc="A C library that implements an SQL database engine (mingw-w64)"
arch=('any')
license=(PublicDomain)
url="https://www.sqlite.org"
provides=(${MINGW_PACKAGE_PREFIX}-sqlite=${pkgver}
          ${MINGW_PACKAGE_PREFIX}-sqlite-analyzer=${pkgver}
          ${MINGW_PACKAGE_PREFIX}-sqlite-docs=${pkgver})
conflicts=(${MINGW_PACKAGE_PREFIX}-sqlite-analyzer)
replaces=(${MINGW_PACKAGE_PREFIX}-sqlite-analyzer)
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-readline"
         "${MINGW_PACKAGE_PREFIX}-tcl")
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc")
source=(https://www.sqlite.org/2019/sqlite-src-${_amalgamationver}.zip
        https://www.sqlite.org/2019/sqlite-doc-${_docver}.zip
        LICENSE
        lemon.patch)
sha256sums=('cd9d9e0b7dd0c7359eea714b9e67e47ea17a7ac91574f572bd281807f0419134'
            'cb4deed80e94c7c0d7ee4a5c76d9d91e4deec48e8b158b473b27253fbfc891d6'
            '0b76663a90e034f3d7f2af5bfada4cedec5ebc275361899eccc5c18e6f01ff1f'
            '8f6e8e4fdcaea30801675deb296bdd1ba00eeccfeea71bca7f5325728b521a19')
options=('!strip' 'staticlibs' '!buildflags')

prepare() {
  cd sqlite-src-${_amalgamationver}
  patch -p0 -i "${srcdir}"/lemon.patch
}

build() {
  [[ -d ${srcdir}/build-${MINGW_CHOST} ]] && rm -rf ${srcdir}/build-${MINGW_CHOST}
  mkdir -p ${srcdir}/build-${MINGW_CHOST} && cd ${srcdir}/build-${MINGW_CHOST}

  export lt_cv_deplibs_check_method='pass_all'
  SQLITE_OPTIONS=" -DNDEBUG=1 \
            -DSQLITE_DQS=0 \
            -DSQLITE_THREADSAFE=0 \
            -DSQLITE_DEFAULT_MEMSTATUS=0 \
            -DSQLITE_DEFAULT_WAL_SYNCHRONOUS=1 \
            -DSQLITE_LIKE_DOESNT_MATCH_BLOBS \
            -DSQLITE_OMIT_DEPRECATED \
            -DSQLITE_OMIT_GET_TABLE \
            -DSQLITE_OMIT_PROGRESS_CALLBACK \
            -DSQLITE_OMIT_SHARED_CACHE \
            -DSQLITE_OMIT_LOAD_EXTENSION \
            -DSQLITE_MAX_EXPR_DEPTH=0 \
            -DSQLITE_USE_ALLOCA \
            -DSQLITE_ENABLE_LOCKING_STYLE=0 \
            -DSQLITE_DEFAULT_FILE_FORMAT=4 \
            -DSQLITE_ENABLE_COLUMN_METADATA=1 \
            -DSQLITE_ENABLE_EXPLAIN_COMMENTS \
            -DSQLITE_ENABLE_FTS4 \
            -DSQLITE_ENABLE_DBSTAT_VTAB \
            -DSQLITE_ENABLE_JSON1 \
            -DSQLITE_ENABLE_FTS5 \
            -DSQLITE_ENABLE_RTREE=1 \
            -DSQLITE_ENABLE_STMTVTAB \
            -DSQLITE_HAVE_ZLIB \
            -DSQLITE_INTROSPECTION_PRAGMAS \
            -DSQLITE_ENABLE_DBPAGE_VTAB \
            -DSQLITE_DISABLE_DIRSYNC=1 \
            -DSQLITE_WIN32_NO_ANSI \
            -DSQLITE_USE_MALLOC_H \
            -DSQLITE_USE_MSIZE"
  CFLAGS+=" -fexceptions -fno-strict-aliasing ${SQLITE_OPTIONS}"

  ../sqlite-src-${_amalgamationver}/configure \
    --prefix=${MINGW_PREFIX} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --build=${MINGW_CHOST} \
    --enable-threadsafe \
    --disable-editline \
    --enable-readline \
    --enable-json1 \
    --enable-fts5 \
    --enable-session \
    --with-readline-inc=${MINGW_PREFIX}/include \
    --with-tcl=${MINGW_PREFIX}/lib \
    TCLLIBDIR=${MINGW_PREFIX}/lib/sqlite${pkgver}

  make
  # build additional tools
  make sqlite3_analyzer.exe
}

package() {
  cd ${srcdir}/build-${MINGW_CHOST}
  make DESTDIR="${pkgdir}" install

  install -Dm755 .libs/sqlite3_analyzer.exe "${pkgdir}${MINGW_PREFIX}/bin/sqlite3_analyzer.exe"
  mv ${pkgdir}${MINGW_PREFIX}/lib/bin/*.* ${pkgdir}${MINGW_PREFIX}/lib/sqlite${pkgver}/
  rm -rf ${pkgdir}${MINGW_PREFIX}/lib/bin
  
  # Install docs
  cd ${srcdir}/sqlite-doc-${_docver}
  mkdir -p ${pkgdir}${MINGW_PREFIX}/share/doc/${_realname}
  cp -R *  ${pkgdir}${MINGW_PREFIX}/share/doc/${_realname}/

  install -Dm644 "${srcdir}/LICENSE" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE"
}
