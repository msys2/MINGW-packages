From 8aa5b026a777cf038fe3f14b9e23b9b638c2f7ae Mon Sep 17 00:00:00 2001
From: Christoph Reiter <reiter.christoph@gmail.com>
Date: Fri, 27 May 2022 10:45:34 +0200
Subject: [PATCH 2/2] libgomp: don't use GOMP_USE_ALIGNED_WORK_SHARES on
 Windows

In case GOMP_USE_ALIGNED_WORK_SHARES is defined, various places
use gomp_aligned_alloc() instead of normal allocations, but then don't
use gomp_aligned_free() in the end, but normal free.

On most platforms this doesn't make a difference, but on Windows
gomp_aligned_alloc() and free() can't be mixed and free() might crash.

Work around this for now by disabling GOMP_USE_ALIGNED_WORK_SHARES
in those cases and add a note on what needs to be done to fix it.
---
 libgomp/libgomp.h | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/libgomp/libgomp.h b/libgomp/libgomp.h
index b9e03919993..7b33465754c 100644
--- a/libgomp/libgomp.h
+++ b/libgomp/libgomp.h
@@ -95,7 +95,9 @@ enum memmodel
 #define GOMP_HAVE_EFFICIENT_ALIGNED_ALLOC 1
 #endif
 
-#if defined(GOMP_HAVE_EFFICIENT_ALIGNED_ALLOC) && !defined(__AMDGCN__)
+/* FIXME: Disabled for HAVE__ALIGNED_MALLOC because that needs matching gomp_aligned_free() calls
+   for every gomp_aligned_alloc() and that's still missing in various places */
+#if defined(GOMP_HAVE_EFFICIENT_ALIGNED_ALLOC) && !defined(__AMDGCN__) && !defined(HAVE__ALIGNED_MALLOC)
 #define GOMP_USE_ALIGNED_WORK_SHARES 1
 #endif
 
-- 
2.36.1

