vpxor will always reset the upper bits of the register, and because of that,
to zero a register it's generally nicer to do the most narrow encoding
to avoid AVX(512) CPU frequency penalties


--- gcc-7.2.0/gcc/config/i386/i386.c~	2017-08-01 22:06:11.000000000 +0000
+++ gcc-7.2.0/gcc/config/i386/i386.c	2017-12-31 04:23:58.085553553 +0000
@@ -11776,8 +11776,8 @@
 
 	case MODE_V16SF:
 	  return (TARGET_AVX512DQ
-		  ? "vxorps\t%g0, %g0, %g0"
-		  : "vpxord\t%g0, %g0, %g0");
+		  ? "vxorps\t%x0, %x0, %x0"
+		  : "vpxord\t%x0, %x0, %x0");
 	case MODE_V8SF:
 	  return "vxorps\t%x0, %x0, %x0";
 	case MODE_V4SF:
--- gcc-7.2.0/gcc/config/i386/i386.c~	2017-12-31 04:23:58.000000000 +0000
+++ gcc-7.2.0/gcc/config/i386/i386.c	2017-12-31 04:45:44.705822998 +0000
@@ -11755,7 +11755,7 @@
       switch (get_attr_mode (insn))
 	{
 	case MODE_XI:
-	  return "vpxord\t%g0, %g0, %g0";
+	  return "vpxord\t%x0, %x0, %x0";
 	case MODE_OI:
 	  return (TARGET_AVX512VL
 		  ? "vpxord\t%x0, %x0, %x0"
