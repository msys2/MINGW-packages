From f57b4af0f3d1146f88063e3b986dd818446807e7 Mon Sep 17 00:00:00 2001
From: jvdelisle <jvdelisle@138bc75d-0d04-0410-961f-82ee72b054a4>
Date: Tue, 19 Apr 2016 19:24:28 +0000
Subject: [PATCH 01/15] gcc-5-branch gfortran incorrect reading of values from
 file on Windows

2016-04-19 Jerry DeLisle <jvdelisle@gcc.gnu.org>

	PR libgfortran/70684
	* io/list_read (check_buffers): Add '\r' to check for end of line.
	factor.

	* gfortran.dg/list_read_14.f90: New test.

git-svn-id: svn+ssh://gcc.gnu.org/svn/gcc/trunk@235220 138bc75d-0d04-0410-961f-82ee72b054a4
---
 gcc/testsuite/gfortran.dg/list_read_14.f90 | 25 +++++++++++++++++++++++++
 libgfortran/io/list_read.c                 |  2 +-
 2 files changed, 26 insertions(+), 1 deletion(-)
 create mode 100644 gcc/testsuite/gfortran.dg/list_read_14.f90

diff --git a/gcc/testsuite/gfortran.dg/list_read_14.f90 b/gcc/testsuite/gfortran.dg/list_read_14.f90
new file mode 100644
index 0000000..15bcfad
--- /dev/null
+++ b/gcc/testsuite/gfortran.dg/list_read_14.f90
@@ -0,0 +1,25 @@
+! { dg-do run }
+! PR70684 incorrect reading of values from file on Windows
+program test
+implicit none
+integer,parameter :: isize=12
+integer,parameter :: funit=12
+integer :: i
+character(1), parameter :: cr=char(13)
+double precision, dimension(isize) :: a, res
+res= (/ 1.0000000000000000, 2.0000000000000000, 3.0000000000000000, &
+        4.0000000000000000, 5.0000000000000000, 6.0000000000000000, &
+        7.0000000000000000, 8.0000000000000000, 9.0000000000000000, &
+        10.000000000000000, 11.000000000000000, 12.000000000000000 /)
+do i=1,isize
+ a(i)=dble(i)
+enddo
+open(funit,status="scratch")
+write(funit,'(1x,6(f25.20,'',''),a)') (a(i),i=1,6), cr
+write(funit,'(1x,6(f25.20,'',''),a)') (a(i),i=7,12), cr
+rewind(funit)
+a=0d0
+read(funit,*) (a(i),i=1,isize)
+close(funit)
+if (any(a /= res)) call abort
+end
diff --git a/libgfortran/io/list_read.c b/libgfortran/io/list_read.c
index e02feca..6b42ecf 100644
--- a/libgfortran/io/list_read.c
+++ b/libgfortran/io/list_read.c
@@ -197,7 +197,7 @@ check_buffers (st_parameter_dt *dtp)
     }
 
 done:
-  dtp->u.p.at_eol = (c == '\n' || c == EOF);
+  dtp->u.p.at_eol = (c == '\n' || c == '\r' || c == EOF);
   return c;
 }
 
-- 
2.8.1

