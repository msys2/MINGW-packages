From f90a814ad83d7c6279eaf1fc59d3d373ba7af259 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=A0=D1=83=D1=81=D0=BB=D0=B0=D0=BD=20=D0=98=D0=B6=D0=B1?=
 =?UTF-8?q?=D1=83=D0=BB=D0=B0=D1=82=D0=BE=D0=B2?= <lrn1986@gmail.com>
Date: Tue, 14 Apr 2015 17:50:25 +0000
Subject: [PATCH 21/21] [W32] Change printf format atribute to gnu_printf,
 MinGW compatibility

"printf" means "gnu_printf" when compiling for non-Windows and means
"ms_printf" when compiling for Windows. The code, however, does seems to be
assuming gnu_printf (judging by the use of %z and %l).

Fix this by explicitly specifying gnu_printf format style.
To ensure that gnu-compatible printf implementation is used, compile
with -D__USE_MINGW_ANSI_STDIO=1, it will automagically turn all *printf()
invocations into __mingw_*printf(), which are gnu-compatible.

Only one function that won't be turned is _vsnprintf(). Ifdef its use and
call vsnprintf() instead when __USE_MINGW_ANSI_STDIO != 0.
---
 Source/WTF/wtf/Assertions.cpp | 11 ++++++++++-
 Source/WTF/wtf/Assertions.h   |  4 ++--
 2 files changed, 12 insertions(+), 3 deletions(-)

diff --git a/Source/WTF/wtf/Assertions.cpp b/Source/WTF/wtf/Assertions.cpp
index a370302..d846777 100644
--- a/Source/WTF/wtf/Assertions.cpp
+++ b/Source/WTF/wtf/Assertions.cpp
@@ -116,12 +116,21 @@ static void vprintf_stderr_common(const char* format, va_list args)
         size_t size = 1024;
 
         do {
+            int printed;
             char* buffer = (char*)malloc(size);
 
             if (buffer == NULL)
                 break;
 
-            if (_vsnprintf(buffer, size, format, args) != -1) {
+#if defined(__USE_MINGW_ANSI_STDIO) && __USE_MINGW_ANSI_STDIO != 0
+            /* vsnprintf is a macro for __mingw_vsnprintf */
+            printed = vsnprintf(buffer, size, format, args);
+#else
+            /* _vsnprintf is always _vsnprintf from MS CRT */
+            printed = _vsnprintf(buffer, size, format, args);
+#endif
+
+            if (printed != -1) {
 #if OS(WINCE)
                 // WinCE only supports wide chars
                 wchar_t* wideBuffer = (wchar_t*)malloc(size * sizeof(wchar_t));
diff --git a/Source/WTF/wtf/Assertions.h b/Source/WTF/wtf/Assertions.h
index 4d968b8..cb7c7e4 100644
--- a/Source/WTF/wtf/Assertions.h
+++ b/Source/WTF/wtf/Assertions.h
@@ -85,8 +85,8 @@
 /* WTF logging functions can process %@ in the format string to log a NSObject* but the printf format attribute
    emits a warning when %@ is used in the format string.  Until <rdar://problem/5195437> is resolved we can't include
    the attribute when being used from Objective-C code in case it decides to use %@. */
-#if COMPILER(GCC) && !defined(__OBJC__)
-#define WTF_ATTRIBUTE_PRINTF(formatStringArgument, extraArguments) __attribute__((__format__(printf, formatStringArgument, extraArguments)))
+#if COMPILER(GCC) && !defined(__OBJC__) && (!OS(WINDOWS) || (defined(__USE_MINGW_ANSI_STDIO) && __USE_MINGW_ANSI_STDIO != 0))
+#define WTF_ATTRIBUTE_PRINTF(formatStringArgument, extraArguments) __attribute__((__format__(gnu_printf, formatStringArgument, extraArguments)))
 #else
 #define WTF_ATTRIBUTE_PRINTF(formatStringArgument, extraArguments)
 #endif
-- 
1.8.5.3

