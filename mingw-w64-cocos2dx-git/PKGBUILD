# Maintainer: Martell Malone <martellmalone@gmail.com>

_realname=cocos2d-x
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}-git"
pkgver=r24442.b144eb3
pkgrel=1
pkgdesc="Open source game framework written in C++ (mingw-w64)."
arch=('any')
url="http://www.cocos2d-x.org/"
license=("MIT")
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc" "make" ${MINGW_PACKAGE_PREFIX}-cmake)
provides=("${MINGW_PACKAGE_PREFIX}-${_realname}")
conflicts=("${MINGW_PACKAGE_PREFIX}-${_realname}")
depends=("${MINGW_PACKAGE_PREFIX}-glfw"
         "${MINGW_PACKAGE_PREFIX}-glew"
         "${MINGW_PACKAGE_PREFIX}-box2d"
         "${MINGW_PACKAGE_PREFIX}-chipmunk"
         "${MINGW_PACKAGE_PREFIX}-libwebp"
         "${MINGW_PACKAGE_PREFIX}-libpng"
         "${MINGW_PACKAGE_PREFIX}-freetype"
         "${MINGW_PACKAGE_PREFIX}-libiconv"
         "${MINGW_PACKAGE_PREFIX}-tinyxml2"
         "${MINGW_PACKAGE_PREFIX}-curl"
         "${MINGW_PACKAGE_PREFIX}-libjpeg-turbo"
         "${MINGW_PACKAGE_PREFIX}-libtiff"
         "${MINGW_PACKAGE_PREFIX}-libwebsockets"
         "${MINGW_PACKAGE_PREFIX}-xxhash"
         "${MINGW_PACKAGE_PREFIX}-zlib")

options=('staticlibs' 'strip')

source=("${_realname}"::"git+git://github.com/cocos2d/cocos2d-x.git#branch=v3"
        "http://github.com/cocos2d/cocos2d-x-3rd-party-libs-bin/archive/v3-deps-14.tar.gz")

md5sums=('SKIP'
         'SKIP')

pkgver() {
  cd "$srcdir/$_realname"
  printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
  cd "$srcdir/$_realname"

  #git am "$srcdir/0001-mingw64-mirgrate-to-upstream-minizip.patch"
  cp -r $srcdir/cocos2d-x-3rd-party-libs-bin-3-deps-14/. $srcdir/$_realname/external

  #we need to change glfw to mingw-glfw3
  sed -i "s/glfw3.h/GLFW\/glfw3.h/g" $srcdir/$_realname/cocos/platform/desktop/CCGLViewImpl-desktop.h
  sed -i "s/glfw3native.h/GLFW\/glfw3native.h/g" $srcdir/$_realname/cocos/platform/desktop/CCGLViewImpl-desktop.h
  #sed -i "s/ft2build.h/freetype2\/ft2build.h/g" $srcdir/$_realname/cocos/2d/CCFontFreeType.h

  sed -i "s/unzip.h/minizip\/unzip.h/g" $srcdir/$_realname/cocos/platform/CCFileUtils.cpp
  sed -i "s/unzip.h/minizip\/unzip.h/g" $srcdir/$_realname/cocos/base/ZipUtils.cpp
  sed -i "s/unzip.h/minizip\/unzip.h/g" $srcdir/$_realname/extensions/assets-manager/AssetsManager.cpp

  #sed -i "s/decode.h/webp\/decode.h/g" $srcdir/$_realname/cocos/platform/CCImage.cpp

  #force depend on mingw-tinyxml2
  rm -rf $srcdir/$_realname/external/tinyxml2
}

build() {
  mkdir -p "${srcdir}/build-${CARCH}"
  cd "${srcdir}/build-${CARCH}"

  unset LDFLAGS CFLAGS CXXFLAGS

  cmake -G"MSYS Makefiles" \
    -DDEBUG_MODE=OFF \
    -DBUILD_LUA_LIBS=OFF \
    -DBUILD_LUA_TESTS=OFF \
    -DBUILD_CPP_TESTS=OFF \
    ../$_realname
  #  -DBUILD_EXTERN_LIBS=OFF \
  make -j4
}

package() {
  mkdir -p "${pkgdir}${MINGW_PREFIX}/include/cocos"
  mkdir -p "${pkgdir}${MINGW_PREFIX}/lib"
  cd "$srcdir/$_realname/cocos"
  cp -r ${srcdir}/build-${CARCH}/lib/. ${pkgdir}${MINGW_PREFIX}/lib

  #little helper because we don't want to pollute include with all the sub dirs ;)
  #echo '#include "cocos/cocos2d.h"' > ${pkgdir}${MINGW_PREFIX}/include/cocos2d.h
  #looks like we will pollute until the cocos devs change include structure #cocos/

  find -type f \( -name "*.h*" -o -name "*.inl" \) -exec install -D {} ${pkgdir}${MINGW_PREFIX}/include/{} \;
  
  #put win32 into include because we are on windows
  cd "${pkgdir}${MINGW_PREFIX}/include"
  mv platform/win32/* .
  sed -i "s/platform\/win32\///g" cocos2d.h

  # then get all the dirs but parent
  find platform -mindepth 1 -depth -type d -not -wholename platform/desktop -prune -exec rm -rf {} +

  # add extensions
  mkdir -p "${pkgdir}${MINGW_PREFIX}/include/extensions"
  cd "$srcdir/$_realname/extensions"
  find -type f \( -name "*.h*" -o -name "*.inl" \) -exec install -D {} ${pkgdir}${MINGW_PREFIX}/include/extensions/{} \;

  # install templates for cocos2d-console
  mkdir -p "${pkgdir}${MINGW_PREFIX}/share/cocos2d-x"
  cp -r ${srcdir}/$_realname/templates/ ${pkgdir}${MINGW_PREFIX}/share/cocos2d-x
}
