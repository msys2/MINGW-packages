diff --git a/src/cmd/dist/buildtool.go b/src/cmd/dist/buildtool.go
index a535316..b218c6a 100644
--- a/src/cmd/dist/buildtool.go
+++ b/src/cmd/dist/buildtool.go
@@ -119,7 +119,7 @@ func bootstrapBuildTools() {
 	// Run Go 1.4 to build binaries. Use -gcflags=-l to disable inlining to
 	// workaround bugs in Go 1.4's compiler. See discussion thread:
 	// https://groups.google.com/d/msg/golang-dev/Ss7mCKsvk8w/Gsq7VYI0AwAJ
-	run(workspace, ShowOutput|CheckExit, pathf("%s/bin/go", goroot_bootstrap), "install", "-gcflags=-l", "-v", "bootstrap/...")
+	run(workspace, ShowOutput|CheckExit, "go", "install", "-gcflags=-l", "-v", "bootstrap/...")
 
 	// Copy binaries into tool binary directory.
 	for _, name := range bootstrapDirs {
diff --git a/src/make.bat b/src/make.bat
index bf25b95..a4e3bf1 100644
--- a/src/make.bat
+++ b/src/make.bat
@@ -62,14 +62,13 @@ cd src
 echo ##### Building Go bootstrap tool.
 echo cmd/dist
 if not exist ..\bin\tool mkdir ..\bin\tool
-if "x%GOROOT_BOOTSTRAP%"=="x" set GOROOT_BOOTSTRAP=%HOMEDRIVE%%HOMEPATH%\Go1.4
-if not exist "%GOROOT_BOOTSTRAP%\bin\go.exe" goto bootstrapfail
+if not exist "%GOROOT_BOOTSTRAP%\..\..\bin\go.exe" goto bootstrapfail
 setlocal
 set GOROOT=%GOROOT_BOOTSTRAP%
 set GOOS=
 set GOARCH=
 set GOBIN=
-"%GOROOT_BOOTSTRAP%\bin\go" build -o cmd\dist\dist.exe .\cmd\dist
+go build -o cmd\dist\dist.exe .\cmd\dist
 endlocal
 if errorlevel 1 goto fail
 .\cmd\dist\dist env -w -p >env.bat
@@ -127,7 +126,7 @@ copy cmd\dist\dist.exe "%GOTOOLDIR%\"
 goto end
 
 :bootstrapfail
-echo ERROR: Cannot find %GOROOT_BOOTSTRAP%\bin\go.exe
+echo ERROR: Cannot find go.exe
 echo "Set GOROOT_BOOTSTRAP to a working Go tree >= Go 1.4."
 
 :fail
