_compiler=clang
_realname=flang
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
_version=16.0.0
_rc=""
_tag=llvmorg-${_version}${_rc}
pkgver=${_version}${_rc/-/}
pkgrel=2
pkgdesc="Fortran frontend for LLVM (mingw-w64)"
arch=('any')
mingw_arch=('mingw64' 'ucrt64' 'clang64' 'clangarm64')
url="https://flang.llvm.org/"
license=("custom:Apache 2.0 with LLVM Exception")
provides=($([[ ${MINGW_PACKAGE_PREFIX} != *-clang-* ]] || echo "${MINGW_PACKAGE_PREFIX}-fc"))
depends=("${MINGW_PACKAGE_PREFIX}-clang"
         "${MINGW_PACKAGE_PREFIX}-llvm"
         "${MINGW_PACKAGE_PREFIX}-mlir")
makedepends=("${MINGW_PACKAGE_PREFIX}-clang-tools-extra"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-lld"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-pkg-config"
             "gawk"
             $([[ "$_compiler" == "clang" ]] && echo \
               "${MINGW_PACKAGE_PREFIX}-compiler-rt" \
               "${MINGW_PACKAGE_PREFIX}-libc++")
             $([[ "$_compiler" == "gcc" ]] && echo \
               "${MINGW_PACKAGE_PREFIX}-gcc")
             )
_pkgfn=${_realname}-${pkgver}.src
_url=https://github.com/llvm/llvm-project/releases/download/${_tag}
source=("${_url}/${_pkgfn}.tar.xz"{,.sig}
        "${_url}/cmake-${pkgver}.src.tar.xz"{,.sig}
        "0001-cast-cxx11-narrowing.patch"
        "0002-cmake-22162.patch"
        "0003-do-not-link-to-llvm-dylib.patch"
        "0004-do-not-clock_gettime-on-mingw.patch"
        "0005-Fix-c_long_double-value-on-mingw-aarch64.patch")
sha256sums=('2734b4bb13080b874b0b83c203f611e805ed56a284ce080cf8bcdbfa2a064ff2'
            'SKIP'
            '04e62ab7d0168688d9102680adf8eabe7b04275f333fe20eef8ab5a3a8ea9fcc'
            'SKIP'
            'ba08064d737a2aa173125e88c3900dce804220fb0562596b03130177c2139312'
            '77fb0612217b6af7a122f586a9d0d334cd48bb201509bf72e8f8e6244616e895'
            '8d70b33d20d74801aeee82173944fed3b33ae185031537e1b50a640238f7a988'
            'b02c962bd71832d64542f8b3793e824ac99f5797a3821767eb40875c2f3e4f6f'
            'a1811227e2a26c2786b0c8577528580e679111f6c0889afea57d08333e2d5e4f')
validpgpkeys=('B6C8F98282B944E3B0D5C2530FC3042E345AD05D'  # Hans Wennborg, Google.
              '474E22316ABF4785A88C6E8EA2C794A986419D8A'  # Tom Stellard
              'D574BD5D1D0E98895E3BF90044F2485E45D59042') # Tobias Hieta

apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying ${_patch}"
    patch -Nbp1 -i "${srcdir}/${_patch}"
  done
}

prepare() {
  mv cmake-$pkgver.src cmake
  cd "${srcdir}/flang-${pkgver}.src"

  apply_patch_with_msg \
    "0001-cast-cxx11-narrowing.patch" \
    "0002-cmake-22162.patch" \
    "0003-do-not-link-to-llvm-dylib.patch" \
    "0004-do-not-clock_gettime-on-mingw.patch" \
    "0005-Fix-c_long_double-value-on-mingw-aarch64.patch"
}

build() {
  local -a extra_args
  if check_option "debug" "y"; then
    extra_args+=(-DCMAKE_BUILD_TYPE=Debug)
  else
    extra_args+=(-DCMAKE_BUILD_TYPE=Release)
  fi

  if [ "${_compiler}" == "clang" ]; then
    export CC='clang'
    export CXX='clang++'
    extra_args+=(-DLLVM_ENABLE_LLD=ON)
  fi

  [[ -d build-${MSYSTEM} ]] && rm -rf build-${MSYSTEM}
  mkdir build-${MSYSTEM} && cd build-${MSYSTEM}

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake.exe \
    -GNinja \
    -Wno-dev \
    -DCLANG_DIR=${MINGW_PREFIX}/lib/cmake/clang \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DCMAKE_SYSTEM_IGNORE_PATH=/usr/lib \
    -DLLVM_ENABLE_ASSERTIONS=OFF \
    -DLLVM_ENABLE_THREADS=ON \
    -DLLVM_HOST_TRIPLE="${CARCH}-w64-windows-gnu" \
    -DLLVM_LINK_LLVM_DYLIB=ON \
    -DFLANG_INCLUDE_TESTS=OFF \
    "${extra_args[@]}" \
    ../${_pkgfn}

  ${MINGW_PREFIX}/bin/cmake.exe --build .
}

check() {
  cd "${srcdir}"/build-${MSYSTEM}
  ${MINGW_PREFIX}/bin/cmake.exe -DFLANG_INCLUDE_TESTS=ON ../${_pkgfn}
  ${MINGW_PREFIX}/bin/cmake.exe --build .
  ${MINGW_PREFIX}/bin/cmake.exe --build . -- check-flang || true
}

package() {
  DESTDIR="${pkgdir}" cmake --install "${srcdir}/build-${MSYSTEM}"
  cp "${pkgdir}"${MINGW_PREFIX}/bin/flang-new "${pkgdir}"${MINGW_PREFIX}/bin/flang.exe
}
