From afd990ed84c308d5d4d06f461d6bf80b670ddf16 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Markus=20M=C3=BCtzel?= <markus.muetzel@gmx.de>
Date: Mon, 3 Mar 2025 10:32:22 +0100
Subject: [PATCH] [flang] Inherit target specific code for BIND(C) types on
 Windows (#114035)

Inherit target specific code for Windows i386 and x86_64 from the classes that
define that code for the respective processors on non-Windows operating
systems.
Only overload parts that differ.

That allows re-using the existing implementation for BIND(C) types on
non-Windows x86_64 also for Windows x86_64 targets.
---
 lib/Optimizer/CodeGen/Target.cpp | 12 ++++--------
 1 file changed, 4 insertions(+), 8 deletions(-)

diff --git a/lib/Optimizer/CodeGen/Target.cpp b/lib/Optimizer/CodeGen/Target.cpp
index 2a1eb0bc33f5..b03c1dd492ab 100644
--- a/lib/Optimizer/CodeGen/Target.cpp
+++ b/lib/Optimizer/CodeGen/Target.cpp
@@ -199,10 +199,8 @@ struct TargetI386 : public GenericTarget<TargetI386> {
 //===----------------------------------------------------------------------===//
 
 namespace {
-struct TargetI386Win : public GenericTarget<TargetI386Win> {
-  using GenericTarget::GenericTarget;
-
-  static constexpr int defaultWidth = 32;
+struct TargetI386Win : public TargetI386 {
+  using TargetI386::TargetI386;
 
   CodeGenSpecifics::Marshalling
   complexArgumentType(mlir::Location loc, mlir::Type eleTy) const override {
@@ -718,10 +716,8 @@ struct TargetX86_64 : public GenericTarget<TargetX86_64> {
 //===----------------------------------------------------------------------===//
 
 namespace {
-struct TargetX86_64Win : public GenericTarget<TargetX86_64Win> {
-  using GenericTarget::GenericTarget;
-
-  static constexpr int defaultWidth = 64;
+struct TargetX86_64Win : public TargetX86_64 {
+  using TargetX86_64::TargetX86_64;
 
   CodeGenSpecifics::Marshalling
   complexArgumentType(mlir::Location loc, mlir::Type eleTy) const override {
-- 
2.47.1.windows.2

