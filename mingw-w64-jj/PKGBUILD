# Maintainer: Johannes Schindelin <johannes.schindelin@gmx.de>

_realname=jj
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}"
         "${MINGW_PACKAGE_PREFIX}-${_realname}-docs")
pkgver=0.17.1
pkgrel=1
pkgdesc="Jujutsu (an experimental VCS) (mingw-w64)"
arch=('any')
mingw_arch=('mingw64' 'ucrt64' 'clang64' 'clangarm64')
url="https://github.com/martinvonz/jj"
msys2_documentation_url="https://martinvonz.github.io/jj/v${pkgver}"
msys2_references=(
  'aur: jujutsu'
  'purl: pkg:cargo/jj-cli'
)
license=('spdx:Apache-2.0')
makedepends=("${MINGW_PACKAGE_PREFIX}-rust"
             "${MINGW_PACKAGE_PREFIX}-pkgconf"
             "${MINGW_PACKAGE_PREFIX}-openssl")
depends=("${MINGW_PACKAGE_PREFIX}-libgit2"
         "${MINGW_PACKAGE_PREFIX}-libssh2"
         "${MINGW_PACKAGE_PREFIX}-zstd"
         "${MINGW_PACKAGE_PREFIX}-zlib")
source=("${url}/archive/v${pkgver}/${_realname}-${pkgver}.tar.gz"
        "0001-link-sys-libs-dynamically.patch"
        "0002-remove-unneded-features.patch")
sha256sums=('653e1190a82a39dae733487a11aa641ba62a36ae1e221c21844f822575961919'
            'be42ae14429b7c2b0f902ba946756a8ab3c5acddb5993613a9c67e0471377129'
            'ded353fbd4ba25c4b6ae551491abec2cf7d99896e24cede836c9a285073c4ee8')

_env() {
  export OPENSSL_NO_VENDOR=1
  export LIBGIT2_NO_VENDOR=1
  export PKG_CONFIG_ALL_DYNAMIC=1
  export ZSTD_SYS_USE_PKG_CONFIG=1
  export LIBSSH2_SYS_USE_PKG_CONFIG=1
}

prepare() {
  cd "${srcdir}/${_realname}-${pkgver}"

  mkdir -p .cargo
  cargo vendor --locked --versioned-dirs >> .cargo/config.toml

  patch -Np1 -i "${srcdir}/0001-link-sys-libs-dynamically.patch"
  patch -Np1 -i "${srcdir}/0002-remove-unneded-features.patch"
}

build() {
  cd "${srcdir}/${_realname}-${pkgver}"

  _env
  cargo build \
    -p jj-cli \
    --release \
    --frozen \
    --all-features
}

check() {
  cd "${srcdir}/${_realname}-${pkgver}"

  _env
  cargo test \
    -p jj-cli \
    --release \
    --frozen \
    --all-features
}

package_jj() {
  cd "${srcdir}/${_realname}-${pkgver}"

  _env
  cargo install \
    --frozen \
    --offline \
    --no-track \
    --path cli \
    --root "${pkgdir}${MINGW_PREFIX}" \
    --all-features

  install -Dm644 LICENSE "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE"

  local _complete="./target/release/jj util completion"
  $_complete --bash | install -Dm644 /dev/stdin "${pkgdir}${MINGW_PREFIX}/share/bash-completion/completions/jj"
  $_complete --fish | install -Dm644 /dev/stdin "${pkgdir}${MINGW_PREFIX}/share/fish/vendor_completions.d/jj.fish"
  $_complete --zsh | install -Dm644 /dev/stdin "${pkgdir}${MINGW_PREFIX}/share/zsh/site-functions/_jj"
}

package_jj-docs() {
  pkgdesc+=" (documentation)"
  depends=()

  cd "${srcdir}/${_realname}-${pkgver}"

  install -Dm644 README.md "${pkgdir}${MINGW_PREFIX}/share/doc/${_realname}/README.md"
  cp -r docs "${pkgdir}${MINGW_PREFIX}/share/doc/${_realname}"
}

# template start; name=mingw-w64-splitpkg-wrappers; version=1.0;
# vim: set ft=bash :

# generate wrappers
for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
# template end;
