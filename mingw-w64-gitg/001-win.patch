--- ./configure.ac.orig	2013-04-05 13:23:46.000000000 +0200
+++ ./configure.ac	2015-10-06 11:50:58.567044400 +0200
@@ -65,7 +65,7 @@
 	gobject-2.0 >= $GLIB_REQUIRED_VERSION
 	gmodule-2.0 >= $GLIB_REQUIRED_VERSION
 	gio-2.0 >= $GLIB_REQUIRED_VERSION
-	gio-unix-2.0 >= $GLIB_REQUIRED_VERSION
+	gio-windows-2.0 >= $GLIB_REQUIRED_VERSION
 ])
 
 PKG_CHECK_MODULES(PACKAGE, [
--- ./gitg/gitg-commit-view.c.orig	2013-04-05 13:14:51.000000000 +0200
+++ ./gitg/gitg-commit-view.c	2015-10-06 11:50:58.578069900 +0200
@@ -20,6 +20,7 @@
  * Boston, MA 02111-1307, USA.
  */
 
+#include <gtksourceview/gtksource.h>
 #include <gtksourceview/gtksourceview.h>
 #include <gtksourceview/gtksourcebuffer.h>
 #include <gtksourceview/gtksourcelanguagemanager.h>
--- ./gitg/gitg-revision-files-panel.c.orig	2013-04-05 13:14:51.000000000 +0200
+++ ./gitg/gitg-revision-files-panel.c	2015-10-06 11:50:58.600085200 +0200
@@ -670,7 +670,7 @@
 	                                              "gitg-export-XXXXXX",
 	                                              NULL);
 
-	if (!mkdtemp (files_view->priv->drag_dir))
+	if (!g_mkdtemp (files_view->priv->drag_dir))
 	{
 		g_warning ("Could not create temporary directory for export");
 		return;
--- ./libgitg/gitg-runner.c.orig	2013-04-05 13:14:51.000000000 +0200
+++ ./libgitg/gitg-runner.c	2015-10-06 11:55:25.251620900 +0200
@@ -21,14 +21,14 @@
  */
 
 #include <sys/types.h>
-#include <sys/wait.h>
 #include <unistd.h>
 #include <string.h>
 #include <errno.h>
 #include <stdlib.h>
 
-#include <gio/gunixoutputstream.h>
-#include <gio/gunixinputstream.h>
+#include <windows.h>
+#include <gio/gwin32outputstream.h>
+#include <gio/gwin32inputstream.h>
 
 #include "gitg-runner.h"
 #include "gitg-debug.h"
@@ -194,7 +194,9 @@
 	/* We remove our handler for the process here and install a dummy
 	   handler later so it will still be properly reaped */
 	g_source_remove (runner->priv->watch_id);
-	kill (runner->priv->pid, SIGTERM);
+
+	DWORD real_pid = GetProcessId (runner->priv->pid);
+	TerminateProcess (real_pid, 0);
 
 	g_child_watch_add (runner->priv->pid, dummy_cb, NULL);
 
@@ -388,14 +390,14 @@
 {
 	runner->priv->pid = 0;
 
-	if (WIFEXITED (status))
+	/*if (WIFEXITED (status))
 	{
 		gitg_io_set_exit_status (GITG_IO (runner), WEXITSTATUS (status));
 	}
 	else
 	{
 		gitg_io_set_exit_status (GITG_IO (runner), 0);
-	}
+		}*/
 
 	/* Note that we don't emit 'done' here because the streams might not
 	   yet be ready with all their writing/reading */
@@ -555,7 +557,7 @@
 		runner->priv->cancellable = g_cancellable_new ();
 
 		runner->priv->g_stdin =
-			G_OUTPUT_STREAM (g_unix_output_stream_new (stdinf,
+			G_OUTPUT_STREAM (g_win32_output_stream_new ((HANDLE)_get_osfhandle(stdinf),
 			                                           TRUE));
 
 		data = async_data_new (runner);
@@ -571,7 +573,7 @@
 		                              data);
 	}
 
-	output = G_INPUT_STREAM (g_unix_input_stream_new (g_stdoutf,
+	output = G_INPUT_STREAM (g_win32_input_stream_new ((HANDLE)_get_osfhandle(g_stdoutf),
 	                                                  TRUE));
 
 	if (gitg_io_get_auto_utf8 (GITG_IO (runner)))
--- ./libgitg/gitg-shell.c.orig	2013-04-05 13:14:51.000000000 +0200
+++ ./libgitg/gitg-shell.c	2015-10-06 11:50:58.619101700 +0200
@@ -28,13 +28,10 @@
 
 #include <string.h>
 #include <sys/types.h>
-#include <sys/wait.h>
 #include <errno.h>
 #include <stdlib.h>
 
 #include <gio/gio.h>
-#include <gio/gunixoutputstream.h>
-#include <gio/gunixinputstream.h>
 
 #include "gitg-line-parser.h"
 
--- ./libgitg/Makefile.am.orig	2013-04-05 13:14:51.000000000 +0200
+++ ./libgitg/Makefile.am	2015-10-06 11:50:58.630120300 +0200
@@ -6,7 +6,6 @@
 	$(GITG_CFLAGS)							\
 	$(WARN_CFLAGS)							\
 	$(DISABLE_DEPRECATED_CFLAGS)					\
-	-DDATADIR=\""$(datadir)"\"					\
 	-DLIBDIR=\""$(libdir)"\"					\
 	-DGITG_LOCALEDIR=\""$(datadir)/locale"\"
 
--- ./tools/gitg-shell.c.orig	2013-04-05 13:14:51.000000000 +0200
+++ ./tools/gitg-shell.c	2015-10-06 11:50:58.639133000 +0200
@@ -2,8 +2,8 @@
 #include <string.h>
 #include <stdlib.h>
 #include <libgitg/gitg-shell.h>
-#include <gio/gunixinputstream.h>
-#include <gio/gunixoutputstream.h>
+#include <gio/gwin32inputstream.h>
+#include <gio/gwin32outputstream.h>
 #include <libgitg/gitg-debug.h>
 
 static gchar *repository_path = NULL;
@@ -180,8 +180,8 @@
 	loop = g_main_loop_new (NULL, FALSE);
 	shell = gitg_shell_new (1000);
 
-	input = g_unix_input_stream_new (STDIN_FILENO, TRUE);
-	output = g_unix_output_stream_new (STDOUT_FILENO, TRUE);
+	input = g_win32_input_stream_new (STDIN_FILENO, TRUE);
+	output = g_win32_output_stream_new (STDOUT_FILENO, TRUE);
 
 	gitg_io_set_input (GITG_IO (shell), input);
 	gitg_io_set_output (GITG_IO (shell), output);
