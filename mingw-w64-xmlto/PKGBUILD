# Maintainer: Christoph Reiter <reiter.christoph@gmail.com>

_realname=xmlto
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=0.0.28.r92.6fa6a0e
pkgrel=1
pkgdesc="Convert xml to many other formats (mingw-w64)"
arch=('any')
mingw_arch=('mingw64' 'ucrt64' 'clang64' 'clangarm64')
url='https://pagure.io/xmlto/'
license=('GPL')
depends=(
  "${MINGW_PACKAGE_PREFIX}-libxslt"
  "${MINGW_PACKAGE_PREFIX}-libpaper"
  "${MINGW_PACKAGE_PREFIX}-libxml2"
)
makedepends=(
  "${MINGW_PACKAGE_PREFIX}-autotools"
  "${MINGW_PACKAGE_PREFIX}-cc"
  "${MINGW_PACKAGE_PREFIX}-docbook-xsl"
  "flex"
  "git"
)
_commit="6fa6a0e07644f20abf2596f78a60112713e11cbe"
source=("${_realname}"::"git+https://pagure.io/xmlto.git#commit=${_commit}"
        0001-xmlto-convert-output-path-to-unix-path-on-cygwin-msy.patch
        0002-xmlto-use-windows-paths-in-xml.patch
        0003-xmlif-avoid-macro-conflict-with-win-headers.patch)
sha256sums=('SKIP'
            '981e200d9470852048df58fa7afbd02264b75d81b8e572c1aba3dc1487ad0f9d'
            '3ceb44f4f60db6fa79f5861034268ccabc8ff65128ae290af75840100922c62c'
            '48235c8e3a3bc1acbcfd19478d34bd89b6c5b5ae6a046fbe0e3f82778d828ff4')

pkgver() {
  cd "${_realname}"
  printf "0.0.28.r%s.%s" "$(git rev-list --count "${_commit}")" "$(git rev-parse --short "${_commit}")"
}

prepare() {
  cd "${_realname}"
  patch -p1 -i ${srcdir}/0001-xmlto-convert-output-path-to-unix-path-on-cygwin-msy.patch
  # No pathconv when manually writing paths into files, so manually convert to Windows paths
  patch -p1 -i ${srcdir}/0002-xmlto-use-windows-paths-in-xml.patch
  # It defining "attrib" before including windows headers breaks things, include early
  patch -p1 -i ${srcdir}/0003-xmlif-avoid-macro-conflict-with-win-headers.patch

  # force a re-gen
  rm xmlif/xmlif.c

  autoreconf -vfi
}

build() {
  cd "${srcdir}/${_realname}"
  mkdir -p "${srcdir}/build-${MSYSTEM}" && cd "${srcdir}/build-${MSYSTEM}"

  ../"${_realname}"/configure \
    --prefix="${MINGW_PREFIX}" \
    --build="${MINGW_CHOST}" \
    --host="${MINGW_CHOST}" \
    --target="${MINGW_CHOST}"

  make
}

package() {
  cd "${srcdir}/build-${MSYSTEM}"

  make install DESTDIR="${pkgdir}"

  install -Dm644 "${srcdir}/${_realname}/COPYING" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING"
}
