diff file generated from Sutou Kouhei PR -> https://github.com/luarocks/luarocks/pull/1230/files
diff -Naur luarocks-3.11.1.orig/spec/util/test_env.lua luarocks-3.11.1/spec/util/test_env.lua
--- luarocks-3.11.1.orig/spec/util/test_env.lua	2025-01-02 19:39:04.839185833 -0300
+++ luarocks-3.11.1/spec/util/test_env.lua	2025-01-03 16:50:56.709365565 -0300
@@ -359,6 +359,8 @@
          test_env.MINGW = true
       elseif argument == "vs" then
          test_env.MINGW = false
+      elseif argument == "msys2_mingw_w64" then
+         test_env.MSYS2_MINGW_W64 = true
       elseif argument:find("^lua_dir=") then
          test_env.LUA_DIR = argument:match("^lua_dir=(.*)$")
       elseif argument:find("^lua=") then
@@ -954,10 +956,14 @@
    if test_env.TEST_TARGET_OS == "windows" then
       if test_env.MINGW then
          table.insert(lines, [[SYSTEM = "mingw",]])
+      elseif test_env.MSYS2_MINGW_W64 then
+         table.insert(lines, [[SYSTEM = "msys2_mingw_w64",]])
       else
          table.insert(lines, [[SYSTEM = "windows",]])
       end
-      table.insert(lines, ("WIN_TOOLS = %q,"):format(testing_paths.win_tools))
+      if not test_env.MSYS2_MINGW_W64 then
+        table.insert(lines, ("WIN_TOOLS = %q,"):format(testing_paths.win_tools))
+      end
    end
 
    table.insert(lines, "}")
diff -Naur luarocks-3.11.1.orig/src/luarocks/core/cfg.lua luarocks-3.11.1/src/luarocks/core/cfg.lua
--- luarocks-3.11.1.orig/src/luarocks/core/cfg.lua	2025-01-02 19:39:04.835185776 -0300
+++ luarocks-3.11.1/src/luarocks/core/cfg.lua	2025-01-02 19:39:04.828185677 -0300
@@ -451,10 +451,11 @@
          defaults.makefile = "Makefile"
          defaults.cmake_generator = "MSYS Makefiles"
          defaults.local_cache = dir.path(home, ".cache", "luarocks")
+         defaults.variables.PWD = "cd"
          defaults.variables.MAKE = os.getenv("MAKE") or "make"
-         defaults.variables.CC = os.getenv("CC") or "gcc"
+         defaults.variables.CC = os.getenv("CC") or "cc"
          defaults.variables.RC = os.getenv("WINDRES") or "windres"
-         defaults.variables.LD = os.getenv("CC") or "gcc"
+         defaults.variables.LD = os.getenv("CC") or "cc"
          defaults.variables.MT = os.getenv("MT") or nil
          defaults.variables.AR = os.getenv("AR") or "ar"
          defaults.variables.RANLIB = os.getenv("RANLIB") or "ranlib"
@@ -807,7 +808,7 @@
 
    local defaults = make_defaults(cfg.lua_version, processor, platforms, cfg.home)
 
-   if platforms.windows and hardcoded.WIN_TOOLS then
+   if platforms.windows and not platforms.msys2_mingw_w64 and hardcoded.WIN_TOOLS then
       local tools = { "SEVENZ", "CP", "FIND", "LS", "MD5SUM", "WGET", }
       for _, tool in ipairs(tools) do
          defaults.variables[tool] = '"' .. dir.path(hardcoded.WIN_TOOLS, defaults.variables[tool] .. '.exe') .. '"'
@@ -816,6 +817,10 @@
       defaults.fs_use_modules = true
    end
 
+   if platforms.windows and (platforms.msys2_mingw_64 or (platforms.msys and platforms.mingw)) then
+      defaults.fs_use_modules = false
+   end
+
    -- if only cfg.variables.LUA is given in config files,
    -- derive LUA_BINDIR and LUA_DIR from them.
    if cfg.variables.LUA and not cfg.variables.LUA_BINDIR then
diff -Naur luarocks-3.11.1.orig/src/luarocks/fs/msys2_mingw_w64.lua luarocks-3.11.1/src/luarocks/fs/msys2_mingw_w64.lua
--- luarocks-3.11.1.orig/src/luarocks/fs/msys2_mingw_w64.lua	1969-12-31 21:00:00.000000000 -0300
+++ luarocks-3.11.1/src/luarocks/fs/msys2_mingw_w64.lua	2025-01-02 19:39:04.828185677 -0300
@@ -0,0 +1,12 @@
+--- MSYS2 + Mingw-w64 implementation of filesystem and platform abstractions.
+local msys2_mingw_w64 = {}
+
+local unix_tools = require("luarocks.fs.unix.tools")
+
+msys2_mingw_w64.zip = unix_tools.zip
+msys2_mingw_w64.unzip = unix_tools.unzip
+msys2_mingw_w64.gunzip = unix_tools.gunzip
+msys2_mingw_w64.bunzip2 = unix_tools.bunzip2
+msys2_mingw_w64.copy_contents = unix_tools.copy_contents
+
+return msys2_mingw_w64
\ No newline at end of file
diff -Naur luarocks-3.11.1.orig/src/luarocks/fs/unix/tools.lua luarocks-3.11.1/src/luarocks/fs/unix/tools.lua
--- luarocks-3.11.1.orig/src/luarocks/fs/unix/tools.lua	2025-01-02 19:39:04.834185762 -0300
+++ luarocks-3.11.1/src/luarocks/fs/unix/tools.lua	2025-01-02 19:39:04.828185677 -0300
@@ -155,13 +155,13 @@
    end
 end
 
-local function uncompress(default_ext, program, infile, outfile)
+local function uncompress(default_ext, program, uncompress_flag, infile, outfile)
    assert(type(infile) == "string")
    assert(outfile == nil or type(outfile) == "string")
    if not outfile then
       outfile = infile:gsub("%."..default_ext.."$", "")
    end
-   if fs.execute(fs.Q(program).." -c "..fs.Q(infile).." > "..fs.Q(outfile)) then
+   if fs.execute(fs.Q(program).." "..fs.Q(uncompress_flag).." -c "..fs.Q(infile).." > "..fs.Q(outfile)) then
       return true
    else
       return nil, "failed extracting " .. infile
@@ -174,7 +174,7 @@
 -- If not given, name is derived from input file.
 -- @return boolean: true on success; nil and error message on failure.
 function tools.gunzip(infile, outfile)
-   return uncompress("gz", "gunzip", infile, outfile)
+   return uncompress("gz", "gzip", "-d", infile, outfile)
 end
 
 --- Uncompresses a .bz2 file.
@@ -183,7 +183,7 @@
 -- If not given, name is derived from input file.
 -- @return boolean: true on success; nil and error message on failure.
 function tools.bunzip2(infile, outfile)
-   return uncompress("bz2", "bunzip2", infile, outfile)
+   return uncompress("bz2", "bzip2", "-d", infile, outfile)
 end
 
 do
