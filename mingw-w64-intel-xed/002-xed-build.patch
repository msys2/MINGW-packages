--- xed-2023.10.11/xed_mbuild.py.orig	2023-12-19 14:06:30.571422100 +0300
+++ xed-2023.10.11/xed_mbuild.py	2023-12-19 14:07:28.462727800 +0300
@@ -2210,6 +2210,7 @@
                           'lib%(base_lib)s.so',
                           '%(base_lib)s.lib',
                           '%(base_lib)s.dll',
+                          'lib%(base_lib)s.dll',
                           'lib%(base_lib)s.dylib' ] 
     libnames = []
     for base_lib in ['xed', 'xed-ild']:
@@ -2278,9 +2278,6 @@
     """Build install in the prefix_dir. Use prefix_lib_dir as library name
        since some systems use lib, lib32 or lib64. non-windows only.
     """
-    if env.on_windows():
-        return
-
     if not env['prefix_dir']:
         return
 
@@ -2291,6 +2288,8 @@
 
     def _set_perm(fn):
         "-rwx-r-xr-x"
+        if env.on_windows():
+            return
         os.chmod(fn, stat.S_IRUSR|stat.S_IRGRP|stat.S_IROTH|
                      stat.S_IXUSR|stat.S_IXGRP|stat.S_IXOTH|
                      stat.S_IWUSR)
--- xed-2023.10.11/xed_build_common.py.orig	2023-12-19 19:16:58.153704500 +0300
+++ xed-2023.10.11/xed_build_common.py	2023-12-19 19:17:18.663203700 +0300
@@ -471,8 +471,8 @@
        base we return base.lib and base.dll on windows.  base.so and
        base.so on non-windows.  Users link against the link lib."""
     
-    dll = env.shared_lib_name(base)
-    static_lib = env.static_lib_name(base)
+    dll = env.shared_lib_name("lib" + base)
+    static_lib = env.static_lib_name("lib" + base)
     
     if env['shared']:
         if env.on_windows():
@@ -488,11 +488,11 @@
     return mbuild.join(env['xed_lib_dir'],s)
 
 def get_libxed_names(env):
-    libxed_lib, libxed_dll = make_lib_dll(env,'xed')
+    libxed_lib, libxed_dll = make_lib_dll(env,'libxed')
     env['link_libxed'] = _xed_lib_dir_join(env,libxed_lib)
     env['shd_libxed']  = _xed_lib_dir_join(env,libxed_dll)
         
-    lib,dll = make_lib_dll(env,'xed-ild')
+    lib,dll = make_lib_dll(env,'libxed-ild')
     env['link_libild'] = _xed_lib_dir_join(env,lib)
     env['shd_libild']  = _xed_lib_dir_join(env,dll)
     
