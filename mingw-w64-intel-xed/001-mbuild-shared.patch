--- mbuild/mbuild/build_env.py.orig	2023-12-19 13:46:51.529981000 +0300
+++ mbuild/mbuild/build_env.py	2023-12-19 13:53:37.962101800 +0300
@@ -195,14 +195,14 @@
     if env.on_mac():
         env['DLLOPT'] = '-shared' # '-dynamiclib'
     else:
-        env['DLLOPT'] = '-shared -Wl,-soname,%(SOLIBNAME)s'
+        env['DLLOPT'] = '-shared -Wl,--out-implib,%(SOLIBNAME)s.a'
 
     env['OBJEXT'] = '.o'
     if env.on_windows():
         env['EXEEXT'] = '.exe'
         env['DLLEXT'] = '.dll'
-        env['LIBEXT'] = '.lib'
-        env['PDBEXT'] = '.pdb'
+        env['LIBEXT'] = '.a'
+        env['PDBEXT'] = ''
     elif env.on_mac():
         env['EXEEXT'] = ''
         env['DLLEXT'] = '.dylib'
--- mbuild/mbuild/env.py.orig	2023-12-19 13:51:26.706160600 +0300
+++ mbuild/mbuild/env.py	2023-12-19 13:51:51.489195500 +0300
@@ -1171,6 +1171,8 @@
            @return:  True iff on cygwin"""
         if len(self.env['system']) >= 6 and self.env['system'][0:6] == 'CYGWIN':
             return True
+        if len(self.env['system']) >= 4 and self.env['system'][0:6] == 'MSYS':
+            return True
         return False
 
     def windows_native(self):
--- mbuild/mbuild/base.py.orig	2023-12-19 14:23:22.011100800 +0300
+++ mbuild/mbuild/base.py	2023-12-19 14:23:39.802749300 +0300
@@ -187,6 +187,9 @@
 if _operating_system_name.find('CYGWIN') != -1:
    _on_cygwin = True
    _on_windows = True
+elif _operating_system_name.find('MSYS') != -1:
+   _on_cygwin = True
+   _on_windows = True
 elif  _operating_system_name == 'Microsoft' or  _operating_system_name == 'Windows':
    _on_native_windows = True
    _on_windows = True
