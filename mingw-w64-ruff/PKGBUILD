# Maintainer: Christoph Reiter <reiter.christoph@gmail.com>

_realname=ruff
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}"
         "${MINGW_PACKAGE_PREFIX}-python-${_realname}")
pkgver=0.3.1
pkgrel=1
pkgdesc="An extremely fast Python linter, written in Rust (mingw-w64)"
arch=('any')
mingw_arch=('mingw64' 'ucrt64' 'clang64' 'clangarm64')
url='https://github.com/astral-sh/ruff'
license=('spdx:MIT')
msys2_references=(
  'archlinux: ruff'
)
makedepends=(
  "${MINGW_PACKAGE_PREFIX}-rust"
  "${MINGW_PACKAGE_PREFIX}-python-maturin"
  "${MINGW_PACKAGE_PREFIX}-python-installer"
)
options=('!strip')
source=("$url/archive/v${pkgver}/${_realname}-${pkgver}.tar.gz"
        "001-fix-building-with-gcc.patch")
sha256sums=('0102df567ac89bc4e1517ef922de363e1604e60309e4d62c9b2b977847ca1ea6'
            'a266b1594ab3280525d7bce5adb91026c1e183696a4586255d4a0fcd008d41c2')
noextract=("${_realname}-${pkgver}.tar.gz")

prepare() {
  tar -xzf "${_realname}-${pkgver}.tar.gz" || true
  cd "${srcdir}/${_realname}-${pkgver}"

  if [[ ${MINGW_PACKAGE_PREFIX} != *clang-* ]]; then
    patch -p1 -i "${srcdir}"/001-fix-building-with-gcc.patch
  fi

  # otherwise cargo installs msvc toolchain from rustup
  rm -f rust-toolchain.toml

  cargo fetch --locked
}

build() {
  cd "${srcdir}/${_realname}-${pkgver}"

  export WINAPI_NO_BUNDLED_LIBRARIES=1
  maturin build --release --strip --frozen --all-features
}

check() {
  cd "${srcdir}/${_realname}-${pkgver}"

  export WINAPI_NO_BUNDLED_LIBRARIES=1
  cargo test --release --frozen --all-features
}

package_ruff() {
  cd "${srcdir}/${_realname}-${pkgver}"

  install -Dm755 ./target/release/ruff "${pkgdir}${MINGW_PREFIX}/bin/ruff"
  install -Dm644 LICENSE -t "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/"

  local _complete="./target/release/ruff --generate-shell-completion"
  $_complete bash | install -Dm644 /dev/stdin "${pkgdir}${MINGW_PREFIX}/share/bash-completion/completions/ruff.bash"
  $_complete fish | install -Dm644 /dev/stdin "${pkgdir}${MINGW_PREFIX}/share/fish/vendor_completions.d/ruff.fish"
  $_complete zsh  | install -Dm644 /dev/stdin "${pkgdir}${MINGW_PREFIX}/share/zsh/site-functions/_ruff"
}

package_python-ruff() {
  cd "${srcdir}/${_realname}-${pkgver}"

  pkgdesc+=" (Python module)"
  depends=("${MINGW_PACKAGE_PREFIX}-python" "${MINGW_PACKAGE_PREFIX}-ruff")

  MSYS2_ARG_CONV_EXCL="--prefix=" \
    ${MINGW_PREFIX}/bin/python -m installer --prefix=${MINGW_PREFIX} \
    --destdir="${pkgdir}" target/wheels/*.whl

  # split ruff binary
  rm -rf "${pkgdir}${MINGW_PREFIX}/bin/"
}

# template start; name=mingw-w64-splitpkg-wrappers; version=1.0;
# vim: set ft=bash :

# generate wrappers
for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
# template end;
