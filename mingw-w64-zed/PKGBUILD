# Maintainer: Maksim Bondarenkov <maksapple2306@gmail.com>

_realname=zed
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=0.137.3
pkgrel=1
pkgdesc="A high-performance, multiplayer code editor (mingw-w64)"
arch=('any')
mingw_arch=('ucrt64')
url='https://github.com/zed-industries/zed'
license=('spdx:AGPL-3.0-or-later AND Apache-2.0 AND GPL-3.0-or-later')
msys2_references=(
  'anitya'
  'aur: zed-editor'
  'gentoo'
)
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-libgit2"
         "${MINGW_PACKAGE_PREFIX}-curl"
         "${MINGW_PACKAGE_PREFIX}-zstd")
makedepends=("${MINGW_PACKAGE_PREFIX}-rust"
             "${MINGW_PACKAGE_PREFIX}-lld"
             "${MINGW_PACKAGE_PREFIX}-pkgconf"
             "${MINGW_PACKAGE_PREFIX}-fontconfig"
             "${MINGW_PACKAGE_PREFIX}-openssl"
             "${MINGW_PACKAGE_PREFIX}-sqlite3")
source=("https://github.com/zed-industries/zed/archive/v${pkgver}/${_realname}-${pkgver}.tar.gz"
        "zstd-sys.tar.gz::https://crates.io/api/v1/crates/zstd-sys/2.0.10+zstd.1.5.6/download"
        "curl-sys.tar.gz::https://crates.io/api/v1/crates/curl-sys/0.4.67+curl-8.3.0/download"
        "zed-download-pc-windows-gnu-assets.patch"
        "zed-use-vendored-deps.patch"
        "zed-use-dynamic-curl.patch"
        "curl-sys-use-pkgconfig.patch"
        "zstd-sys-remove-statik.patch")
sha256sums=('d80b144ae7c3b7b2d0266256cd9d6994cbaad46e2d9800d88c622de67034fc7a'
            'c253a4914af5bafc8fa8c86ee400827e83cf6ec01195ec1f1ed8441bf00d65aa'
            '3cc35d066510b197a0f72de863736641539957628c8a42e70e27c66849e77c34'
            '94ca0bc7ae6f73bc4cdb9dd02af2946541b2bee7c71f279a4eeef1f987e76fe4'
            'e1f0d6f1265a2a13db2cd5cb7e0a3e877de470edd06d06c6a7c92eddefdfb657'
            '9a6326a5389e07ff6cfe6eccaa7310d5fc3d88e70b11114a8d5db23a6d33c62a'
            '0e008fc69c67a5e79b05815625ffcef2d008e6b5a4bb0350c90772c49d2ca748'
            '48f4900ceb02d3aaf9a1020f33d56629156e96759f456c0e7ca18bfcf910767b')
noextract=("${_realname}-${pkgver}.tar.gz")

prepare() {
  tar -xzf "${_realname}-${pkgver}.tar.gz" || true
  cd "${_realname}-${pkgver}"

  rm -f rust-toolchain.toml

  # download assets for x86_64-pc-windows-gnu target for some extensions
  patch -Np1 -i "${srcdir}/zed-download-pc-windows-gnu-assets.patch"
  # vendor some *-sys crates to make them linked dynamically
  patch -Np1 -i "${srcdir}/zed-use-vendored-deps.patch"
  # link some system deps dynamically
  patch -Np1 -i "${srcdir}/zed-use-dynamic-curl.patch"
  patch -d "../curl-sys-0.4.67+curl-8.3.0" -i "${srcdir}/curl-sys-use-pkgconfig.patch"
  patch -d "../zstd-sys-2.0.10+zstd.1.5.6" -i "${srcdir}/zstd-sys-remove-statik.patch"

  cargo update -p curl-sys -p zstd-sys

  cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
}

_env() {
  export OPENSSL_NO_VENDOR=1
  export LIBGIT2_NO_VENDOR=1
  export PKG_CONFIG_ALL_DYNAMIC=1
  export ZSTD_SYS_USE_PKG_CONFIG=1
  export WINAPI_NO_BUNDLED_LIBRARIES=1
  export LIBSQLITE3_SYS_USE_PKG_CONFIG=1
  if [[ $MINGW_PACKAGE_PREFIX != *-clang-* ]]; then
    export RUSTFLAGS="-Clink-arg=-fuse-ld=lld"
  fi
}

build() {
  cd "${_realname}-${pkgver}"

  _env
  # remove a werror from gcc 14
  if [[ $MINGW_PACKAGE_PREFIX != *-clang-* ]]; then
    export CFLAGS+=" -Wno-incompatible-pointer-types"
    export CXXFLAGS+=" -Wno-incompatible-pointer-types"
  fi

  cargo build --release --frozen -p zed
}

check() {
  cd "${_realname}-${pkgver}-pre"

  _env
  cargo test --release --frozen -p zed
}

package() {
  install -Dm755 "${_realname}-${pkgver}/target/release/Zed" "${pkgdir}${MINGW_PREFIX}/bin/zed"
  install -Dm644 "${_realname}-${pkgver}"/LICENSE-{AGPL,APACHE,GPL} -t "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/"
}
