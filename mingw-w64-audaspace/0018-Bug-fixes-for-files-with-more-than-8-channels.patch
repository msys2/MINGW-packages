From 20a7a286046074a89a1a99f366262e080819a1ec Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?J=C3=B6rg=20M=C3=BCller?= <nexyon@gmail.com>
Date: Sun, 17 Nov 2019 08:38:40 +0100
Subject: [PATCH 18/35] Bug fixes for files with more than 8 channels.

---
 demos/audaplay.cpp                 | 10 ++++++++++
 plugins/openal/OpenALDevice.cpp    |  3 ++-
 src/respec/ChannelMapperReader.cpp | 19 +++++++++++--------
 3 files changed, 23 insertions(+), 9 deletions(-)

diff --git a/demos/audaplay.cpp b/demos/audaplay.cpp
index eab44b8..a52cc57 100644
--- a/demos/audaplay.cpp
+++ b/demos/audaplay.cpp
@@ -73,6 +73,16 @@ int main(int argc, char* argv[])
 
 	device->lock();
 	auto handle = device->play(reader);
+
+	if(!handle)
+	{
+		device->unlock();
+
+		std::cout << "Device could not play the file." << std::endl;
+
+		return 1;
+	}
+
 	handle->setStopCallback(release, &condition);
 	device->unlock();
 
diff --git a/plugins/openal/OpenALDevice.cpp b/plugins/openal/OpenALDevice.cpp
index 6ad87c1..f41e9c6 100644
--- a/plugins/openal/OpenALDevice.cpp
+++ b/plugins/openal/OpenALDevice.cpp
@@ -1167,7 +1167,8 @@ OpenALDevice::OpenALDevice(DeviceSpecs specs, int buffersize, std::string name)
 
 	if((!m_useMC && specs.channels > CHANNELS_STEREO) ||
 			specs.channels == CHANNELS_STEREO_LFE ||
-			specs.channels == CHANNELS_SURROUND5)
+			specs.channels == CHANNELS_SURROUND5 ||
+			specs.channels > CHANNELS_SURROUND71)
 		specs.channels = CHANNELS_STEREO;
 
 	alGetError();
diff --git a/src/respec/ChannelMapperReader.cpp b/src/respec/ChannelMapperReader.cpp
index 1af5e70..e0063d5 100644
--- a/src/respec/ChannelMapperReader.cpp
+++ b/src/respec/ChannelMapperReader.cpp
@@ -97,12 +97,15 @@ void ChannelMapperReader::calculateMapping()
 	for(int i = 0; i < m_source_channels * m_target_channels; i++)
 		m_mapping[i] = 0;
 
-	const Channel* source_channels = CHANNEL_MAPS[m_source_channels - 1];
-	const Channel* target_channels = CHANNEL_MAPS[m_target_channels - 1];
+	const Channels source_channel_count = std::min(m_source_channels, CHANNELS_SURROUND71);
+	const Channels target_channel_count = std::min(m_target_channels, CHANNELS_SURROUND71);
+
+	const Channel* source_channels = CHANNEL_MAPS[source_channel_count - 1];
+	const Channel* target_channels = CHANNEL_MAPS[target_channel_count - 1];
 
 	int lfe = -1;
 
-	for(int i = 0; i < m_target_channels; i++)
+	for(int i = 0; i < target_channel_count; i++)
 	{
 		if(target_channels[i] == CHANNEL_LFE)
 		{
@@ -111,16 +114,16 @@ void ChannelMapperReader::calculateMapping()
 		}
 	}
 
-	const float* source_angles = CHANNEL_ANGLES[m_source_channels - 1];
-	const float* target_angles = CHANNEL_ANGLES[m_target_channels - 1];
+	const float* source_angles = CHANNEL_ANGLES[source_channel_count - 1];
+	const float* target_angles = CHANNEL_ANGLES[target_channel_count - 1];
 
-	if(m_source_channels == CHANNELS_MONO)
+	if(source_channel_count == CHANNELS_MONO)
 		source_angles = &m_mono_angle;
 
 	int channel_left, channel_right;
 	float angle_left, angle_right, angle;
 
-	for(int i = 0; i < m_source_channels; i++)
+	for(int i = 0; i < source_channel_count; i++)
 	{
 		if(source_channels[i] == CHANNEL_LFE)
 		{
@@ -134,7 +137,7 @@ void ChannelMapperReader::calculateMapping()
 		angle_left = -2 * M_PI;
 		angle_right = 2 * M_PI;
 
-		for(int j = 0; j < m_target_channels; j++)
+		for(int j = 0; j < target_channel_count; j++)
 		{
 			if(j == lfe)
 				continue;
-- 
2.29.2

