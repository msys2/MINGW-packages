From 5fb21bbcd82b6c48f06599eb8abc1d7a8e8af028 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?J=C3=B6rg=20M=C3=BCller?= <nexyon@gmail.com>
Date: Thu, 17 Jan 2019 19:35:31 +0100
Subject: [PATCH 08/16] Silence some warnings.

---
 bindings/C/AUD_Sound.cpp           |  2 +-
 plugins/ffmpeg/FFMPEGWriter.cpp    |  2 +
 src/respec/ChannelMapperReader.cpp | 77 ++++++++++++++++--------------
 3 files changed, 44 insertions(+), 37 deletions(-)

diff --git a/bindings/C/AUD_Sound.cpp b/bindings/C/AUD_Sound.cpp
index 30860ac..1f40f5c 100644
--- a/bindings/C/AUD_Sound.cpp
+++ b/bindings/C/AUD_Sound.cpp
@@ -212,7 +212,7 @@ AUD_API const char* AUD_Sound_write(AUD_Sound* sound, const char* filename, AUD_
 		std::shared_ptr<IWriter> writer = FileWriter::createWriter(filename, specs, static_cast<Container>(container), static_cast<Codec>(codec), bitrate);
 		FileWriter::writeReader(reader, writer, 0, buffersize);
 	}
-	catch(Exception& e)
+	catch(Exception&)
 	{
 		return "An exception occured while writing.";
 	}
diff --git a/plugins/ffmpeg/FFMPEGWriter.cpp b/plugins/ffmpeg/FFMPEGWriter.cpp
index 09b7089..2cd3261 100644
--- a/plugins/ffmpeg/FFMPEGWriter.cpp
+++ b/plugins/ffmpeg/FFMPEGWriter.cpp
@@ -261,6 +261,8 @@ FFMPEGWriter::FFMPEGWriter(std::string filename, DeviceSpecs specs, Container fo
 	case CHANNELS_SURROUND71:
 		channel_layout = AV_CH_LAYOUT_7POINT1;
 		break;
+	default:
+		AUD_THROW(FileException, "File couldn't be written, channel layout not supported.");
 	}
 
 	try
diff --git a/src/respec/ChannelMapperReader.cpp b/src/respec/ChannelMapperReader.cpp
index 850e54b..1af5e70 100644
--- a/src/respec/ChannelMapperReader.cpp
+++ b/src/respec/ChannelMapperReader.cpp
@@ -296,72 +296,77 @@ const Channel* ChannelMapperReader::CHANNEL_MAPS[] =
 	ChannelMapperReader::SURROUND71_MAP
 };
 
+constexpr float deg2rad(double angle)
+{
+	return float(angle * M_PI / 180.0);
+}
+
 const float ChannelMapperReader::MONO_ANGLES[] =
 {
-	0.0f * M_PI / 180.0f
+	deg2rad(0.0)
 };
 
 const float ChannelMapperReader::STEREO_ANGLES[] =
 {
-	-90.0f * M_PI / 180.0f,
-	 90.0f * M_PI / 180.0f
+	deg2rad(-90.0),
+	deg2rad( 90.0)
 };
 
 const float ChannelMapperReader::STEREO_LFE_ANGLES[] =
 {
-	-90.0f * M_PI / 180.0f,
-	 90.0f * M_PI / 180.0f,
-	  0.0f * M_PI / 180.0f
+	deg2rad(-90.0),
+	deg2rad( 90.0),
+	deg2rad(  0.0)
 };
 
 const float ChannelMapperReader::SURROUND4_ANGLES[] =
 {
-	 -45.0f * M_PI / 180.0f,
-	  45.0f * M_PI / 180.0f,
-	-135.0f * M_PI / 180.0f,
-	 135.0f * M_PI / 180.0f
+	deg2rad( -45.0),
+	deg2rad(  45.0),
+	deg2rad(-135.0),
+	deg2rad( 135.0)
 };
 
 const float ChannelMapperReader::SURROUND5_ANGLES[] =
 {
-	 -30.0f * M_PI / 180.0f,
-	  30.0f * M_PI / 180.0f,
-	   0.0f * M_PI / 180.0f,
-	-110.0f * M_PI / 180.0f,
-	 110.0f * M_PI / 180.0f
+	deg2rad( -30.0),
+	deg2rad(  30.0),
+	deg2rad(   0.0),
+	deg2rad(-110.0),
+	deg2rad( 110.0)
 };
 
 const float ChannelMapperReader::SURROUND51_ANGLES[] =
 {
-	  -30.0f * M_PI / 180.0f,
-	   30.0f * M_PI / 180.0f,
-	   0.0f * M_PI / 180.0f,
-	   0.0f * M_PI / 180.0f,
-	-110.0f * M_PI / 180.0f,
-	 110.0f * M_PI / 180.0f
+	deg2rad( -30.0),
+	deg2rad(  30.0),
+	deg2rad(   0.0),
+	deg2rad(   0.0),
+	deg2rad(-110.0),
+	deg2rad( 110.0)
 };
 
 const float ChannelMapperReader::SURROUND61_ANGLES[] =
 {
-	  -30.0f * M_PI / 180.0f,
-	   30.0f * M_PI / 180.0f,
-	   0.0f * M_PI / 180.0f,
-	   0.0f * M_PI / 180.0f,
-	 180.0f * M_PI / 180.0f,
-	-110.0f * M_PI / 180.0f,
-	 110.0f * M_PI / 180.0f
+	deg2rad( -30.0),
+	deg2rad(  30.0),
+	deg2rad(   0.0),
+	deg2rad(   0.0),
+	deg2rad( 180.0),
+	deg2rad(-110.0),
+	deg2rad( 110.0)
 };
 
 const float ChannelMapperReader::SURROUND71_ANGLES[] =
 {
-	  -30.0f * M_PI / 180.0f,
-	   30.0f * M_PI / 180.0f,
-	   0.0f * M_PI / 180.0f,
-	   0.0f * M_PI / 180.0f,
-	-110.0f * M_PI / 180.0f,
-	 110.0f * M_PI / 180.0f,
-	-150.0f * M_PI / 180.0f,
-	 150.0f * M_PI / 180.0f
+	deg2rad( -30.0),
+	deg2rad(  30.0),
+	deg2rad(   0.0),
+	deg2rad(   0.0),
+	deg2rad(-110.0),
+	deg2rad( 110.0),
+	deg2rad(-150.0),
+	deg2rad( 150.0)
 };
 
 const float* ChannelMapperReader::CHANNEL_ANGLES[] =
-- 
2.22.0

