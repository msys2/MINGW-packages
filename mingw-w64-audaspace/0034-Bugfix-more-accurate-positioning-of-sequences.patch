From 8510acf7bc2324ab4af19da19a7fd44aca14753b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?J=C3=B6rg=20M=C3=BCller?= <nexyon@gmail.com>
Date: Thu, 24 Dec 2020 10:34:16 +0100
Subject: [PATCH 34/35] Bugfix: more accurate positioning of sequences.

Classic use case for comparing floating point values with an epsilon.
In this case though, even when the comparison is not equal but
greater/smaller equal.
---
 src/sequence/SequenceHandle.cpp | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/src/sequence/SequenceHandle.cpp b/src/sequence/SequenceHandle.cpp
index 0437b05..fca4e80 100644
--- a/src/sequence/SequenceHandle.cpp
+++ b/src/sequence/SequenceHandle.cpp
@@ -22,6 +22,7 @@
 #include <mutex>
 
 #define KEEP_TIME 10
+#define POSITION_EPSILON (1.0 / static_cast<double>(RATE_48000))
 
 AUD_NAMESPACE_BEGIN
 
@@ -64,7 +65,7 @@ bool SequenceHandle::updatePosition(double position)
 	if(m_handle.get())
 	{
 		// we currently have a handle, let's check where we are
-		if(position >= m_entry->m_end)
+		if(position - POSITION_EPSILON >= m_entry->m_end)
 		{
 			if(position >= m_entry->m_end + KEEP_TIME)
 				// far end, stopping
@@ -76,7 +77,7 @@ bool SequenceHandle::updatePosition(double position)
 				return true;
 			}
 		}
-		else if(position >= m_entry->m_begin)
+		else if(position + POSITION_EPSILON >= m_entry->m_begin)
 		{
 			// inside, resuming
 			m_handle->resume();
@@ -98,7 +99,7 @@ bool SequenceHandle::updatePosition(double position)
 	else
 	{
 		// we don't have a handle, let's start if we should be playing
-		if(position >= m_entry->m_begin && position <= m_entry->m_end)
+		if(position + POSITION_EPSILON >= m_entry->m_begin && position - POSITION_EPSILON <= m_entry->m_end)
 		{
 			start();
 			return m_valid;
-- 
2.29.2

