--- a/scripts/pipcl.py
+++ b/scripts/pipcl.py
@@ -1562,7 +1562,7 @@
 
             rpath_flag = ''
         else:
-            rpath_flag = "-Wl,-rpath,'$ORIGIN',-z,origin"
+            rpath_flag = ""
         path_so = f'{outdir}/{path_so_leaf}'
         # Fun fact - on Linux, if the -L and -l options are before '{path_cpp}'
         # they seem to be ignored...
@@ -1659,7 +1659,7 @@
 #
 
 
-def base_compiler(vs=None, pythonflags=None, cpp=False, use_env=True):
+def base_compiler(vs=None, pythonflags=None, cpp=False, use_env=False):
     '''
     Returns basic compiler command and PythonFlags.
 
@@ -1826,7 +1826,7 @@
     nl = '\n'
     if verbose:
         log1( f'Running: {nl.join(lines)}')
-    sep = ' ' if windows() else ' \\\n'
+    sep = ' '
     command2 = sep.join( lines)
     cp = subprocess.run(
             command2,
@@ -1846,7 +1846,7 @@
     return sys.platform.startswith( 'darwin')
 
 def windows():
-    return platform.system() == 'Windows'
+    return False
 
 def wasm():
     return os.environ.get( 'OS') in ('wasm', 'wasm-mt')
@@ -1855,7 +1855,7 @@
     return os.environ.get( 'PYODIDE') == '1'
 
 def linux():
-    return platform.system() == 'Linux'
+    return True
 
 def openbsd():
     return platform.system() == 'OpenBSD'
@@ -1929,10 +1929,10 @@
                     python_config = f'{python_exe}-config'
             log2(f'Using {python_config=}.')
             try:
-                self.includes = run( f'{python_config} --includes', capture=1, verbose=0).strip()
+                self.includes = run( f'sh -c "{python_config} --includes"', capture=1, verbose=0).strip()
             except Exception as e:
                 raise Exception('We require python development tools to be installed.') from e
-            self.ldflags = run( f'{python_config} --ldflags', capture=1, verbose=0).strip()
+            self.ldflags = run( f'sh -c "{python_config} --ldflags"', capture=1, verbose=0).strip()
             if linux():
                 # It seems that with python-3.10 on Linux, we can get an
                 # incorrect -lcrypt flag that on some systems (e.g. WSL)
