From 98859f67c3d54c9c6d8bbf55251717cbe3511f4e Mon Sep 17 00:00:00 2001
From: Grigory Vasilyev <h0tc0d3@gmail.com>
Date: Fri, 8 Oct 2021 15:26:49 +0300
Subject: [PATCH] Fix swr build with LLVM 13

---
 .../swr/rasterizer/jitter/builder_mem.cpp     | 12 +++++++++++
 .../swr/rasterizer/jitter/builder_mem.h       |  4 ++++
 src/gallium/drivers/swr/swr_shader.cpp        | 20 ++++++++++++++-----
 3 files changed, 31 insertions(+), 5 deletions(-)

diff --git a/src/gallium/drivers/swr/rasterizer/jitter/builder_mem.cpp b/src/gallium/drivers/swr/rasterizer/jitter/builder_mem.cpp
index b5eb0a782b1..ff0672cfd14 100644
--- a/src/gallium/drivers/swr/rasterizer/jitter/builder_mem.cpp
+++ b/src/gallium/drivers/swr/rasterizer/jitter/builder_mem.cpp
@@ -82,7 +82,11 @@ namespace SwrJit
         std::vector<Value*> indices;
         for (auto i : indexList)
             indices.push_back(i);
+#if LLVM_VERSION_MAJOR >= 13
+        return IN_BOUNDS_GEP(ptr->getType(), ptr, indices);
+#else
         return IN_BOUNDS_GEP(ptr, indices);
+#endif
     }
 
     Value* Builder::IN_BOUNDS_GEP(Value* ptr, const std::initializer_list<uint32_t>& indexList)
@@ -90,7 +94,11 @@ namespace SwrJit
         std::vector<Value*> indices;
         for (auto i : indexList)
             indices.push_back(C(i));
+#if LLVM_VERSION_MAJOR >= 13
+        return IN_BOUNDS_GEP(ptr->getType(), ptr, indices);
+#else
         return IN_BOUNDS_GEP(ptr, indices);
+#endif
     }
 
     LoadInst* Builder::LOAD(Value* Ptr, const char* Name, Type* Ty, MEM_CLIENT usage)
@@ -234,7 +242,11 @@ namespace SwrJit
     /// @param pVecPassthru - SIMD wide vector of values to load when lane is inactive
     Value* Builder::GATHER_PTR(Value* pVecSrcPtr, Value* pVecMask, Value* pVecPassthru)
     {
+#if LLVM_VERSION_MAJOR >= 13
+        return MASKED_GATHER(pVecSrcPtr->getType(), pVecSrcPtr, AlignType(4), pVecMask, pVecPassthru);
+#else
         return MASKED_GATHER(pVecSrcPtr, AlignType(4), pVecMask, pVecPassthru);
+#endif       
     }
 
     void Builder::SCATTER_PTR(Value* pVecDstPtr, Value* pVecSrc, Value* pVecMask)
diff --git a/src/gallium/drivers/swr/rasterizer/jitter/builder_mem.h b/src/gallium/drivers/swr/rasterizer/jitter/builder_mem.h
index 429d5779a4d..c6cfb812b81 100644
--- a/src/gallium/drivers/swr/rasterizer/jitter/builder_mem.h
+++ b/src/gallium/drivers/swr/rasterizer/jitter/builder_mem.h
@@ -84,7 +84,11 @@ virtual CallInst* MASKED_LOAD(Value*         Ptr,
                               Type*          Ty       = nullptr,
                               MEM_CLIENT usage    = MEM_CLIENT::MEM_CLIENT_INTERNAL)
 {
+#if LLVM_VERSION_MAJOR >= 13
+    return IRB()->CreateMaskedLoad(Ptr->getType(), Ptr, AlignType(Align), Mask, PassThru, Name);
+#else
     return IRB()->CreateMaskedLoad(Ptr, AlignType(Align), Mask, PassThru, Name);
+#endif
 }
 
 virtual StoreInst* STORE(Value *Val, Value *Ptr, bool isVolatile = false, Type* Ty = nullptr, MEM_CLIENT usage = MEM_CLIENT::MEM_CLIENT_INTERNAL)
diff --git a/src/gallium/drivers/swr/swr_shader.cpp b/src/gallium/drivers/swr/swr_shader.cpp
index 315036920fb..26e967759cd 100644
--- a/src/gallium/drivers/swr/swr_shader.cpp
+++ b/src/gallium/drivers/swr/swr_shader.cpp
@@ -1553,7 +1553,9 @@ BuilderSWR::CompileGS(struct swr_context *ctx, swr_jit_gs_key &key)
                                      GlobalValue::ExternalLinkage,
                                      "GS",
                                      JM()->mpCurrentModule);
-#if LLVM_VERSION_MAJOR < 5
+#if LLVM_VERSION_MAJOR >= 13
+   pFunction->addParamAttrs(AttributeList::FunctionIndex, attrBuilder);
+#elif LLVM_VERSION_MAJOR < 5
    AttributeSet attrSet = AttributeSet::get(
       JM()->mContext, AttributeSet::FunctionIndex, attrBuilder);
    pFunction->addAttributes(AttributeSet::FunctionIndex, attrSet);
@@ -1781,7 +1783,9 @@ BuilderSWR::CompileTES(struct swr_context *ctx, swr_jit_tes_key &key)
                                      "TES",
                                      JM()->mpCurrentModule);
 
-#if LLVM_VERSION_MAJOR < 5
+#if LLVM_VERSION_MAJOR >= 13
+   pFunction->addParamAttrs(AttributeList::FunctionIndex, attrBuilder);
+#elif LLVM_VERSION_MAJOR < 5
    AttributeSet attrSet = AttributeSet::get(
       JM()->mContext, AttributeSet::FunctionIndex, attrBuilder);
    pFunction->addAttributes(AttributeSet::FunctionIndex, attrSet);
@@ -2082,7 +2086,9 @@ BuilderSWR::CompileTCS(struct swr_context *ctx, swr_jit_tcs_key &key)
                                      "TCS",
                                      JM()->mpCurrentModule);
 
-#if LLVM_VERSION_MAJOR < 5
+#if LLVM_VERSION_MAJOR >= 13
+   pFunction->addParamAttrs(AttributeList::FunctionIndex, attrBuilder);
+#elif LLVM_VERSION_MAJOR < 5
    AttributeSet attrSet = AttributeSet::get(
       JM()->mContext, AttributeSet::FunctionIndex, attrBuilder);
    pFunction->addAttributes(AttributeSet::FunctionIndex, attrSet);
@@ -2337,7 +2343,9 @@ BuilderSWR::CompileVS(struct swr_context *ctx, swr_jit_vs_key &key)
                                      GlobalValue::ExternalLinkage,
                                      "VS",
                                      JM()->mpCurrentModule);
-#if LLVM_VERSION_MAJOR < 5
+#if LLVM_VERSION_MAJOR >= 13
+   pFunction->addParamAttrs(AttributeList::FunctionIndex, attrBuilder);
+#elif LLVM_VERSION_MAJOR < 5
    AttributeSet attrSet = AttributeSet::get(
       JM()->mContext, AttributeSet::FunctionIndex, attrBuilder);
    pFunction->addAttributes(AttributeSet::FunctionIndex, attrSet);
@@ -2642,7 +2650,9 @@ BuilderSWR::CompileFS(struct swr_context *ctx, swr_jit_fs_key &key)
                                      GlobalValue::ExternalLinkage,
                                      "FS",
                                      JM()->mpCurrentModule);
-#if LLVM_VERSION_MAJOR < 5
+#if LLVM_VERSION_MAJOR >= 13
+   pFunction->addParamAttrs(AttributeList::FunctionIndex, attrBuilder);
+#elif LLVM_VERSION_MAJOR < 5
    AttributeSet attrSet = AttributeSet::get(
       JM()->mContext, AttributeSet::FunctionIndex, attrBuilder);
    pFunction->addAttributes(AttributeSet::FunctionIndex, attrSet);
-- 
GitLab

