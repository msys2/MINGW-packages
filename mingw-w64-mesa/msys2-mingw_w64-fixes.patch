diff --git a/scons/gallium.py b/scons/gallium.py
index 61bbeb2399f..a1756a2220b 100755
--- a/scons/gallium.py
+++ b/scons/gallium.py
@@ -237,6 +237,9 @@ def generate(env):
     hosthost_platform = host_platform.system().lower()
     if hosthost_platform.startswith('cygwin'):
         hosthost_platform = 'cygwin'
+    # Avoid spurious crosscompilation in MSYS2 environment.
+    if hosthost_platform.startswith('mingw'):
+        hosthost_platform = 'windows'
     host_machine = os.environ.get('PROCESSOR_ARCHITEW6432', os.environ.get('PROCESSOR_ARCHITECTURE', host_platform.machine()))
     host_machine = {
         'x86': 'x86',
@@ -671,6 +674,7 @@ def generate(env):
 
     env.Tool('yacc')
     if host_platform.system() == 'Windows':
+        libs += ['shell32', 'version', 'uuid', 'ole32']
         if check_prog(env, 'win_bison'):
             env["YACC"] = 'win_bison'
 
diff --git a/scons/llvm.py b/scons/llvm.py
index a84ad51d97a..a389dd5157c 100644
--- a/scons/llvm.py
+++ b/scons/llvm.py
@@ -30,6 +30,7 @@ Tool-specific initialization for LLVM
 import os
 import os.path
 import re
+import platform as host_platform
 import sys
 import distutils.version
 
@@ -215,8 +216,15 @@ def generate(env):
             'advapi32',
             'ole32',
             'uuid',
+            'version',
         ])
 
+        # Mingw-w64 zlib is required when building with LLVM support in MSYS2 environment
+        if host_platform.system().lower().startswith('mingw'):
+            env.Append(LIBS = [
+                 'z',
+            ])
+
         if env['msvc']:
             # Some of the LLVM C headers use the inline keyword without
             # defining it.
diff --git a/src/gallium/drivers/swr/SConscript b/src/gallium/drivers/swr/SConscript
index a89d02c5db0..ed68798bf15 100644
--- a/src/gallium/drivers/swr/SConscript
+++ b/src/gallium/drivers/swr/SConscript
@@ -222,7 +222,7 @@ env.Prepend(CPPPATH = [
 envavx = env.Clone()
 
 envavx.Append(CPPDEFINES = ['KNOB_ARCH=KNOB_ARCH_AVX'])
-if env['platform'] == 'windows':
+if env['msvc']:
     envavx.Append(CCFLAGS = ['/arch:AVX'])
 else:
     envavx.Append(CCFLAGS = ['-mavx'])
@@ -238,7 +238,7 @@ env.Alias('swrAVX', swrAVX)
 envavx2 = env.Clone()
 
 envavx2.Append(CPPDEFINES = ['KNOB_ARCH=KNOB_ARCH_AVX2'])
-if env['platform'] == 'windows':
+if env['msvc']:
     envavx2.Append(CCFLAGS = ['/arch:AVX2'])
 else:
     envavx2.Append(CCFLAGS = ['-mavx2', '-mfma', '-mbmi2', '-mf16c'])
diff --git a/src/gallium/targets/graw-gdi/SConscript b/src/gallium/targets/graw-gdi/SConscript
index e59127cc25e..0a52bb5a7fc 100644
--- a/src/gallium/targets/graw-gdi/SConscript
+++ b/src/gallium/targets/graw-gdi/SConscript
@@ -14,6 +14,7 @@ env.Prepend(LIBS = [
     gallium,
     'gdi32',
     'user32',
+    'ole32',
     'ws2_32',
 ])
 
diff --git a/src/gallium/targets/libgl-gdi/SConscript b/src/gallium/targets/libgl-gdi/SConscript
index 94feca24ef3..4b0b5621b29 100644
--- a/src/gallium/targets/libgl-gdi/SConscript
+++ b/src/gallium/targets/libgl-gdi/SConscript
@@ -15,6 +15,7 @@ env.Append(LIBS = [
     'gdi32',
     'user32',
     'kernel32',
+    'ole32',
     'ws2_32',
     'advapi32',
 ])
