# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=mesa
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=24.3.1
pkgrel=1
pkgdesc="Open-source implementation of the OpenGL, Vulkan and OpenCL specifications (mingw-w64)"
url="https://www.mesa3d.org/"
msys2_repository_url="https://gitlab.freedesktop.org/mesa/mesa"
msys2_references=(
  "cpe: cpe:/a:mesa3d:mesa"
)
license=('spdx:MIT')
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clangarm64')
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-meson"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-pkgconf"
             "${MINGW_PACKAGE_PREFIX}-directx-headers"
             "${MINGW_PACKAGE_PREFIX}-python-mako"
             "${MINGW_PACKAGE_PREFIX}-python-packaging"
             "${MINGW_PACKAGE_PREFIX}-python-yaml"
             $([[ ${CARCH} == i686 ]] || echo \
               "${MINGW_PACKAGE_PREFIX}-clang" \
               "${MINGW_PACKAGE_PREFIX}-glslang" \
               "${MINGW_PACKAGE_PREFIX}-libclc" \
               "${MINGW_PACKAGE_PREFIX}-libelf" \
               "${MINGW_PACKAGE_PREFIX}-polly")
)
depends=("${MINGW_PACKAGE_PREFIX}-libsystre"
         "${MINGW_PACKAGE_PREFIX}-libwinpthread-git"
         "${MINGW_PACKAGE_PREFIX}-zlib"
         "${MINGW_PACKAGE_PREFIX}-zstd"
         $([[ ${CARCH} == i686 ]] || echo \
           "${MINGW_PACKAGE_PREFIX}-clang-libs" \
           "${MINGW_PACKAGE_PREFIX}-libva" \
           "${MINGW_PACKAGE_PREFIX}-opencl-icd" \
           "${MINGW_PACKAGE_PREFIX}-spirv-llvm-translator" \
           "${MINGW_PACKAGE_PREFIX}-spirv-tools" \
           "${MINGW_PACKAGE_PREFIX}-vulkan-loader")
)
if [[ ${CARCH} != i686 ]]; then
  optdepends=("${MINGW_PACKAGE_PREFIX}-opengl-man-pages: for the OpenGL API man pages"
              "${MINGW_PACKAGE_PREFIX}-vulkan-validation-layers: to debug applications using Vulkan graphics")
fi
source=(https://mesa.freedesktop.org/archive/${_realname}-${pkgver}.tar.xz{,.sig}
        0000-addrlib-workaround-old-cpu-target.patch
        0001-include-missing-header.patch)
sha256sums=('9c795900449ce5bc7c526ba0ab3532a22c3c951cab7e0dd9de5fcac41b0843af'
            'SKIP'
            '4e511b1ab380d0e7d1f152f89c82665e5ef7de96f26de1b5597aa1db85cfc5a4'
            '7ac84a5b34f7599d59c328e8936b2487f9b99d699630f16468c061dba8cf10ff')
validpgpkeys=('8703B6700E7EE06D7A39B8D6EDAE37B02CEB490D') # Emil Velikov <emil.l.velikov@gmail.com>
validpgpkeys+=('946D09B5E4C9845E63075FF1D961C596A7203456') # Andres Gomez <tanty@igalia.com>
validpgpkeys+=('E3E8F480C52ADD73B278EE78E1ECBE07D7D70895') # Juan Antonio Su√°rez Romero (Igalia, S.L.) <jasuarez@igalia.com>"
validpgpkeys+=('A5CC9FEC93F2F837CB044912336909B6B25FADFA') # Juan A. Suarez Romero <jasuarez@igalia.com>
validpgpkeys+=('71C4B75620BC75708B4BDB254C95FAAB3EB073EC') # Dylan Baker <dylan@pnwbakers.com>
validpgpkeys+=('57551DE15B968F6341C248F68D8E31AFC32428A6') # Eric Engestrom <eric@engestrom.ch>
noextract=(${_realname}-${pkgver}.tar.xz)

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying $_patch"
    patch -Nbp1 -i "${srcdir}/$_patch"
  done
}

del_file_exists() {
  for _fname in "$@"
  do
    if [ -f $_fname ]; then
      rm -rf $_fname
    fi
  done
}
# =========================================== #

prepare() {
  rm -rf ${srcdir}/${_realname}-${pkgver}
  tar -xJf ${srcdir}/${_realname}-${pkgver}.tar.xz -C ${srcdir} || true

  cd ${srcdir}/${_realname}-${pkgver}

  apply_patch_with_msg \
    0000-addrlib-workaround-old-cpu-target.patch \
    0001-include-missing-header.patch

  # Tie clang clc linking mode to static-libclc instead of shared-llvm
  sed -e "s|_shared_llvm|false|g" \
    -i src/compiler/clc/meson.build
}

build() {
  local -a _meson_options=(
  --prefix=${MINGW_PREFIX}
  --buildtype=release
  --backend=ninja
  -Dshared-glapi=disabled
  -Degl=disabled
  -Dgles1=disabled
  -Dgles2=disabled
  -Dosmesa=true
  -Dbuild-tests=false
  -Dvideo-codecs=all
  -Dcpp_rtti=true
  -Dmin-windows-version=8
  )

  if [[ ${CARCH} != i686 ]]; then
    _meson_options+=(
      -Dllvm=enabled
      -Dshared-llvm=enabled
      -Dgallium-drivers=softpipe,llvmpipe,zink,d3d12
      -Dgallium-opencl=icd
      -Dgallium-va=enabled
      -Dmicrosoft-clc=enabled
      -Dstatic-libclc=all
      -Dopencl-spirv=true
      -Dvulkan-drivers=swrast,amd,microsoft-experimental
    )
  else
    _meson_options+=(
      -Dllvm=disabled
      -Dgallium-drivers=softpipe,zink,d3d12
      -Dgallium-opencl=disabled
      -Dgallium-va=disabled
      -Dmicrosoft-clc=disabled
      -Dopencl-spirv=false
      -Dvulkan-drivers=microsoft-experimental
    )
  fi

  MSYS2_ARG_CONV_EXCL="--prefix=" \
  PROCESSOR_ARCHITECTURE="${CARCH}" \
  ${MINGW_PREFIX}/bin/meson setup \
  -Dc_args="${CFLAGS}" \
  -Dcpp_args="${CXXFLAGS}" \
  "${_meson_options[@]}" \
  "build-${MSYSTEM}" \
  "${_realname}-${pkgver}"

  ${MINGW_PREFIX}/bin/meson compile -C "build-${MSYSTEM}"
}

package() {
  ${MINGW_PREFIX}/bin/meson install --skip-subprojects --destdir "${pkgdir}" \
  -C "build-${MSYSTEM}"

# fix osmesa version in .pc file
  sed -e "s|8.0.0|${pkgver}|g" \
    -i ${pkgdir}${MINGW_PREFIX}/lib/pkgconfig/osmesa.pc
}
