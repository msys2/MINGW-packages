# Contributor: Mehdi Chinoune <mehdi.chinoune@hotmail.com>

_realname=pyside6
pkgbase=mingw-w64-${_realname}
pkgname=(${MINGW_PACKAGE_PREFIX}-${_realname})
pkgver=6.4.0
pkgrel=1
pkgdesc="Enables the use of Qt6 APIs in Python applications (mingw-w64)"
url="https://doc.qt.io/qtforpython/"
license=("LGPL")
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32')
depends=("${MINGW_PACKAGE_PREFIX}-python"
         "${MINGW_PACKAGE_PREFIX}-shiboken6"
         "${MINGW_PACKAGE_PREFIX}-qt6-declarative")
optdepends=("${MINGW_PACKAGE_PREFIX}-qt6-3d"
            "${MINGW_PACKAGE_PREFIX}-qt6-activeqt"
            "${MINGW_PACKAGE_PREFIX}-qt6-charts"
            "${MINGW_PACKAGE_PREFIX}-qt6-connectivity"
            "${MINGW_PACKAGE_PREFIX}-qt6-datavis3d"
            "${MINGW_PACKAGE_PREFIX}-qt6-positioning"
            "${MINGW_PACKAGE_PREFIX}-qt6-multimedia"
            "${MINGW_PACKAGE_PREFIX}-qt6-networkauth"
            "${MINGW_PACKAGE_PREFIX}-qt6-remoteobjects"
            "${MINGW_PACKAGE_PREFIX}-qt6-scxml"
            "${MINGW_PACKAGE_PREFIX}-qt6-sensors"
            "${MINGW_PACKAGE_PREFIX}-qt6-serialport"
            "${MINGW_PACKAGE_PREFIX}-qt6-speech"
            "${MINGW_PACKAGE_PREFIX}-qt6-svg"
            "${MINGW_PACKAGE_PREFIX}-qt6-tools"
            "${MINGW_PACKAGE_PREFIX}-qt6-webchannel"
            "${MINGW_PACKAGE_PREFIX}-qt6-websockets")
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-vulkan-headers"
             "${MINGW_PACKAGE_PREFIX}-python-setuptools"
             "${MINGW_PACKAGE_PREFIX}-python-wheel"
             "${MINGW_PACKAGE_PREFIX}-python-packaging"
             "${MINGW_PACKAGE_PREFIX}-python-numpy"
             "${MINGW_PACKAGE_PREFIX}-qt6-3d"
             "${MINGW_PACKAGE_PREFIX}-qt6-activeqt"
             "${MINGW_PACKAGE_PREFIX}-qt6-charts"
             "${MINGW_PACKAGE_PREFIX}-qt6-connectivity"
             "${MINGW_PACKAGE_PREFIX}-qt6-datavis3d"
             "${MINGW_PACKAGE_PREFIX}-qt6-positioning"
             "${MINGW_PACKAGE_PREFIX}-qt6-multimedia"
             "${MINGW_PACKAGE_PREFIX}-qt6-networkauth"
             "${MINGW_PACKAGE_PREFIX}-qt6-quick3d"
             "${MINGW_PACKAGE_PREFIX}-qt6-remoteobjects"
             "${MINGW_PACKAGE_PREFIX}-qt6-scxml"
             "${MINGW_PACKAGE_PREFIX}-qt6-sensors"
             "${MINGW_PACKAGE_PREFIX}-qt6-serialport"
             "${MINGW_PACKAGE_PREFIX}-qt6-speech"
             "${MINGW_PACKAGE_PREFIX}-qt6-svg"
             "${MINGW_PACKAGE_PREFIX}-qt6-tools"
             "${MINGW_PACKAGE_PREFIX}-qt6-webchannel"
             "${MINGW_PACKAGE_PREFIX}-qt6-websockets")
_pkgfn=pyside-setup-opensource-src-$pkgver
source=(https://download.qt.io/official_releases/QtForPython/pyside6/PySide6-$pkgver-src/${_pkgfn}.tar.xz
        001-fix-building-on-mingw.patch)
sha256sums=('dcee166a112a7eb04bb58c1164997e1f720c1e3e2ee199ee8c9a70e82f51e321'
            '45f01b7ed7d3a309786e2514c1c00eeac088af589f47512772bd820ba764ebad')

prepare() {
  cd "${srcdir}"/$_pkgfn
  patch -p1 -i "${srcdir}"/001-fix-building-on-mingw.patch
}

build() {
  [[ -d build-${MSYSTEM} ]] && rm -rf build-${MSYSTEM}
  mkdir -p build-${MSYSTEM} && cd build-${MSYSTEM}

  declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake.exe \
    -GNinja \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    ${extra_config[@]} \
    -DBUILD_TESTS=OFF \
    -DPYTHON_EXECUTABLE=${MINGW_PREFIX}/bin/python \
    ../$_pkgfn/sources/pyside6

  ${MINGW_PREFIX}/bin/cmake --build .
}

package() {
  DESTDIR=${pkgdir} ${MINGW_PREFIX}/bin/cmake --install build-${MSYSTEM}

  install -d "$pkgdir"${MINGW_PREFIX}/share/licenses/${_realname}
  install -Dm644 $_pkgfn/sources/pyside6/COPYING -t "$pkgdir"${MINGW_PREFIX}/share/licenses/${_realname}

  # Install egg-info
  cd "${srcdir}"/$_pkgfn
  ${MINGW_PREFIX}/bin/python setup.py bdist_wheel --qtpaths="$(command -v qtpaths-qt6.exe)" --skip-build --build-type=pyside6
  _pythonpath=`${MINGW_PREFIX}/bin/python -c "from sysconfig import get_path; print(get_path('platlib'))"`
  cp -r PySide6.egg-info "$pkgdir"/$(cygpath ${_pythonpath})
}
