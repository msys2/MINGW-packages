diff --color --unified --recursive --text globjects.orig/source/globjects/source/implementations/BufferImplementation_DirectStateAccessARB.cpp globjects.new/source/globjects/source/implementations/BufferImplementation_DirectStateAccessARB.cpp
--- globjects.orig/source/globjects/source/implementations/BufferImplementation_DirectStateAccessARB.cpp	2021-08-26 01:43:35.844032899 +0200
+++ globjects.new/source/globjects/source/implementations/BufferImplementation_DirectStateAccessARB.cpp	2021-08-26 01:45:32.803402681 +0200
@@ -36,7 +36,7 @@
 
 void * BufferImplementation_DirectStateAccessARB::mapRange(const Buffer * buffer, GLintptr offset, GLsizeiptr length, MapBufferAccessMask access) const
 {
-    return glMapNamedBufferRange(buffer->id(), offset, static_cast<GLsizei>(length), access);
+    return glMapNamedBufferRange(buffer->id(), offset, static_cast<GLsizei>(length), static_cast<BufferAccessMask>(access));
 }
 
 bool BufferImplementation_DirectStateAccessARB::unmap(const Buffer * buffer) const
diff --color --unified --recursive --text globjects.orig/source/globjects/source/Sync.cpp globjects.new/source/globjects/source/Sync.cpp
--- globjects.orig/source/globjects/source/Sync.cpp	2021-08-26 01:43:35.837366269 +0200
+++ globjects.new/source/globjects/source/Sync.cpp	2021-08-26 01:47:11.639537596 +0200
@@ -51,7 +51,7 @@
 
 GLsync Sync::fenceSync(const GLenum condition, const UnusedMask flags)
 {
-    return glFenceSync(condition, static_cast<gl::GLbitfield>(flags));
+    return glFenceSync(condition, flags);
 }
 
 GLsync Sync::sync() const
@@ -71,7 +71,7 @@
 
 void Sync::wait(const UnusedMask flags, const GLuint64 timeout)
 {
-    glWaitSync(m_sync, static_cast<gl::GLbitfield>(flags), timeout);
+   glWaitSync(m_sync, flags, timeout); 
 }
 
 void Sync::get(const GLenum pname, const GLsizei bufsize, GLsizei * length, GLint * values)
