diff -Naur libgphoto2-2.5.10.orig/camlibs/ax203/jpeg_memsrcdest.h libgphoto2-2.5.10/camlibs/ax203/jpeg_memsrcdest.h
--- libgphoto2-2.5.10.orig/camlibs/ax203/jpeg_memsrcdest.h	2015-08-08 17:57:29.000000000 +0200
+++ libgphoto2-2.5.10/camlibs/ax203/jpeg_memsrcdest.h	2016-10-20 20:52:03.163417100 +0200
@@ -1,5 +1,8 @@
+
+
 #include <jpeglib.h>
 
+#if JPEG_LIB_VERSION < 80 && !defined(MEM_SRCDST_SUPPORTED)
 void
 jpeg_mem_src (j_decompress_ptr cinfo, unsigned char * buffer,
 	unsigned long bufsize);
@@ -7,3 +10,5 @@
 void
 jpeg_mem_dest (j_compress_ptr cinfo, unsigned char ** outbuffer,
 	unsigned long * outsize);
+
+#endif //JPEG_LIB_VERSION < 80 && !defined(MEM_SRCDST_SUPPORTED)
\ No newline at end of file
diff -Naur libgphoto2-2.5.10.orig/camlibs/jl2005c/jpeg_memsrcdest.h libgphoto2-2.5.10/camlibs/jl2005c/jpeg_memsrcdest.h
--- libgphoto2-2.5.10.orig/camlibs/jl2005c/jpeg_memsrcdest.h	2015-08-08 17:57:29.000000000 +0200
+++ libgphoto2-2.5.10/camlibs/jl2005c/jpeg_memsrcdest.h	2016-10-20 20:53:33.937917600 +0200
@@ -1,5 +1,6 @@
 #include <jpeglib.h>
 
+#if JPEG_LIB_VERSION < 80 && !defined(MEM_SRCDST_SUPPORTED)
 void
 jpeg_mem_src (j_decompress_ptr cinfo, unsigned char * buffer,
 	unsigned long bufsize);
@@ -7,3 +8,5 @@
 void
 jpeg_mem_dest (j_compress_ptr cinfo, unsigned char ** outbuffer,
 	unsigned long * outsize);
+
+#endif //JPEG_LIB_VERSION < 80 && !defined(MEM_SRCDST_SUPPORTED)
\ No newline at end of file
diff -Naur libgphoto2-2.5.10.orig/camlibs/pentax/pslr.c libgphoto2-2.5.10/camlibs/pentax/pslr.c
--- libgphoto2-2.5.10.orig/camlibs/pentax/pslr.c	2016-01-25 20:29:57.000000000 +0100
+++ libgphoto2-2.5.10/camlibs/pentax/pslr.c	2016-10-20 20:23:09.659864700 +0200
@@ -1021,7 +1021,7 @@
     CHECK(ipslr_write_args(p, 1, 2));
     CHECK(command(p, 0x10, 0x05, 0x04));
     get_status(p);
-    DPRINT("shutter result code: 0x%x\n", r);
+    DPRINT("shutter result code: 0x%x\n", p->status);
     return PSLR_OK;
 }
 
diff -Naur libgphoto2-2.5.10.orig/camlibs/ptp2/ptpip.c libgphoto2-2.5.10/camlibs/ptp2/ptpip.c
--- libgphoto2-2.5.10.orig/camlibs/ptp2/ptpip.c	2016-01-25 20:29:58.000000000 +0100
+++ libgphoto2-2.5.10/camlibs/ptp2/ptpip.c	2016-10-20 20:24:05.987460600 +0200
@@ -431,8 +431,10 @@
 	unsigned char	guid[16];
 	
 	ptp_nikon_getptpipguid(guid);
+	#if !defined (WIN32)
 	if (gethostname (hostname, sizeof(hostname)))
 		return PTP_RC_GeneralError;
+	#endif //!defined (WIN32)
 	len = ptpip_initcmd_name + (strlen(hostname)+1)*2 + 4;
 
 	cmdrequest = malloc(len);
diff -Naur libgphoto2-2.5.10.orig/camlibs/sonydscf1/command.c libgphoto2-2.5.10/camlibs/sonydscf1/command.c
--- libgphoto2-2.5.10.orig/camlibs/sonydscf1/command.c	2016-01-25 20:29:58.000000000 +0100
+++ libgphoto2-2.5.10/camlibs/sonydscf1/command.c	2016-10-20 20:25:30.925158900 +0200
@@ -141,8 +141,9 @@
   char tmp_buf[150]="";
   buf[0] = 0x03;
   buf[1] = 0x02;
+  int i=0;
   sendcommand(port,buf, 2);
-  recvdata(port, buf, 33);
+  i=recvdata(port, buf, 33);
 #ifdef DEBUG
   fprintf(stderr,"Status: %02x%02x:%02x(len = %d)\n", buf[0], buf[1], buf[2], i);
 #endif
@@ -196,8 +197,9 @@
 
   buf[0] = 0x03;
   buf[1] = 0x02;
+  int i=0;
   sendcommand(port,buf, 2);
-  recvdata(port, buf, 33);
+  i=recvdata(port, buf, 33);
 #ifdef DEBUG
   fprintf(stderr,"Status: %02x%02x:%02x(len = %d)\n", buf[0], buf[1], buf[2], i);
 #endif
@@ -437,6 +439,7 @@
   }
 
 #ifdef DEBUG
+  int i=0;
   fprintf(stderr,"info:");
   for(i = 0; i < len ; i++)
     fprintf(stderr,"%02x ", buf[i]);
diff -Naur libgphoto2-2.5.10.orig/examples/best-iso.c libgphoto2-2.5.10/examples/best-iso.c
--- libgphoto2-2.5.10.orig/examples/best-iso.c	2016-01-25 20:29:59.000000000 +0100
+++ libgphoto2-2.5.10/examples/best-iso.c	2016-10-20 20:26:10.336699400 +0200
@@ -229,7 +229,7 @@
 			path = (CameraFilePath*)evtdata;
 			printf("File added on the camera: %s/%s\n", path->folder, path->name);
 
-			fd = open(path->name, O_CREAT | O_WRONLY, 0644);
+			fd = open(path->name, O_CREAT | O_WRONLY | O_BINARY, 0644);
 			retval = gp_file_new_from_fd(&file, fd);
 			printf("  Downloading %s...\n", path->name);
 			retval = gp_camera_file_get(camera, path->folder, path->name,
diff -Naur libgphoto2-2.5.10.orig/examples/lunkwill-canon-capture.c libgphoto2-2.5.10/examples/lunkwill-canon-capture.c
--- libgphoto2-2.5.10.orig/examples/lunkwill-canon-capture.c	2016-01-25 20:29:59.000000000 +0100
+++ libgphoto2-2.5.10/examples/lunkwill-canon-capture.c	2016-10-20 20:26:31.369214500 +0200
@@ -107,7 +107,7 @@
 
 	printf("Pathname on the camera: %s/%s\n", camera_file_path.folder, camera_file_path.name);
 
-	fd = open(fn, O_CREAT | O_WRONLY, 0644);
+	fd = open(fn, O_CREAT | O_WRONLY | O_BINARY, 0644);
 	retval = gp_file_new_from_fd(&canonfile, fd);
 	printf("  Retval: %d\n", retval);
 	retval = gp_camera_file_get(canon, camera_file_path.folder, camera_file_path.name,
diff -Naur libgphoto2-2.5.10.orig/examples/sample-capture.c libgphoto2-2.5.10/examples/sample-capture.c
--- libgphoto2-2.5.10.orig/examples/sample-capture.c	2016-01-25 20:29:59.000000000 +0100
+++ libgphoto2-2.5.10/examples/sample-capture.c	2016-10-20 20:26:50.065737700 +0200
@@ -77,7 +77,7 @@
 
 	printf("Pathname on the camera: %s/%s\n", camera_file_path.folder, camera_file_path.name);
 
-	fd = open(fn, O_CREAT | O_WRONLY, 0644);
+	fd = open(fn, O_CREAT | O_WRONLY | O_BINARY, 0644);
 	retval = gp_file_new_from_fd(&file, fd);
 	printf("  Retval: %d\n", retval);
 	retval = gp_camera_file_get(camera, camera_file_path.folder, camera_file_path.name,
diff -Naur libgphoto2-2.5.10.orig/examples/samples.h libgphoto2-2.5.10/examples/samples.h
--- libgphoto2-2.5.10.orig/examples/samples.h	2016-01-25 20:29:59.000000000 +0100
+++ libgphoto2-2.5.10/examples/samples.h	2016-10-20 20:28:02.737313400 +0200
@@ -13,4 +13,10 @@
 extern int camera_auto_focus (Camera *list, GPContext *context, int onoff);
 extern int camera_eosviewfinder (Camera *list, GPContext *context, int onoff);
 extern int camera_manual_focus (Camera *list, int tgt, GPContext *context);
+
+
+#if !defined (O_BINARY)
+    //To have portable open() on *nix and on Windows
+    #define O_BINARY 0
+#endif
 #endif
diff -Naur libgphoto2-2.5.10.orig/examples/sample-tether.c libgphoto2-2.5.10/examples/sample-tether.c
--- libgphoto2-2.5.10.orig/examples/sample-tether.c	2016-01-25 20:29:59.000000000 +0100
+++ libgphoto2-2.5.10/examples/sample-tether.c	2016-10-20 20:27:30.963317400 +0200
@@ -41,7 +41,7 @@
 			path = (CameraFilePath*)evtdata;
 			printf("File added on the camera: %s/%s\n", path->folder, path->name);
 
-			fd = open(path->name, O_CREAT | O_WRONLY, 0644);
+			fd = open(path->name, O_CREAT | O_WRONLY | O_BINARY, 0644);
 			retval = gp_file_new_from_fd(&file, fd);
 			printf("  Downloading %s...\n", path->name);
 			retval = gp_camera_file_get(camera, path->folder, path->name,
diff -Naur libgphoto2-2.5.10.orig/libgphoto2/gphoto2-filesys.c libgphoto2-2.5.10/libgphoto2/gphoto2-filesys.c
--- libgphoto2-2.5.10.orig/libgphoto2/gphoto2-filesys.c	2016-01-25 20:29:59.000000000 +0100
+++ libgphoto2-2.5.10/libgphoto2/gphoto2-filesys.c	2016-10-20 20:35:51.718041700 +0200
@@ -764,6 +764,9 @@
 		gp_list_free (xlist);
 		if (ret != GP_OK) return ret;
 	}
+
+	// Only try to append the file if filename is not empty
+	if (filename && strlen(filename)!=0)	
 	ret = internal_append (fs, f, filename, context);
 	if (ret == GP_ERROR_FILE_EXISTS) /* not an error here ... just in case we add files twice to the list */
 		ret = GP_OK;
diff -Naur libgphoto2-2.5.10.orig/libgphoto2/gphoto2-setting.c libgphoto2-2.5.10/libgphoto2/gphoto2-setting.c
--- libgphoto2-2.5.10.orig/libgphoto2/gphoto2-setting.c	2016-01-25 20:29:59.000000000 +0100
+++ libgphoto2-2.5.10/libgphoto2/gphoto2-setting.c	2016-10-20 20:31:27.052067500 +0200
@@ -34,6 +34,10 @@
 #include <gphoto2/gphoto2-port-log.h>
 #include <gphoto2/gphoto2-port-portability.h>
 
+#ifdef WIN32
+#include <Shlobj.h>
+#endif
+
 /**
  * Internal struct to store settings.
  */
@@ -169,21 +173,21 @@
 
 	/* Make sure the directories are created */
 #ifdef WIN32
-	GetWindowsDirectory (buf, sizeof(buf));
-	strcat (buf, "\\gphoto");
+	SHGetFolderPath(NULL, CSIDL_PROFILE, NULL, 0, buf);
+	strcat (buf, "\\.gphoto");	
 #else
 	snprintf (buf, sizeof(buf), "%s/.gphoto", getenv ("HOME"));
-#endif
+#endif  //WIN32
 	GP_LOG_D ("Creating gphoto config directory ('%s')", buf);
 	(void)gp_system_mkdir (buf);
 
 	glob_setting_count = 0;
 #ifdef WIN32
-	GetWindowsDirectory(buf, sizeof(buf));
-	strcat(buf, "\\gphoto\\settings");
+	SHGetFolderPath(NULL, CSIDL_PROFILE, NULL, 0, buf);
+	strcat(buf, "\\.gphoto\\settings");	
 #else
 	snprintf(buf, sizeof(buf), "%s/.gphoto/settings", getenv("HOME"));
-#endif
+#endif  //WIN32
 
 	if (verify_settings(buf) != GP_OK)
 		/* verify_settings will unlink and recreate the settings file */
@@ -225,7 +229,13 @@
 	char buf[1024];
 	int x=0;
 
-	snprintf (buf, sizeof(buf), "%s/.gphoto/settings", getenv ("HOME"));
+	#ifdef WIN32
+		//GetWindowsDirectory (buf, sizeof(buf));
+		SHGetFolderPath(NULL, CSIDL_PROFILE, NULL, 0, buf);
+		strcat(buf, "\\.gphoto\\settings");
+	#else
+		snprintf (buf, sizeof(buf), "%s/.gphoto/settings", getenv ("HOME"));
+	#endif //WIN32	
 
 	GP_LOG_D ("Saving %i setting(s) to file \"%s\"", glob_setting_count, buf);
 
diff -Naur libgphoto2-2.5.10.orig/libgphoto2_port/gphoto2/gphoto2-port-portability.h libgphoto2-2.5.10/libgphoto2_port/gphoto2/gphoto2-port-portability.h
--- libgphoto2-2.5.10.orig/libgphoto2_port/gphoto2/gphoto2-port-portability.h	2016-01-25 20:29:59.000000000 +0100
+++ libgphoto2-2.5.10/libgphoto2_port/gphoto2/gphoto2-port-portability.h	2016-10-21 00:20:35.357889900 +0200
@@ -48,7 +48,9 @@
 
 #define __func__ __FUNCTION__
 
+#ifndef _SSIZE_T_DEFINED
 typedef SSIZE_T ssize_t;
+#endif
 
 /* Work-around for readdir() */
 typedef struct {
diff -Naur libgphoto2-2.5.10.orig/libgphoto2_port/libgphoto2_port/gphoto2-port-portability.c libgphoto2-2.5.10/libgphoto2_port/libgphoto2_port/gphoto2-port-portability.c
--- libgphoto2-2.5.10.orig/libgphoto2_port/libgphoto2_port/gphoto2-port-portability.c	2016-01-25 20:29:59.000000000 +0100
+++ libgphoto2-2.5.10/libgphoto2_port/libgphoto2_port/gphoto2-port-portability.c	2016-10-20 20:32:40.376682900 +0200
@@ -44,11 +44,14 @@
                 /* already converted */
                 return;
 
-        if (path[0] != '.') {
+     //What was the purpose of this?
+     //copying the second character to the first place if path does not start with "."?
+/*        if (path[0] != '.') {
                 path[0] = path[1];
                 path[1] = ':';
                 path[2] = '\\';
         }
+*/
 
         for (x=0; x<strlen(path); x++)
                 if (path[x] == '/')
diff -Naur libgphoto2-2.5.10.orig/libgphoto2_port/usb/libusb.c libgphoto2-2.5.10/libgphoto2_port/usb/libusb.c
--- libgphoto2-2.5.10.orig/libgphoto2_port/usb/libusb.c	2016-02-07 20:56:40.000000000 +0100
+++ libgphoto2-2.5.10/libgphoto2_port/usb/libusb.c	2016-10-20 20:33:17.263585300 +0200
@@ -34,6 +34,10 @@
 #include <dirent.h>
 #include <string.h>
 
+#ifndef ENODATA
+#   define ENODATA	120	/* No data available */
+#endif
+
 #include <usb.h>
 
 #include <gphoto2/gphoto2-port.h>
diff -Naur libgphoto2-2.5.10.orig/libgphoto2_port/vusb/vcamera.c libgphoto2-2.5.10/libgphoto2_port/vusb/vcamera.c
--- libgphoto2-2.5.10.orig/libgphoto2_port/vusb/vcamera.c	2016-03-14 08:01:06.000000000 +0100
+++ libgphoto2-2.5.10/libgphoto2_port/vusb/vcamera.c	2016-10-20 20:34:55.000000000 +0200
@@ -391,16 +391,16 @@
 	dir = gp_system_opendir(path);
 	if (!dir) return;
 	while ((de=gp_system_readdir(dir))) {
-		if (!strcmp(de->d_name,".")) continue;
-		if (!strcmp(de->d_name,"..")) continue;
+		if (!strcmp(gp_system_filename(de),".")) continue;
+		if (!strcmp(gp_system_filename(de),"..")) continue;
 
 		cur = malloc(sizeof(struct ptp_dirent));
 		if (!cur) break;
-		cur->name = strdup(de->d_name);
-		cur->fsname = malloc(strlen(path)+1+strlen(de->d_name)+1);
+		cur->name = strdup(gp_system_filename(de));
+		cur->fsname = malloc(strlen(path)+1+strlen(gp_system_filename(de))+1);
 		strcpy(cur->fsname,path);
 		strcat(cur->fsname,"/");
-		strcat(cur->fsname,de->d_name);
+		strcat(cur->fsname,gp_system_filename(de));
 		cur->id = ptp_objectid++;
 		cur->next = first_dirent;
 		cur->parent = parent;
