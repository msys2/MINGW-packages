From f8704dd34ce2f2bd30a7f20ef9a7848047d8ba32 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Hannes=20M=C3=BCller?= <>
Date: Wed, 17 Jul 2019 16:30:16 +0200
Subject: [PATCH] Fix failed test-conversion caused by optimization

It seems (kk / xx == yy) is optimized out, i.e. always true, if kk = xx * yy
is set before

* libguile/numbers.c (scm_product): robust overflow detection
---
 libguile/numbers.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/libguile/numbers.c b/libguile/numbers.c
index 4f5ab31fb..b774e4a44 100644
--- a/libguile/numbers.c
+++ b/libguile/numbers.c
@@ -4461,7 +4461,7 @@ scm_product (SCM x, SCM y)
	  long yy = SCM_I_INUM (y);
	  long kk = xx * yy;
	  SCM k = SCM_I_MAKINUM (kk);
-	  if ((kk == SCM_I_INUM (k)) && (kk / xx == yy))
+	  if (SCM_I_INUM (k)/xx == yy)
	    return k;
	  else
	    {
--
2.22.0

