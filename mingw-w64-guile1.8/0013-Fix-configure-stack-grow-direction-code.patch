From dd6c5b70fa0dc66b569a1aacd84b45e417af0372 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Hannes=20M=C3=BCller?= <>
Date: Wed, 14 Aug 2022 10:41:47 +0200
Subject: [PATCH] Fix configure stack grow direction code
To: guile-devel@gnu.org

find_stack_direction() from Autoconf 2.61 used in configure.in seems to find
wrong direction on MINGW32_NT, i.e. compiling guile fails. With code update
from Autoconf 2.71 it works (i.e. resulting in SCM_I_GSC_STACK_GROWS_UP='0')
---
diff --git a/configure.in b/configure.in
index 217ac83..46e1f60 100644
--- a/configure.in
+++ b/configure.in
@@ -1184,7 +1184,7 @@ GUILE_STRUCT_UTIMBUF
 #
 # Which way does the stack grow?
 #
-# Following code comes from Autoconf 2.61's internal _AC_LIBOBJ_ALLOCA
+# Following code comes from Autoconf 2.71's internal _AC_LIBOBJ_ALLOCA
 # macro (/usr/share/autoconf/autoconf/functions.m4).  Gnulib has
 # very similar code, so in future we could look at using that.
 #
@@ -1199,23 +1199,20 @@ SCM_I_GSC_STACK_GROWS_UP=0
 AC_RUN_IFELSE([AC_LANG_SOURCE(
 [AC_INCLUDES_DEFAULT
 int
-find_stack_direction ()
+find_stack_direction (int *addr, int depth)
 {
-  static char *addr = 0;
-  auto char dummy;
-  if (addr == 0)
-    {
-      addr = &dummy;
-      return find_stack_direction ();
-    }
-  else
-    return (&dummy > addr) ? 1 : -1;
+  int dir, dummy = 0;
+  if (! addr)
+    addr = &dummy;
+  *addr = addr < &dummy ? 1 : addr == &dummy ? 0 : -1;
+  dir = depth ? find_stack_direction (addr, depth - 1) : 0;
+  return dir + dummy;
 }

 int
-main ()
+main (int argc, char **argv)
 {
-  return find_stack_direction () < 0;
+  return find_stack_direction (0, argc + !argv + 20) < 0;
 }])],
	       [SCM_I_GSC_STACK_GROWS_UP=1],
	       [],
