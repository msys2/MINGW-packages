From 4b35cc22538ecba9fcd0fb69495d9f5919ee775e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=90=D0=BB=D0=B5=D0=BA=D1=81=D0=B5=D0=B9?=
 <alexey.pawlow@gmail.com>
Date: Thu, 17 Jun 2021 18:52:00 +0530
Subject: [PATCH 056/N] dont link with gettext
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Co-authored-by: Алексей <alexey.pawlow@gmail.com>
---
 Modules/_localemodule.c | 7 +++++++
 configure.ac            | 9 +++++++++
 2 files changed, 16 insertions(+)

diff --git a/Modules/_localemodule.c b/Modules/_localemodule.c
index 2e353bb..ea222af 100644
--- a/Modules/_localemodule.c
+++ b/Modules/_localemodule.c
@@ -12,6 +12,13 @@ This software comes with no warranty. Use at your own risk.
 #define PY_SSIZE_T_CLEAN
 #include "Python.h"
 #include "pycore_fileutils.h"
+#ifdef __MINGW32__
+/* The header libintl.h and library libintl may exist on mingw host.
+ * To be compatible with MSVC build we has to undef some defines.
+ */
+#undef HAVE_LIBINTL_H
+#undef HAVE_BIND_TEXTDOMAIN_CODESET
+#endif
 
 #include <stdio.h>
 #include <locale.h>
diff --git a/configure.ac b/configure.ac
index acb5bea..c09b5fb 100644
--- a/configure.ac
+++ b/configure.ac
@@ -3151,10 +3151,19 @@ AC_SEARCH_LIBS(sem_init, pthread rt posix4)
 fi
 
 # check if we need libintl for locale functions
+case $host in
+  *-*-mingw*)
+  dnl Native windows build don't use libintl (see _localemodule.c).
+  dnl Also we don't like setup.py to add "intl" library to the list
+  dnl when build _locale module.
+  ;;
+  *)
 AC_CHECK_LIB(intl, textdomain,
 	[AC_DEFINE(WITH_LIBINTL, 1,
 	[Define to 1 if libintl is needed for locale functions.])
         LIBS="-lintl $LIBS"])
+  ;;
+esac
 
 # checks for system dependent C++ extensions support
 case "$ac_sys_system" in
-- 
2.32.0

