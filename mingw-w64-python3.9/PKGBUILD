# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Maintainer: Ray Donnelly <mingw.android@gmail.com>
# Contributor: Saul Ibarra Corretge <saghul@gmail.com>
# Contributor: Frode Solheim <frode@fs-uae.net>

# TODO :: subprocess.Popen .. specifically list2cmdline in subprocess.py
#         needs a fix so it can handle running MSYS2 executables better.
#         Arguments should not be quoted in the Windows fashion as-per:
#         http://www.daviddeley.com/autohotkey/parameters/parameters.htm
#         but instead how Cygwin expects them to be quoted. Checking for
#         {cygwin,msys-2.0}.dll in the executable is the only way that I
#         can think to do this at present.
#         Any double quoted string will cause problems, e.g.
#         -DGNOMELOCALEDIR=\"/mingw64/share/locale\"

_primary_python="no"
_pybasever=3.9
_realname=python

if [[ "${_primary_python}" == "yes" ]]; then
  pkgbase="mingw-w64-${_realname}"
  pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
  provides=("${MINGW_PACKAGE_PREFIX}-python3=${pkgver}")
  conflicts=("${MINGW_PACKAGE_PREFIX}-python3"
            "${MINGW_PACKAGE_PREFIX}-python2<2.7.16-7")
  replaces=("${MINGW_PACKAGE_PREFIX}-python3")
else
  pkgbase="mingw-w64-${_realname}${_pybasever}"
  pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}${_pybasever}")
fi
pkgver=${_pybasever}.5
pkgrel=7
pkgdesc="A high-level scripting language (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32')
license=('PSF')
url="https://www.python.org/"
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-expat"
         "${MINGW_PACKAGE_PREFIX}-bzip2"
         "${MINGW_PACKAGE_PREFIX}-libffi"
         "${MINGW_PACKAGE_PREFIX}-mpdecimal"
         "${MINGW_PACKAGE_PREFIX}-ncurses"
         "${MINGW_PACKAGE_PREFIX}-openssl"
         "${MINGW_PACKAGE_PREFIX}-sqlite3"
         "${MINGW_PACKAGE_PREFIX}-tcl"
         "${MINGW_PACKAGE_PREFIX}-tk"
         "${MINGW_PACKAGE_PREFIX}-zlib"
         "${MINGW_PACKAGE_PREFIX}-xz")
makedepends=(
  "${MINGW_PACKAGE_PREFIX}-gcc"
  "${MINGW_PACKAGE_PREFIX}-pkg-config"
  "autoconf-archive"
)
options=('makeflags') # 'debug' '!strip')
source=("https://www.python.org/ftp/python/${pkgver%rc?}/Python-${pkgver}.tar.xz"
        "smoketests.py"
        0001-make-_sysconfigdata.py-relocatable.patch
        0002-restore-setup-config.patch
        0003-MINGW-BASE-use-NT-thread-model.patch
        0004-MINGW-translate-gcc-internal-defines-to-python-platf.patch
        0005-MINGW-configure-MACHDEP-and-platform-for-build.patch
        0006-MINGW-preset-configure-defaults.patch
        0007-MINGW-configure-largefile-support-for-windows-builds.patch
        0008-MINGW-add-srcdir-PC-to-CPPFLAGS.patch
        0009-MINGW-init-system-calls.patch
        0010-MINGW-build-in-windows-modules-winreg.patch
        0011-MINGW-determine-if-pwdmodule-should-be-used.patch
        0012-MINGW-compiler-customize-mingw-cygwin-compilers.patch
        0013-MINGW-compiler-enable-new-dtags.patch
        0014-issue6672-v2-Add-Mingw-recognition-to-pyport.h-to-al.patch
        0015-MINGW-configure-for-shared-build.patch
        0016-MINGW-dynamic-loading-support.patch
        0017-MINGW-ignore-main-program-for-frozen-scripts.patch
        0018-MINGW-setup-_multiprocessing-module.patch
        0019-MINGW-setup-select-module.patch
        0020-MINGW-setup-_ctypes-module-with-system-libffi.patch
        0021-MINGW-defect-winsock2-and-setup-_socket-module.patch
        0022-MINGW-exclude-unix-only-modules.patch
        0023-MINGW-setup-msvcrt-and-_winapi-modules.patch
        0024-MINGW-build-extensions-with-GCC.patch
        0025-MINGW-use-Mingw32CCompiler-as-default-compiler-for-m.patch
        0026-MINGW-find-import-library.patch
        0027-MINGW-setup-_ssl-module.patch
        0028-MINGW-generalization-of-posix-build-in-sysconfig.py.patch
        0029-MINGW-support-stdcall-without-underscore.patch
        0030-use-replace-instead-rename-to-avoid-failure-on-windo.patch
        0031-MINGW-avoid-circular-dependency-from-time-module-dur.patch
        0032-MINGW-generalization-of-posix-build-in-distutils-sys.patch
        0033-MINGW-customize-site.patch
        0034-add-python-config-sh.patch
        0035-cross-darwin-feature.patch
        0036-py3k-mingw-ntthreads-vs-pthreads.patch
        0037-mingw-system-libffi.patch
        0038-msys-mingw-prefer-unix-sep-if-MSYSTEM.patch
        0039-mingw-use-posix-getpath.patch
        0040-mingw-add-ModuleFileName-dir-to-PATH.patch
        0041-mingw-add-BUILDIN_WIN32_MODULEs-time-msvcrt.patch
        0042-msys-cygwin-semi-native-build-sysconfig.patch
        0043-mingw-sysconfig-like-posix.patch
        0044-mingw-_winapi_as_builtin_for_Popen_in_cygwinccompile.patch
        0045-cross-dont-add-multiarch-paths-if-cross-compiling.patch
        0046-mingw-use-backslashes-in-compileall-py.patch
        0047-msys-convert_path-fix-and-root-hack.patch
        0048-allow-static-tcltk.patch
        0049-mingw-pdcurses_ISPAD.patch
        0050-grammar-fixes.patch
        0051-builddir-fixes.patch
        0052-msys-monkeypatch-os-system-via-sh-exe.patch
        0053-msys-replace-slashes-used-in-io-redirection.patch
        0054-mingw-install-layout-as-posix.patch
        0055-remove_path_max.default.patch
        0056-dont-link-with-gettext.patch
        0057-ctypes-python-dll.patch
        0058-gdbm-module-includes.patch
        0059-use-gnu_printf-in-format.patch
        0060-mingw-fix-ssl-dont-use-enum_certificates.patch
        0061-mingw-build-optimized-ext.patch
        0062-cygwinccompiler-dont-strip-modules-if-pydebug.patch
        0063-fix-using-dllhandle-and-winver-mingw.patch
        0064-mingw-add-LIBPL-to-library-dirs.patch
        0065-Add-AMD64-to-sys-config-so-msvccompiler-get_build_ve.patch
        0066-MINGW-link-with-additional-library.patch
        0067-install-msilib.patch
        0068-dont-include-system-ncurses-path.patch
        0069-fix-signal-module-build.patch
        0070-build-winconsoleio.patch
        0071-expose-sem_unlink.patch
        0072-cygpty-isatty.patch
        0073-disable-broken-gdbm-module.patch
        0074-link-win-resource-files-and-build-pythonw.patch
        0075-3.7-mpdec-mingw.patch
        0076-disable-readline.patch
        0077-fix-isselectable.patch
        0078-use-_wcsnicmp-instead-wcsncasecmp.patch
        0079-_xxsubinterpretersmodule.patch
        0080-sqlite3-module-defines.patch
        0081-configure-have-inet-pton.patch
        0082-fix-msvc9-import.patch
        0083-set-venv-activate-path-unix.patch
        0084-venv-creation-fixes.patch
        0085-pass-gen-profile-ldflags.patch
        0086-distutils-add-windmc-to-cygwinccompiler.patch
        0087-pkg-config-windows-must-link-ext-with-python-lib.patch
        0088-importlib-bootstrap-path-sep.patch
        0089-pathlib-path-sep.patch
        0090-warnings-fixes.patch
        0091-fix-build-testinternalcapi.patch
        0092-extend-MS_WINDOWS-flag.patch
        0093-clang-arm64.patch
        0094-MINGW-stack-reserve.patch
        0095-Add-support-for-Windows-7-Python-3.9.patch
        0097-Don-t-use-os.pathsep-to-find-EOF.patch
        0098-Fix-extension-suffix-for-c-extensions-on-mingw.patch
        0099-Change-the-get_platform-method-in-sysconfig-and-dist.patch)

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying ${_patch}"
    patch -Nbp1 -i "${srcdir}/${_patch}"
  done
}

prepare() {
  cd "${srcdir}/Python-${pkgver}"

 apply_patch_with_msg 0001-make-_sysconfigdata.py-relocatable.patch \
  0002-restore-setup-config.patch \
  0003-MINGW-BASE-use-NT-thread-model.patch \
  0004-MINGW-translate-gcc-internal-defines-to-python-platf.patch \
  0005-MINGW-configure-MACHDEP-and-platform-for-build.patch \
  0006-MINGW-preset-configure-defaults.patch \
  0007-MINGW-configure-largefile-support-for-windows-builds.patch \
  0008-MINGW-add-srcdir-PC-to-CPPFLAGS.patch \
  0009-MINGW-init-system-calls.patch \
  0010-MINGW-build-in-windows-modules-winreg.patch \
  0011-MINGW-determine-if-pwdmodule-should-be-used.patch \
  0012-MINGW-compiler-customize-mingw-cygwin-compilers.patch \
  0013-MINGW-compiler-enable-new-dtags.patch \
  0014-issue6672-v2-Add-Mingw-recognition-to-pyport.h-to-al.patch \
  0015-MINGW-configure-for-shared-build.patch \
  0016-MINGW-dynamic-loading-support.patch \
  0017-MINGW-ignore-main-program-for-frozen-scripts.patch \
  0018-MINGW-setup-_multiprocessing-module.patch \
  0019-MINGW-setup-select-module.patch \
  0020-MINGW-setup-_ctypes-module-with-system-libffi.patch \
  0021-MINGW-defect-winsock2-and-setup-_socket-module.patch \
  0022-MINGW-exclude-unix-only-modules.patch \
  0023-MINGW-setup-msvcrt-and-_winapi-modules.patch \
  0024-MINGW-build-extensions-with-GCC.patch \
  0025-MINGW-use-Mingw32CCompiler-as-default-compiler-for-m.patch \
  0026-MINGW-find-import-library.patch \
  0027-MINGW-setup-_ssl-module.patch \
  0028-MINGW-generalization-of-posix-build-in-sysconfig.py.patch \
  0029-MINGW-support-stdcall-without-underscore.patch \
  0030-use-replace-instead-rename-to-avoid-failure-on-windo.patch \
  0031-MINGW-avoid-circular-dependency-from-time-module-dur.patch \
  0032-MINGW-generalization-of-posix-build-in-distutils-sys.patch \
  0033-MINGW-customize-site.patch \
  0034-add-python-config-sh.patch \
  0035-cross-darwin-feature.patch \
  0036-py3k-mingw-ntthreads-vs-pthreads.patch \
  0037-mingw-system-libffi.patch \
  0038-msys-mingw-prefer-unix-sep-if-MSYSTEM.patch \
  0039-mingw-use-posix-getpath.patch \
  0040-mingw-add-ModuleFileName-dir-to-PATH.patch \
  0041-mingw-add-BUILDIN_WIN32_MODULEs-time-msvcrt.patch \
  0042-msys-cygwin-semi-native-build-sysconfig.patch \
  0043-mingw-sysconfig-like-posix.patch \
  0044-mingw-_winapi_as_builtin_for_Popen_in_cygwinccompile.patch \
  0045-cross-dont-add-multiarch-paths-if-cross-compiling.patch \
  0046-mingw-use-backslashes-in-compileall-py.patch \
  0047-msys-convert_path-fix-and-root-hack.patch \
  0048-allow-static-tcltk.patch \
  0049-mingw-pdcurses_ISPAD.patch \
  0050-grammar-fixes.patch \
  0051-builddir-fixes.patch \
  0052-msys-monkeypatch-os-system-via-sh-exe.patch \
  0053-msys-replace-slashes-used-in-io-redirection.patch \
  0054-mingw-install-layout-as-posix.patch \
  0055-remove_path_max.default.patch \
  0056-dont-link-with-gettext.patch \
  0057-ctypes-python-dll.patch \
  0058-gdbm-module-includes.patch \
  0059-use-gnu_printf-in-format.patch \
  0060-mingw-fix-ssl-dont-use-enum_certificates.patch \
  0061-mingw-build-optimized-ext.patch \
  0062-cygwinccompiler-dont-strip-modules-if-pydebug.patch \
  0063-fix-using-dllhandle-and-winver-mingw.patch \
  0064-mingw-add-LIBPL-to-library-dirs.patch \
  0065-Add-AMD64-to-sys-config-so-msvccompiler-get_build_ve.patch \
  0066-MINGW-link-with-additional-library.patch \
  0067-install-msilib.patch \
  0068-dont-include-system-ncurses-path.patch \
  0069-fix-signal-module-build.patch \
  0070-build-winconsoleio.patch \
  0071-expose-sem_unlink.patch \
  0072-cygpty-isatty.patch \
  0073-disable-broken-gdbm-module.patch \
  0074-link-win-resource-files-and-build-pythonw.patch \
  0075-3.7-mpdec-mingw.patch \
  0076-disable-readline.patch \
  0077-fix-isselectable.patch \
  0078-use-_wcsnicmp-instead-wcsncasecmp.patch \
  0079-_xxsubinterpretersmodule.patch \
  0080-sqlite3-module-defines.patch \
  0081-configure-have-inet-pton.patch \
  0082-fix-msvc9-import.patch \
  0083-set-venv-activate-path-unix.patch \
  0084-venv-creation-fixes.patch \
  0085-pass-gen-profile-ldflags.patch \
  0086-distutils-add-windmc-to-cygwinccompiler.patch \
  0087-pkg-config-windows-must-link-ext-with-python-lib.patch \
  0088-importlib-bootstrap-path-sep.patch \
  0089-pathlib-path-sep.patch \
  0090-warnings-fixes.patch \
  0091-fix-build-testinternalcapi.patch \
  0092-extend-MS_WINDOWS-flag.patch \
  0093-clang-arm64.patch \
  0094-MINGW-stack-reserve.patch \
  0095-Add-support-for-Windows-7-Python-3.9.patch \
  0097-Don-t-use-os.pathsep-to-find-EOF.patch \
  0098-Fix-extension-suffix-for-c-extensions-on-mingw.patch \
  0099-Change-the-get_platform-method-in-sysconfig-and-dist.patch
 
  autoreconf -vfi
}

check() {
  cd "${srcdir}/build-${CARCH}"

  # Some basic tests to ensure nothing major or MSYS2 specific features are
  # broken
  ./python.exe "${srcdir}/smoketests.py"
  MSYSTEM= ./python.exe "${srcdir}/smoketests.py"

  # make test EXTRATESTOPTS="-v"
}

build() {
  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})

  CFLAGS+=" -fwrapv -D__USE_MINGW_ANSI_STDIO=1 -D_WIN32_WINNT=0x0601"
  CXXFLAGS+=" -fwrapv -D__USE_MINGW_ANSI_STDIO=1 -D_WIN32_WINNT=0x0601"
  CPPFLAGS+=" -I${PREFIX_WIN}/include/ncurses "

  declare -a _extra_config
  if check_option "debug" "n"; then
    CFLAGS+=" -DNDEBUG "
    CXXFLAGS+=" -DNDEBUG "
    _extra_config+=("--enable-optimizations")
    # _extra_config+=("--with-lto")
  else
    CFLAGS+=" -O0 -ggdb"
    CXXFLAGS+=" -O0 -ggdb"
    _extra_config+=("--with-pydebug")
  fi


  # Fix MS_DLL_ID undeclared in PC/dl_nt.c
  local f3f=0
  local re='^[0-9]+$'
  local part3=${pkgver##*.}
  if ! [[ $part3 =~ $re ]] ; then
    local c=
    while test -n "$part3"; do
      local b=${part3:0:1}
      if ! [[ $b =~ $re ]] ; then
        break
      fi
      c+=${b}
      part3=${part3:1}
    done
    f3f=$((f3f + 1000 * $((${c}))))
    local part3Len=${#part3}
    if [ "$part3Len" -ge "1" ] ; then
      f3f=$((f3f + 10 * $((0x${part3:0:1}))))
      if [ "$part3Len" -ge "2" ] ; then
        f3f=$((f3f + ${part3:1:1}))
      fi
    fi
  else
      f3f=$((f3f + 1000 * ${part3}))
  fi
  CFLAGS+=" -DMS_DLL_ID=\\\"${_pybasever}\\\""
  CFLAGS+=" -DFIELD3=${f3f}"
  CFLAGS+=" -DORIGINAL_FILENAME=\\\"libpython${_pybasever}.dll\\\""
  local rc_flags=" -DMS_DLL_ID=\\\\\\\"${_pybasever}\\\\\\\" -DFIELD3=${f3f} -DORIGINAL_FILENAME=\\\\\\\"libpython${_pybasever}.dll\\\\\\\""

  # Workaround for conftest error on 64-bit builds
  export ac_cv_working_tzset=no

  # Workaround for when dlfcn exists on Windows, which causes
  # some conftests to succeed when they shouldn't (we don't use dlfcn).
  export ac_cv_header_dlfcn_h=no
  export ac_cv_lib_dl_dlopen=no
  export ac_cv_have_decl_RTLD_GLOBAL=no
  export ac_cv_have_decl_RTLD_LAZY=no
  export ac_cv_have_decl_RTLD_LOCAL=no
  export ac_cv_have_decl_RTLD_NOW=no
  export ac_cv_have_decl_RTLD_DEEPBIND=no
  export ac_cv_have_decl_RTLD_MEMBER=no
  export ac_cv_have_decl_RTLD_NODELETE=no
  export ac_cv_have_decl_RTLD_NOLOAD=no

  [[ -d "${srcdir}/build-${CARCH}" ]] && rm -rf "${srcdir}/build-${CARCH}"
  mkdir -p "${srcdir}/build-${CARCH}" && cd "${srcdir}/build-${CARCH}"

  MSYSTEM=MINGW ../Python-${pkgver}/configure \
    --prefix=${MINGW_PREFIX} \
    --host=${MINGW_CHOST} \
    --build=${MINGW_CHOST} \
    --enable-shared \
    --with-nt-threads \
    --with-system-expat \
    --with-system-ffi \
    --with-system-libmpdec \
    --without-ensurepip \
    --without-c-locale-coercion \
    --enable-loadable-sqlite-extensions \
    "${_extra_config[@]}" \
    RCFLAGS="$rc_flags" \
    OPT=""

  # We patch importlib which is embedded in C headers, so regenerate them
  make regen-importlib

  make

  # Add missing venvlauncher files (issue #7014)
  # FIXME: build these from PC/launcher.c instead
  cp python.exe venvlauncher.exe
  cp pythonw.exe venvwlauncher.exe
}

package() {
  cd "${srcdir}/build-${CARCH}"

  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  MSYSTEM=MINGW \
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  make -j1 install DESTDIR="${pkgdir}"
  if check_option "debug" "n"; then
    VERABI=${_pybasever}
  else
    VERABI=${_pybasever}d
  fi

  # gdb pretty printers for debugging Python itself; to use:
  # python
  # sys.path.append('C:/msys64/mingw64/share/gdb/python3')
  # import python_gdb
  # reload(python_gdb)
  # end
  if [[ "${_primary_python}" == "yes" ]]; then
    [[ -d "${pkgdir}${MINGW_PREFIX}"/share/gdb/python3/ ]] || mkdir -p "${pkgdir}${MINGW_PREFIX}"/share/gdb/python3/
    cp -f python.exe-gdb.py "${pkgdir}${MINGW_PREFIX}"/share/gdb/python3/python_gdb.py
  fi

  cp -f "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${VERABI}/libpython${VERABI}.dll.a "${pkgdir}${MINGW_PREFIX}"/lib/libpython${VERABI}.dll.a

  # Need for building boost python module
  cp -f "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${VERABI}/libpython${VERABI}.dll.a "${pkgdir}${MINGW_PREFIX}"/lib/libpython${_pybasever}.dll.a

  # some useful "stuff"
  install -dm755 "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/{i18n,scripts}
  install -m755 "${srcdir}/Python-${pkgver}"/Tools/i18n/{msgfmt,pygettext}.py "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/i18n/
  install -m755 "${srcdir}/Python-${pkgver}"/Tools/scripts/{README,*py} "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/scripts/

  # clean up #!s
  find "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/ -name '*.py' | \
    xargs sed -i "s|#[ ]*![ ]*/usr/bin/env python$|#!/usr/bin/env python|"

  # clean-up reference to build directory
  sed -i "s#${srcdir}/Python-${pkgver}:##" "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${VERABI}/Makefile

  for fscripts in 2to3 2to3-${_pybasever} idle3 idle${_pybasever} pydoc3 pydoc${_pybasever}; do
    sed -i "s|$(cygpath -w ${MINGW_PREFIX} | sed 's|\\|\\\\|g')/bin/python${_pybasever}.exe|/usr/bin/env python${_pybasever}.exe|g" "${pkgdir}${MINGW_PREFIX}"/bin/${fscripts}
  done

  if [[ "${_primary_python}" == "yes" ]]; then
    # Default names are aliases for Python now
    cp "${pkgdir}${MINGW_PREFIX}"/bin/python3.exe "${pkgdir}${MINGW_PREFIX}"/bin/python.exe
    cp "${pkgdir}${MINGW_PREFIX}"/bin/python3w.exe "${pkgdir}${MINGW_PREFIX}"/bin/pythonw.exe
    cp "${pkgdir}${MINGW_PREFIX}"/bin/python3-config "${pkgdir}${MINGW_PREFIX}"/bin/python-config
    cp "${pkgdir}${MINGW_PREFIX}"/bin/idle3 "${pkgdir}${MINGW_PREFIX}"/bin/idle
    cp "${pkgdir}${MINGW_PREFIX}"/bin/pydoc3 "${pkgdir}${MINGW_PREFIX}"/bin/pydoc
  else
    rm "${pkgdir}${MINGW_PREFIX}"/bin/python3.exe
    rm "${pkgdir}${MINGW_PREFIX}"/bin/python3w.exe
    rm "${pkgdir}${MINGW_PREFIX}"/bin/python3-config
    rm "${pkgdir}${MINGW_PREFIX}"/bin/idle3
    rm "${pkgdir}${MINGW_PREFIX}"/bin/pydoc3
    rm "${pkgdir}${MINGW_PREFIX}"/bin/2to3
    rm "${pkgdir}${MINGW_PREFIX}"/lib/pkgconfig/python3-embed.pc
    rm "${pkgdir}${MINGW_PREFIX}"/lib/pkgconfig/python3.pc
    rm "${pkgdir}${MINGW_PREFIX}"/share/man/man1/python3.1
  fi

  sed -i "s|#!${pkgdir}${MINGW_PREFIX}/bin/python${VERABI}.exe|#!/usr/bin/env python${_pybasever}.exe|" "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${VERABI}/python-config.py

  # fix permissons
  find ${pkgdir}${MINGW_PREFIX} -type f \( -name "*.dll" -o -name "*.exe" \) | xargs chmod 0755

  # Fix up two instances of MSYS2 paths in python-config.sh in-case the final consumer of the results are native executables.
  sed -e "s|${MINGW_PREFIX}|${PREFIX_WIN}|" \
    -i "${pkgdir}${MINGW_PREFIX}"/bin/python${VERABI}-config
  if [[ "${_primary_python}" == "yes" ]]; then
    sed -e "s|${MINGW_PREFIX}|${PREFIX_WIN}|" \
      -i "${pkgdir}${MINGW_PREFIX}"/bin/python3-config \
      -i "${pkgdir}${MINGW_PREFIX}"/bin/python-config
  fi

  # replace paths in sysconfig
  sed -i "s|${pkgdir}${MINGW_PREFIX}|${MINGW_PREFIX}|g" \
    "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/lib-dynload/_sysconfigdata*.py \
    "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/smtpd.py

  # install venv launchers
  mkdir -p "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/venv/scripts/nt
  cp venvlauncher.exe "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/venv/scripts/nt/python.exe
  cp venvwlauncher.exe "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/venv/scripts/nt/pythonw.exe
}

sha256sums=('0c5a140665436ec3dbfbb79e2dfb6d192655f26ef4a29aeffcb6d1820d716d83'
            '7188e017a1efba4a87cb64a38b63ed2d8a469e2e74c3fd35b6538d5bc6e370e5'
            '97af070c4e89e717ab1620e0d51ff2341e311d003883b60f47ea6ebd39e34aab'
            'dcf751d73aecd036c81bd7a1ad72ab4023abef5c9461614e5e0c7061ac02f681'
            '9f00f503389253f7124686a76b132aedf3826da99b51167a23b3294c56190d00'
            '3fde82b931873d0d14f0a6c47cc94bd65689883be4d793705592efd37427037d'
            'e15de050ce0982ccf1b2c9a0a40950974fe54ee7248888622595da8599be6ac3'
            '1d503439324e2e462338653e7e38e57ffbd5611c99bb4c03e3ea97b88933524e'
            '78867a942e8a883d0c41fa663da24cd4a108f2af52fcece1fe0ea86a1845299a'
            '470790b6b89a9fa2a126fb39502d981644a3b09036579612ef95dad413573828'
            '118d49b6f090b697222c6ed9a956d46dbf4c9e763bf64f13740dce326b6d3040'
            '2fe332625fe7715f11227bd21a0e9029202ca93f1c2d54122ace7a2272f2795f'
            '882592f8d9a28a790018431d5c0c6075b2a7ea4d2156f9a712954a7f08d2f7da'
            'b8b8cc2b8c0296d4473189c3be93d0de23bcd50e124fd3c4dcbdd9128849715b'
            '7c0d3743b4f40ddec2f55d5b55676ebdf62f288cec5757913051bcaf8f3737e6'
            '40205c34fdf9d0fbb983112ee48804a5df1e8b033be243e50f115768d133ee8e'
            'd66ec5d18920c657d93a1331f3a4e4283fefeba225cd94a6720c90647027c5d5'
            '2a5bf6decd9b620aeb1a0419412de45ad0f6831713a19bf26cff5f2710c0b3da'
            'f7d6a5dececd1ee2008473aadc7017e8d3a2b072b551308dc8ac2c17d75f3262'
            'f5b0874c16c96b3558a4160ce6f373f090cb3c760d42583a8805cf6a8bacfb7c'
            '6cf7a49bee63868cf792dd9df1ef2db97b4cd606fce3f813deb72fdc530277e6'
            '4431c0139e3edb52ae01e7f8b48a08753c846c558511aae691a3fc23f7aafef9'
            '82f483691ef309e1c50e0747856aeb06775b6e5f17dc66d63640a6b1def2e162'
            '8dec7227b3c8fc83aee9452bb134a84c564403b1bbb6f268a4c735bc5f8c83dd'
            'df05fea7e5b6c238e06aeb0d4dd7eb56721528dd7b74c2b5648b1f0a737f146a'
            '9cba0a497bf9fcdbd6833b33eda72510b0dc3717ca888f7e3a923f1b24362a90'
            '0bf7492a25be177da6691b6102d5fc0aa548f5a0bde626ef4b07dd774f5a95e0'
            'c1510ac994893cb0ab664d890bd2bbbcb3ed00a19741d48ec860a23ee19b6770'
            '1d4549dfde9469312bd01335565e708497c09fdb01f5a4deb9b5311dfd411e7e'
            '663e69340bfaba445eed23ec1c6448fc4103de3fa5365e60e82f9127ac307461'
            'd3a36ae2246649b4d0fe5879413639f6743389c7e1099d3ca4c647cc0b28af9e'
            '10db03bc60f442a9ac14e66e4038ddf768ec567b51fcfe7db46f58bfe9b7027b'
            '349103c429b300d4a96f2f8a952365a64177435840199132eca3e351efaa1df2'
            'e698253ffd731402bb21a0c72763dab4abc9d0fad961a690f9e93df86419d46c'
            '2fdbb35da1118e846a73108f46dfb3a9cd061a2bae41ff0f384e17e8d91daf5d'
            'd2344aef9e119e50f267877a4c9907154db237653a819eb465b73d063dd9fa51'
            '7b42b2e6a95cc054dde479a0b235e5172342b28cf0aed653027d092ee4989c0a'
            '4e50dcaf2719868b57e61690d0af576a4b45ee598929fd4c3fa2b335b0bf5751'
            'c954f66e19658def5af836a599c6a716c7f212077eef86e4bf1f1850abcc1d59'
            'dfa87394d99bcbdc2b97b632b5b61298edb1734c9040d680dc123ca8ca6fabea'
            '36f5b5c7d25e67cd43e78e12732417c709dc45cb0db8a5b03439e4a3262d3913'
            'c0e3c944bcf871ee216dc22cca671c457997c8dc26deb9f3f686114b8fe2cf6b'
            '55b41cc4bb96d0a5b3492103f5425612f6c789cd274a7f0003b887ff474fd07b'
            '0da36dbefdfce7bc6d69e4d6b7866c357e590fbe3cf37fd751e2ad30907ee6b7'
            '62544d2035295a7d2ca1122ce750281fd188755ef7d59626c39b508f291f5885'
            '895b7f94ffa6bb750cafad0f54f95bac3ee728ecb19a98c44d0e1b1ff0dda20f'
            'a17e4632d6e7472370d368a5610c64e518d907041cec0449abf48b2617ad79d8'
            'fd8418f6dbdb8d7388b8f509e16ae7280a3b5f08083dd3ab90be1bc1366bb4ae'
            '7f5a848e84e793548be233b0fa6f50a2ca3b9054505950c247c01a0c34770e1e'
            'f4de3e6ab7b952c0383bc64ffdb0da3c53ef9944f03135d82f9b0dc18170587a'
            '173054f907a36d0e86ca7bff7d95e248ae9b8f2dca9a5155a7e358d6570c674f'
            '5181e44ba283959e6dfa6dd9f2f4cd9e7182bc6a3a37218f2c971579799d89c4'
            'b0bfe1ce9321f51b626ce6e82d750cddd0a8cddf3902a2004cbf5b4de4367a05'
            'f1312828b7a007729d351e85cd470a9208575cd0af2e9fb8cd70c5ec0eef417a'
            '211cc6e456b3ba97d07125959fd1d6b520c0fe803ff929858ea25c888b69cf5a'
            '6e9ee9c2bb921693f4f34ae0b09d4ebe6ccf06e1cf58cab2a823eab3625c2404'
            '143a1ced4eff06da2c036c40a1ed75726b6b5665ec78a97742265ca0cb4d1f58'
            '6355766012652f51774982313c7bf2458dc8888789d983f85259e11e2f0b8a42'
            'f51129bd8284b71e88ba9cd54d14454634f4b33d835f04cc416ffa2d3c91fa88'
            'f43e789c001ce186015c61c63ac7cd1b8ec71257ab34492a7c79551aeb3b1a9c'
            '4e885475cb16d41a9be70d3e999a4351719daa7c597356505965a10927d6a8fe'
            '7577f4fa7894f5e1a2c160b6652463423544ccafa8219d8d081eb3bdc6cec976'
            '6ada7211c2cf83ef7b9cb75d09a412336a5d9eec3cf83bdff8972d9ae54a50a2'
            'd1cca9980931932f848e2e610c80ca758f85a1f42d0a948de7541b5785624d9a'
            'd5cdc70218a35132db5c8d68b5664b01c600c1643b357b8df1e2205d3fa0c91c'
            '21ed4afe73810c2f14988ace91695b4802582dc14f3e17bd12c1f86116906854'
            'a5d3f8ef300039808f555fb3af67aa6d1eb6e22d3cc33edf2f14a158b1a348c6'
            '2a5d78a306832a8dd6d8a1163945eb4ea6edf9afc4d525f479192fd9d8edf617'
            '26d59e97027dd11efd0ee837a9c487b12fa26775c66969099b045fdf7e3f28a2'
            'a1b6041e32e8e071b20fa42a0be441a45c85053a853b8b6199b07fe7134bdf19'
            '953db26945098ec397b4e562ce623baff1f984227bd5151b27cf754e621037bd'
            '24981c88fe2da71ce1979fab0ede910e659ddeaae5b58fc9bf7eb5a1f96710d2'
            'bb96f6cf991f545ee4b4c9d58d15493d2db201f426fe64d29a94fa2046dfee9f'
            'bd5568fe6b760280842f39b5ac20d7e03e6b9a55b843d14b9d7352708b41898d'
            '6c64bb1ca76d8e2f5d67e7d3d96da37428e6869ac06fca8234efbe4625403926'
            'b68dde66e5d84d99b8cba828aa94522c28e5455b3cf2f2a7ed65311f9e0ffe16'
            '1a86c41f94de419ee81d2df00afaafa2ac0e8c46a22f2c7908f68d74409be5a0'
            'fb9ebb2347a5ed7b261f068686a05c8327931348f5230a005fdfce58d25217bc'
            'bdbbaac0c1f208f69c747292adc5554854336db713747d0f342d5ce681814e80'
            'b182d1dae60661152097db3e2f397766484ca5cacfb990e6f6b97d9e99ba5095'
            '3be57efbddc0804b12bafd145c2c0c7ff273a75c4da8b33a5da67c539f00f599'
            '762382f5b98029f87d55771a4013bda18421f2e446119a443671569ae1d1bc4b'
            '3ab0ccd427cff46af1a98ef2e9c075a5d7ce34075fcdf7b6481879367801598e'
            'a9709e8bef6ad8b6bd102a5230006b24d5867dfd747f7018c7bade2fe07de4a2'
            '3ac8bc719def91f885afce4c37837a987616a9b9b5d3abdd2b97a253328c3089'
            '85c1b62c3800e04614fc1fd63da6ae906d82ad672c0f51b2d4ad2127e5d33fec'
            '682978650b0290c8536cb72dbd3db91b08df46c7aa0fad35871bafbf14857d7c'
            '727779bee3186fbe17241e9ab039ad388f9ea53db26bcc9d37a05bcc87381544'
            '6e3938276852db6dcf75e342821cc9c2d1547a543af8b754a259065f9d67ad70'
            '0ee37dcb116fec19191dfba12bf08805282c2263d72303b35d39a15587a88d62'
            '0fe3d55032b81867cb594a9bc16cc86573fdc855b913510552d11da06a78c1fd'
            '25146bf21975298b5a6a63f61f7f0eb56c91aaf88a0ed9ee4a585fa2d8ba9551'
            '9cdd9a70075c0280ee3eb8fb6b0f08b69c719707dfd7cf72eeb16c4499f90708'
            '7c240ce0377c32c6b895065efe900a22851bcc91896c905e648c763bc5c4786b'
            'e074eacb9e55994e5dc243623da26f15796d844470769e6e32961da3bcaf847a'
            'd7e4f9e399a51080fee96185cc5983459c66f827476984f99c8ed366398e7fec'
            '25c0e1e082f1f593185331373e8ab24896827be667f664511f05bb5bc7a50acf'
            '7fc4a71ad074786eecd19531711c0482623666e9e0b0310ec6ec57e8cbabcaa0'
            'eda6c193ed4cbdff62650b534bead2feb3335930f36bba5b1f0f153ec7716774'
            '342273c53623edd5863f42461d0b6cc67fd8d8d65d7b461462ceabdc77007aa6')
