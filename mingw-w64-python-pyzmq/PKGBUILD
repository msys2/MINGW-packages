# Maintainer: Patrick Stewart <patstew@gmail.com>

_realname=pyzmq
pkgbase=mingw-w64-python-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-python-${_realname}")
provides=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
conflicts=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
replaces=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
pkgver=23.0.0b1
pkgrel=1
pkgdesc="Python bindings for zeromq, written in Cython (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32')
url="https://www.zeromq.org/languages/python"
license=('LGPL')
depends=("${MINGW_PACKAGE_PREFIX}-python"
         "${MINGW_PACKAGE_PREFIX}-zeromq")
makedepends=("${MINGW_PACKAGE_PREFIX}-python-setuptools"
             "${MINGW_PACKAGE_PREFIX}-python-packaging"
             "${MINGW_PACKAGE_PREFIX}-cython"
             "${MINGW_PACKAGE_PREFIX}-cc")
source=("${_realname}-${pkgver}.tar.gz"::"https://github.com/zeromq/${_realname}/archive/v${pkgver}.tar.gz"
        "001-mingw-python.patch"
        "002-mingw-win-compat.patch")
sha256sums=('a618c85ac3ae472a5a904a70687b379be6be4956ac61240c15228bdc727a22a8'
            '7f51c5a0ec8b05811cc045b1b566761a813e6205c374534d389fc057f436cb7f'
            '4588ffa5b24225bfcb16c2fc923627e23f3b7a98356a7855ec2ee07c7b5d5748')

prepare() {
  cd "${srcdir}/${_realname}-${pkgver}"
  patch -p1 -i ${srcdir}/001-mingw-python.patch
  patch -p1 -i ${srcdir}/002-mingw-win-compat.patch

  cd "${srcdir}"
  rm -rf python-build-${MSYSTEM} | true
  cp -r "${_realname}-${pkgver}" "python-build-${MSYSTEM}"
}

build() {
  cd "${srcdir}/python-build-${MSYSTEM}"
  ${MINGW_PREFIX}/bin/python setup.py build --zmq=${MINGW_PREFIX}
}

package() {
  cd "${srcdir}/python-build-${MSYSTEM}"

  sed -i 's|except socket.error, e:|except socket.error as e:|' zmq/eventloop/ioloop.py
  sed -i 's|except gevent.Timeout, t:|except gevent.Timeout as t:|' zmq/green/core.py

  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python setup.py install \
    --prefix=${MINGW_PREFIX} --root=${pkgdir} --optimize=1 --skip-build

  find "${pkgdir}/" -name "*.pyc" -delete
  find "${pkgdir}/" -type d -empty -delete

  rm -rf build

  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  # fix absolute paths in config files
  find "${pkgdir}${MINGW_PREFIX}" -name "*.json" -exec sed -e "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" -i {} \;
}
