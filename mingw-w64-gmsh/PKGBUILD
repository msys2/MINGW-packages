# Maintainer: ImperatorS79 <fevrier.simon@gmail.com>

_realname=gmsh
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=4.8.4
pkgrel=1
pkgdesc="This is Gmsh, an automatic three-dimensional finite element mesh generator with
built-in pre- and post-processing facilities."
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64')
url="https://gmsh.info"
license=("GPLv2")
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-eigen3"
             "${MINGW_PACKAGE_PREFIX}-petsc"
             "${MINGW_PACKAGE_PREFIX}-slepc")
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-cairo"
         "${MINGW_PACKAGE_PREFIX}-fltk"
         "${MINGW_PACKAGE_PREFIX}-gmp"
         "${MINGW_PACKAGE_PREFIX}-libjpeg"
         "${MINGW_PACKAGE_PREFIX}-libpng"
         "${MINGW_PACKAGE_PREFIX}-med"
         "${MINGW_PACKAGE_PREFIX}-opencascade"
         "${MINGW_PACKAGE_PREFIX}-zlib")
source=(https://gmsh.info/src/${_realname}-${pkgver}-source.tgz
        0001-fix-cmake-for-mingw-w64.patch
        https://gitlab.onelab.info/gmsh/gmsh/-/commit/e7cd675.patch
        https://gitlab.onelab.info/gmsh/gmsh/-/commit/7167469.patch)
sha256sums=('760dbdc072eaa3c82d066c5ba3b06eacdd3304eb2a97373fe4ada9509f0b6ace'
            '165c02b4cf4cf4a4b2a24ef334d9d6149e6184878ed6e5fcb2d8525f5e738398'
            '760aa1ddf3f63c837ff9621c427de63a92cd3ce93e85790a61381c57fcbf1441'
            '89652183fa83a85afe45a10d9e6e46f756badd4c3e01bb9379591f04f27b411a')

prepare() {
  cd "${srcdir}/${_realname}-${pkgver}-source"

  patch -p1 -i "${srcdir}/0001-fix-cmake-for-mingw-w64.patch"
  # Fix build with GCC 11
  patch -p1 -i "${srcdir}/e7cd675.patch"
  # avoid pulling in windows-specific includes through FLTK
  patch -p1 -i "${srcdir}/7167469.patch"
}

build() {
  [[ -d ${srcdir}/build-${MSYSTEM} ]] && rm -rf ${srcdir}/build-${MSYSTEM}
  mkdir ${srcdir}/build-${MSYSTEM} && cd ${srcdir}/build-${MSYSTEM}

  if check_option "debug" "y"; then
    _build_type="Debug"
  else
    _build_type="Release"
  fi

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    ${MINGW_PREFIX}/bin/cmake \
      -G"Ninja" \
      -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
      -DCMAKE_BUILD_TYPE=${_build_type} \
      -DENABLE_BUILD_DYNAMIC=1 \
      -DENABLE_BUILD_SHARED=1 \
      -DENABLE_OCC=1 \
      -DENABLE_OPENMP=1 \
      -DENABLE_OPENACC=1 \
      -DENABLE_PETSC=1 \
      -DENABLE_SLEPC=1 \
      -DGMSH_RELEASE=1 \
      -DENABLE_CAIRO=1 \
      ../${_realname}-${pkgver}-source

  ${MINGW_PREFIX}/bin/cmake --build .
}

package() {
  cd "${srcdir}/build-${MSYSTEM}"
  DESTDIR="${pkgdir}" ${MINGW_PREFIX}/bin/cmake --install .
}
