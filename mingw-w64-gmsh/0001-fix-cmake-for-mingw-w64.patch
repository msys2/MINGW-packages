--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -212,8 +212,6 @@
       set(GMSH_OS "Windows")
       set(WIN32 1)
       add_definitions(-DWIN32)
-      set(CMAKE_FIND_LIBRARY_PREFIXES "lib" "")
-      set(CMAKE_FIND_LIBRARY_SUFFIXES ".a" ".so" ".lib" ".LIB" ".dll" ".DLL" ".dll.a")
     endif()
   endif()
 else()
@@ -1676,7 +1674,7 @@
      SOVERSION ${GMSH_MAJOR_VERSION}.${GMSH_MINOR_VERSION})
   if(WIN32)
     set_target_properties(shared PROPERTIES PREFIX "" IMPORT_PREFIX ""
-      IMPORT_SUFFIX ".lib" COMPILE_FLAGS "-DGMSH_DLL -DGMSH_DLL_EXPORT")
+      IMPORT_SUFFIX ".dll.a" IMPORT_PREFIX "lib" COMPILE_FLAGS "-DGMSH_DLL -DGMSH_DLL_EXPORT")
   endif()
   target_link_libraries(shared ${LINK_LIBRARIES})
   # don't define LC_RPATH in dylib for development, to not get endless warnings
@@ -1715,7 +1713,7 @@
 
 # Windows specific linker options
 if(WIN32 AND NOT MSVC)
-  set(FLAGS "-Wl,--stack,16777216 -static -municode")
+  set(FLAGS "-Wl,--stack,16777216 -municode")
   if(HAVE_FLTK)
     set(FLAGS "${FLAGS} -mwindows")
   else()
@@ -1727,7 +1725,7 @@
     set(FLAGS "${FLAGS} -mconsole")
   endif()
   set_target_properties(gmsh PROPERTIES LINK_FLAGS "${FLAGS}")
-  if(ENABLE_BUILD_DYNAMIC OR ENABLE_BUILD_SHARED)
+  if(NOT (ENABLE_BUILD_DYNAMIC OR ENABLE_BUILD_SHARED))
     set_target_properties(shared PROPERTIES LINK_FLAGS -static)
   endif()
   # remove -Wl,-Bdynamic flags
@@ -1885,7 +1883,11 @@
   install(TARGETS lib DESTINATION ${GMSH_LIB} OPTIONAL)
 endif()
 if(ENABLE_BUILD_SHARED OR ENABLE_BUILD_DYNAMIC)
-  install(TARGETS shared DESTINATION ${GMSH_LIB} OPTIONAL)
+  install(TARGETS shared
+    RUNTIME DESTINATION ${GMSH_BIN}
+    LIBRARY DESTINATION ${GMSH_LIB}
+    ARCHIVE DESTINATION ${GMSH_LIB}
+    OPTIONAL)
 endif()
 
 if(ENABLE_ONELAB AND EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/contrib/onelab)
