--- a/icd/CMakeLists.txt
+++ b/icd/CMakeLists.txt
@@ -46,7 +46,7 @@
                 FILE(TO_NATIVE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/windows/${config_file}.json src_json)
                 FILE(TO_NATIVE_PATH ${CMAKE_CURRENT_BINARY_DIR}/${config_file}.json dst_json)
                 add_custom_target(${config_file}-json ALL
-                    COMMAND copy ${src_json} ${dst_json}
+                    COMMAND ${CMAKE_COMMAND} -E copy ${src_json} ${dst_json}
                     VERBATIM
                     )
             endforeach(config_file)
--- a/layers/CMakeLists.txt
+++ b/layers/CMakeLists.txt
@@ -55,7 +55,7 @@
                 FILE(TO_NATIVE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/windows/${config_file}.json src_json)
                 FILE(TO_NATIVE_PATH ${CMAKE_CURRENT_BINARY_DIR}/${config_file}.json dst_json)
                 add_custom_target(${config_file}-json ALL
-                    COMMAND copy ${src_json} ${dst_json}
+                    COMMAND ${CMAKE_COMMAND} -E copy ${src_json} ${dst_json}
                     VERBATIM
                     )
             endforeach(config_file)
@@ -70,7 +70,7 @@
         FILE(TO_NATIVE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/vk_validation_error_messages.h src_val_msgs)
         FILE(TO_NATIVE_PATH ${CMAKE_CURRENT_BINARY_DIR}/vk_validation_error_messages.h dst_val_msgs)
         add_custom_target(vk_validation_error_messages ALL
-            COMMAND copy ${src_val_msgs} ${dst_val_msgs}
+            COMMAND ${CMAKE_COMMAND} -E copy ${src_val_msgs} ${dst_val_msgs}
             VERBATIM
             )
         set_target_properties(vk_validation_error_messages PROPERTIES FOLDER ${LVL_TARGET_FOLDER})
@@ -192,7 +192,7 @@
     ${CMAKE_BINARY_DIR}
 )
 
-if (WIN32)
+if (MSVC)
     # Applies to all configurations
     add_definitions(-D_CRT_SECURE_NO_WARNINGS)
     # Avoid: fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj
--- a/loader/CMakeLists.txt	2018-05-16 14:05:33.046991100 +0300
+++ b/loader/CMakeLists.txt	2018-05-16 14:07:39.464013100 +0300
@@ -23,7 +23,7 @@
 if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
     add_definitions(-DVK_USE_PLATFORM_WIN32_KHR -DWIN32_LEAN_AND_MEAN)
     set(DisplayServer Win32)
-    if (NOT MSVC_VERSION LESS 1900)
+    if (MSVC AND (NOT MSVC_VERSION LESS 1900))
         # Enable control flow guard
         message(STATUS "Building loader with control flow guard")
         add_compile_options("$<$<CXX_COMPILER_ID:MSVC>:/guard:cf>")
@@ -96,7 +96,7 @@
 set(ASM_FAILURE_MSG "${ASM_FAILURE_MSG} extensions will suffer from a corrupted stack.")
 if (WIN32)
     enable_language(ASM_MASM)
-    if (CMAKE_ASM_MASM_COMPILER_WORKS)
+    if (MSVC AND CMAKE_ASM_MASM_COMPILER_WORKS)
         if (NOT CMAKE_CL_64)
             set(CMAKE_ASM_MASM_FLAGS ${CMAKE_ASM_MASM_FLAGS} /safeseh)
         endif()

--- a/loader/loader.c	2018-05-16 14:03:52.750814700 +0300
+++ b/loader/loader.c	2018-05-16 14:04:08.631642600 +0300
@@ -613,6 +613,10 @@
 //
 // *reg_data contains a string list of filenames as pointer.
 // When done using the returned string list, the caller should free the pointer.
+#ifdef __MINGW32__
+#define CM_GETIDLIST_FILTER_PRESENT            0x00000100
+#define CM_GETIDLIST_FILTER_CLASS              0x00000200
+#endif
 VkResult loaderGetDeviceRegistryFiles(const struct loader_instance *inst, char **reg_data, PDWORD reg_data_size, LPCTSTR value_name) {
     static const wchar_t *softwareComponentGUID = L"{5c4c3332-344d-483c-8739-259e934c9cc8}";
     static const wchar_t *displayGUID = L"{4d36e968-e325-11ce-bfc1-08002be10318}";
--- a/loader/loader.rc
+++ b/loader/loader.rc
@@ -43,8 +43,6 @@
 ///////////////////////////////////////////////////////////////////////////////
 ///////////////////////////////////////////////////////////////////////////////
 
-#include "winres.h"
-
 #define VER_FILE_VERSION            VERSION_MAJOR, VERSION_MINOR, VERSION_PATCH, VERSION_BUILDNO
 
 #define STRINGIZE2(s) #s
@@ -77,7 +75,6 @@
 #endif
 
  FILEOS 0x00000L
- FILETYPE VFT_DLL
  FILESUBTYPE 0x0L
 BEGIN
     BLOCK "StringFileInfo"
