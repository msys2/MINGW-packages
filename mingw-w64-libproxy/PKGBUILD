# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=libproxy
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=0.4.18
pkgrel=2
pkgdesc="A library that provides automatic proxy configuration management (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32' 'clangarm64')
url="https://libproxy.github.io/libproxy/"
license=('spdx:LGPL-2.1-or-later')
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs")
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-python")
source=("${_realname}-${pkgver}.tar.gz::https://github.com/libproxy/libproxy/archive/${pkgver}.tar.gz"
        001-fix-casting-error.patch
        002-fix-win32-close-scoket.patch
        004-allow-bindings.patch
        005-modules.patch
        006-python-site-package-dir.patch)
sha256sums=('0b4a9218d88f6cf9fa25996a3f38329a11f688a9d026141d9d0e966d8fa63837'
            'f20ce4f17c1a858b3eac84a14226c5e368ea581b0b5ab3428f6e1f9d22d44124'
            '10a2ff72e1288014ad1c0e530f82c30cadb6fb5b6221d7544826bd4df758051b'
            'fc1076b89af1f6b4633e5fb86469334eb012773bb970ef925fe74c5dcba45d98'
            'e4e670b818a6474885d7ef2fe40f2eedd2c2195ba7bf53ef52f80bd9cd97c7bb'
            '035efcd364e736f8987ea99d11250b3e2987ba31cefbd434003faf0b3da789b6')

prepare() {
  cd "${srcdir}/${_realname}-${pkgver}"
  patch -p1 -i ${srcdir}/001-fix-casting-error.patch
  patch -p1 -i ${srcdir}/002-fix-win32-close-scoket.patch
  patch -p1 -i ${srcdir}/004-allow-bindings.patch
  patch -p1 -i ${srcdir}/005-modules.patch
  patch -p1 -i ${srcdir}/006-python-site-package-dir.patch
}

build() {
  [[ -d ${srcdir}/build-${MSYSTEM} ]] && rm -rf ${srcdir}/build-${MSYSTEM}
  mkdir ${srcdir}/build-${MSYSTEM} && cd ${srcdir}/build-${MSYSTEM}

  declare -a _extra_config
  if check_option "debug" "n"; then
    _extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    _extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=;-DLIBEXEC_INSTALL_DIR=" \
  ${MINGW_PREFIX}/bin/cmake.exe \
    -G"Ninja" \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DCMAKE_SHARED_LIBRARY_NAME_WITH_VERSION=ON \
    -DLIBEXEC_INSTALL_DIR=${MINGW_PREFIX}/lib/libproxy \
    -DCMAKE_SKIP_RPATH=ON \
    ${_extra_config[@]} \
    -DWITH_KDE=OFF \
    -DWITH_PERL=OFF \
    -DWITH_PYTHON2=OFF \
    -DWITH_PYTHON3=ON \
    -DPYTHON3_EXECUTABLE="${MINGW_PREFIX}/bin/python.exe" \
    ../${_realname}-${pkgver}

  ${MINGW_PREFIX}/bin/cmake.exe --build ./
}

check() {
  cd "${srcdir}/build-${MSYSTEM}"
  ${MINGW_PREFIX}/bin/ctest.exe || warning "Tests failed"
}

package() {
  cd "${srcdir}/build-${MSYSTEM}"
  DESTDIR="${pkgdir}" ${MINGW_PREFIX}/bin/cmake.exe --install ./
  install -Dm644 "${srcdir}/${_realname}-${pkgver}/COPYING" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING"

  MSYS2_ARG_CONV_EXCL="-p" python -m compileall \
    -o 0 -o 1 -q -s"${pkgdir}" -p"/" "${pkgdir}${MINGW_PREFIX}/lib/python"*
}
