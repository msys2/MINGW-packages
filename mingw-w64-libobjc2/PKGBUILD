# Maintainer: Frederik Carlier <frederik.carlier@keysight.com>

_realname=libobjc2
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=2.2
pkgrel=1
pkgdesc="Objective-C runtime library intended for use with Clang. (mingw-w64)"
arch=('any')
mingw_arch=('mingw64' 'ucrt64' 'clang64')
url="https://github.com/gnustep/libobjc2"
license=('spdx:MIT')
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs")
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-clang"
             "${MINGW_PACKAGE_PREFIX}-lld"
             'git')
source=("https://github.com/gnustep/${_realname}/archive/v${pkgver}/${_realname}-${pkgver}.tar.gz"
        # Install runtime files in CMAKE_INSTALL_BINDIR when GNUstep is not installed
        "https://github.com/gnustep/libobjc2/commit/639c676bb8033422539e19a2e2888bdbd06507e5.patch"
        # Support building on msys/clang64
        "https://github.com/gnustep/libobjc2/commit/1ff5e1298dd76aa370d5a12b690857f9a47b4b56.patch"
        # MinGW: Remove manual setting of library prefix/suffix
        "https://github.com/gnustep/libobjc2/commit/f983cdbf683925d942dd1d86edcfe4316bf9ed6c.patch")
sha256sums=('c4c5cede579949249f16736c9b1f85c58c44addb013f59970dcb566d9069152a'
            'aaa23146b3c2ec442b5dbf20606020bddd15230041ad738ef3a06e92d13605c3'
            'fba7d33aa03ee7383b559c5b845063acd16b45396520250849f22559577adcc9'
            'd955fcee075af724a97d63f1b325e97ab6c3d018ac38f0597ef3e8c57b0820e2')

prepare() {
  cd ${srcdir}/${_realname}-${pkgver}

  patch -p1 -i ${srcdir}/639c676bb8033422539e19a2e2888bdbd06507e5.patch
  patch -p1 -i ${srcdir}/1ff5e1298dd76aa370d5a12b690857f9a47b4b56.patch
  patch -p1 -i ${srcdir}/f983cdbf683925d942dd1d86edcfe4316bf9ed6c.patch
}

build() {
  mkdir -p "${srcdir}/build-${MSYSTEM}" && cd "${srcdir}/build-${MSYSTEM}"

  declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  case ${MSYSTEM} in
    MINGW*|UCRT*)
      export LDFLAGS="-fuse-ld=lld -lstdc++ -lgcc_s"
      ;;
    CLANG*)
      export LDFLAGS="-lc++"
      ;;
  esac

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    "${MINGW_PREFIX}"/bin/cmake.exe \
      -GNinja \
      -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}" \
      -DCMAKE_C_COMPILER="clang" \
      -DCMAKE_CXX_COMPILER="clang++" \
      -DCMAKE_DLL_NAME_WITH_SOVERSION=ON \
      -DTESTS=OFF \
      "${extra_config[@]}" \
      ../${_realname}-${pkgver}

  "${MINGW_PREFIX}"/bin/cmake.exe --build .
}

check() {
  cd "${srcdir}/build-${MSYSTEM}"
  "${MINGW_PREFIX}"/bin/cmake -DTESTS=ON ../${_realname}-${pkgver}
  "${MINGW_PREFIX}"/bin/cmake --build .

  declare -a extra_flags
  if [[ ${MSYSTEM} == CLANG* ]]; then
    extra_flags="-E UnexpectedException*"
  fi

  "${MINGW_PREFIX}"/bin/ctest.exe $extra_flags
}

package() {
  cd "${srcdir}/build-${MSYSTEM}"

  DESTDIR="${pkgdir}" "${MINGW_PREFIX}"/bin/cmake.exe --install .

  install -Dm644 "${srcdir}/${_realname}-${pkgver}/COPYING" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING"
}
