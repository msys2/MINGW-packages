diff --git a/Makefile b/Makefile
index 97dc61d550..99b775c584 100644
--- a/Makefile
+++ b/Makefile
@@ -44,52 +44,11 @@ SHELL=/usr/bin/env bash
 IS_DARWIN := 0
 IS_LINUX := 0
 IS_FREEBSD := 0
-IS_WINDOWS := 0
-IS_AMD64 := 0
+IS_WINDOWS := 1
+IS_AMD64 := 1
 IS_AARCH64 := 0
 IS_RISCV64 := 0
 
-# Test Windows apart because it doesn't support `uname -s`.
-ifeq ($(OS), Windows_NT)
-	# We can assume it will likely be in amd64.
-	IS_AMD64 := 1
-	IS_WINDOWS := 1
-else
-	# Platform
-	uname := $(shell uname -s)
-
-	ifeq ($(uname), Darwin)
-		IS_DARWIN := 1
-	else ifeq ($(uname), Linux)
-		IS_LINUX := 1
-	else ifeq ($(uname), FreeBSD)
-		IS_FREEBSD := 1
-	else
-		# We use spaces instead of tabs to indent `$(error)`
-		# otherwise it's considered as a command outside a
-		# target and it will fail.
-                $(error Unrecognized platform, expect `Darwin`, `Linux` or `Windows_NT`)
-	endif
-
-	# Architecture
-	uname := $(shell uname -m)
-
-	ifneq (, $(filter $(uname), x86_64 amd64))
-		IS_AMD64 := 1
-	else ifneq (, $(filter $(uname), aarch64 arm64))
-		IS_AARCH64 := 1
-	else ifneq (, $(filter $(uname), riscv64))
-		IS_RISCV64 := 1
-	else
-		# We use spaces instead of tabs to indent `$(error)`
-		# otherwise it's considered as a command outside a
-		# target and it will fail.
-                $(error Unrecognized architecture, expect `x86_64`, `aarch64`, `arm64`, 'riscv64')
-	endif
-
-	# Libc
-	LIBC ?= $(shell ldd 2>&1 | grep -o musl | head -n1)
-endif
 
 
 #####
diff --git a/lib/vm/src/probestack.rs b/lib/vm/src/probestack.rs
index fd78d8d0b2..814ddf9c20 100644
--- a/lib/vm/src/probestack.rs
+++ b/lib/vm/src/probestack.rs
@@ -42,10 +42,10 @@ cfg_if::cfg_if! {
             // ___chkstk (note the triple underscore) is implemented in compiler-builtins/src/x86_64.rs
             // by the Rust compiler for the MinGW target
             #[cfg(all(target_os = "windows", target_env = "gnu"))]
-            pub fn ___chkstk();
+            pub fn ___chkstk_ms();
         }
         /// The probestack for Windows when compiled with GNU
-        pub const PROBESTACK: unsafe extern "C" fn() = ___chkstk;
+        pub const PROBESTACK: unsafe extern "C" fn() = ___chkstk_ms;
     } else if #[cfg(not(any(target_arch = "x86_64", target_arch = "x86")))] {
         // As per
         // https://github.com/rust-lang/compiler-builtins/blob/cae3e6ea23739166504f9f9fb50ec070097979d4/src/probestack.rs#L39,
