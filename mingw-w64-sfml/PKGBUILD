# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=sfml
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=2.3
pkgrel=1
pkgdesc="A simple, fast, cross-platform, and object-oriented multimedia API (mingw-w64)"
arch=('any')
url="http://www.sfml-dev.org/"
license=("zlib")
replaces="${MINGW_PACKAGE_PREFIX}-${_realname}-git"
depends=("${MINGW_PACKAGE_PREFIX}-flac"
         "${MINGW_PACKAGE_PREFIX}-freetype"
         "${MINGW_PACKAGE_PREFIX}-libjpeg"
         "${MINGW_PACKAGE_PREFIX}-libvorbis"
         "${MINGW_PACKAGE_PREFIX}-openal")
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake" "${MINGW_PACKAGE_PREFIX}-gcc" "doxygen" "unzip")
source=(http://www.sfml-dev.org/files/SFML-${pkgver}-sources.zip
        mingw-w64-msys2.patch)
md5sums=('abc06b4cdef6531143ac0221cd1b184a'
         'a8fbc9c9acfc813381df9e0020b211d9')
noextract=(SFML-${pkgver}-sources.zip)

prepare() {
  unzip SFML-${pkgver}-sources.zip
  cd ${srcdir}/SFML-${pkgver}
  patch -p1 -i ${srcdir}/mingw-w64-msys2.patch
}

build() {
  [[ -d build-${MINGW_CHOST} ]] && rm -r build-${MINGW_CHOST}
  mkdir build-${MINGW_CHOST} && cd build-${MINGW_CHOST}
  ${MINGW_PREFIX}/bin/cmake.exe \
    -G"MSYS Makefiles" \
    -DCMAKE_INSTALL_PREFIX=${pkgdir}${MINGW_PREFIX} \
    -DSFML_BUILD_EXAMPLES=1 \
    -DSFML_BUILD_DOC=1 \
    -DSFML_INSTALL_PKGCONFIG_FILES=ON \
    ../SFML-${pkgver}

  make
  make doc
}

package() {
  cd build-${MINGW_CHOST}
  make install

  local PREFIX_WIN=$(cygpath -am ${pkgdir}${MINGW_PREFIX})
  for file in ${pkgdir}${MINGW_PREFIX}/lib/pkgconfig/*.pc; do
    sed -s "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" -i ${file}
  done

  install -Dm644 "${pkgdir}${MINGW_PREFIX}/share/SFML/cmake/Modules/FindSFML.cmake" "${pkgdir}${MINGW_PREFIX}/share/cmake-3.2/Modules/FindSFML.cmake"
  install -Dm644 ${srcdir}/SFML-${pkgver}/license.txt "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE"
}
