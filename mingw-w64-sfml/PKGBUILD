# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=sfml
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}"
         "${MINGW_PACKAGE_PREFIX}-${_realname}-docs")
pkgver=3.0.0
pkgrel=1
pkgdesc="A simple, fast, cross-platform, and object-oriented multimedia API (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clangarm64')
url="https://www.sfml-dev.org/"
msys2_repository_url='https://github.com/SFML/SFML'
license=('spdx:Zlib')
replaces=("${MINGW_PACKAGE_PREFIX}-${_realname}-git")
depends=("${MINGW_PACKAGE_PREFIX}-flac"
         "${MINGW_PACKAGE_PREFIX}-freetype"
         "${MINGW_PACKAGE_PREFIX}-libjpeg"
         "${MINGW_PACKAGE_PREFIX}-libvorbis"
         "${MINGW_PACKAGE_PREFIX}-openal")
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-doxygen"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "unzip")
source=("https://www.sfml-dev.org/files/SFML-${pkgver}-sources.zip"
        mingw-w64-msys2.patch)
sha256sums=('8cc41db46b59f07c44ecf21c74a0f956d37735dec9d90ff4522856cb162ba642'
            'cb701eb743d020cdfc75a91fc427bc3257fb90a416aed9a8908e881a8ba66260')
noextract=(SFML-${pkgver}-sources.zip)

prepare() {
  rm -fr "${srcdir}"/SFML-${pkgver}
  unzip -q SFML-${pkgver}-sources.zip
  cd "${srcdir}/SFML-${pkgver}"
  patch -p1 -i "${srcdir}/mingw-w64-msys2.patch"
}

build() {
  mkdir -p "${srcdir}/build-${MSYSTEM}-shared" && cd "${srcdir}/build-${MSYSTEM}-shared"

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake.exe \
    -GNinja \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DSFML_BUILD_EXAMPLES=ON \
    -DSFML_BUILD_DOC=ON \
    -DSFML_INSTALL_PKGCONFIG_FILES=ON \
    -DSFML_USE_SYSTEM_DEPS=ON \
    -DBUILD_SHARED_LIBS=ON \
    ../SFML-${pkgver}

  "${MINGW_PREFIX}"/bin/cmake.exe --build .
  "${MINGW_PREFIX}"/bin/cmake.exe --build . --target doc

  mkdir -p "${srcdir}/build-${MSYSTEM}-static" && cd "${srcdir}/build-${MSYSTEM}-static"

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake.exe \
    -GNinja \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DSFML_BUILD_EXAMPLES=OFF \
    -DSFML_BUILD_DOC=OFF \
    -DSFML_INSTALL_PKGCONFIG_FILES=ON \
    -DSFML_USE_SYSTEM_DEPS=ON \
    -DBUILD_SHARED_LIBS=OFF \
    ../SFML-${pkgver}

  "${MINGW_PREFIX}"/bin/cmake.exe --build .
}

package_sfml() {
  conflicts=("${MINGW_PACKAGE_PREFIX}-${_realname}2")
  replaces=("${MINGW_PACKAGE_PREFIX}-${_realname}2")

  DESTDIR="${pkgdir}" "${MINGW_PREFIX}"/bin/cmake.exe --install "${srcdir}/build-${MSYSTEM}-static"
  DESTDIR="${pkgdir}" "${MINGW_PREFIX}"/bin/cmake.exe --install "${srcdir}/build-${MSYSTEM}-shared"
  install -Dm644 "${srcdir}/SFML-${pkgver}/license.md" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE"

  # split docs
  mkdir -p dest${MINGW_PREFIX}/share
  mv "${pkgdir}${MINGW_PREFIX}"/share/doc dest${MINGW_PREFIX}/share/doc
}

package_sfml-docs() {
  conflicts=("${MINGW_PACKAGE_PREFIX}-${_realname}2-docs")
  replaces=("${MINGW_PACKAGE_PREFIX}-${_realname}2-docs")

  pkgdesc+=" (documentation)"
  depends=()

  mv dest/* "${pkgdir}"
}

# template start; name=mingw-w64-splitpkg-wrappers; version=1.0;
# vim: set ft=bash :

# generate wrappers
for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
# template end;
