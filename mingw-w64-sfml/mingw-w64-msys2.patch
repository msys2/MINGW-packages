--- sfml/CMakeLists.txt.orig	2014-05-22 12:05:19.717000000 +0400
+++ sfml/CMakeLists.txt	2014-05-22 12:22:08.201600000 +0400
@@ -164,7 +164,7 @@
     endif()
 endif()
 
-if(SFML_OS_LINUX OR SFML_OS_FREEBSD)
+if(SFML_OS_LINUX OR SFML_OS_FREEBSD OR MINGW)
     set(PKGCONFIG_DIR lib${LIB_SUFFIX}/pkgconfig)
     if(SFML_OS_FREEBSD)
         set(PKGCONFIG_DIR libdata/pkgconfig)
@@ -258,7 +258,7 @@
 endif()
 
 # install 3rd-party libraries and tools
-if(SFML_OS_WINDOWS)
+if(SFML_OS_WINDOWS AND NOT MINGW)
 
     # install the binaries of SFML dependencies
     if(ARCH_32BITS)
--- sfml/src/SFML/CMakeLists.txt.orig	2014-05-22 12:05:20.637400000 +0400
+++ sfml/src/SFML/CMakeLists.txt	2014-05-22 12:25:07.362200000 +0400
@@ -3,7 +3,7 @@
 include(${PROJECT_SOURCE_DIR}/cmake/Macros.cmake)
 
 # let CMake know about our additional libraries paths
-if (SFML_OS_WINDOWS)
+if (SFML_OS_WINDOWS AND NOT MINGW)
     set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} "${PROJECT_SOURCE_DIR}/extlibs/headers")
     if(SFML_COMPILER_GCC)
         if(ARCH_32BITS)
--- sfml/src/SFML/Audio/CMakeLists.txt.orig	2014-05-22 12:05:20.621800000 +0400
+++ sfml/src/SFML/Audio/CMakeLists.txt	2014-05-22 12:26:16.293800000 +0400
@@ -31,7 +31,7 @@
 source_group("" FILES ${SRC})
 
 # let CMake know about our additional audio libraries paths (on Windows and OSX)
-if(SFML_OS_WINDOWS)
+if(SFML_OS_WINDOWS AND NOT MINGW)
     set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} "${PROJECT_SOURCE_DIR}/extlibs/headers/AL")
     set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} "${PROJECT_SOURCE_DIR}/extlibs/headers/libsndfile/windows")
 elseif(SFML_OS_MACOSX)
--- sfml/src/SFML/Graphics/CMakeLists.txt.orig	2014-05-22 12:05:20.637400000 +0400
+++ sfml/src/SFML/Graphics/CMakeLists.txt	2014-05-22 12:27:28.124000000 +0400
@@ -92,7 +92,7 @@
 include_directories("${PROJECT_SOURCE_DIR}/extlibs/headers/stb_image")
 
 # let CMake know about our additional graphics libraries paths
-if(SFML_OS_WINDOWS)
+if(SFML_OS_WINDOWS AND NOT MINGW)
     set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} "${PROJECT_SOURCE_DIR}/extlibs/headers/jpeg")
     set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} "${PROJECT_SOURCE_DIR}/extlibs/headers/freetype2")
 elseif(SFML_OS_MACOSX)
--- sfml/doc/CMakeLists.txt.orig	2014-05-22 12:05:19.717000000 +0400
+++ sfml/doc/CMakeLists.txt	2014-05-22 12:31:16.499200000 +0400
@@ -17,7 +17,7 @@
 
 # set the input and output documentation paths
 set(DOXYGEN_INPUT_DIR ${PROJECT_SOURCE_DIR})
-set(DOXYGEN_OUTPUT_DIR ${PROJECT_BINARY_DIR}/doc)
+set(DOXYGEN_OUTPUT_DIR ${PROJECT_BINARY_DIR}/share/doc/SFML)
 
 # see if we can generate the CHM documentation
 if(SFML_OS_WINDOWS)
--- sfml/cmake/Config.cmake.orig	2014-05-22 12:05:19.717000000 +0400
+++ sfml/cmake/Config.cmake	2014-05-22 12:12:58.926200000 +0400
@@ -109,7 +109,7 @@
 
 # define the install directory for miscellaneous files
 if(SFML_OS_WINDOWS OR SFML_OS_IOS)
-    set(INSTALL_MISC_DIR .)
+    set(INSTALL_MISC_DIR share/SFML)
 elseif(SFML_OS_LINUX OR SFML_OS_FREEBSD OR SFML_OS_MACOSX)
     set(INSTALL_MISC_DIR share/SFML)
 elseif(SFML_OS_ANDROID)
--- sfml/cmake/Macros.cmake.orig	2014-05-22 12:05:19.717000000 +0400
+++ sfml/cmake/Macros.cmake	2014-05-22 12:14:36.733400000 +0400
@@ -31,7 +31,7 @@
             # on Windows/gcc get rid of "lib" prefix for shared libraries,
             # and transform the ".dll.a" suffix into ".a" for import libraries
             set_target_properties(${target} PROPERTIES PREFIX "")
-            set_target_properties(${target} PROPERTIES IMPORT_SUFFIX ".a")
+            set_target_properties(${target} PROPERTIES IMPORT_SUFFIX ".dll.a")
         endif()
     else()
         set_target_properties(${target} PROPERTIES DEBUG_POSTFIX -s-d)
