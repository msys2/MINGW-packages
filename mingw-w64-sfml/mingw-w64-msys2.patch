--- sfml/CMakeLists.txt.orig	2017-02-08 12:29:16.000000000 +0100
+++ sfml/CMakeLists.txt	2017-02-10 21:22:08.957827000 +0100
@@ -202,7 +202,7 @@
     set(XCODE_TEMPLATES_ARCH "\$(NATIVE_ARCH_ACTUAL)")
 endif()
 
-if(SFML_OS_LINUX OR SFML_OS_FREEBSD)
+if(SFML_OS_LINUX OR SFML_OS_FREEBSD OR MINGW)
     set(PKGCONFIG_DIR lib${LIB_SUFFIX}/pkgconfig)
     if(SFML_OS_FREEBSD)
         set(PKGCONFIG_DIR libdata/pkgconfig)
@@ -299,11 +299,11 @@
 install(FILES license.txt DESTINATION ${INSTALL_MISC_DIR})
 install(FILES readme.txt DESTINATION ${INSTALL_MISC_DIR})
 if(NOT SFML_OS_ANDROID)
-    install(FILES cmake/Modules/FindSFML.cmake DESTINATION ${INSTALL_MISC_DIR}/cmake/Modules)
+    install(FILES cmake/Modules/FindSFML.cmake DESTINATION ${INSTALL_COMMON_DIR}/cmake/Modules)
 endif()
 
 # install 3rd-party libraries and tools
-if(SFML_OS_WINDOWS)
+if(SFML_OS_WINDOWS AND NOT MINGW)
 
     # install the binaries of SFML dependencies
     if(ARCH_32BITS)
--- sfml/src/SFML/CMakeLists.txt.orig	2017-02-08 12:29:16.000000000 +0100
+++ sfml/src/SFML/CMakeLists.txt	2017-02-10 21:22:08.989244600 +0100
@@ -3,7 +3,7 @@
 include(${PROJECT_SOURCE_DIR}/cmake/Macros.cmake)
 
 # let CMake know about our additional libraries paths
-if (SFML_OS_WINDOWS)
+if (SFML_OS_WINDOWS AND NOT MINGW)
     set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} "${PROJECT_SOURCE_DIR}/extlibs/headers")
     if(SFML_COMPILER_GCC)
         if(ARCH_32BITS)
--- sfml/src/SFML/Audio/CMakeLists.txt.orig	2017-02-08 12:29:16.000000000 +0100
+++ sfml/src/SFML/Audio/CMakeLists.txt	2017-02-10 21:22:09.020324800 +0100
@@ -56,7 +56,7 @@
 source_group("codecs" FILES ${CODECS_SRC})
 
 # let CMake know about our additional audio libraries paths (on Windows and OSX)
-if(SFML_OS_WINDOWS)
+if(SFML_OS_WINDOWS AND NOT MINGW)
     set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} "${PROJECT_SOURCE_DIR}/extlibs/headers/AL")
 elseif(SFML_OS_MACOSX)
     set(CMAKE_LIBRARY_PATH ${CMAKE_LIBRARY_PATH} "${PROJECT_SOURCE_DIR}/extlibs/libs-osx/Frameworks")
--- sfml/src/SFML/Graphics/CMakeLists.txt.orig	2017-02-08 12:29:16.000000000 +0100
+++ sfml/src/SFML/Graphics/CMakeLists.txt	2017-02-10 21:22:09.067201700 +0100
@@ -90,7 +90,7 @@
 include_directories("${PROJECT_SOURCE_DIR}/extlibs/headers/stb_image")
 
 # let CMake know about our additional graphics libraries paths
-if(SFML_OS_WINDOWS)
+if(SFML_OS_WINDOWS AND NOT MINGW)
     set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} "${PROJECT_SOURCE_DIR}/extlibs/headers/jpeg")
     set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} "${PROJECT_SOURCE_DIR}/extlibs/headers/freetype2")
 elseif(SFML_OS_MACOSX)
--- sfml/doc/CMakeLists.txt.orig	2017-02-08 12:29:16.000000000 +0100
+++ sfml/doc/CMakeLists.txt	2017-02-10 21:22:09.082829700 +0100
@@ -17,7 +17,7 @@
 
 # set the input and output documentation paths
 set(DOXYGEN_INPUT_DIR ${PROJECT_SOURCE_DIR})
-set(DOXYGEN_OUTPUT_DIR ${PROJECT_BINARY_DIR}/doc)
+set(DOXYGEN_OUTPUT_DIR ${PROJECT_BINARY_DIR}/share/doc/SFML)
 
 # see if we can generate the CHM documentation
 if(SFML_OS_WINDOWS)
--- sfml/cmake/Config.cmake.orig	2017-02-08 12:29:16.000000000 +0100
+++ sfml/cmake/Config.cmake	2017-02-10 21:22:09.207835300 +0100
@@ -114,8 +114,9 @@
 endif()
 
 # define the install directory for miscellaneous files
+set(INSTALL_COMMON_DIR share)
 if(SFML_OS_WINDOWS OR SFML_OS_IOS)
-    set(INSTALL_MISC_DIR .)
+    set(INSTALL_MISC_DIR share/SFML)
 elseif(SFML_OS_LINUX OR SFML_OS_FREEBSD OR SFML_OS_MACOSX)
     set(INSTALL_MISC_DIR share/SFML)
 elseif(SFML_OS_ANDROID)
--- sfml/cmake/Macros.cmake.orig	2017-02-08 12:29:16.000000000 +0100
+++ sfml/cmake/Macros.cmake	2017-02-10 21:22:09.270484800 +0100
@@ -31,7 +31,7 @@
             # on Windows/gcc get rid of "lib" prefix for shared libraries,
             # and transform the ".dll.a" suffix into ".a" for import libraries
             set_target_properties(${target} PROPERTIES PREFIX "")
-            set_target_properties(${target} PROPERTIES IMPORT_SUFFIX ".a")
+            set_target_properties(${target} PROPERTIES IMPORT_SUFFIX ".dll.a")
         endif()
     else()
         set_target_properties(${target} PROPERTIES DEBUG_POSTFIX -s-d)
