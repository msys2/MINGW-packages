From fad2dc11f026a9863460cc7e8b42c992b4d9e899 Mon Sep 17 00:00:00 2001
From: MÃ¥rten Nordheim <marten.nordheim@qt.io>
Date: Fri, 05 Feb 2021 18:41:51 +0100
Subject: [PATCH] Schannel: Fix incomplete downloads with read buffer restricted

When the read buffer has a max size we do our best not to exceed it.
Usually there's no problem and we just read more when the next
tcp frame arrives. However if there's data leftover after the last
tcp frame arrived then we won't receive any more data. To counter
this QSslSocket would try to invoke QSslSocketPrivate::transmit
indirectly if there were any bytes available on the plain socket.
The problem is that with Schannel the last few remaining bytes
would not be in the plain socket, but in the 'intermediateBuffer'.
So let's make QSslSocket aware of that.

Fixes: QTBUG-90625
Pick-to: 5.15 6.0 6.1
Change-Id: If56e4cce558f99c9a08a1f6818e005a887712ef2
---

diff --git a/src/network/ssl/qsslsocket.cpp b/src/network/ssl/qsslsocket.cpp
index ffbb4d6..67f9b58 100644
--- a/src/network/ssl/qsslsocket.cpp
+++ b/src/network/ssl/qsslsocket.cpp
@@ -1950,7 +1950,7 @@
 #endif
     } else {
         // possibly trigger another transmit() to decrypt more data from the socket
-        if (d->plainSocket->bytesAvailable())
+        if (d->plainSocket->bytesAvailable() || d->hasUndecryptedData())
             QMetaObject::invokeMethod(this, "_q_flushReadBuffer", Qt::QueuedConnection);
         else if (d->state != QAbstractSocket::ConnectedState)
             return maxlen ? qint64(-1) : qint64(0);
diff --git a/src/network/ssl/qsslsocket_p.h b/src/network/ssl/qsslsocket_p.h
index 6bd6cc0..1d6881d 100644
--- a/src/network/ssl/qsslsocket_p.h
+++ b/src/network/ssl/qsslsocket_p.h
@@ -224,6 +224,8 @@
 
 protected:
     bool verifyErrorsHaveBeenIgnored();
+    // Only implemented/useful in Schannel for now
+    virtual bool hasUndecryptedData() { return false; };
     bool paused;
     bool flushTriggered;
     bool systemOrSslErrorDetected = false;
diff --git a/src/network/ssl/qsslsocket_schannel_p.h b/src/network/ssl/qsslsocket_schannel_p.h
index 57c8c75..30f5a96 100644
--- a/src/network/ssl/qsslsocket_schannel_p.h
+++ b/src/network/ssl/qsslsocket_schannel_p.h
@@ -123,6 +123,8 @@
 
     bool rootCertOnDemandLoadingAllowed();
 
+    bool hasUndecryptedData() override { return intermediateBuffer.size() > 0; }
+
     SecPkgContext_ConnectionInfo connectionInfo = {};
     SecPkgContext_StreamSizes streamSizes = {};
 
