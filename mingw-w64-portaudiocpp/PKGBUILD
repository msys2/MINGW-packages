# Maintainer: Volkan Orhan <volkanorhn@gmail.com>

_realname=portaudiocpp
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=19.7.0
_tarver=190700_20210406
pkgrel=1
pkgdesc="A free, cross-platform, open source, audio I/O library (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32')
url="http://www.portaudio.com"
license=("custom")
makedepends=(
  "${MINGW_PACKAGE_PREFIX}-cc"
  "${MINGW_PACKAGE_PREFIX}-pkg-config"
  "${MINGW_PACKAGE_PREFIX}-cmake"
  "${MINGW_PACKAGE_PREFIX}-ninja"
)
depends=(
  "${MINGW_PACKAGE_PREFIX}-gcc-libs"
  "${MINGW_PACKAGE_PREFIX}-portaudio"
)
options=(!libtool strip staticlibs)
source=("http://files.portaudio.com/archives/pa_stable_v${_tarver}.tgz"
        "CMakeLists.txt"
        "portaudiocpp.pc.in")
sha256sums=('47efbf42c77c19a05d22e627d42873e991ec0c1357219c0d74ce6a2948cb2def'
            '6e3d258152c3446380e17541185fc9315d80649f0a0e50d663ab81eabdef5446'
            '1d31d7ba748ebd276f9d59f1c68d341195d0a7242c1da89de159491f9fde6598')

prepare() {
  echo ${srcdir}
  echo ${_realname}
  cd "${srcdir}/portaudio/bindings/cpp"

  cp "${srcdir}/CMakeLists.txt" "${srcdir}/portaudio/bindings/cpp/"
  cp "${srcdir}/portaudiocpp.pc.in" "${srcdir}/portaudio/bindings/cpp/"
}

build() {
  [[ -d "${srcdir}/build-${MINGW_CHOST}" ]] && rm -rf "${srcdir}/build-${MINGW_CHOST}"
  mkdir -p "${srcdir}/build-${MINGW_CHOST}" && cd "${srcdir}/build-${MINGW_CHOST}"

  declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    ${MINGW_PREFIX}/bin/cmake \
      -GNinja \
      -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
      -DPA_BUILD_SHARED=ON \
      -DPA_BUILD_STATIC=ON \
      "${extra_config[@]}" \
      "${srcdir}/portaudio/bindings/cpp"

  ${MINGW_PREFIX}/bin/cmake --build .
}

package() {
  cd "${srcdir}/build-${MINGW_CHOST}"
  DESTDIR="${pkgdir}" ${MINGW_PREFIX}/bin/cmake --build . --target install
}
