diff --git a/build/build_linux.ninja.template b/build/build_linux.ninja.template
index ab117fb4..27339a7f 100644
--- a/build/build_linux.ninja.template
+++ b/build/build_linux.ninja.template
@@ -5,7 +5,7 @@ rule cxx
   deps = gcc
 
 rule alink_thin
-  command = rm -f $out && $ar rcsT $out $in
+  command = $ar rcsT $out $in
   description = AR $out
 
 rule link
diff --git a/build/gen.py b/build/gen.py
index fa23266c..6c18c850 100755
--- a/build/gen.py
+++ b/build/gen.py
@@ -40,7 +40,10 @@ class Platform(object):
     elif self._platform.startswith('msys'):
       self._platform = 'msys'
     elif self._platform.startswith('win'):
-      self._platform = 'msvc'
+      if 'MSC' in sys.version:
+        self._platform = 'msvc'
+      else:
+        self._platform = 'mingw'
     elif self._platform.startswith('aix'):
       self._platform = 'aix'
     elif self._platform.startswith('fuchsia'):
@@ -291,7 +294,7 @@ def WriteGenericNinja(path, static_libraries, executables,
 
   if platform.is_windows():
     executable_ext = '.exe'
-    library_ext = '.lib'
+    library_ext = '.a'
     object_ext = '.obj'
   else:
     executable_ext = ''
@@ -369,8 +372,12 @@ def WriteGNNinja(path, platform, host, options, args_list):
     ld = os.environ.get('LD', 'g++')
     ar = os.environ.get('AR', 'ar -X64')
   elif platform.is_msys() or platform.is_mingw():
-    cxx = os.environ.get('CXX', 'g++')
-    ld = os.environ.get('LD', 'g++')
+    if 'Clang' in sys.version:
+      cxx = os.environ.get('CXX', 'clang++')
+      ld = os.environ.get('LD', 'clang++')
+    else:
+      cxx = os.environ.get('CXX', 'g++')
+      ld = os.environ.get('LD', 'g++')
     ar = os.environ.get('AR', 'ar')
   else:
     cxx = os.environ.get('CXX', 'clang++')
@@ -436,7 +443,6 @@ def WriteGNNinja(path, platform, host, options, args_list):
     cflags.extend([
         '-D_FILE_OFFSET_BITS=64',
         '-D__STDC_CONSTANT_MACROS', '-D__STDC_FORMAT_MACROS',
-        '-pthread',
         '-pipe',
         '-fno-exceptions',
         '-fno-rtti',
@@ -451,6 +457,9 @@ def WriteGNNinja(path, platform, host, options, args_list):
         '-std=c++17'
     ])
 
+    if cxx == 'g++':
+      cflags.append('-Wno-restrict')
+
     # flags not supported by gcc/g++.
     if cxx == 'clang++':
       cflags.extend(['-Wrange-loop-analysis', '-Wextra-semi-stmt'])
