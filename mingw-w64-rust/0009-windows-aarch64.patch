diff --unified --recursive --text --color --new-file rustc-1.57.0-src-orig/compiler/rustc_target/src/spec/aarch64_pc_windows_gnu.rs rustc-1.57.0-src/compiler/rustc_target/src/spec/aarch64_pc_windows_gnu.rs
--- rustc-1.57.0-src-orig/compiler/rustc_target/src/spec/aarch64_pc_windows_gnu.rs	1970-01-01 01:00:00.000000000 +0100
+++ rustc-1.57.0-src/compiler/rustc_target/src/spec/aarch64_pc_windows_gnu.rs	2021-12-27 13:57:28.788805700 +0100
@@ -0,0 +1,19 @@
+use crate::spec::{LinkerFlavor, Target};
+
+pub fn target() -> Target {
+    let mut base = super::windows_gnu_base::opts();
+    base.cpu = "aarch64".to_string();
+    let gcc_pre_link_args = base.pre_link_args.entry(LinkerFlavor::Gcc).or_default();
+    gcc_pre_link_args.push("-march=armv8-a".to_string());
+    base.max_atomic_width = Some(64);
+    base.linker = Some("aarch64-w64-mingw32-gcc".to_string());
+
+    Target {
+        llvm_target: "aarch64-pc-windows-gnu".to_string(),
+        pointer_width: 64,
+        data_layout: "e-m:w-p:64:64-i32:32-i64:64-i128:128-n32:64-S128"
+            .to_string(),
+        arch: "aarch64".to_string(),
+        options: base,
+    }
+}
diff --unified --recursive --text --color --new-file rustc-1.57.0-src-orig/compiler/rustc_target/src/spec/mod.rs rustc-1.57.0-src/compiler/rustc_target/src/spec/mod.rs
--- rustc-1.57.0-src-orig/compiler/rustc_target/src/spec/mod.rs	2021-12-27 14:59:42.808072600 +0100
+++ rustc-1.57.0-src/compiler/rustc_target/src/spec/mod.rs	2021-12-22 21:09:44.380299300 +0100
@@ -867,6 +867,7 @@
 
     ("x86_64-unknown-illumos", x86_64_unknown_illumos),
 
+    ("aarch64-pc-windows-gnu", aarch64_pc_windows_gnu),
     ("x86_64-pc-windows-gnu", x86_64_pc_windows_gnu),
     ("i686-pc-windows-gnu", i686_pc_windows_gnu),
     ("i686-uwp-windows-gnu", i686_uwp_windows_gnu),
diff --unified --recursive --text --color --new-file rustc-1.57.0-src-orig/src/bootstrap/dist.rs rustc-1.57.0-src/src/bootstrap/dist.rs
--- rustc-1.57.0-src-orig/src/bootstrap/dist.rs	2021-12-27 15:13:05.924314600 +0100
+++ rustc-1.57.0-src/src/bootstrap/dist.rs	2021-12-23 13:52:15.601313500 +0100
@@ -167,6 +167,8 @@
         "i686-w64-mingw32-gcc.exe"
     } else if target == "x86_64-pc-windows-gnu" {
         "x86_64-w64-mingw32-gcc.exe"
+    } else if target == "aarch64-pc-windows-gnu" {
+        "aarch64-w64-mingw32-gcc.exe"
     } else {
         "gcc.exe"
     };
diff --unified --recursive --text --color --new-file rustc-1.57.0-src-orig/src/build_helper/lib.rs rustc-1.57.0-src/src/build_helper/lib.rs
--- rustc-1.57.0-src-orig/src/build_helper/lib.rs	2021-12-27 15:13:10.995914000 +0100
+++ rustc-1.57.0-src/src/build_helper/lib.rs	2021-12-23 12:19:46.911909200 +0100
@@ -114,6 +114,7 @@
         "x86_64-pc-windows-msvc" => "x86_64-pc-win32",
         "i686-pc-windows-gnu" => "i686-w64-mingw32",
         "x86_64-pc-windows-gnu" => "x86_64-w64-mingw32",
+        "aarch64-pc-windows-gnu" => "aarch64-w64-mingw32",
         s => s,
     }
 }
diff --unified --recursive --text --color --new-file rustc-1.57.0-src-orig/vendor/cc/src/lib.rs rustc-1.57.0-src/vendor/cc/src/lib.rs
--- rustc-1.57.0-src-orig/vendor/cc/src/lib.rs	2021-12-27 15:13:19.541445300 +0100
+++ rustc-1.57.0-src/vendor/cc/src/lib.rs	2021-12-23 12:11:51.987855000 +0100
@@ -2477,6 +2477,7 @@
             .as_ref()
             .map(|s| s.trim_right_matches('-').to_owned());
         cross_compile.or(match &target[..] {
+            "aarch64-pc-windows-gnu" => Some("aarch64-w64-mingw32"),
             "aarch64-unknown-linux-gnu" => Some("aarch64-linux-gnu"),
             "aarch64-unknown-linux-musl" => Some("aarch64-linux-musl"),
             "aarch64-unknown-netbsd" => Some("aarch64--netbsd"),
diff --unified --recursive --text --color --new-file rustc-1.57.0-src-orig/vendor/cc-1.0.69/src/lib.rs rustc-1.57.0-src/vendor/cc-1.0.69/src/lib.rs
--- rustc-1.57.0-src-orig/vendor/cc-1.0.69/src/lib.rs	2021-12-27 15:13:22.484442100 +0100
+++ rustc-1.57.0-src/vendor/cc-1.0.69/src/lib.rs	2021-12-23 12:12:28.214647000 +0100
@@ -2379,6 +2379,7 @@
             .as_ref()
             .map(|s| s.trim_right_matches('-').to_owned());
         cross_compile.or(match &target[..] {
+            "aarch64-pc-windows-gnu" => Some("aarch64-w64-mingw32"),
             "aarch64-unknown-linux-gnu" => Some("aarch64-linux-gnu"),
             "aarch64-unknown-linux-musl" => Some("aarch64-linux-musl"),
             "aarch64-unknown-netbsd" => Some("aarch64--netbsd"),
