diff -urN rustc-1.64.0-src.orig/compiler/rustc_llvm/build.rs rustc-1.64.0-src/compiler/rustc_llvm/build.rs
--- rustc-1.64.0-src.orig/compiler/rustc_llvm/build.rs	2022-09-24 00:14:19.728138800 +0200
+++ rustc-1.64.0-src/compiler/rustc_llvm/build.rs	2022-09-24 17:42:37.065263700 +0200
@@ -235,9 +235,8 @@
     let mut cmd = Command::new(&llvm_config);
     cmd.arg(llvm_link_arg).arg("--libs");
 
-    if !is_crossed {
-        cmd.arg("--system-libs");
-    } else if target.contains("windows-gnu") {
+    cmd.arg("--system-libs");
+    if target.contains("windows-gnu") {
         println!("cargo:rustc-link-lib=shell32");
         println!("cargo:rustc-link-lib=uuid");
     } else if target.contains("netbsd") || target.contains("haiku") || target.contains("darwin") {
diff -urN rustc-1.64.0-src.orig/library/unwind/src/libunwind.rs rustc-1.64.0-src/library/unwind/src/libunwind.rs
--- rustc-1.64.0-src.orig/library/unwind/src/libunwind.rs	2022-09-19 16:07:21.000000000 +0200
+++ rustc-1.64.0-src/library/unwind/src/libunwind.rs	2022-09-24 16:33:03.606975800 +0200
@@ -90,7 +90,7 @@
 // rustc_codegen_ssa::src::back::symbol_export, rustc_middle::middle::exported_symbols
 // and RFC 2841
 #[cfg_attr(
-    all(feature = "llvm-libunwind", any(target_os = "fuchsia", target_os = "linux")),
+    any(all(feature = "llvm-libunwind", any(target_os = "fuchsia", target_os = "linux")), all(target_os = "windows", target_env = "gnu", target_abi = "llvm")),
     link(name = "unwind", kind = "static", modifiers = "-bundle")
 )]
 extern "C-unwind" {
diff -urN rustc-1.64.0-src.orig/src/bootstrap/compile.rs rustc-1.64.0-src/src/bootstrap/compile.rs
--- rustc-1.64.0-src.orig/src/bootstrap/compile.rs	2022-09-19 16:07:21.000000000 +0200
+++ rustc-1.64.0-src/src/bootstrap/compile.rs	2022-09-24 16:19:22.998368200 +0200
@@ -206,7 +206,6 @@
     }
 
     if target == "x86_64-fortanix-unknown-sgx"
-        || target.contains("pc-windows-gnullvm")
         || builder.config.llvm_libunwind(target) == LlvmLibunwind::InTree
             && (target.contains("linux") || target.contains("fuchsia"))
     {
diff -urN rustc-1.64.0-src.orig/src/bootstrap/dist.rs rustc-1.64.0-src/src/bootstrap/dist.rs
--- rustc-1.64.0-src.orig/src/bootstrap/dist.rs	2022-09-24 00:14:19.929176800 +0200
+++ rustc-1.64.0-src/src/bootstrap/dist.rs	2022-09-24 20:04:09.511879200 +0200
@@ -364,18 +364,6 @@
 
             builder.install(&builder.rustdoc(compiler), &image.join("bin"), 0o755);
 
-            let ra_proc_macro_srv = builder
-                .ensure(tool::RustAnalyzerProcMacroSrv {
-                    compiler: builder.compiler_for(
-                        compiler.stage,
-                        builder.config.build,
-                        compiler.host,
-                    ),
-                    target: compiler.host,
-                })
-                .expect("rust-analyzer-proc-macro-server always builds");
-            builder.install(&ra_proc_macro_srv, &image.join("libexec"), 0o755);
-
             let libdir_relative = builder.libdir_relative(compiler);
 
             // Copy runtime DLLs needed by the compiler
