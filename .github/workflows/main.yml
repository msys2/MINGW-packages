name: main

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include: [
          { msystem: MINGW64, arch: x86_64, can-fail: false },
          { msystem: MINGW32, arch: i686, can-fail: false },
          { msystem: UCRT64, arch: ucrt-x86_64, can-fail: false }
        ]
    name: ${{ matrix.msystem }}
    steps:

      - uses: actions/checkout@v2
        with:
          path: temp
          fetch-depth: 0

      # to match the autobuild environment
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - uses: msys2/setup-msys2@v2
        with:
          msystem: MSYS
          install: git msys2-devel base-devel binutils mingw-w64-${{ matrix.arch }}-toolchain
          update: true

      - name: Add staging repo
        shell: msys2 {0}
        run: |
          sed -i '1s|^|[staging]\nServer = https://repo.msys2.org/staging/\nSigLevel = Never\n|' /etc/pacman.conf

      - name: Update using staging
        run: |
          msys2 -c 'pacman --noconfirm -Suuy'
          msys2 -c 'pacman --noconfirm -Suu'

      - name: Move Checkout
        run: |
          Copy-Item -Path ".\temp" -Destination "C:\_" -Recurse

      - name: CI-Build
        shell: msys2 {0}
        continue-on-error: ${{ matrix.can-fail }}
        run: |
          cd /C/_
          MINGW_ARCH=${{ matrix.msystem }} ./.ci/ci-build.sh

      - name: "Upload binaries"
        uses: actions/upload-artifact@v2
        continue-on-error: ${{ matrix.can-fail }}
        with:
          name: ${{ matrix.msystem }}-packages
          path: C:/_/artifacts/*.pkg.tar.*
