From d55bb10e7788630a057320c64e661d9db4f7e76b Mon Sep 17 00:00:00 2001
Message-Id: <d55bb10e7788630a057320c64e661d9db4f7e76b.1471609754.git-series.abdo.roig@gmail.com>
From: Abdo Roig-Maranges <abdo.roig@gmail.com>
Date: Fri, 19 Aug 2016 13:46:27 +0200
Subject: [PATCH 1/1] Translate git paths from msys to windows

---
 git/git.go | 22 ++++++++++++++++++----
 1 file changed, 18 insertions(+), 4 deletions(-)

diff --git a/git/git.go b/git/git.go
index 2edaa99..9780958 100644
--- a/git/git.go
+++ b/git/git.go
@@ -502,6 +502,20 @@ func GetCommitSummary(commit string) (*CommitSummary, error) {
 	}
 }
 
+func CygpathWindowsAbsolute(path string) (string, error) {
+	cmd := subprocess.ExecCommand("cygpath", "-w", strings.TrimSpace(path))
+	buf := &bytes.Buffer{}
+	cmd.Stderr = buf
+
+	out, err := cmd.Output()
+	output := strings.TrimSpace(string(out))
+	if err != nil {
+		return "", fmt.Errorf("Failed to call cygpath -w: %q", buf.String())
+	}
+
+	return filepath.Abs(output)
+}
+
 func GitAndRootDirs() (string, string, error) {
 	cmd := subprocess.ExecCommand("git", "rev-parse", "--git-dir", "--show-toplevel")
 	buf := &bytes.Buffer{}
@@ -520,7 +534,7 @@ func GitAndRootDirs() (string, string, error) {
 		return "", "", fmt.Errorf("Bad git rev-parse output: %q", output)
 	}
 
-	absGitDir, err := filepath.Abs(paths[0])
+	absGitDir, err := CygpathWindowsAbsolute(paths[0])
 	if err != nil {
 		return "", "", fmt.Errorf("Error converting %q to absolute: %s", paths[0], err)
 	}
@@ -529,7 +543,7 @@ func GitAndRootDirs() (string, string, error) {
 		return absGitDir, "", nil
 	}
 
-	absRootDir, err := filepath.Abs(paths[1])
+	absRootDir, err := CygpathWindowsAbsolute(paths[1])
 	if err != nil {
 		return "", "", fmt.Errorf("Error converting %q to absolute: %s", paths[1], err)
 	}
@@ -546,7 +560,7 @@ func RootDir() (string, error) {
 
 	path := strings.TrimSpace(string(out))
 	if len(path) > 0 {
-		return filepath.Abs(path)
+		return CygpathWindowsAbsolute(path)
 	}
 	return "", nil
 
@@ -560,7 +574,7 @@ func GitDir() (string, error) {
 	}
 	path := strings.TrimSpace(string(out))
 	if len(path) > 0 {
-		return filepath.Abs(path)
+		return CygpathWindowsAbsolute(path)
 	}
 	return "", nil
 }
-- 
git-series 0.8.7
