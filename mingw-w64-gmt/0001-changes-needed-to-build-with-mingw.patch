diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 9acc139..af1276c 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -530,9 +530,9 @@ if (HAVE_DLADDR AND HAVE_LIBDL)
 	target_link_libraries (gmtlib dl)
 endif (HAVE_DLADDR AND HAVE_LIBDL)
 
-if (MSVC AND FFTW3_FOUND)
+if ((MSVC OR MINGW) AND FFTW3_FOUND)
 	target_link_libraries (gmtlib ws2_32)
-endif (MSVC AND FFTW3_FOUND)
+endif ((MSVC OR MINGW) AND FFTW3_FOUND)
 
 # set the build version (VERSION) and the API version (SOVERSION)
 set_target_properties (gmtlib
diff --git a/src/gmt_init.c b/src/gmt_init.c
index bf967dc..f22cb57 100644
--- a/src/gmt_init.c
+++ b/src/gmt_init.c
@@ -18345,7 +18345,7 @@ struct GMT_CTRL *gmt_begin (struct GMTAPI_CTRL *API, const char *session, unsign
 #endif
 #endif
 
-#ifdef WIN32
+#ifdef _WIN32
 	/* Set all I/O to binary mode */
 	if ( _setmode(_fileno(stdin), _O_BINARY) == -1 ) {
 		if (API->external)
@@ -18371,6 +18371,7 @@ struct GMT_CTRL *gmt_begin (struct GMTAPI_CTRL *API, const char *session, unsign
 			return NULL;
 		}
 	}
+#ifdef _MSC_VER
 	if ( _set_fmode(_O_BINARY) != 0 ) {
 		if (API->external)
 			GMT_Report (API, GMT_MSG_WARNING, "Could not set binary mode for file I/O. This may no be a fatal error but...\n");
@@ -18379,6 +18380,9 @@ struct GMT_CTRL *gmt_begin (struct GMTAPI_CTRL *API, const char *session, unsign
 			return NULL;
 		}
 	}
+#else
+	_fmode = _O_BINARY;
+#endif
 #endif
 
 	if ((GMT = gmtinit_new_GMT_ctrl (API, session, pad)) == NULL)	/* Allocate and initialize a new common control structure */
