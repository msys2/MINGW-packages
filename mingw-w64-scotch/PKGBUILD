# Contributor: Oleg A. Khlybov <fougas@mail.ru>

_realname=scotch
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}"
         "${MINGW_PACKAGE_PREFIX}-${_realname}64")
pkgdesc='Graph partitioning and sparse matrix ordering package (mingw-w64)'
pkgver=7.0.5
pkgrel=1
arch=('any')
mingw_arch=('mingw64' 'ucrt64' 'clang64')
url="https://www.labri.fr/perso/pelegrin/scotch/"
msys2_repository_url="https://gitlab.inria.fr/scotch/scotch"
license=('spdx:CECILL-C')
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-libsystre")
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
	     "${MINGW_PACKAGE_PREFIX}-ninja"
	     $([[ ${CARCH} == aarch64 ]] || echo "${MINGW_PACKAGE_PREFIX}-msmpi"))
options=('!strip')
source=("https://gitlab.inria.fr/scotch/scotch/-/archive/v${pkgver}/${_realname}-v${pkgver}.tar.gz"
        "Makefile.idx32.inc"
        "Makefile.idx64.inc"
        "0002-pipe-fix.patch"
        "0004-dummysizes-regex.patch"
	"0005-name-suffix.patch")
sha256sums=('385507a9712bb9057497b9ac3f24ad2132bd3f3f8c7a62e78324fc58f2a0079b'
            '4221b69dcc53230ff4d6bc18e3982f6d39971a99fc17f4dab609fc19b99d8a30'
            'c52bf0598332d8139a37606e7ea9376b7f841059047c0c977b205a763fc7e97a'
            'b6e76b1d2f35b3fcc771b97a35a468d6314ee3a619defef18b82fc7654638a49'
            '15dd82d4c7b118e08316df4242d647bdaa1f180ff143ee33fe84633c97aac111'
            'SKIP')
prepare() {
  cd "${srcdir}/${_realname}-v${pkgver}"
  for p in ${source[*]:3}; do
    patch -p1 -i "$srcdir/$p"
  done
  #sed -i 's/DESTINATION man/DESTINATION share\/man/g' ${srcdir}/${_realname}-v${pkgver}/CMakeLists.txt
}

_build_scotch() {
  _idx_opt=$1

  declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi
  
  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake \
    -GNinja \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    "${extra_config[@]}" \
    ${_idx_opt} \
    -DINSTALL_METIS_HEADERS=ON \
    -DBUILD_PTSCOTCH=ON \
    -DBUILD_LIBESMUMPS=ON \
    -DBUILD_LIBSCOTCHMETIS=OFF \
    -DMPI_THREAD_MULTIPLE=OFF \
    -DBUILD_PTSCOTCH=ON \
    ../${_realname}-v${pkgver}

  ${MINGW_PREFIX}/bin/cmake --build .
  
}

build() {
  mkdir -p "${srcdir}"/build-${MSYSTEM}-static-32 && cd "${srcdir}"/build-${MSYSTEM}-static-32

  msg2 "Build static Scotch with 32-bit indexing"
  _build_scotch "-DINTSIZE=32 -DCMAKE_INSTALL_INCLUDEDIR=include/scotch"
  
  mkdir -p "${srcdir}"/build-${MSYSTEM}-shared-32 && cd "${srcdir}"/build-${MSYSTEM}-shared-32

  msg2 "Build shared Scotch with 32-bit indexing"
  _build_scotch "-DINTSIZE=32 -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_INCLUDEDIR=include/scotch"

  mkdir -p "${srcdir}"/build-${MSYSTEM}-static-64 && cd "${srcdir}"/build-${MSYSTEM}-static-64
  
  msg2 "Build static Scotch with 64-bit indexing"
  _build_scotch "-DINTSIZE=64 -DNAME_SUFFIX=_64 -DCMAKE_INSTALL_INCLUDEDIR=include/scotch64"
  
  mkdir -p "${srcdir}"/build-${MSYSTEM}-shared-64 && cd "${srcdir}"/build-${MSYSTEM}-shared-64
  
  msg2 "Build shared Scotch with 64-bit indexing"
  _build_scotch "-DINTSIZE=64 -DBUILD_SHARED_LIBS=ON -DNAME_SUFFIX=_64 -DCMAKE_INSTALL_INCLUDEDIR=include/scotch64"
  
}

package_scotch() {
  pkgdesc="Graph partitioning and sparse matrix ordering package (mingw-w64)"
  
  # Static Install
  cd "${srcdir}"/build-${MSYSTEM}-static-32
  DESTDIR=${pkgdir} cmake --install . 
  
  # Shared Install
  cd "${srcdir}"/build-${MSYSTEM}-shared-32
  DESTDIR=${pkgdir} cmake --install . 
  install -Dm644 "${srcdir}"/${_realname}-v${pkgver}/doc/CeCILL-C_V1-en.txt "${pkgdir}"${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE
}

package_scotch64() {
  pkgdesc="Graph partitioning and sparse matrix ordering package with 64-bit indexing (mingw-w64)"
  provides=()
  conflicts=()
  
  # Static Install
  cd "${srcdir}"/build-${MSYSTEM}-static-64
  DESTDIR=${pkgdir} cmake --install . 
  
  # Shared Install
  cd "${srcdir}"/build-${MSYSTEM}-shared-64
  DESTDIR=${pkgdir} cmake --install . 
  install -Dm644 "${srcdir}"/${_realname}-v${pkgver}/doc/CeCILL-C_V1-en.txt "${pkgdir}"${MINGW_PREFIX}/share/licenses/${_realname}64/LICENSE
}


# template start; name=mingw-w64-splitpkg-wrappers; version=1.0;
# vim: set ft=bash :

# generate wrappers
for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
# template end;
