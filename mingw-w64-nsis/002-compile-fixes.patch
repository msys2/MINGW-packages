diff -urN nsis-3.08-src-orig/SCons/Config/gnu nsis-3.08-src/SCons/Config/gnu
--- nsis-3.08-src-orig/SCons/Config/gnu	2020-06-28 07:18:45.000000000 +0800
+++ nsis-3.08-src/SCons/Config/gnu	2022-02-10 19:04:29.441876800 +0800
@@ -19,7 +19,8 @@
 ### cross compiling
 
 def cross_env(env):
-	if env['PLATFORM'] != 'win32':
+	import sys
+	if not 'MSC' in sys.version:
 		env.Tool('crossmingw', toolpath = [Dir('../Tools').rdir()])
 
 ### flags
@@ -35,7 +36,7 @@
 defenv['ENTRY_FLAG'] = entry
 defenv['MAP_FLAG'] = '-Wl,-Map,${TARGET.base}.map'
 defenv['EXCEPTION_FLAG'] = ''
-defenv['NODEFLIBS_FLAG'] = '-nostdlib -Wl,--exclude-libs,msvcrt.a'
+defenv['NODEFLIBS_FLAG'] = '-nostdlib'
 defenv['C_FLAG'] = '-xc'
 defenv['CPP_FLAG'] = '-xc++'
 defenv['ALIGN_FLAG'] = '-Wl,--file-alignment,512'
@@ -44,11 +45,14 @@
 defenv['SUBSYS_WIN'] = '-Wl,--subsystem,windows'
 defenv['MSVCRT_FLAG'] = ''
 defenv['STDCALL'] = '"__attribute__((__stdcall__))"'
+defenv['SHLIBPREFIX'] = ''
+defenv['PLATFORM'] = 'win32'
 
 # Don't allow mingw to link with LIBGCC*.DLL and LIBSTDC++-*.DLL 
 if defenv['PLATFORM'] == 'win32':
 	defenv.Append(LINKFLAGS = ['-static-libgcc'])
 	defenv.Append(LINKFLAGS = ['-static-libstdc++'])
+	defenv.Append(LINKFLAGS = ['-static'])
 
 ### defines
 
@@ -121,6 +125,7 @@
 makensis_env.Append(CFLAGS = ['-Wall'])                   # all warnings
 makensis_env.Append(CXXFLAGS = ['-Wno-non-virtual-dtor']) # ignore virtual dtor warnings
 makensis_env.Append(CXXFLAGS = ['-Wall'])                 # all warnings
+makensis_env.Append(CXXFLAGS = ['-std=c++11'])
 makensis_env['STDCALL'] = ''                              # avoid warnings
 
 conf = FlagsConfigure(makensis_env)
@@ -138,14 +143,13 @@
 	plugin_env.Append(CCFLAGS = ['-Os'])              # optimize for size
 plugin_env.Append(CCFLAGS = ['-Wall'])              # level 3 warnings
 plugin_env.Append(CCFLAGS = ['-fno-strict-aliasing']) # not safe for strict aliasing
+plugin_env.Append(CXXFLAGS = ['-std=c++11'])
 
 if not defenv['DEBUG'] and defenv['STRIP'] and defenv['STRIP_W32']:
 	plugin_env.Append(LINKFLAGS = ['-s'])             # strip
 plugin_env.Append(LINKFLAGS = ['-mwindows'])        # build windows executables
 plugin_env.Append(LINKFLAGS = ['$ALIGN_FLAG'])      # 512 bytes align
 plugin_env.Append(LINKFLAGS = ['$MAP_FLAG'])        # generate map file
-plugin_env.Append(LINKFLAGS = ['-static-libgcc'])   # remove libgcc*.dll dependency
-plugin_env.Append(LINKFLAGS = ['-static-libstdc++']) # remove libstdc++*.dll dependency
 
 plugin_uenv = plugin_env.Clone()
 plugin_uenv.Append(CPPDEFINES = ['_UNICODE', 'UNICODE'])
@@ -323,7 +327,8 @@
 #
 
 conf = FlagsConfigure(makensis_env)
-conf.CheckLinkFlag('-pthread')
+if defenv['PLATFORM'] != 'win32':
+	conf.CheckLinkFlag('-pthread')
 conf.Finish()
 
 #
diff -urN nsis-3.08-src-orig/Source/util.cpp nsis-3.08-src/Source/util.cpp
--- nsis-3.08-src-orig/Source/util.cpp	2022-02-10 18:47:42.903306100 +0800
+++ nsis-3.08-src/Source/util.cpp	2022-02-10 18:53:08.789945700 +0800
@@ -1126,7 +1126,10 @@
 {
   STARTUPINFO si = { sizeof(STARTUPINFO), };
   PROCESS_INFORMATION pi;
-  if (!CreateProcess(NULL, const_cast<LPSTR>(cmd), NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi))
+  LPSTR modifiable_cmd = strdup(cmd);
+  BOOL result = CreateProcess(NULL, modifiable_cmd, NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi);
+  free(modifiable_cmd);
+  if (!result)
     return GetLastError();
   WaitForSingleObject(pi.hProcess, INFINITE);
   GetExitCodeProcess(pi.hProcess, &si.cb);
