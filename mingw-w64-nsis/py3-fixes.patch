diff -Nur nsis-3.05-src-orig/Contrib/Graphics/SConscript nsis-3.05-src/Contrib/Graphics/SConscript
--- nsis-3.05-src-orig/Contrib/Graphics/SConscript	2020-02-13 21:24:37.548530700 +0100
+++ nsis-3.05-src/Contrib/Graphics/SConscript	2020-02-13 21:41:58.144763900 +0100
@@ -90,8 +90,8 @@
 
 Import('defenv')
 
-def join(prefix, list):
-	return map(lambda x: '%s/%s' % (prefix, x), list)
+def join(prefix, list_):
+	return list(map(lambda x: '%s/%s' % (prefix, x), list_))
 
 def dist(dir, files):
 	defenv.DistributeContrib(join(dir, files), path='Graphics/%s' % dir)
diff -Nur "nsis-3.05-src-orig/Contrib/Modern UI/SConscript" "nsis-3.05-src/Contrib/Modern UI/SConscript"
--- "nsis-3.05-src-orig/Contrib/Modern UI/SConscript"	2007-08-09 04:52:50.000000000 +0200
+++ "nsis-3.05-src/Contrib/Modern UI/SConscript"	2020-02-13 21:42:24.747586200 +0100
@@ -22,8 +22,8 @@
 
 Import('defenv')
 
-def join(prefix, list):
-	return map(lambda x: '%s/%s' % (prefix, x), list)
+def join(prefix, list_):
+	return list(map(lambda x: '%s/%s' % (prefix, x), list_))
 
 defenv.DistributeDocs(docs, path=target)
 path = 'images'
diff -Nur "nsis-3.05-src-orig/Contrib/Modern UI 2/SConscript" "nsis-3.05-src/Contrib/Modern UI 2/SConscript"
--- "nsis-3.05-src-orig/Contrib/Modern UI 2/SConscript"	2007-12-22 11:13:29.000000000 +0100
+++ "nsis-3.05-src/Contrib/Modern UI 2/SConscript"	2020-02-13 21:42:39.342064600 +0100
@@ -34,8 +34,8 @@
 
 Import('defenv')
 
-def join(prefix, list):
-	return map(lambda x: '%s/%s' % (prefix, x), list)
+def join(prefix, list_):
+	return list(map(lambda x: '%s/%s' % (prefix, x), list_))
 
 defenv.DistributeDocs(docs, path=target)
 defenv.DistributeDocs(join('../Modern UI/images',doc_images), path='%s/%s'%(target,'images'))
diff -Nur nsis-3.05-src-orig/SConstruct nsis-3.05-src/SConstruct
--- nsis-3.05-src-orig/SConstruct	2020-02-13 21:24:38.472750300 +0100
+++ nsis-3.05-src/SConstruct	2020-02-13 21:42:58.407984600 +0100
@@ -364,7 +364,7 @@
 def Distribute(files, names, component, path, subpath, alias, install_alias=None):
 	files = MakeFileList(files)
 
-	names = names or map(lambda x: x.name, files)
+	names = names or list(map(lambda x: x.name, files))
 	if isinstance(names, str):
 		names = [names]
 
