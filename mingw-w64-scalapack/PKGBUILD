# Contributor: Oleg A. Khlybov <fougas@mail.ru>

_realname=scalapack
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=2.2.0
pkgrel=4
pkgdesc="Scalable Linear Algebra PACKage (mingw-w64)"
arch=('any')
mingw_arch=('mingw64' 'ucrt64' 'clang64')
url="https://www.netlib.org/scalapack"
msys2_repository_url="https://github.com/Reference-ScaLAPACK/scalapack/"
license=('spdx:BSD-3-Clause')
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
         $([[ ${MINGW_PACKAGE_PREFIX} == *-clang-* ]] || echo "${MINGW_PACKAGE_PREFIX}-gcc-libgfortran")
         "${MINGW_PACKAGE_PREFIX}-openblas")
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-fc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-msmpi")
source=("https://www.netlib.org/${_realname}/${_realname}-${pkgver}.tgz"
        '0001-fix-building-with-flang.patch'
        '0002-scalapack-fix-bindir.patch'
        '0003-force-single-lib.patch'
        '0004-fix-pc.patch')
sha256sums=('40b9406c20735a9a3009d863318cb8d3e496fb073d201c5463df810e01ab2a57'
            'cecb30a91e059c1b61628ed45c8cb5a0fdc865b5594016d443719b3bba1b5380'
            '9d763267c1dbe494eef426d7d662cf5da736b96693ee51c9d2c099167e179662'
            '954c22f1107a254a46400a0014f17af9c5b8877f0034793e2c6781eafafa8225'
            '9f791fdb6a6d59cd86caa53cec62a1a6dbb2f6f31bd16f8320864615695e175e')

apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying $_patch"
    patch -Nbp1 -i "${srcdir}/$_patch"
  done
}

prepare() {
  cd "${srcdir}/${_realname}-${pkgver}"
  if [[ ${MINGW_PACKAGE_PREFIX} == *-clang-* ]]; then
    apply_patch_with_msg \
      '0001-fix-building-with-flang.patch'
  fi
  apply_patch_with_msg \
    '0002-scalapack-fix-bindir.patch' \
    '0003-force-single-lib.patch' \
    '0004-fix-pc.patch'
}

build() {
  declare -a _extra_config
  if check_option "debug" "n"; then
    _extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    _extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  export FC=mpifort
  if [[ ${MINGW_PACKAGE_PREFIX} != *-clang-* ]]; then
    export FFLAGS="-fallow-argument-mismatch"
  else
    CFLAGS+=" -Wno-implicit-function-declaration"
  fi

  # static
  mkdir -p build-${MSYSTEM}s && cd build-${MSYSTEM}s
  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    ${MINGW_PREFIX}/bin/cmake \
      -G"Ninja" \
      -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
      "${_extra_config[@]}" \
      -DBUILD_SHARED_LIBS=OFF \
      -DSCALAPACK_BUILD_TESTS=OFF \
      ../${_realname}-${pkgver}
  ${MINGW_PREFIX}/bin/cmake --build .

  # shared
  cd "${srcdir}"
  mkdir -p build-${MSYSTEM} && cd build-${MSYSTEM}
  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    ${MINGW_PREFIX}/bin/cmake \
      -G"Ninja" \
      -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
      "${_extra_config[@]}" \
      -DBUILD_SHARED_LIBS=ON \
      -DSCALAPACK_BUILD_TESTS=OFF \
      ../${_realname}-${pkgver}
  ${MINGW_PREFIX}/bin/cmake --build .
}

package() {
  cd "${srcdir}/build-${MSYSTEM}s"
  DESTDIR="${pkgdir}" ${MINGW_PREFIX}/bin/cmake --install .
  cd "${srcdir}/build-${MSYSTEM}"
  DESTDIR="${pkgdir}" ${MINGW_PREFIX}/bin/cmake --install .
}
