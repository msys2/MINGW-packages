# Contributor: Frederic Wang <fred.wang@free.fr>

_pyname=pytest
_realname=${_pyname}
pkgbase=mingw-w64-python-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-python2-${_realname}" "${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
pkgver=3.9.3
pkgrel=1
pkgdesc='simple powerful testing with Python (mingw-w64)'
url='https://pytest.org/'
license=('MIT')
arch=('any')
makedepends=("${MINGW_PACKAGE_PREFIX}-python2"
             "${MINGW_PACKAGE_PREFIX}-python3"
             "${MINGW_PACKAGE_PREFIX}-python2-py>=1.5.0"
             "${MINGW_PACKAGE_PREFIX}-python3-py>=1.5.0"
             "${MINGW_PACKAGE_PREFIX}-python2-six>=1.10.0"
             "${MINGW_PACKAGE_PREFIX}-python3-six>=1.10.0"
             "${MINGW_PACKAGE_PREFIX}-python2-pluggy>=0.7"
             "${MINGW_PACKAGE_PREFIX}-python3-pluggy>=0.7"
             "${MINGW_PACKAGE_PREFIX}-python3-attrs>=17.4.0" 
             "${MINGW_PACKAGE_PREFIX}-python2-attrs>=17.4.0"
             "${MINGW_PACKAGE_PREFIX}-python3-more-itertools>=4.0.0"
             "${MINGW_PACKAGE_PREFIX}-python2-more-itertools>=4.0.0" 
             "${MINGW_PACKAGE_PREFIX}-python3-atomicwrites>=1.0"
             "${MINGW_PACKAGE_PREFIX}-python2-atomicwrites>=1.0"
             "${MINGW_PACKAGE_PREFIX}-python2-funcsigs"
             "${MINGW_PACKAGE_PREFIX}-python2-pathlib2>=2.2.0"
             "${MINGW_PACKAGE_PREFIX}-python2-colorama"
             "${MINGW_PACKAGE_PREFIX}-python3-colorama"
             "${MINGW_PACKAGE_PREFIX}-python2-setuptools-scm"
             "${MINGW_PACKAGE_PREFIX}-python3-setuptools-scm")
checkdepends=("${MINGW_PACKAGE_PREFIX}-python3-nose"
              "${MINGW_PACKAGE_PREFIX}-python2-nose"
              "${MINGW_PACKAGE_PREFIX}-python3-mock"
              "${MINGW_PACKAGE_PREFIX}-python2-mock"
              "${MINGW_PACKAGE_PREFIX}-python3-tox"
              "${MINGW_PACKAGE_PREFIX}-python2-tox"
              "${MINGW_PACKAGE_PREFIX}-python3-yaml"
              "${MINGW_PACKAGE_PREFIX}-python2-yaml"
              "${MINGW_PACKAGE_PREFIX}-python3-pytest-xdist"
              "${MINGW_PACKAGE_PREFIX}-python2-pytest-xdist"
#              "${MINGW_PACKAGE_PREFIX}-python3-twisted"
#              "${MINGW_PACKAGE_PREFIX}-python2-twisted"
              "${MINGW_PACKAGE_PREFIX}-python3-requests"
              "${MINGW_PACKAGE_PREFIX}-python2-requests"
              "${MINGW_PACKAGE_PREFIX}-python3-hypothesis"
              "${MINGW_PACKAGE_PREFIX}-python2-hypothesis")
source=("${_realname}-${pkgver}.tar.gz::https://github.com/pytest-dev/pytest/archive/${pkgver}.tar.gz")
sha256sums=('aa9300503a6c05b8eaa2e7656c6d14b7c5ebba05b845abb14c82e27bca4fa08b')

prepare() {
  cd ${srcdir}
  
  sed -i "s/'_pytest.vendored_packages'//" ${_realname}-${pkgver}/setup.py
  sed -i 's/assert numentries == 0/assert numentries == 26/' ${_realname}-${pkgver}/testing/python/collect.py
  export SETUPTOOLS_SCM_PRETEND_VERSION=${pkgver}
  
  for builddir in python{2,3}-build-${CARCH}; do  
    rm -rf $builddir | true
    cp -r "${_pyname}-${pkgver}" "${builddir}"
  done
}

# Note that build() is sometimes skipped because it's done in 
# the packages setup.py install for simplicity if you can do so.
# but sometimes, you want to do a check before install which would
# also trigger the build.  
build() {  
  for pver in {2,3}; do  
    msg "Python ${pver} build for ${CARCH}"  
    cd "${srcdir}/python${pver}-build-${CARCH}"
    MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
      ${MINGW_PREFIX}/bin/python${pver} setup.py build
  done
}

check() {
  for pver in {2,3}; do
    msg "Python ${pver} test for ${CARCH}"
    cd "${srcdir}/python${pver}-build-${CARCH}"
    PYTHONPATH="$(pwd)/build/lib" \
      ${MINGW_PREFIX}/bin/python${pver} src/pytest.py
  done
}

package_python3-pytest() {
  depends=("${MINGW_PACKAGE_PREFIX}-python3-py"
           "${MINGW_PACKAGE_PREFIX}-python3-pluggy"
           "${MINGW_PACKAGE_PREFIX}-python3-setuptools"
           "${MINGW_PACKAGE_PREFIX}-python3-colorama"
           "${MINGW_PACKAGE_PREFIX}-python3-six"
           "${MINGW_PACKAGE_PREFIX}-python3-atomicwrites"
           "${MINGW_PACKAGE_PREFIX}-python3-more-itertools"
           "${MINGW_PACKAGE_PREFIX}-python3-attrs")

  cd "${srcdir}/python3-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python3 setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build

  install -Dm644 LICENSE "${pkgdir}${MINGW_PREFIX}/share/licenses/python3-${_realname}/COPYING"

# You should OMIT this section if your package is not installing anything in the bin dir.
  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  # fix python command in files
  for _ff in ${pkgdir}${MINGW_PREFIX}/bin/*.py; do
    sed -e "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" -i ${_ff}
  done
}

package_python2-pytest() {
  depends=("${MINGW_PACKAGE_PREFIX}-python2-py"
           "${MINGW_PACKAGE_PREFIX}-python2-pluggy"
           "${MINGW_PACKAGE_PREFIX}-python2-setuptools"
           "${MINGW_PACKAGE_PREFIX}-python2-colorama"
           "${MINGW_PACKAGE_PREFIX}-python2-funcsigs"
           "${MINGW_PACKAGE_PREFIX}-python2-six"
           "${MINGW_PACKAGE_PREFIX}-python2-atomicwrites"
           "${MINGW_PACKAGE_PREFIX}-python2-more-itertools"
           "${MINGW_PACKAGE_PREFIX}-python2-pathlib2"
           "${MINGW_PACKAGE_PREFIX}-python2-attrs")

  cd "${srcdir}/python2-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python2 setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build

  install -Dm644 LICENSE "${pkgdir}${MINGW_PREFIX}/share/licenses/python2-${_realname}/COPYING"

# You should OMIT this section if your package is not installing anything in the bin dir.
  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  # fix python command in files
  for _ff in ${pkgdir}${MINGW_PREFIX}/bin/*.py; do
    sed -e "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" -i ${_ff}
  done
# This is for packages that install scripts and .exe into the /mingw*/bin
  for f in py.test pytest; do
    mv "${pkgdir}${MINGW_PREFIX}"/bin/${f}{,2}.exe
    if [ -f "${pkgdir}${MINGW_PREFIX}"/bin/${f}.exe.manifest ]; then
      mv "${pkgdir}${MINGW_PREFIX}"/bin/${f}{,2}.exe.manifest
      sed -e "s|${f}|${f}2|g" -i "${pkgdir}${MINGW_PREFIX}"/bin/${f}2.exe.manifest
    fi
    mv "${pkgdir}${MINGW_PREFIX}"/bin/${f}{,2}-script.py
  done
}

package_mingw-w64-i686-python2-pytest() {
  install=${_realname}2-${CARCH}.install
  package_python2-pytest
}

package_mingw-w64-i686-python3-pytest() {
  install=${_realname}3-${CARCH}.install
  package_python3-pytest
}

package_mingw-w64-x86_64-python2-pytest() {
  install=${_realname}2-${CARCH}.install
  package_python2-pytest
}

package_mingw-w64-x86_64-python3-pytest() {
  install=${_realname}3-${CARCH}.install
  package_python3-pytest
}
