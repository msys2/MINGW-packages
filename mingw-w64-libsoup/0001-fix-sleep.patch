From 15572d35517a6d34019a415f924de8641c6a3f04 Mon Sep 17 00:00:00 2001
From: Ignacio Casal Quinteiro <qignacio@amazon.com>
Date: Mon, 23 Sep 2019 11:54:48 +0200
Subject: [PATCH 1/2] hsts-test: use g_usleep since sleep is not defined on
 Windows

Fixes #169
---
 tests/hsts-test.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/tests/hsts-test.c b/tests/hsts-test.c
index 0ea7e289..b01e1f37 100644
--- a/tests/hsts-test.c
+++ b/tests/hsts-test.c
@@ -194,7 +194,7 @@ do_hsts_expire_test (void)
 	session_get_uri (session, "https://localhost/two-seconds", SOUP_STATUS_OK);
 	session_get_uri (session, "http://localhost", SOUP_STATUS_OK);
 	/* Wait for the policy to expire. */
-	sleep (3);
+	g_usleep (3 * G_USEC_PER_SEC);
 	session_get_uri (session, "http://localhost", SOUP_STATUS_MOVED_PERMANENTLY);
 
 	soup_test_session_abort_unref (session);
@@ -220,7 +220,7 @@ do_hsts_replace_test (void)
 	session_get_uri (session, "http://localhost", SOUP_STATUS_OK);
 	session_get_uri (session, "https://localhost/two-seconds", SOUP_STATUS_OK);
 	/* Wait for the policy to expire. */
-	sleep (3);
+	g_usleep (3 * G_USEC_PER_SEC);
 	session_get_uri (session, "http://localhost", SOUP_STATUS_MOVED_PERMANENTLY);
 
 	soup_test_session_abort_unref (session);
@@ -231,9 +231,9 @@ do_hsts_update_test (void)
 {
 	SoupSession *session = hsts_session_new (NULL);
 	session_get_uri (session, "https://localhost/three-seconds", SOUP_STATUS_OK);
-	sleep (2);
+	g_usleep (2 * G_USEC_PER_SEC);
 	session_get_uri (session, "https://localhost/three-seconds", SOUP_STATUS_OK);
-	sleep (2);
+	g_usleep (2 * G_USEC_PER_SEC);
 
 	/* At this point, 4 seconds have elapsed since setting the 3 seconds HSTS
 	   rule for the first time, and it should have expired by now, but since it
@@ -319,7 +319,7 @@ do_hsts_multiple_headers_test (void)
 {
 	SoupSession *session = hsts_session_new (NULL);
 	session_get_uri (session, "https://localhost/multiple-headers", SOUP_STATUS_OK);
-	sleep(2);
+	g_usleep(2 * G_USEC_PER_SEC);
 	session_get_uri (session, "http://localhost", SOUP_STATUS_OK);
 	soup_test_session_abort_unref (session);
 }
-- 
2.22.0


From 19f0d91d5d2a0a44c32fc02aa91a9f477795e519 Mon Sep 17 00:00:00 2001
From: Ignacio Casal Quinteiro <qignacio@amazon.com>
Date: Mon, 23 Sep 2019 12:05:56 +0200
Subject: [PATCH 2/2] auth-test: use g_usleep

Instead of using a Windows specific define.
---
 tests/auth-test.c | 13 +++----------
 1 file changed, 3 insertions(+), 10 deletions(-)

diff --git a/tests/auth-test.c b/tests/auth-test.c
index 32211d29..95de60c2 100644
--- a/tests/auth-test.c
+++ b/tests/auth-test.c
@@ -5,13 +5,6 @@
 static const char *base_uri;
 static GMainLoop *loop;
 
-#if defined (G_OS_WIN32) && defined (_MSC_VER)
-#define WIN32_LEAN_AND_MEAN
-#include <windows.h>
-
-#define sleep(x) Sleep (x * 1000)
-#endif
-
 typedef struct {
 	/* Explanation of what you should see */
 	const char *explanation;
@@ -471,12 +464,12 @@ do_digest_expiration_test (void)
 	uri = g_strconcat (base_uri, "Digest/realm1/", NULL);
 	do_digest_nonce_test (session, "First", uri, TRUE, TRUE, TRUE);
 	g_free (uri);
-	sleep (2);
+	g_usleep (2 * G_USEC_PER_SEC);
 	uri = g_strconcat (base_uri, "Digest/realm1/expire/", NULL);
 	do_digest_nonce_test (session, "Second", uri, TRUE, TRUE, FALSE);
-	sleep (1);
+	g_usleep (1 * G_USEC_PER_SEC);
 	do_digest_nonce_test (session, "Third", uri, TRUE, FALSE, FALSE);
-	sleep (1);
+	g_usleep (1 * G_USEC_PER_SEC);
 	do_digest_nonce_test (session, "Fourth", uri, TRUE, FALSE, FALSE);
 	g_free (uri);
 
-- 
2.22.0

