# Maintainer: Ray Donnelly <mingw.android@gmail.com>
# Contributor: Alexey Pavlov <alexpux@gmail.com>

_realname=gdb
_gcc_ver=$(gcc -v 2>&1 | grep "^gcc version" | head -n1 | cut -c 13- | sed -r "s/\\s.*$//")
pkgbase=mingw-w64-${_realname}
_base_ver=7.12
pkgver=r89791.e59a4fb3fc
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}-git")
replaces=("${MINGW_PACKAGE_PREFIX}-${_realname}")
provides=("${MINGW_PACKAGE_PREFIX}-${_realname}=${pkgver}")
conflicts=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgrel=1
pkgdesc="GNU Debugger (mingw-w64)"
arch=('any')
url="https://www.gnu.org/software/gdb/"
license=('GPL')
depends=("${MINGW_PACKAGE_PREFIX}-expat"
         "${MINGW_PACKAGE_PREFIX}-libiconv"
         "${MINGW_PACKAGE_PREFIX}-python2"
         "${MINGW_PACKAGE_PREFIX}-zlib"
         "${MINGW_PACKAGE_PREFIX}-winpthreads")
#checkdepends=('dejagnu' 'bc')
makedepends=("${MINGW_PACKAGE_PREFIX}-iconv"
             "${MINGW_PACKAGE_PREFIX}-ncurses"
             "${MINGW_PACKAGE_PREFIX}-xz"
             "git")
options=('staticlibs' '!distcc' '!ccache' 'debug' '!strip')
source=("${_realname}"::"git://sourceware.org/git/binutils-gdb.git#branch=master"
        gdbinit
        0001-MinGW-w64-Two-fixes-for-unusual-files.patch
        0002-MinGW-w64-Fix-libibery-configure.patch
        0003-MinGW-w64-Use-gnu-printf.patch
        0004-GDB-performance.patch
        0005-Mitigate-gdb-bug-21057.patch)
sha256sums=('SKIP'
            'dea2bbad4967280910559c6a11b865aeec19cab34647fb5894cb498b24b14462'
            'e3abd033597631c3de2f158c6989dab7c56789c05f5b46947eb1b67282f7cf8a'
            'c92183a52f53d82cb5ffddf2a18f5bddd350ccc0db01eff1e5918d98467ee8e3'
            'c8aab67618e05c31e3b60b59319d8fa3eeb7ca9dbf8de937a07c99533557dd5f'
            '4ddb55be45625efd1b2c82d2e344f4ebc9f17e362642489f21eb19fa9ec8d94b'
            'addd8393922ac9d67f168c2a2748d4de3e1d7283a098b5afac5a852ea4056233')

pkgver() {
  cd "$srcdir/$_realname"
  printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
  cd ${srcdir}/${_realname}
  git am "${srcdir}"/0001-MinGW-w64-Two-fixes-for-unusual-files.patch
  git am "${srcdir}"/0002-MinGW-w64-Fix-libibery-configure.patch
  git am "${srcdir}"/0003-MinGW-w64-Use-gnu-printf.patch
  git am "${srcdir}"/0004-GDB-performance.patch
  git am "${srcdir}"/0005-Mitigate-gdb-bug-21057.patch
}

build() {
  declare -a _extra_conf
  if [ "${CARCH}" = "x86_64" ]; then
    _extra_conf+=(--enable-64-bit-bfd)
  else
    LDFLAGS+=" -Wl,--large-address-aware"
  fi

  if check_option "debug" "y"; then
    CFLAGS+=" -O0"
  fi

  CFLAGS+=" -pthread"
  LDFLAGS+=" -pthread"

  [[ -d ${srcdir}/build-${MINGW_CHOST} ]] && rm -rf ${srcdir}/build-${MINGW_CHOST}

  mkdir ${srcdir}/build-${MINGW_CHOST}
  cd ${srcdir}/build-${MINGW_CHOST}
  ../${_realname}/configure \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --prefix=${MINGW_PREFIX} \
    --enable-targets="i686-w64-mingw32,x86_64-w64-mingw32" \
    "${_extra_conf[@]}" \
    --disable-werror \
    --disable-win32-registry \
    --disable-rpath \
    --with-system-gdbinit=${MINGW_PREFIX}/etc/gdbinit \
    --with-python=${MINGW_PREFIX}/bin/python-config-u.sh \
    --with-expat \
    --with-libiconv-prefix=${MINGW_PREFIX} \
    --with-zlib \
    --with-lzma \
    --enable-tui

  make all-gdb
}

# check() {
#   cd "${srcdir}"/build-${MINGW_CHOST}
#
#   # unset LDFLAGS as testsuite makes assumptions about which ones are active
#   # do not abort on errors - manually check log files
#   make LDFLAGS="" -k check || true
# }

package() {
  cd "${srcdir}"/build-${MINGW_CHOST}
  make DESTDIR=${pkgdir} install-gdb

  # Remove unwanted files
  rm -rf ${pkgdir}${MINGW_PREFIX}/share/{man,info}

  # install "custom" system gdbinit
  install -D -m644 ${srcdir}/gdbinit ${pkgdir}${MINGW_PREFIX}/etc/gdbinit
  sed -i 's|%GCC_NAME%|gcc-'${_gcc_ver}'|g' ${pkgdir}${MINGW_PREFIX}/etc/gdbinit
}
