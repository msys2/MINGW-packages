####
#
# Based partly on package(s) or directions found at these URLs
#     https://www.archlinux.org/packages/community/x86_64/julia/
#     https://github.com/JuliaLang/julia/blob/master/doc/build/build.md
#     https://github.com/JuliaLang/julia/blob/master/doc/build/windows.md
#     https://github.com/JuliaLang/julia/blob/master/doc/build/distributing.md
#
# Maintainer: gym603 <gui_yuan_miao@163.com>
# Contributor: Tim Stahlhut <stahta01@gmail.com>
#
####
#
# Normal build command
#   makepkg-mingw -sLf --nocheck
#
####

_make_verbose=0         # 0 or 1    (PR value is 0)

_realname=julia
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=1.1.1
pkgrel=2
_rc=
_sourcedir=${_realname}-${pkgver}${_rc}
pkgdesc="High-level, high-performance, dynamic programming language for technical computing (mingw-w64)"
arch=('any')
url="https://julialang.org/"
license=('MIT')
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-suitesparse"
#         "${MINGW_PACKAGE_PREFIX}-libgit2"
         "${MINGW_PACKAGE_PREFIX}-lapack")
makedepends=("patch"
             "make"
             "tar"
             "${MINGW_PACKAGE_PREFIX}-gcc-libgfortran"
             "${MINGW_PACKAGE_PREFIX}-diffutils"
             "${MINGW_PACKAGE_PREFIX}-python2"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "perl")
source=(${_sourcedir}.tar.gz::https://github.com/JuliaLang/julia/releases/download/v${pkgver}/${_realname}-${pkgver}${_rc}.tar.gz
        003-1.1.1-msys2-fix-CMAKE_GENERATOR_COMMAND-and-CMAKE_C_COMPILER.patch
        004-1.1.1-msys2-fix-base-floatfuncs.jl.patch
        007-1.1.1-msys2-skip-steps-during-install.patch
        008-1.1.1-msys2-fix-i686-gcc-dll-name.patch
        009-1.1.1-msys2-find-modname-in-julia_dl-before-default-paths.patch
        010-1.1.1-msys2-fix-install-dir.patch
        011-1.1.1-winnt-donot-cp-LLVM.dll-when-USE_LLVM_SHLIB-disabled.patch
        016-1.1.1-msys2-Add-SRCCACHE-LIBGIT2_SRC_DIR-source-extracted-target.patch
       )
sha256sums=('0ea5143b663426720ff0b320a9c46f6e967a2fad3f1026eda3ac46eeeb406942'
            'b9a82888f79ce2786a68919b37eb52f0dd44cbac53dd49a6e95401916fa4edd2'
            '221023d4ebf2721a9b5cedbc6a3550c26c3c9897f5332a6ea4a68ec1f1510b05'
            'bd05dbdfd81173d6fbecd2d35b65699d76e97ea887fab140bb7642eff31dedf6'
            '71fb4b167b9dcf5d227e8ce7e05d35301f2f6ce2b353c4215e8282d5d3a8dc33'
            'f82628d0a12c1503ce3a032c6194392f257f49c03724d6788a6d7f5789e33982'
            '0ac90c5d4d56dc65827bc5ca7189bd983f2cfb33a70ed46d48243f5db4af76df'
            '3263ef60feb20fd3605b8abd159d06e76c43c03e8aba893864182aac813cddba'
            '543ecdbff0cf30f9ae9e52883643efe4c27b22f2ab76a048e41b266318c96b5e')

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying ${_patch}"
    patch -Nbp1 -i "${srcdir}/${_patch}"
  done
}

_make_user_config () {
cat <<EOF >Make.user
USE_SYSTEM_SUITESPARSE = 1
# USE_SYSTEM_LIBUV = 1
# USE_SYSTEM_LIBM = 1
# USE_SYSTEM_DSFMT = 1
# USE_SYSTEM_LLVM = 1
USE_LLVM_SHLIB = 0
# USE_SYSTEM_PCRE = 1
USE_SYSTEM_BLAS = 1
LIBBLAS=-lopenblas
LIBBLASNAME=libopenblas
# USE_SYSTEM_GMP = 1
USE_SYSTEM_MBEDTLS = 1
USE_SYSTEM_LIBSSH2 = 1
# USE_SYSTEM_LIBGIT2 = 1
# USE_SYSTEM_MPFR = 1
# USE_SYSTEM_UTF8PROC = 1
USE_SYSTEM_LAPACK = 1
LOCALBASE = ${MINGW_PREFIX}
prefix = ${MINGW_PREFIX}
EOF
}

prepare() {
  cd "${srcdir}/${_sourcedir}"

  apply_patch_with_msg \
    003-1.1.1-msys2-fix-CMAKE_GENERATOR_COMMAND-and-CMAKE_C_COMPILER.patch \
    004-1.1.1-msys2-fix-base-floatfuncs.jl.patch \
    007-1.1.1-msys2-skip-steps-during-install.patch \
    008-1.1.1-msys2-fix-i686-gcc-dll-name.patch \
    009-1.1.1-msys2-find-modname-in-julia_dl-before-default-paths.patch \
    010-1.1.1-msys2-fix-install-dir.patch \
    011-1.1.1-winnt-donot-cp-LLVM.dll-when-USE_LLVM_SHLIB-disabled.patch \
    016-1.1.1-msys2-Add-SRCCACHE-LIBGIT2_SRC_DIR-source-extracted-target.patch

  [[ -d "${srcdir}/build-${MINGW_CHOST}" ]] && rm -rf "${srcdir}/build-${MINGW_CHOST}"
  cp -rp  "${srcdir}/${_realname}-${pkgver}/." "${srcdir}/build-${MINGW_CHOST}"

  cd "${srcdir}/build-${MINGW_CHOST}"

  _make_user_config; # create Make.user in current directory
}

build() {
  cd "${srcdir}/build-${MINGW_CHOST}"

  case "${CARCH}" in
    i686)
      export CFLAGS="-march=pentium4"
      export CXXFLAGS="-march=pentium4"
    ;;
  esac

  # option "-w" disables all warnings
  env CFLAGS="$CFLAGS -w" CXXFLAGS="$CXXFLAGS -w" \
    make -j1 VERBOSE=${_make_verbose}
}

check() {
  cd "${srcdir}/build-${MINGW_CHOST}"

  cd test
  #make print-TESTS # list the tests
  env PATH="${srcdir}/build-${MINGW_CHOST}/usr/bin:$PATH" \
    ../usr/bin/julia --check-bounds=yes --startup-file=no ./runtests.jl all --skip Sockets --skip Distributed
  find ../stdlib \( -name \*.cov -o -name \*.mem \) -delete
  rm -r depot/compiled
}

package() {
  cd "${srcdir}/build-${MINGW_CHOST}"

  make DESTDIR="${pkgdir}" install

  install -Dm644 LICENSE.md "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE.md"
}
