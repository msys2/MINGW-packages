diff --git a/BUILD.gn b/BUILD.gn
index a6fcb0b..e21930f 100644
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -28,7 +28,7 @@ declare_args() {
   skia_use_fonthost_mac = is_mac
   skia_use_freetype = is_android || is_fuchsia || is_linux
   skia_use_fixed_gamma_text = is_android
-  skia_use_icu = !is_fuchsia && !is_ios && !is_win  # TODO: Windows
+  skia_use_icu = !is_fuchsia && !is_ios && !is_win && !is_mingw # TODO: Windows
   skia_use_libjpeg_turbo = true
   skia_use_libpng = true
   skia_use_libwebp = !is_fuchsia
@@ -65,7 +65,7 @@ declare_args() {
   skia_tools_require_resources = false
 }
 declare_args() {
-  skia_use_dng_sdk = !is_fuchsia && skia_use_libjpeg_turbo && skia_use_zlib
+  skia_use_dng_sdk = !is_fuchsia && skia_use_libjpeg_turbo && skia_use_zlib && !is_mingw
   skia_use_sfntly = skia_use_icu
   skia_enable_atlas_text = is_skia_dev_build && skia_enable_gpu
   skia_enable_fontmgr_empty = false
@@ -81,6 +81,8 @@ declare_args() {
     skia_use_vulkan = fuchsia_use_vulkan
   } else if (is_win && target_cpu == "arm64") {
     skia_use_vulkan = false
+  } else if (is_mingw) {
+    skia_use_vulkan = true
   } else {
     skia_use_vulkan = (defined(skia_vulkan_sdk) && skia_vulkan_sdk != "") ||
                       (defined(skia_moltenvk_path) && skia_moltenvk_path != "")
@@ -639,10 +641,10 @@ optional("gpu_for_real") {
     sources += [ "src/gpu/gl/mac/GrGLMakeNativeInterface_mac.cpp" ]
   } else if (is_ios) {
     sources += [ "src/gpu/gl/iOS/GrGLMakeNativeInterface_iOS.cpp" ]
-  } else if (is_win) {
+  } else if (is_win || is_mingw) {
     sources += [ "src/gpu/gl/win/GrGLMakeNativeInterface_win.cpp" ]
     if (target_cpu != "arm64") {
-      libs += [ "OpenGL32.lib" ]
+      libs += [ "OpenGL32" ]
     }
   } else {
     sources += [ "src/gpu/gl/GrGLMakeNativeInterface_none.cpp" ]
@@ -918,7 +920,7 @@ component("skia") {
   sources = []
   sources += skia_core_sources
   sources += skia_utils_sources
-  sources += skia_xps_sources
+  #sources += skia_xps_sources
   sources += skia_effects_sources
   sources += skia_effects_imagefilter_sources
   sources += [
@@ -967,7 +969,7 @@ component("skia") {
 
   libs = []
 
-  if (is_win) {
+  if (is_win  || is_mingw) {
     sources += [
       "src/fonts/SkFontMgr_indirect.cpp",
       "src/ports/SkDebug_win.cpp",
@@ -983,12 +985,14 @@ component("skia") {
       "src/ports/SkTypeface_win_dw.cpp",
     ]
     libs += [
-      "FontSub.lib",
-      "Gdi32.lib",
-      "Ole32.lib",
-      "OleAut32.lib",
-      "User32.lib",
-      "Usp10.lib",
+      "FontSub",
+      "Gdi32",
+      "Ole32",
+      "OleAut32",
+      "User32",
+      "Usp10",
+      "windowscodecs",
+      "uuid",
     ]
   } else {
     sources += [
@@ -1437,11 +1441,11 @@ if (skia_enable_tools) {
       ]
     } else if (is_mac) {
       sources += [ "tools/gpu/gl/mac/CreatePlatformGLTestContext_mac.cpp" ]
-    } else if (is_win) {
+    } else if (is_win || is_mingw) {
       sources += [ "tools/gpu/gl/win/CreatePlatformGLTestContext_win.cpp" ]
-      libs += [ "Gdi32.lib" ]
+      libs += [ "Gdi32" ]
       if (target_cpu != "arm64") {
-        libs += [ "OpenGL32.lib" ]
+        libs += [ "OpenGL32" ]
       }
     }
 
@@ -2120,7 +2124,7 @@ if (skia_enable_tools) {
         "GL",
         "X11",
       ]
-    } else if (is_win) {
+    } else if (is_win || is_mingw) {
       sources += [
         "tools/sk_app/win/GLWindowContext_win.cpp",
         "tools/sk_app/win/RasterWindowContext_win.cpp",
@@ -2158,7 +2162,7 @@ if (skia_enable_tools) {
       } else if (is_linux) {
         sources += [ "tools/sk_app/unix/VulkanWindowContext_unix.cpp" ]
         libs += [ "X11-xcb" ]
-      } else if (is_win) {
+      } else if (is_win || is_mingw) {
         sources += [ "tools/sk_app/win/VulkanWindowContext_win.cpp" ]
       }
     }
@@ -2362,9 +2366,9 @@ if (skia_enable_tools) {
       ]
       lib_dirs = [ "$skia_qt_path/lib" ]
       libs = [
-        "Qt5Core.lib",
-        "Qt5Gui.lib",
-        "Qt5Widgets.lib",
+        "Qt5Core",
+        "Qt5Gui",
+        "Qt5Widgets",
       ]
       include_dirs = [
         "$skia_qt_path/include",
@@ -2405,7 +2409,7 @@ if (skia_enable_tools) {
       if (is_linux) {
         libs = [ "OpenCL" ]
       } else if (is_win) {
-        libs = [ "OpenCL.lib" ]
+        libs = [ "OpenCL" ]
       }
     }
   }
diff --git a/gn/BUILD.gn b/gn/BUILD.gn
index a5083d6..fecc7e3 100644
--- a/gn/BUILD.gn
+++ b/gn/BUILD.gn
@@ -93,7 +93,6 @@ config("default") {
   } else {
     cflags += [
       "-fstrict-aliasing",
-      "-fPIC",
     ]
     cflags_cc += [ "-std=c++14" ]
 
diff --git a/gn/BUILDCONFIG.gn b/gn/BUILDCONFIG.gn
index 5a1c4d0..17a775b 100644
--- a/gn/BUILDCONFIG.gn
+++ b/gn/BUILDCONFIG.gn
@@ -64,6 +64,7 @@ is_tvos = current_os == "tvos"
 is_linux = current_os == "linux"
 is_mac = current_os == "mac"
 is_win = current_os == "win"
+is_mingw = current_os == "mingw"
 
 if (target_cpu == "") {
   target_cpu = host_cpu
diff --git a/gn/toolchain/BUILD.gn b/gn/toolchain/BUILD.gn
index cf6437b..ec8f89e 100644
--- a/gn/toolchain/BUILD.gn
+++ b/gn/toolchain/BUILD.gn
@@ -263,7 +263,7 @@ template("gcc_like_toolchain") {
     tool("solink") {
       soname = "{{target_output_name}}{{output_extension}}"
 
-      rpath = "-Wl,-soname,$soname"
+      rpath = "-Wl,--out-implib,lib$soname.a"
       if (is_mac) {
         rpath = "-Wl,-install_name,@rpath/$soname"
       }
@@ -274,8 +274,8 @@ template("gcc_like_toolchain") {
       outputs = [
         "{{root_out_dir}}/$soname",
       ]
-      output_prefix = "lib"
-      default_output_extension = ".so"
+      output_prefix = ""
+      default_output_extension = ".dll"
       description = "link {{output}}"
     }
 
diff --git a/src/core/SkCpu.cpp b/src/core/SkCpu.cpp
index cbef990..7fee432 100644
--- a/src/core/SkCpu.cpp
+++ b/src/core/SkCpu.cpp
@@ -9,7 +9,7 @@
 #include "SkOnce.h"
 
 #if defined(SK_CPU_X86)
-    #if defined(SK_BUILD_FOR_WIN)
+    #if defined(SK_BUILD_FOR_WIN) && !defined(__MINGW32__)
         #include <intrin.h>
         static void cpuid (uint32_t abcd[4]) { __cpuid  ((int*)abcd, 1);    }
         static void cpuid7(uint32_t abcd[4]) { __cpuidex((int*)abcd, 7, 0); }
