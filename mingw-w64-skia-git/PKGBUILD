# Maintainer: wirx6 <wirx654@gmail.com>

_realname=skia
pkgbase="mingw-w64-${_realname}-git"
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}-git")
provides=("${MINGW_PACKAGE_PREFIX}-${_realname}")
conflicts=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=38983.31c1bf8965
pkgrel=1
pkgdesc='Complete 2D graphic library for drawing Text, Geometries, and Images (mingw-w64)'
arch=('any')
url="https://skia.org"
license=('BSD')
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-python2"
             "${MINGW_PACKAGE_PREFIX}-vulkan-headers")
depends=("${MINGW_PACKAGE_PREFIX}-zlib"
         "${MINGW_PACKAGE_PREFIX}-expat"
         "${MINGW_PACKAGE_PREFIX}-libwebp"
         "${MINGW_PACKAGE_PREFIX}-libjpeg-turbo"
         "${MINGW_PACKAGE_PREFIX}-libpng"
         "${MINGW_PACKAGE_PREFIX}-gcc-libs")
source=('git+https://skia.googlesource.com/skia'
        'git+https://chromium.googlesource.com/chromium/src/third_party/zlib'
        'skia-mingw-fix.patch')
sha256sums=('SKIP'
            'SKIP'
            '2267fd309ed7e3cc5272edb7931dca99a0444a750fc06fe3fa1bee93f3e0496b')

pkgver() {
  cd "${srcdir}/${_realname}"
  printf "%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
  cd "${srcdir}/${_realname}"
  patch -p1 -i "${srcdir}/skia-mingw-fix.patch"

  if check_option "debug" "y"; then
    sed -i "s|//#define SK_DEBUG|#define SK_DEBUG|g" ${srcdir}/${_realname}/include/config/SkUserConfig.h
  else
    sed -i "s|//#define SK_RELEASE|#define SK_RELEASE|g" ${srcdir}/${_realname}/include/config/SkUserConfig.h
  fi

  [[ -d ${srcdir}/${_realname}/third_party/externals ]] && rm -rf ${srcdir}/${_realname}/third_party/externals
  mkdir -p "${srcdir}/${_realname}/third_party/externals"
  mv "${srcdir}/zlib" "${srcdir}/${_realname}/third_party/externals"
}

build() {
  [[ -d ${srcdir}/build-${CARCH} ]] && rm -rf ${srcdir}/build-${CARCH}

  cd "${srcdir}/${_realname}"
  bin/fetch-gn

  if check_option "debug" "y"; then
    bin/gn gen ../build-${CARCH} --args='target_os="mingw" is_debug=true is_component_build=true'
  else
    bin/gn gen ../build-${CARCH} --args='target_os="mingw" is_official_build=true is_component_build=true'
  fi
  
  cd "${srcdir}/build-${CARCH}"
  ninja
}

package() {
  install -Dm644 ${srcdir}/build-${CARCH}/skia.dll ${pkgdir}${MINGW_PREFIX}/bin/skia.dll
  install -Dm644 ${srcdir}/build-${CARCH}/libskia.dll.a ${pkgdir}${MINGW_PREFIX}/lib/libskia.dll.a
  install -Dm644 ${srcdir}/${_realname}/LICENSE ${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE

  mkdir -p ${pkgdir}${MINGW_PREFIX}/include/skia
  cp -rf ${srcdir}/${_realname}/include/* ${pkgdir}${MINGW_PREFIX}/include/skia
  sed -i "s|#define SkUserConfig_DEFINED|#define SkUserConfig_DEFINED\n\n#define SK_VULKAN|g" ${pkgdir}${MINGW_PREFIX}/include/skia/config/SkUserConfig.h
}
