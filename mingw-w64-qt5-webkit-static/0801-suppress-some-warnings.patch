--- a/Source/cmake/OptionsQt.cmake
+++ b/Source/cmake/OptionsQt.cmake
@@ -709,6 +709,15 @@
     endif ()
 endif ()
 
+if (COMPILER_IS_GCC_OR_CLANG)
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-deprecated-declarations -Wno-nonnull -Wno-switch -Wno-unused-result")
+    if (COMPILER_IS_CLANG)
+        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-deprecated-builtins -Wno-implicit-int-float-conversion")
+    else ()
+        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-class-memaccess -Wno-nonnull-compare -Wno-redundant-move -Wno-uninitialized")
+    endif ()
+endif ()
+
 # Improvised backport of r222112 - not needed with current WebKit
 # -Wexpansion-to-defined produces false positives with GCC but not Clang
 # https://bugs.webkit.org/show_bug.cgi?id=167643#c13
--- a/Source/JavaScriptCore/CMakeLists.txt
+++ b/Source/JavaScriptCore/CMakeLists.txt
@@ -1321,6 +1321,15 @@
 
 QT_ADD_EXTRA_WEBKIT_TARGET_EXPORT(JavaScriptCore)
 
+if (COMPILER_IS_GCC_OR_CLANG)
+    ADD_TARGET_PROPERTIES(JavaScriptCore COMPILE_FLAGS "-Wno-sign-compare -Wno-unused -Wno-unused-parameter -Wno-unused-variable")
+    if (COMPILER_IS_CLANG)
+        ADD_TARGET_PROPERTIES(JavaScriptCore COMPILE_FLAGS "-Wno-unknown-pragmas -Wno-deprecated-copy-with-user-provided-copy")
+    else ()
+        ADD_TARGET_PROPERTIES(JavaScriptCore COMPILE_FLAGS "-Wno-cast-function-type -Wno-deprecated-copy -Wno-implicit-fallthrough")
+    endif ()
+endif ()
+
 # Force staging of shared scripts, even if they aren't directly used to build JavaScriptCore.
 
 add_custom_target(stageSharedScripts DEPENDS ${JavaScriptCore_SCRIPTS})
--- a/Source/WebCore/CMakeLists.txt
+++ b/Source/WebCore/CMakeLists.txt
@@ -3832,6 +3883,15 @@
     QT_ADD_EXTRA_WEBKIT_TARGET_EXPORT(WebCoreTestSupport)
 endif ()
 
+if (COMPILER_IS_GCC_OR_CLANG)
+    ADD_TARGET_PROPERTIES(WebCore COMPILE_FLAGS "-Wno-deprecated -Wno-sign-compare -Wno-unused -Wno-unused-parameter -Wno-unused-variable")
+    if (COMPILER_IS_CLANG)
+        ADD_TARGET_PROPERTIES(WebCore COMPILE_FLAGS "-Wno-cast-align -Wno-reorder-ctor -Wno-switch -Wno-unknown-pragmas -Wno-deprecated-copy-with-user-provided-copy")
+    else ()
+        ADD_TARGET_PROPERTIES(WebCore COMPILE_FLAGS "-Wno-cast-function-type -Wno-deprecated-copy -Wno-implicit-fallthrough -Wno-reorder -Wno-stringop-overflow")
+    endif ()
+endif ()
+
 # [ARM] Build SVGPathElement.cpp with -O2 due to a GCC bug
 # https://bugs.webkit.org/show_bug.cgi?id=145377
 if ((CMAKE_CXX_COMPILER_ID STREQUAL "GNU") AND WTF_CPU_ARM AND (CMAKE_CXX_COMPILER_VERSION VERSION_GREATER "4.9") AND (CMAKE_CXX_COMPILER_VERSION VERSION_LESS "4.9.3"))
--- a/Source/WebKit/CMakeLists.txt
+++ b/Source/WebKit/CMakeLists.txt
@@ -54,6 +57,15 @@
 
 WEBKIT_FRAMEWORK(WebKit)
 
+if (COMPILER_IS_GCC_OR_CLANG)
+    ADD_TARGET_PROPERTIES(WebKit COMPILE_FLAGS "-Wno-unused-parameter -Wno-unused-variable")
+    if (COMPILER_IS_CLANG)
+        ADD_TARGET_PROPERTIES(WebKit COMPILE_FLAGS "-Wno-cast-align")
+    else ()
+        ADD_TARGET_PROPERTIES(WebKit COMPILE_FLAGS "-Wno-cast-function-type")
+    endif ()
+endif ()
+
 if (${PORT} STREQUAL "Qt")
     set_target_properties(WebKit PROPERTIES VERSION ${PROJECT_VERSION} SOVERSION ${PROJECT_VERSION_MAJOR})
     install(TARGETS WebKit EXPORT WebKitTargets
--- a/Source/WTF/wtf/CMakeLists.txt
+++ b/Source/WTF/wtf/CMakeLists.txt
@@ -278,6 +278,15 @@
 WEBKIT_WRAP_SOURCELIST(${WTF_SOURCES})
 WEBKIT_FRAMEWORK(WTF)
 
+if (COMPILER_IS_GCC_OR_CLANG)
+    ADD_TARGET_PROPERTIES(WTF COMPILE_FLAGS "-Wno-sign-compare -Wno-unused -Wno-unused-parameter -Wno-unused-variable")
+    if (COMPILER_IS_CLANG)
+        ADD_TARGET_PROPERTIES(WTF COMPILE_FLAGS "-Wno-unknown-pragmas -Wno-deprecated-copy-with-user-provided-copy")
+    else ()
+        ADD_TARGET_PROPERTIES(WTF COMPILE_FLAGS "-Wno-cast-function-type -Wno-deprecated-copy -Wno-implicit-fallthrough")
+    endif ()
+endif ()
+
 if (MSVC)
     set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /SUBSYSTEM:WINDOWS")
     set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /SUBSYSTEM:WINDOWS")
--- a/Tools/QtTestBrowser/CMakeLists.txt
+++ b/Tools/QtTestBrowser/CMakeLists.txt
@@ -68,6 +68,10 @@
 target_link_libraries(QtTestBrowser ${QtTestBrowser_LIBRARIES})
 set_target_properties(QtTestBrowser PROPERTIES FOLDER "Tools" AUTOMOC ON)
 
+if (QT_STATIC_BUILD)
+    set(CMAKE_EXE_LINKER_FLAGS " -static -static-libgcc -static-libstdc++ ${CMAKE_EXE_LINKER_FLAGS}")
+endif ()
+
 if (${CMAKE_BUILD_TYPE} MATCHES "Release")
     set_target_properties(QtTestBrowser PROPERTIES WIN32_EXECUTABLE ON)
 endif ()
