--- a/Source/CMakeLists.txt
+++ b/Source/CMakeLists.txt
@@ -20,8 +20,10 @@
 endif ()
 
 if (USE_WOFF2 AND NOT WOFF2DEC_FOUND)
-    add_subdirectory(ThirdParty/brotli)
-    add_subdirectory(ThirdParty/woff2)
+    if (NOT QT_STATIC_BUILD)
+        add_subdirectory(ThirdParty/brotli)
+        add_subdirectory(ThirdParty/woff2)
+    endif ()
 endif ()
 
 if (ENABLE_WEBKIT)
--- a/Source/JavaScriptCore/CMakeLists.txt
+++ b/Source/JavaScriptCore/CMakeLists.txt
@@ -871,10 +871,109 @@
 )
 
 set(JavaScriptCore_LIBRARIES
-    WTF${DEBUG_SUFFIX}
     ${ICU_I18N_LIBRARIES}
 )
 
+if (QT_STATIC_BUILD)
+    list(APPEND JavaScriptCore_INCLUDE_DIRECTORIES
+        "${WTF_DIR}/wtf"
+        "${WTF_DIR}/wtf/dtoa"
+        "${WTF_DIR}/wtf/text"
+        "${WTF_DIR}/wtf/threads"
+        "${WTF_DIR}/wtf/unicode"
+        "${WTF_DIR}/wtf/win"
+    )
+
+    list(APPEND JavaScriptCore_SOURCES
+        ${WTF_DIR}/wtf/Assertions.cpp
+        ${WTF_DIR}/wtf/Atomics.cpp
+        ${WTF_DIR}/wtf/BitVector.cpp
+        ${WTF_DIR}/wtf/CompilationThread.cpp
+        ${WTF_DIR}/wtf/CryptographicUtilities.cpp
+        ${WTF_DIR}/wtf/CryptographicallyRandomNumber.cpp
+        ${WTF_DIR}/wtf/CurrentTime.cpp
+        ${WTF_DIR}/wtf/DataLog.cpp
+        ${WTF_DIR}/wtf/DateMath.cpp
+        ${WTF_DIR}/wtf/DecimalNumber.cpp
+        ${WTF_DIR}/wtf/FastBitVector.cpp
+        ${WTF_DIR}/wtf/FastMalloc.cpp
+        ${WTF_DIR}/wtf/FilePrintStream.cpp
+        ${WTF_DIR}/wtf/FunctionDispatcher.cpp
+        ${WTF_DIR}/wtf/GregorianDateTime.cpp
+        ${WTF_DIR}/wtf/HashTable.cpp
+        ${WTF_DIR}/wtf/Lock.cpp
+        ${WTF_DIR}/wtf/MD5.cpp
+        ${WTF_DIR}/wtf/MainThread.cpp
+        ${WTF_DIR}/wtf/MediaTime.cpp
+        ${WTF_DIR}/wtf/MetaAllocator.cpp
+        ${WTF_DIR}/wtf/NumberOfCores.cpp
+        ${WTF_DIR}/wtf/OSRandomSource.cpp
+        ${WTF_DIR}/wtf/PageBlock.cpp
+        ${WTF_DIR}/wtf/ParallelHelperPool.cpp
+        ${WTF_DIR}/wtf/ParallelJobsGeneric.cpp
+        ${WTF_DIR}/wtf/ParkingLot.cpp
+        ${WTF_DIR}/wtf/PrintStream.cpp
+        ${WTF_DIR}/wtf/RAMSize.cpp
+        ${WTF_DIR}/wtf/RandomNumber.cpp
+        ${WTF_DIR}/wtf/RefCountedLeakCounter.cpp
+        ${WTF_DIR}/wtf/RefCounter.cpp
+        ${WTF_DIR}/wtf/RunLoop.cpp
+        ${WTF_DIR}/wtf/SHA1.cpp
+        ${WTF_DIR}/wtf/SixCharacterHash.cpp
+        ${WTF_DIR}/wtf/StackBounds.cpp
+        ${WTF_DIR}/wtf/StackStats.cpp
+        ${WTF_DIR}/wtf/StringPrintStream.cpp
+        ${WTF_DIR}/wtf/Threading.cpp
+        ${WTF_DIR}/wtf/WTFThreadData.cpp
+        ${WTF_DIR}/wtf/WordLock.cpp
+        ${WTF_DIR}/wtf/WorkQueue.cpp
+        ${WTF_DIR}/wtf/dtoa.cpp
+
+        ${WTF_DIR}/wtf/dtoa/bignum-dtoa.cc
+        ${WTF_DIR}/wtf/dtoa/bignum.cc
+        ${WTF_DIR}/wtf/dtoa/cached-powers.cc
+        ${WTF_DIR}/wtf/dtoa/diy-fp.cc
+        ${WTF_DIR}/wtf/dtoa/double-conversion.cc
+        ${WTF_DIR}/wtf/dtoa/fast-dtoa.cc
+        ${WTF_DIR}/wtf/dtoa/fixed-dtoa.cc
+        ${WTF_DIR}/wtf/dtoa/strtod.cc
+
+        ${WTF_DIR}/wtf/text/AtomicString.cpp
+        ${WTF_DIR}/wtf/text/AtomicStringImpl.cpp
+        ${WTF_DIR}/wtf/text/AtomicStringTable.cpp
+        ${WTF_DIR}/wtf/text/Base64.cpp
+        ${WTF_DIR}/wtf/text/CString.cpp
+        ${WTF_DIR}/wtf/text/StringBuilder.cpp
+        ${WTF_DIR}/wtf/text/StringImpl.cpp
+        ${WTF_DIR}/wtf/text/StringStatics.cpp
+        ${WTF_DIR}/wtf/text/StringView.cpp
+        ${WTF_DIR}/wtf/text/SymbolRegistry.cpp
+        ${WTF_DIR}/wtf/text/WTFString.cpp
+        ${WTF_DIR}/wtf/unicode/UTF8.cpp
+        ${WTF_DIR}/wtf/unicode/icu/CollatorICU.cpp
+
+        ${WTF_DIR}/wtf/OSAllocatorWin.cpp
+        ${WTF_DIR}/wtf/ThreadSpecificWin.cpp
+        ${WTF_DIR}/wtf/ThreadingWin.cpp
+    )
+
+    if (${PORT} STREQUAL "Qt")
+        list(APPEND JavaScriptCore_SOURCES
+            ${WTF_DIR}/wtf/qt/MainThreadQt.cpp
+            ${WTF_DIR}/wtf/qt/RunLoopQt.cpp
+            ${WTF_DIR}/wtf/text/qt/StringQt.cpp
+            ${WTF_DIR}/wtf/threads/win/BinarySemaphoreWin.cpp
+            ${WTF_DIR}/wtf/win/WorkItemWin.cpp
+            ${WTF_DIR}/wtf/win/WorkQueueWin.cpp
+        )
+        QTWEBKIT_GENERATE_MOC_FILES_CPP(JavaScriptCore ${WTF_DIR}/wtf/qt/MainThreadQt.cpp ${WTF_DIR}/wtf/qt/RunLoopQt.cpp)
+    endif ()
+
+    list(APPEND JavaScriptCore_LIBRARIES winmm)
+else ()
+    list(APPEND JavaScriptCore_LIBRARIES WTF${DEBUG_SUFFIX})
+endif ()
+
 set(JavaScriptCore_SCRIPTS_SOURCES_DIR "${JAVASCRIPTCORE_DIR}/Scripts")
 
 # Globbing relies on the fact that generator-specific file names are prefixed with their directory.
@@ -1308,7 +1407,9 @@
 WEBKIT_CREATE_FORWARDING_HEADERS(JavaScriptCore DIRECTORIES ${JavaScriptCore_FORWARDING_HEADERS_DIRECTORIES} FILES ${JavaScriptCore_FORWARDING_HEADERS_FILES})
 
 
-add_subdirectory(shell)
+if (NOT QT_STATIC_BUILD)
+    add_subdirectory(shell)
+endif ()
 
 WEBKIT_WRAP_SOURCELIST(${JavaScriptCore_SOURCES})
 WEBKIT_FRAMEWORK(JavaScriptCore)
--- a/Source/ThirdParty/gtest/CMakeLists.txt
+++ b/Source/ThirdParty/gtest/CMakeLists.txt
@@ -5,6 +5,12 @@
 
 set(GTEST_DIR "${THIRDPARTY_DIR}/gtest")
 
+if (QT_STATIC_BUILD)
+    set(GTEST_SYSTEM_INCLUDE_DIRECTORIES
+        ${Qt5Core_INCLUDE_DIRS}
+    )
+endif ()
+
 set(GTEST_INCLUDE_DIRECTORIES
     "${GTEST_DIR}"
     "${GTEST_DIR}/include"
@@ -34,7 +40,7 @@
     add_library(gtest SHARED ${GTEST_SOURCES})
 endif ()
 
-include_directories(${GTEST_INCLUDE_DIRECTORIES})
+include_directories(${GTEST_SYSTEM_INCLUDE_DIRECTORIES} ${GTEST_INCLUDE_DIRECTORIES})
 add_definitions(-DGTEST_HAS_RTTI=0)
 
 # FIXME: This works around compatibility problems in the old version of the third-pary
@@ -43,9 +49,11 @@
     add_definitions(-DGTEST_HAS_TR1_TUPLE=0)
 endif ()
 
+if (NOT QT_STATIC_BUILD)
 target_link_libraries(gtest
     WTF
 )
+endif ()
 
 if (CMAKE_USE_PTHREADS_INIT)
     target_link_libraries(gtest ${CMAKE_THREAD_LIBS_INIT})
--- a/Source/WebCore/CMakeLists.txt
+++ b/Source/WebCore/CMakeLists.txt
@@ -2960,9 +2960,12 @@
 set(WebCore_LIBRARIES
     ${ICU_LIBRARIES}
     JavaScriptCore${DEBUG_SUFFIX}
-    WTF${DEBUG_SUFFIX}
 )
 
+if (NOT QT_STATIC_BUILD)
+    list(APPEND WebCore_LIBRARIES WTF${DEBUG_SUFFIX})
+endif ()
+
 if (ENABLE_ENCRYPTED_MEDIA OR ENABLE_ENCRYPTED_MEDIA_V2)
     list(APPEND WebCore_SOURCES
         Modules/encryptedmedia/CDM.cpp
@@ -3196,7 +3199,15 @@
         "${WEBCORE_DIR}/platform/graphics/gpu"
     )
 
-    list(APPEND ANGLESupport_SOURCES
+    if (QT_STATIC_BUILD)
+        list(APPEND WebCore_INCLUDE_DIRECTORIES
+            "${THIRDPARTY_DIR}/ANGLE"
+            "${THIRDPARTY_DIR}/ANGLE/include"
+            "${THIRDPARTY_DIR}/ANGLE/src"
+        )
+    endif ()
+
+    set(ANGLESupport_SOURCES
         ${THIRDPARTY_DIR}/ANGLE/src/common/angleutils.cpp
         ${THIRDPARTY_DIR}/ANGLE/src/common/debug.cpp
         ${THIRDPARTY_DIR}/ANGLE/src/common/event_tracer.cpp
@@ -3295,6 +3306,10 @@
         ${THIRDPARTY_DIR}/ANGLE/src/third_party/compiler/ArrayBoundsClamper.cpp
     )
 
+    if (QT_STATIC_BUILD)
+        list(APPEND WebCore_SOURCES ${ANGLESupport_SOURCES})
+    endif ()
+
     list(APPEND WebCore_SOURCES
         platform/graphics/ANGLEWebKitBridge.cpp
         platform/graphics/FormatConverter.cpp
@@ -3358,8 +3373,32 @@
         list(APPEND WebCore_INCLUDE_DIRECTORIES "${WOFF2DEC_INCLUDE_DIRS}")
         list(APPEND WebCore_LIBRARIES "${WOFF2DEC_LIBRARIES}")
     else ()
-        list(APPEND WebCore_INCLUDE_DIRECTORIES "${THIRDPARTY_DIR}/woff2/include")
-        list(APPEND WebCore_LIBRARIES woff2)
+        if (QT_STATIC_BUILD)
+            list(APPEND WebCore_INCLUDE_DIRECTORIES
+                "${THIRDPARTY_DIR}/brotli"
+                "${THIRDPARTY_DIR}/brotli/common"
+                "${THIRDPARTY_DIR}/brotli/dec"
+                "${THIRDPARTY_DIR}/brotli/include"
+                "${THIRDPARTY_DIR}/woff2"
+                "${THIRDPARTY_DIR}/woff2/include"
+                "${THIRDPARTY_DIR}/woff2/src"
+            )
+            list(APPEND WebCore_SOURCES
+                ${THIRDPARTY_DIR}/brotli/common/dictionary.c
+                ${THIRDPARTY_DIR}/brotli/dec/bit_reader.c
+                ${THIRDPARTY_DIR}/brotli/dec/decode.c
+                ${THIRDPARTY_DIR}/brotli/dec/huffman.c
+                ${THIRDPARTY_DIR}/brotli/dec/state.c
+                ${THIRDPARTY_DIR}/woff2/src/table_tags.cc
+                ${THIRDPARTY_DIR}/woff2/src/variable_length.cc
+                ${THIRDPARTY_DIR}/woff2/src/woff2_common.cc
+                ${THIRDPARTY_DIR}/woff2/src/woff2_dec.cc
+                ${THIRDPARTY_DIR}/woff2/src/woff2_out.cc
+            )
+        else ()
+            list(APPEND WebCore_INCLUDE_DIRECTORIES "${THIRDPARTY_DIR}/woff2/include")
+            list(APPEND WebCore_LIBRARIES woff2)
+        endif ()
     endif ()
 endif ()
 
@@ -3369,6 +3408,13 @@
     "${DERIVED_SOURCES_WEBCORE_DIR}"
 )
 
+if (QT_STATIC_BUILD)
+    list(APPEND WebCoreTestSupport_INCLUDE_DIRECTORIES
+        "${THIRDPARTY_DIR}/ANGLE"
+        "${THIRDPARTY_DIR}/ANGLE/include"
+    )
+endif ()
+
 set(WebCoreTestSupport_IDL_INCLUDES
     testing
 )
@@ -3401,10 +3447,13 @@
 )
 
 set(WebCoreTestSupport_LIBRARIES
-    JavaScriptCore${DEBUG_SUFFIX}
-    WTF${DEBUG_SUFFIX}
+    WebCore${DEBUG_SUFFIX}
 )
 
+if (NOT QT_STATIC_BUILD)
+    list(APPEND WebCoreTestSupport_LIBRARIES WTF${DEBUG_SUFFIX})
+endif ()
+
 # Modules that the bindings generator scripts may use
 set(SCRIPTS_RESOLVE_SUPPLEMENTAL
     ${WEBCORE_DIR}/bindings/scripts/IDLParser.pm
@@ -3811,7 +3860,9 @@
         "${THIRDPARTY_DIR}/ANGLE/include"
         "${THIRDPARTY_DIR}/ANGLE/src"
     )
-    list(APPEND WebCore_LIBRARIES ANGLESupport)
+    if (NOT QT_STATIC_BUILD)
+        list(APPEND WebCore_LIBRARIES ANGLESupport)
+    endif ()
     WEBKIT_SET_EXTRA_COMPILER_FLAGS(ANGLESupport IGNORECXX_WARNINGS)
     QT_ADD_EXTRA_WEBKIT_TARGET_EXPORT(ANGLESupport)
 
--- a/Source/WebCore/PlatformQt.cmake
+++ b/Source/WebCore/PlatformQt.cmake
@@ -441,7 +441,7 @@
 WEBKIT_CREATE_FORWARDING_HEADERS(WebCore DIRECTORIES ${WebCore_FORWARDING_HEADERS_DIRECTORIES} FILES ${WebCore_FORWARDING_HEADERS_FILES})
 
 list(APPEND WebCoreTestSupport_LIBRARIES
-    WebCore
+    JavaScriptCore${DEBUG_SUFFIX}
 )
 
 if (HAVE_FONTCONFIG)
--- a/Source/WebKit/CMakeLists.txt
+++ b/Source/WebKit/CMakeLists.txt
@@ -33,11 +33,14 @@
 )
 
 set(WebKit_LIBRARIES
-    PRIVATE JavaScriptCore${DEBUG_SUFFIX}
-    PRIVATE WTF${DEBUG_SUFFIX}
     PRIVATE WebCore${DEBUG_SUFFIX}
+    PRIVATE JavaScriptCore${DEBUG_SUFFIX}
 )
 
+if (NOT QT_STATIC_BUILD)
+    list(APPEND WebKit_LIBRARIES PRIVATE WTF${DEBUG_SUFFIX})
+endif ()
+
 WEBKIT_INCLUDE_CONFIG_FILES_IF_EXISTS()
 
 if (MSVC)
--- a/Source/WebKit/PlatformQt.cmake
+++ b/Source/WebKit/PlatformQt.cmake
@@ -472,7 +472,7 @@
 if (QT_STATIC_BUILD)
     set(WEBKITWIDGETS_PKGCONFIG_DEPS "${WEBKITWIDGETS_PKGCONFIG_DEPS} Qt5PrintSupport")
     set(WEBKITWIDGETS_PRI_DEPS "${WEBKITWIDGETS_PRI_DEPS} printsupport")
-    set(EXTRA_LIBS_NAMES WebCore JavaScriptCore WTF)
+    set(EXTRA_LIBS_NAMES WebCore JavaScriptCore)
     append_lib_names_to_list(EXTRA_LIBS_NAMES ${LIBXML2_LIBRARIES} ${SQLITE_LIBRARIES} ${ZLIB_LIBRARIES} ${JPEG_LIBRARIES} ${PNG_LIBRARIES})
     if (NOT USE_SYSTEM_MALLOC)
         list(APPEND EXTRA_LIBS_NAMES bmalloc)
@@ -486,9 +486,6 @@
     if (USE_WEBP)
         append_lib_names_to_list(EXTRA_LIBS_NAMES ${WEBP_LIBRARIES})
     endif ()
-    if (USE_WOFF2)
-        list(APPEND EXTRA_LIBS_NAMES woff2 brotli)
-    endif ()
     if (APPLE)
         list(APPEND EXTRA_LIBS_NAMES icucore)
     endif ()
@@ -905,6 +902,6 @@
     )
 endif ()
 
-if (ENABLE_WEBKIT2)
+if (ENABLE_WEBKIT2 AND SHARED_CORE)
     add_subdirectory(qt/declarative)
 endif ()
--- a/Tools/TestWebKitAPI/CMakeLists.txt
+++ b/Tools/TestWebKitAPI/CMakeLists.txt
@@ -5,32 +5,42 @@
 )
 
 set(test_webcore_LIBRARIES
-    WTF${DEBUG_SUFFIX}
     WebCore${DEBUG_SUFFIX}
     gtest
 )
 
-set(TestWebKitAPI_LIBRARIES
-    WTF${DEBUG_SUFFIX}
-)
+if (NOT QT_STATIC_BUILD)
+    list(APPEND test_webcore_LIBRARIES
+        WTF${DEBUG_SUFFIX}
+    )
+endif ()
 
 if (ENABLE_WEBKIT2)
     set(test_webkit2_api_LIBRARIES
         JavaScriptCore
         TestWebKitAPIBase
-        WTF
         WebKit2
         gtest
     )
-    list(APPEND TestWebKitAPI_LIBRARIES
+    if (NOT QT_STATIC_BUILD)
+        list(APPEND test_webkit2_api_LIBRARIES
+            WTF${DEBUG_SUFFIX}
+        )
+    endif ()
+    set(TestWebKitAPI_LIBRARIES
         WebKit2
     )
 else ()
-    list(APPEND TestWebKitAPI_LIBRARIES
+    set(TestWebKitAPI_LIBRARIES
         WebKit${DEBUG_SUFFIX}
     )
 endif ()
 
+if (NOT QT_STATIC_BUILD)
+    list(APPEND TestWebKitAPI_LIBRARIES
+        WTF${DEBUG_SUFFIX}
+    )
+endif ()
 
 set(TestJavaScriptCore_LIBRARIES
     JavaScriptCore
