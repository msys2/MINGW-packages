From 9e6e73d7057ce42c6e480346623597e7bde88ef4 Mon Sep 17 00:00:00 2001
From: "Jay Freeman (saurik)" <saurik@saurik.com>
Date: Sat, 8 Jun 2019 18:20:28 -0700
Subject: [PATCH] [libcxx][libcxxabi] guess Win32 visibility disable

On Win32, when building a static library, it is important to not
override an end developer's visibility annotations. In libc++abi
there is a check and a -D that to disable overrides while libc++
stores this information in __config_site. Each requires that the
other's information is accurate (if libc++abi thinks libc++ will
be shared then it fails to define vtables; if libc++ thinks that
libc++abi will be shared, it incorrectly imports __cxa_exception
functions); we thereby (clumsily) attempt to guess their status.
---
 CMakeLists.txt           | 1 +
 include/__config_site.in | 1 +
 2 files changed, 2 insertions(+)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 50ccbf6c4..8b0ddd568 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -752,6 +752,7 @@ endif()
 if (DEFINED WIN32 AND LIBCXX_ENABLE_STATIC AND NOT LIBCXX_ENABLE_SHARED)
   message(STATUS "Generating custom __config for non-DLL Windows build")
   config_define(ON _LIBCPP_DISABLE_VISIBILITY_ANNOTATIONS)
+  config_define(ON _LIBCXXABI_DISABLE_VISIBILITY_ANNOTATIONS)
 endif()
 
 set(site_config_path "${LIBCXX_BINARY_DIR}/__config_site")
diff --git a/include/__config_site.in b/include/__config_site.in
index ffbd372ed..d171582f5 100644
--- a/include/__config_site.in
+++ b/include/__config_site.in
@@ -26,6 +26,7 @@
 #cmakedefine _LIBCPP_HAS_THREAD_API_WIN32
 #cmakedefine _LIBCPP_HAS_THREAD_LIBRARY_EXTERNAL
 #cmakedefine _LIBCPP_DISABLE_VISIBILITY_ANNOTATIONS
+#cmakedefine _LIBCXXABI_DISABLE_VISIBILITY_ANNOTATIONS
 #cmakedefine _LIBCPP_NO_VCRUNTIME
 #cmakedefine01 _LIBCPP_HAS_MERGED_TYPEINFO_NAMES_DEFAULT
 #cmakedefine _LIBCPP_ABI_NAMESPACE @_LIBCPP_ABI_NAMESPACE@
-- 
2.20.1 (Apple Git-117)

