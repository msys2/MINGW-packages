From b8a3387eee86d609b18ac880e7897252de62a0c5 Mon Sep 17 00:00:00 2001
From: Mateusz Mikula <mati865@gmail.com>
Date: Fri, 15 Sep 2017 15:03:12 +0200
Subject: [PATCH] fixes to get lldb building

---
 source/Utility/CMakeLists.txt                              |  6 ++++++
 include/lldb/Host/windows/PosixApi.h                       | 14 ++++++++++----
 include/lldb/Host/windows/windows.h                        |  4 ++++
 source/Host/common/MainLoop.cpp                            |  1 +
 source/Host/windows/Windows.cpp                            |  3 +++
 .../gdb-remote/GDBRemoteCommunicationServerPlatform.cpp    |  1 +
 source/Plugins/Process/gdb-remote/ProcessGDBRemote.h       |  1 +
 tools/lldb-mi/MIDataTypes.h                                |  2 ++
 tools/lldb-mi/Platform.h                                   |  4 ++++
 9 files changed, 32 insertions(+), 4 deletions(-)

diff --git a/cmake/LLDBDependencies.cmake b/cmake/LLDBDependencies.cmake
index 55ce379..ae65ebe 100644
--- a/source/Utility/CMakeLists.txt
+++ b/source/Utility/CMakeLists.txt
@@ -6,6 +6,12 @@ if ( CMAKE_SYSTEM_NAME MATCHES "Windows" )
     ws2_32
     rpcrt4
     )
+  if (MINGW)
+    list(APPEND LLDB_SYSTEM_LIBS
+      dbghelp
+      psapi
+      )
+  endif ()
 endif ()
 
 if (NOT LLDB_DISABLE_LIBEDIT)
diff --git a/include/lldb/Host/windows/PosixApi.h b/include/lldb/Host/windows/PosixApi.h
index de70266..51fba95 100644
--- a/include/lldb/Host/windows/PosixApi.h
+++ b/include/lldb/Host/windows/PosixApi.h
@@ -73,13 +73,9 @@ typedef uint32_t pid_t;
 #define S_ISDIR(mode) (((mode)&S_IFMT) == S_IFDIR)
 #endif
 
-#endif // _MSC_VER
-
 // Various useful posix functions that are not present in Windows.  We provide
 // custom implementations.
 int vasprintf(char **ret, const char *fmt, va_list ap);
-char *strcasestr(const char *s, const char *find);
-char *realpath(const char *name, char *resolved);
 
 int usleep(uint32_t useconds);
 char *basename(char *path);
@@ -88,6 +84,16 @@ char *dirname(char *path);
 int strcasecmp(const char *s1, const char *s2);
 int strncasecmp(const char *s1, const char *s2, size_t n);
 
+#elif __MINGW64_VERSION_MAJOR
+
+// pid_t definition
+#include <sys/types.h>
+
+#endif
+
+char *strcasestr(const char *s, const char *find);
+char *realpath(const char *name, char *resolved);
+
 // empty functions
 inline int posix_openpt(int flag) { LLVM_BUILTIN_UNREACHABLE; }
 
diff --git a/include/lldb/Host/windows/windows.h b/include/lldb/Host/windows/windows.h
index 3dc9f77..ca138c1 100644
--- a/include/lldb/Host/windows/windows.h
+++ b/include/lldb/Host/windows/windows.h
@@ -28,4 +28,8 @@
 #define FAR
 #define NEAR
 
+#ifndef _MSC_VER
+#include <sys/stat.h>
+#endif
+
 #endif // LLDB_lldb_windows_h_
diff --git a/source/Host/common/MainLoop.cpp b/source/Host/common/MainLoop.cpp
index d0e0d00..cd1d4a8 100644
--- a/source/Host/common/MainLoop.cpp
+++ b/source/Host/common/MainLoop.cpp
@@ -27,6 +27,7 @@
 #if HAVE_SYS_EVENT_H
 #include <sys/event.h>
 #elif defined(_WIN32)
+#include "lldb/Host/windows/windows.h"
 #include <winsock2.h>
 #elif defined(__ANDROID__)
 #include <sys/syscall.h>
diff --git a/source/Host/windows/Windows.cpp b/source/Host/windows/Windows.cpp
index 9d0e70e..aaf06b0 100644
--- a/source/Host/windows/Windows.cpp
+++ b/source/Host/windows/Windows.cpp
@@ -43,6 +43,8 @@ bool wideToUtf8(const wchar_t *wide, char *buf, size_t bufSize) {
 }
 }
 
+#ifdef _MSC_VER
+
 int vasprintf(char **ret, const char *fmt, va_list ap) {
   char *buf;
   int len;
@@ -69,6 +71,7 @@ int vasprintf(char **ret, const char *fmt, va_list ap) {
   va_end(ap2);
   return len;
 }
+#endif
 
 char *strcasestr(const char *s, const char *find) {
   char c, sc;
diff --git a/source/Plugins/Process/gdb-remote/GDBRemoteCommunicationServerPlatform.cpp b/source/Plugins/Process/gdb-remote/GDBRemoteCommunicationServerPlatform.cpp
index 977c34c..9bec1d8 100644
--- a/source/Plugins/Process/gdb-remote/GDBRemoteCommunicationServerPlatform.cpp
+++ b/source/Plugins/Process/gdb-remote/GDBRemoteCommunicationServerPlatform.cpp
@@ -12,6 +12,7 @@
 #include <errno.h>
 
 // C Includes
+#include <unistd.h>
 // C++ Includes
 #include <chrono>
 #include <cstring>
diff --git a/source/Plugins/Process/gdb-remote/ProcessGDBRemote.h b/source/Plugins/Process/gdb-remote/ProcessGDBRemote.h
index 54a472d..196e012 100644
--- a/source/Plugins/Process/gdb-remote/ProcessGDBRemote.h
+++ b/source/Plugins/Process/gdb-remote/ProcessGDBRemote.h
@@ -11,6 +11,7 @@
 #define liblldb_ProcessGDBRemote_h_
 
 // C Includes
+#include <unistd.h>
 // C++ Includes
 #include <atomic>
 #include <map>
diff --git a/tools/lldb-mi/MIDataTypes.h b/tools/lldb-mi/MIDataTypes.h
index 34fe457..8372e8c 100644
--- a/tools/lldb-mi/MIDataTypes.h
+++ b/tools/lldb-mi/MIDataTypes.h
@@ -19,6 +19,8 @@
 // Windows headers:
 #ifdef _WIN32
 
+#include <windows.h>
+
 // Debugging:
 #ifdef _DEBUG
 #include <crtdbg.h> // C-runtime debugging library (defines _ASSERT).
diff --git a/tools/lldb-mi/Platform.h b/tools/lldb-mi/Platform.h
index ce2de1b..d334d75 100644
--- a/tools/lldb-mi/Platform.h
+++ b/tools/lldb-mi/Platform.h
@@ -78,8 +78,12 @@ typedef void (*sighandler_t)(int);
 
 #include <getopt.h>
 #include <libgen.h>
+
+#ifndef __MINGW64_VERSION_MAJOR
 #include <sys/ioctl.h>
 #include <termios.h>
+#endif
+
 #include <unistd.h>
 
 #include <pthread.h>
-- 
2.14.1.windows.1

