diff -urN lldb-3.9.0.src.orig/cmake/LLDBDependencies.cmake lldb-3.9.0.src/cmake/LLDBDependencies.cmake
--- lldb-3.9.0.src.orig/cmake/LLDBDependencies.cmake	2016-06-29 14:30:18.000000000 +0200
+++ lldb-3.9.0.src/cmake/LLDBDependencies.cmake	2016-11-06 12:57:45.641325900 +0100
@@ -92,6 +92,7 @@
     lldbPluginProcessWindowsCommon
     Ws2_32
     Rpcrt4
+    dbghelp
     )
 endif ()
 
diff -urN lldb-3.9.0.src.orig/cmake/modules/LLDBConfig.cmake lldb-3.9.0.src/cmake/modules/LLDBConfig.cmake
--- lldb-3.9.0.src.orig/cmake/modules/LLDBConfig.cmake	2016-05-26 18:11:04.000000000 +0200
+++ lldb-3.9.0.src/cmake/modules/LLDBConfig.cmake	2016-11-06 17:50:27.409562300 +0100
@@ -248,8 +248,10 @@
 endif()
 
 # Use the Unicode (UTF-16) APIs by default on Win32
-if (CMAKE_SYSTEM_NAME MATCHES "Windows")
-	add_definitions( /D _UNICODE /D UNICODE )
+if (MSVC)
+  add_definitions( /D _UNICODE /D UNICODE )
+elseif (WIN32)
+  add_definitions( -municode )
 endif()
 
 set(LLDB_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
diff -urN lldb-3.9.0.src.orig/include/lldb/Host/windows/win32.h lldb-3.9.0.src/include/lldb/Host/windows/win32.h
--- lldb-3.9.0.src.orig/include/lldb/Host/windows/win32.h	2015-08-20 22:53:15.000000000 +0200
+++ lldb-3.9.0.src/include/lldb/Host/windows/win32.h	2016-11-06 12:57:45.653320700 +0100
@@ -14,7 +14,9 @@
 #include <time.h>
 
 // posix utilities
+#ifndef __MINGW64_VERSION_MAJOR
 int vasprintf(char **ret, const char *fmt, va_list ap);
+#endif
 char * strcasestr(const char *s, const char* find);
 char* realpath(const char * name, char * resolved);
 
@@ -33,6 +35,7 @@
 # define S_IWUSR  S_IWRITE                     /* write, user */
 # define S_IXUSR  0                            /* execute, user */
 #endif
+#ifndef __MINGW64_VERSION_MAJOR
 #define S_IRGRP  0                            /* read, group */
 #define S_IWGRP  0                            /* write, group */
 #define S_IXGRP  0                            /* execute, group */
@@ -42,6 +45,7 @@
 #define S_IRWXU  0
 #define S_IRWXG  0
 #define S_IRWXO  0
+#endif // __MINGW64_VERSION_MAJOR
 
 #ifdef _MSC_VER
 
@@ -93,7 +97,7 @@
 
 // timespec
 // MSVC 2015 and higher have timespec.  Otherwise we need to define it ourselves.
-#if defined(_MSC_VER) && _MSC_VER >= 1900
+#if defined(_MSC_VER) && _MSC_VER >= 1900 || defined(__MINGW64_VERSION_MAJOR)
 #include <time.h>
 #else
 struct timespec
diff -urN lldb-3.9.0.src.orig/include/lldb/lldb-defines.h lldb-3.9.0.src/include/lldb/lldb-defines.h
--- lldb-3.9.0.src.orig/include/lldb/lldb-defines.h	2015-07-24 02:23:29.000000000 +0200
+++ lldb-3.9.0.src/include/lldb/lldb-defines.h	2016-11-06 15:22:20.184084400 +0100
@@ -12,7 +12,7 @@
 
 #include "lldb/lldb-types.h"
 
-#if defined (_MSC_VER)
+#if defined (_WIN32)
     #if defined(EXPORT_LIBLLDB)
         #define  LLDB_API __declspec(dllexport)
     #elif defined(IMPORT_LIBLLDB)
@@ -20,7 +20,7 @@
     #else
         #define LLDB_API
     #endif
-#else // defined (_MSC_VER)
+#else // defined (_WIN32)
     #define LLDB_API
 #endif
 
diff -urN lldb-3.9.0.src.orig/include/lldb/Utility/TaskPool.h lldb-3.9.0.src/include/lldb/Utility/TaskPool.h
--- lldb-3.9.0.src.orig/include/lldb/Utility/TaskPool.h	2015-11-03 23:29:20.000000000 +0100
+++ lldb-3.9.0.src/include/lldb/Utility/TaskPool.h	2016-11-06 12:57:45.664322400 +0100
@@ -29,6 +29,7 @@
 #include <cassert>
 #include <cstdint>
 #include <future>
+#include <functional>
 #include <list>
 #include <queue>
 #include <thread>
diff -urN lldb-3.9.0.src.orig/source/API/CMakeLists.txt lldb-3.9.0.src/source/API/CMakeLists.txt
--- lldb-3.9.0.src.orig/source/API/CMakeLists.txt	2016-06-23 10:35:37.000000000 +0200
+++ lldb-3.9.0.src/source/API/CMakeLists.txt	2016-11-06 12:57:45.670323200 +0100
@@ -101,7 +101,7 @@
   endif()
 endif()
 
-if ( CMAKE_SYSTEM_NAME MATCHES "Windows" )
+if ( CMAKE_SYSTEM_NAME MATCHES "Windows" AND NOT MINGW )
   # Only MSVC has the ABI compatibility problem and avoids using FindPythonLibs,
   # so only it needs to explicitly link against ${PYTHON_LIBRARY}
   if (MSVC AND NOT LLDB_DISABLE_PYTHON)
diff -urN lldb-3.9.0.src.orig/source/Host/common/File.cpp lldb-3.9.0.src/source/Host/common/File.cpp
--- lldb-3.9.0.src.orig/source/Host/common/File.cpp	2016-08-12 20:10:54.000000000 +0200
+++ lldb-3.9.0.src/source/Host/common/File.cpp	2016-11-06 12:57:45.676322400 +0100
@@ -17,6 +17,7 @@
 
 #ifdef _WIN32
 #include "lldb/Host/windows/windows.h"
+#include <share.h>
 #else
 #include <sys/ioctl.h>
 #endif
diff -urN lldb-3.9.0.src.orig/source/Host/windows/ProcessRunLock.cpp lldb-3.9.0.src/source/Host/windows/ProcessRunLock.cpp
--- lldb-3.9.0.src.orig/source/Host/windows/ProcessRunLock.cpp	2015-05-15 00:50:19.000000000 +0200
+++ lldb-3.9.0.src/source/Host/windows/ProcessRunLock.cpp	2016-11-06 12:57:45.685323900 +0100
@@ -3,7 +3,7 @@
 
 namespace
 {
-#if defined(__MINGW32__)
+#if defined(__MINGW32__) && !defined(__MINGW64_VERSION_MAJOR)
 // Taken from WinNT.h
 typedef struct _RTL_SRWLOCK {
     PVOID Ptr;
diff -urN lldb-3.9.0.src.orig/source/Host/windows/Windows.cpp lldb-3.9.0.src/source/Host/windows/Windows.cpp
--- lldb-3.9.0.src.orig/source/Host/windows/Windows.cpp	2016-04-19 03:09:37.000000000 +0200
+++ lldb-3.9.0.src/source/Host/windows/Windows.cpp	2016-11-06 12:57:45.690322800 +0100
@@ -53,6 +53,7 @@
 }
 }
 
+#ifndef __MINGW64_VERSION_MAJOR
 int vasprintf(char **ret, const char *fmt, va_list ap)
 {
     char *buf;
@@ -79,6 +80,7 @@
     va_end(ap2);
     return len;
 }
+#endif //__MINGW64_VERSION_MAJOR
 
 char* strcasestr(const char *s, const char* find)
 {
diff -urN lldb-3.9.0.src.orig/source/Symbol/ClangASTContext.cpp lldb-3.9.0.src/source/Symbol/ClangASTContext.cpp
--- lldb-3.9.0.src.orig/source/Symbol/ClangASTContext.cpp	2016-07-14 21:31:18.000000000 +0200
+++ lldb-3.9.0.src/source/Symbol/ClangASTContext.cpp	2016-11-06 12:57:45.699323500 +0100
@@ -4903,7 +4903,6 @@
 
                 case clang::BuiltinType::Half:
                 case clang::BuiltinType::Float:
-                case clang::BuiltinType::Float128:
                 case clang::BuiltinType::Double:
                 case clang::BuiltinType::LongDouble:
                     return lldb::eEncodingIEEE754;
diff -urN lldb-3.9.0.src.orig/source/Target/ProcessLaunchInfo.cpp lldb-3.9.0.src/source/Target/ProcessLaunchInfo.cpp
--- lldb-3.9.0.src.orig/source/Target/ProcessLaunchInfo.cpp	2016-05-11 18:59:04.000000000 +0200
+++ lldb-3.9.0.src/source/Target/ProcessLaunchInfo.cpp	2016-11-06 12:57:45.708324500 +0100
@@ -362,7 +362,7 @@
                                  __FUNCTION__);
 
                 int open_flags = O_RDWR | O_NOCTTY;
-#if !defined(_MSC_VER)
+#if !defined(_WIN32)
                 // We really shouldn't be specifying platform specific flags
                 // that are intended for a system call in generic code.  But
                 // this will have to do for now.
diff -urN lldb-3.9.0.src.orig/source/Utility/PseudoTerminal.cpp lldb-3.9.0.src/source/Utility/PseudoTerminal.cpp
--- lldb-3.9.0.src.orig/source/Utility/PseudoTerminal.cpp	2015-05-12 03:10:56.000000000 +0200
+++ lldb-3.9.0.src/source/Utility/PseudoTerminal.cpp	2016-11-06 12:57:45.728347300 +0100
@@ -20,7 +20,11 @@
 
 #ifdef _WIN32
 #include "lldb/Host/windows/win32.h"
+
+#ifndef __MINGW64_VERSION_MAJOR
 typedef uint32_t pid_t;
+#endif
+
 // empty functions
 int posix_openpt(int flag) { return 0; }
 
@@ -364,4 +368,3 @@
     m_slave_fd = invalid_fd;
     return fd;
 }
-
diff -urN lldb-3.9.0.src.orig/tools/driver/Driver.cpp lldb-3.9.0.src/tools/driver/Driver.cpp
--- lldb-3.9.0.src.orig/tools/driver/Driver.cpp	2016-04-15 01:31:17.000000000 +0200
+++ lldb-3.9.0.src/tools/driver/Driver.cpp	2016-11-06 17:01:16.257838300 +0100
@@ -1308,13 +1308,13 @@
 }
 
 int
-#ifdef WIN32
+#ifdef MSVC
 wmain(int argc, wchar_t const *wargv[])
 #else
 main(int argc, char const *argv[])
 #endif
 {
-#ifdef _WIN32
+#ifdef MSVC
         // Convert wide arguments to UTF-8
         std::vector<std::string> argvStrings(argc);
         std::vector<const char *> argvPointers(argc);
diff -urN lldb-3.9.0.src.orig/tools/lldb-mi/MIDataTypes.h lldb-3.9.0.src/tools/lldb-mi/MIDataTypes.h
--- lldb-3.9.0.src.orig/tools/lldb-mi/MIDataTypes.h	2015-07-21 13:27:40.000000000 +0200
+++ lldb-3.9.0.src/tools/lldb-mi/MIDataTypes.h	2016-11-06 12:57:45.745348400 +0100
@@ -40,12 +40,12 @@
 #define MIunused(x) (void) x;
 
 // Portability issues
-#ifdef _WIN64
+#if defined(_WIN64) && defined(_MSC_VER)
 typedef unsigned __int64 size_t;
 typedef __int64 MIint;
 typedef unsigned __int64 MIuint;
 #else
-#ifdef _WIN32
+#if defined(_WIN32) && defined(_MSC_VER)
 typedef unsigned int size_t;
 typedef int MIint;
 typedef unsigned int MIuint;
@@ -53,7 +53,10 @@
 typedef int MIint;
 typedef unsigned int MIuint;
 
+#ifndef __MINGW32__
 #define MAX_PATH 4096
+#endif
+
 #endif // _WIN32
 #endif // _WIN64
 
diff -urN lldb-3.9.0.src.orig/tools/lldb-mi/Platform.h lldb-3.9.0.src/tools/lldb-mi/Platform.h
--- lldb-3.9.0.src.orig/tools/lldb-mi/Platform.h	2016-03-22 18:58:09.000000000 +0100
+++ lldb-3.9.0.src/tools/lldb-mi/Platform.h	2016-11-06 12:57:45.750349300 +0100
@@ -86,8 +86,10 @@
 
 #include <getopt.h>
 #include <libgen.h>
+#ifndef __MINGW64_VERSION_MAJOR
 #include <sys/ioctl.h>
 #include <termios.h>
+#endif // __MINGW64_VERSION_MAJOR
 #include <unistd.h>
 
 #include <pthread.h>
