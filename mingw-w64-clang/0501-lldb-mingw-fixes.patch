diff -urN lldb-3.9.0.src.orig/cmake/modules/LLDBConfig.cmake lldb-3.9.0.src/cmake/modules/LLDBConfig.cmake
--- lldb-3.9.0.src.orig/cmake/modules/LLDBConfig.cmake	2016-05-26 18:11:04.000000000 +0200
+++ lldb-3.9.0.src/cmake/modules/LLDBConfig.cmake	2016-09-25 15:29:06.566435600 +0200
@@ -249,7 +249,11 @@

 # Use the Unicode (UTF-16) APIs by default on Win32
 if (CMAKE_SYSTEM_NAME MATCHES "Windows")
-	add_definitions( /D _UNICODE /D UNICODE )
+  if (MSVC)
+    add_definitions( /D _UNICODE /D UNICODE )
+  else()
+    add_definitions( -D_UNICODE -DUNICODE )
+  endif()
 endif()

 set(LLDB_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
diff -urN lldb-3.9.0.src.orig/include/lldb/Host/windows/win32.h lldb-3.9.0.src/include/lldb/Host/windows/win32.h
--- lldb-3.9.0.src.orig/include/lldb/Host/windows/win32.h	2015-08-20 22:53:15.000000000 +0200
+++ lldb-3.9.0.src/include/lldb/Host/windows/win32.h	2016-09-25 21:48:24.777553100 +0200
@@ -14,7 +14,9 @@
 #include <time.h>

 // posix utilities
+#ifndef __MINGW64_VERSION_MAJOR
 int vasprintf(char **ret, const char *fmt, va_list ap);
+#endif
 char * strcasestr(const char *s, const char* find);
 char* realpath(const char * name, char * resolved);

@@ -93,7 +95,7 @@

 // timespec
 // MSVC 2015 and higher have timespec.  Otherwise we need to define it ourselves.
-#if defined(_MSC_VER) && _MSC_VER >= 1900
+#if defined(_MSC_VER) && _MSC_VER >= 1900 || defined(__MINGW64_VERSION_MAJOR)
 #include <time.h>
 #else
 struct timespec
diff -urN lldb-3.9.0.src.orig/source/Host/common/File.cpp lldb-3.9.0.src/source/Host/common/File.cpp
--- lldb-3.9.0.src.orig/source/Host/common/File.cpp	2016-08-12 20:10:54.000000000 +0200
+++ lldb-3.9.0.src/source/Host/common/File.cpp	2016-09-25 21:23:42.383498500 +0200
@@ -17,6 +17,7 @@

 #ifdef _WIN32
 #include "lldb/Host/windows/windows.h"
+#include <share.h>
 #else
 #include <sys/ioctl.h>
 #endif
diff -urN lldb-3.9.0.src.orig/source/Host/windows/ProcessRunLock.cpp lldb-3.9.0.src/source/Host/windows/ProcessRunLock.cpp
--- lldb-3.9.0.src.orig/source/Host/windows/ProcessRunLock.cpp	2015-05-15 00:50:19.000000000 +0200
+++ lldb-3.9.0.src/source/Host/windows/ProcessRunLock.cpp	2016-09-25 21:43:38.881978300 +0200
@@ -3,7 +3,7 @@

 namespace
 {
-#if defined(__MINGW32__)
+#if defined(__MINGW32__) && !defined(__MINGW64_VERSION_MAJOR)
 // Taken from WinNT.h
 typedef struct _RTL_SRWLOCK {
     PVOID Ptr;
diff -urN lldb-3.9.0.src.orig/source/Host/windows/Windows.cpp lldb-3.9.0.src/source/Host/windows/Windows.cpp
--- lldb-3.9.0.src.orig/source/Host/windows/Windows.cpp	2016-04-19 03:09:37.000000000 +0200
+++ lldb-3.9.0.src/source/Host/windows/Windows.cpp	2016-09-25 21:47:43.401828300 +0200
@@ -53,6 +53,7 @@
 }
 }

+#ifndef __MINGW64_VERSION_MAJOR
 int vasprintf(char **ret, const char *fmt, va_list ap)
 {
     char *buf;
@@ -79,6 +80,7 @@
     va_end(ap2);
     return len;
 }
+#endif //__MINGW64_VERSION_MAJOR

 char* strcasestr(const char *s, const char* find)
 {
diff -urN lldb-3.9.0.src.orig/source/Target/ProcessLaunchInfo.cpp lldb-3.9.0.src/source/Target/ProcessLaunchInfo.cpp
--- lldb-3.9.0.src.orig/source/Target/ProcessLaunchInfo.cpp	2016-05-11 18:59:04.000000000 +0200
+++ lldb-3.9.0.src/source/Target/ProcessLaunchInfo.cpp	2016-09-25 22:23:38.450694800 +0200
@@ -362,7 +362,7 @@
                                  __FUNCTION__);

                 int open_flags = O_RDWR | O_NOCTTY;
-#if !defined(_MSC_VER)
+#if !defined(_WIN32)
                 // We really shouldn't be specifying platform specific flags
                 // that are intended for a system call in generic code.  But
                 // this will have to do for now.
diff -urN lldb-3.9.0.src.orig/source/Utility/PseudoTerminal.cpp lldb-3.9.0.src/source/Utility/PseudoTerminal.cpp
--- lldb-3.9.0.src.orig/source/Utility/PseudoTerminal.cpp	2015-05-12 03:10:56.000000000 +0200
+++ lldb-3.9.0.src/source/Utility/PseudoTerminal.cpp	2016-09-25 22:29:40.256771400 +0200
@@ -20,7 +20,11 @@

 #ifdef _WIN32
 #include "lldb/Host/windows/win32.h"
+
+#ifndef __MINGW64_VERSION_MAJOR
 typedef uint32_t pid_t;
+#endif
+
 // empty functions
 int posix_openpt(int flag) { return 0; }

@@ -364,4 +368,3 @@
     m_slave_fd = invalid_fd;
     return fd;
 }
-
