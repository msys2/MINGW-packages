# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=clang
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}"
         "${MINGW_PACKAGE_PREFIX}-clang-analyzer"
         "${MINGW_PACKAGE_PREFIX}-clang-tools-extra"
         "${MINGW_PACKAGE_PREFIX}-llvm"
         #"${MINGW_PACKAGE_PREFIX}-compiler-rt"
         )
pkgver=3.5.0
pkgrel=6
pkgdesc="LC language family frontend for LLVM (mingw-w64)"
arch=('any')
url="http://llvm.org"
license=("custom:University of Illinois/NCSA Open Source License")
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc"
             "${MINGW_PACKAGE_PREFIX}-pkg-config"
             "${MINGW_PACKAGE_PREFIX}-python3-sphinx"
             "python2" "tar")
depends=("${MINGW_PACKAGE_PREFIX}-gcc")
options=('staticlibs' 'strip')
source=(http://llvm.org/releases/$pkgver/llvm-$pkgver.src.tar.xz{,.sig}
        http://llvm.org/releases/$pkgver/cfe-$pkgver.src.tar.xz{,.sig}
        http://llvm.org/releases/$pkgver/compiler-rt-$pkgver.src.tar.xz{,.sig}
        #http://llvm.org/releases/$pkgver/test-suite-$pkgver.src.tar.xz{,.sig}
        #http://llvm.org/releases/$pkgver/libcxx-$pkgver.src.tar.xz{,.sig}
        http://llvm.org/releases/$pkgver/clang-tools-extra-$pkgver.src.tar.xz{,.sig}
        #http://llvm.org/releases/$pkgver/lldb-$pkgver.src.tar.xz{,.sig}
        clang-fabs.patch
        clang-win64-seh.patch
        clang-mingw-driver.patch
        llvm-3.5.0-force-link-pass.o.patch
        llvm-3.5.0-fix-cmake-llvm-exports.patch
        clang-3.6-allow-dll-attributes0.patch
        clang-3.6-allow-dll-attributes1.patch
        clang-3.6-allow-dll-attributes2.patch)
sha256sums=('28e199f368ef0a4666708f31c7991ad3bcc3a578342b0306526dd35f07595c03'
            'SKIP'
            'fc80992e004b06f6c7afb612de1cdaa9ac9d25811c55f94fcf7331d9b81cdb8b'
            'SKIP'
            'a4b3e655832bf8d9a357ea2c771db347237460e131988cbb96cda40ff39a8136'
            'SKIP'
            '2981beb378afb5aa5c50ed017720a42a33e77e902c7086ad2d412ef4fa931f69'
            'SKIP'
            'DA18E02154892362B09957D8FCE8231ACA303A7366B078C61F1566C840D8BF14'
            '6e1168e5c9cba875ef7e87ccfd3060c3a0db6b5e2c3f1fa9fdb4d0eaea465025'
            '2f49bba3acb0e45b0c3374537f2f9036891013c751930437c80472d8d8d8e2a7'
            '5702053503d49448598eda1b8dc8c263f0df9ad7486833273e3987b5dec25a19'
            '841a153d0e9d2d196ea5318388ff295e69c41547eb73b24edf92a1b2cc3cccdd'
            'ff1786aa38a9c728e32d25e1c5e61af55aa0ebbde99720197052a5e72c22ce10'
            'bf0382de4d03b911a4016ec39df66795ba9f26cdf7fb0542dcb0befd9f713382'
            '01cd407e1d2df64bcdb0ec444c86fee19ab262e21b1108b60a66ab954a4cb712')

noextract=(cfe-$pkgver.src.tar.xz)

prepare() {
  plain "Extracting clang-$pkgver.src.tar.xz due to symlink(s) without pre-existing target(s)"
  [ -d $srcdir/cfe-$pkgver ] && rm -rf $srcdir/cfe-$pkgver
  [ -d $srcdir/cfe-$pkgver ] || tar -xJvf $startdir/cfe-$pkgver.src.tar.xz -C $srcdir || true

  cd "$srcdir/llvm-$pkgver.src"
  # Fix build with GCC 4.9 (patch from Debian)
  # http://llvm.org/bugs/show_bug.cgi?id=20067
  patch -p1 -i "$srcdir/llvm-3.5.0-force-link-pass.o.patch"
  patch -p0 -i "$srcdir/llvm-3.5.0-fix-cmake-llvm-exports.patch"

  cd "$srcdir/cfe-$pkgver.src"
  patch -p1 -i ${srcdir}/clang-fabs.patch
  patch -p1 -i ${srcdir}/clang-win64-seh.patch
  patch -p1 -i ${srcdir}/clang-mingw-driver.patch
  patch -p1 -i ${srcdir}/clang-3.6-allow-dll-attributes0.patch
  patch -p1 -i ${srcdir}/clang-3.6-allow-dll-attributes1.patch
  patch -p1 -i ${srcdir}/clang-3.6-allow-dll-attributes2.patch

  mv "$srcdir/llvm-$pkgver.src" "$srcdir/llvm-$pkgver"
  cd "$srcdir/llvm-$pkgver"

  # Fix docs installation directory
  sed -i 's:$(PROJ_prefix)/docs/llvm:$(PROJ_prefix)/share/doc/llvm:' \
    Makefile.config.in
    
  # Fix definition of LLVM_CMAKE_DIR in LLVMConfig.cmake
  sed -i '/@LLVM_CONFIG_CMAKE_DIR@/s:$(PROJ_cmake):$(PROJ_prefix)/share/llvm/cmake:' \
    cmake/modules/Makefile

  # At the present, clang must reside inside the LLVM source code tree to build
  # See http://llvm.org/bugs/show_bug.cgi?id=4840
  [ -d tools/clang ] && rm -rf tools/clang
  mv "$srcdir/cfe-$pkgver.src" tools/clang
  
  [ -d projects/compiler-rt ] && rm -rf projects/compiler-rt
  mv "$srcdir/compiler-rt-$pkgver.src" projects/compiler-rt
  
  # [ -d projects/test-suite ] && rm -rf projects/test-suite
  # mv "$srcdir/test-suite-$pkgver.src" projects/test-suite
  
  [ -d tools/clang/tools/extra ] && rm -rf tools/clang/tools/extra
  mv "$srcdir/clang-tools-extra-$pkgver.src" tools/clang/tools/extra
  
  #[ -d tools/lldb ] && rm -rf tools/lldb
  #mv "$srcdir/lldb-$pkgver.src" tools/lldb
  #sed -i -e "s|python-config|python2-config|" tools/lldb/lib/Makefile
  #sed -i -e "s|python-config|python2-config|" tools/lldb/Makefile
  #sed -i -e "s|/usr/bin/env python|&2|" tools/lldb/scripts/Python/build-swig-Python.sh
  #sed -i -e "s|/usr/bin/env python|&2|" tools/lldb/scripts/Python/finish-swig-Python-LLDB.sh
  
  #[ -d projects/libcxx-$pkgver ] && rm -rf projects/libcxx
  #mv "$srcdir/libcxx-$pkgver.src" projects/libcxx

}

build() {
  cd "$srcdir"
  mkdir -p build-${MINGW_CHOST}
  cd build-${MINGW_CHOST}
  echo 'ac_cv_have_decl_strerror_s=${ac_cv_have_decl_strerror_s=no}' > config.cache

  # Include location of libffi headers in CPPFLAGS
  CPPFLAGS+=" $(pkg-config --cflags libffi)"

  ../llvm-$pkgver/configure \
    -C \
    --prefix=${MINGW_PREFIX} \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --with-sysroot=${MINGW_PREFIX} \
    --enable-targets=x86,x86_64,arm,mips \
    --enable-optimized \
    --disable-assertions \
    --disable-pthreads \
    --with-python=/usr/bin/python2 \
    --enable-libffi \
    --enable-docs

  make
  make -C ../llvm-$pkgver/docs -f Makefile.sphinx man
  make -C ../llvm-$pkgver/docs -f Makefile.sphinx html
  make -C ../llvm-$pkgver/tools/clang/docs -f Makefile.sphinx html
  setup
}

check() {
  plain "skipping make check..."
  #cd "$srcdir/build-${MINGW_CHOST}"
  #make check
}

setup() {
  local destdir=${srcdir}/dest
  [[ -d $destdir ]] && rm -rf ${destdir}
  mkdir -p ${destdir}
  
  # CLANG-TOOLS-EXTRA
  cd "$srcdir/build-${MINGW_CHOST}/tools/clang/tools/extra"
  make DESTDIR="$destdir/clang-tools-extra" install
  # Fix permissions of static libs
  chmod -x $destdir/clang-tools-extra${MINGW_PREFIX}/lib/*.a
  install -Dm644 ${srcdir}/llvm-$pkgver/tools/clang/tools/extra/LICENSE.TXT "$destdir/clang-tools-extra${MINGW_PREFIX}/share/licenses/clang-tools-extra/LICENSE"
  cd ${srcdir}
  mv ${srcdir}/build-${MINGW_CHOST}/tools/clang/tools/extra ${srcdir}/clang-tools-extra-${MINGW_CHOST}
  mv ${srcdir}/llvm-$pkgver/tools/clang/tools/extra ${srcdir}/clang-tools-extra-${pkgver}
  
  # CLANG
  cd "$srcdir/build-${MINGW_CHOST}/tools/clang"
  make -j1 DESTDIR="$destdir/clang" install
  # Fix mis-named clang doc folder (is llvm, should be clang)
  mv ${destdir}/clang${MINGW_PREFIX}/share/doc/llvm ${destdir}/clang${MINGW_PREFIX}/share/doc/clang

  # Install html docs
  install -d "${destdir}"/clang${MINGW_PREFIX}/share/doc/clang/html
  cp -rf $srcdir/llvm-$pkgver/tools/clang/docs/_build/html/* "${destdir}"/clang${MINGW_PREFIX}/share/doc/clang/html/
  rm -r "${destdir}"/clang${MINGW_PREFIX}/share/doc/clang/html/_sources
  
  # CLANG-ANAYLYSER
  install -d ${destdir}/clang-analyzer${MINGW_PREFIX}/{bin,lib/clang-analyzer}
  for _tool in scan-{build,view}; do
    cp -r $srcdir/llvm-$pkgver/tools/clang/tools/$_tool ${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer/
    ln -s ${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer/$_tool/$_tool ${destdir}/clang-analyzer${MINGW_PREFIX}/bin/
  done

  # scan-build looks for clang within the same directory
  install -d ${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer/scan-build/
  ln -s ${destdir}/clang${MINGW_PREFIX}/bin/clang.exe ${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer/scan-build/

  # Relocate man page
  install -d ${destdir}/clang-analyzer${MINGW_PREFIX}/share/man/man1
  mv ${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer/scan-build/scan-build.1 \
    ${destdir}/clang-analyzer${MINGW_PREFIX}/share/man/man1/

  # Compile Python scripts
  python2 -m compileall "${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer"
  python2 -O -m compileall "${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer"
  install -Dm644 $srcdir/llvm-$pkgver/tools/clang/LICENSE.TXT "${destdir}/clang-analyzer${MINGW_PREFIX}/share/licenses/clang-analyzer/LICENSE"

  # LLVM
  cd ${srcdir}
  # Move clang out of the way *before* installing llvm, both src and build. We'll put build back afterwards to allow re-packaging.
  # but the src move is undoing what prepare() did.
  mv "$srcdir/build-${MINGW_CHOST}/tools/clang" "$srcdir/clang-${MINGW_CHOST}"
  mv "$srcdir/llvm-$pkgver/tools/clang"         "$srcdir/clang-$pkgver"       # Put src back where it was (clang)
  cd "$srcdir/build-${MINGW_CHOST}"
  make -j1 DESTDIR="$destdir/llvm" install
  
  # Install man pages
  install -d "${destdir}"/llvm${MINGW_PREFIX}/share/man/man1
  cp $srcdir/llvm-$pkgver/docs/_build/man/*.1 "${destdir}"/llvm${MINGW_PREFIX}/share/man/man1/
  
  # Install html docs
  install -d "${destdir}"/llvm${MINGW_PREFIX}/share/doc/llvm/html
  cp -rf $srcdir/llvm-$pkgver/docs/_build/html/* "${destdir}"/llvm${MINGW_PREFIX}/share/doc/llvm/html/
  rm -r "${destdir}"/llvm${MINGW_PREFIX}/share/doc/llvm/html/_sources

  # Install CMake stuff
  install -d "${destdir}"/llvm${MINGW_PREFIX}/share/llvm/cmake/{modules,platforms}
  install -Dm644 $srcdir/llvm-$pkgver/cmake/modules/*.cmake "${destdir}"/llvm${MINGW_PREFIX}/share/llvm/cmake/modules/
  install -Dm644 $srcdir/llvm-$pkgver/cmake/platforms/*.cmake "${destdir}"/llvm${MINGW_PREFIX}/share/llvm/cmake/platforms/

  # Move all back
  mv "${srcdir}/clang-${MINGW_CHOST}"                "${srcdir}/build-${MINGW_CHOST}/tools/clang"
  mv "${srcdir}/clang-$pkgver"                       "${srcdir}/llvm-$pkgver/tools/clang"
  mv "${srcdir}/clang-tools-extra-${MINGW_CHOST}"    "${srcdir}/build-${MINGW_CHOST}/tools/clang/tools/extra"
  mv "${srcdir}/clang-tools-extra-${pkgver}"         "${srcdir}/llvm-$pkgver/tools/clang/tools/extra"
  
  # Undo more prepare() moves.
  #mv "${srcdir}/llvm-$pkgver/projects/compiler-rt"      "${srcdir}/compiler-rt-$pkgver.src" # Put src back where it was (the rest)
  #mv "${srcdir}/llvm-$pkgver/projects/test-suite"       "${srcdir}/test-suite-$pkgver.src"
  #mv "${srcdir}/llvm-$pkgver/projects/libcxx"           "${srcdir}/libcxx-$pkgver.src"
  #mv "${srcdir}/llvm-$pkgver/tools/clang/tools/extra"   "${srcdir}/clang-tools-extra-${pkgver}.src"
  #mv "${srcdir}/llvm-$pkgver/tools/clang"               "${srcdir}/clang-$pkgver.src"
}

package_clang(){
  pkgdesc="C language family frontend for LLVM"
  depends=("${MINGW_PACKAGE_PREFIX}-llvm=${pkgver}-${pkgrel}")

  mv $srcdir/dest/clang/* $pkgdir
}

# package_compiler-rt(){
#   cd ${srcdir}/compiler-rt
# }

package_llvm(){
  pkgdesc="Low Level Virtual Machine"
  depends=("${MINGW_PACKAGE_PREFIX}-gcc") # "${MINGW_PACKAGE_PREFIX}-compiler-rt"
  install=llvm-${CARCH}.install

  mv $srcdir/dest/llvm/* $pkgdir
}

package_clang-analyzer() {
  pkgdesc="A source code analysis framework"
  url="http://clang-analyzer.llvm.org/"
  depends=("${MINGW_PACKAGE_PREFIX}-clang=${pkgver}-${pkgrel}" "${MINGW_PACKAGE_PREFIX}-python2")

  mv $srcdir/dest/clang-analyzer/* $pkgdir
}

package_clang-tools-extra() {
  pkgdesc="Extra tools built using Clang's tooling APIs"
  url="http://clang.llvm.org/"
  depends=("${MINGW_PACKAGE_PREFIX}-clang=${pkgver}-${pkgrel}")
  
  mv $srcdir/dest/clang-tools-extra/* $pkgdir
}

package_mingw-w64-i686-clang(){
  package_clang
}

package_mingw-w64-i686-clang-analyzer(){
  package_clang-analyzer
}

package_mingw-w64-i686-clang-tools-extra(){
  package_clang-tools-extra
}

# package_mingw-w64-i686-compiler-rt(){
#   package_compiler-rt
# }

package_mingw-w64-i686-llvm(){
  package_llvm
}

package_mingw-w64-x86_64-clang(){
  package_clang
}

package_mingw-w64-x86_64-clang-analyzer(){
  package_clang-analyzer
}

package_mingw-w64-x86_64-clang-tools-extra(){
  package_clang-tools-extra
}

# package_mingw-w64-x86_64-compiler-rt(){
#   package_compiler-rt
# }

package_mingw-w64-x86_64-llvm(){
  package_llvm
}
