From 47d07d270890bb08c47c25845341bb4101be903c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Mateusz=20Miku=C5=82a?= <mati865@gmail.com>
Date: Tue, 31 Mar 2020 13:18:33 +0200
Subject: [PATCH] mingw-w64 provides vasprintf

---
 include/lldb/Host/windows/PosixApi.h |  3 +-
 source/Host/windows/Windows.cpp      | 44 ++++++++++++++--------------
 2 files changed, 24 insertions(+), 23 deletions(-)

diff --git a/include/lldb/Host/windows/PosixApi.h b/include/lldb/Host/windows/PosixApi.h
index a4c3dcd..3c23dca 100644
--- a/include/lldb/Host/windows/PosixApi.h
+++ b/include/lldb/Host/windows/PosixApi.h
@@ -96,7 +96,6 @@ typedef uint32_t pid_t;
 
 // Various useful posix functions that are not present in Windows.  We provide
 // custom implementations.
-int vasprintf(char **ret, const char *fmt, va_list ap);
 char *strcasestr(const char *s, const char *find);
 char *realpath(const char *name, char *resolved);
 
@@ -108,6 +107,8 @@ char *dirname(char *path);
 int strcasecmp(const char *s1, const char *s2);
 int strncasecmp(const char *s1, const char *s2, size_t n);
 
+int vasprintf(char **ret, const char *fmt, va_list ap);
+
 #endif // _MSC_VER
 
 // empty functions
diff --git a/source/Host/windows/Windows.cpp b/source/Host/windows/Windows.cpp
index fa664f5..6044f68 100644
--- a/source/Host/windows/Windows.cpp
+++ b/source/Host/windows/Windows.cpp
@@ -42,28 +42,6 @@ bool wideToUtf8(const wchar_t *wide, char *buf, size_t bufSize) {
 }
 }
 
-int vasprintf(char **ret, const char *fmt, va_list ap) {
-  char *buf;
-  int len;
-  size_t buflen;
-  va_list ap2;
-
-  va_copy(ap2, ap);
-  len = vsnprintf(NULL, 0, fmt, ap2);
-
-  if (len >= 0 &&
-      (buf = (char *)malloc((buflen = (size_t)(len + 1)))) != NULL) {
-    len = vsnprintf(buf, buflen, fmt, ap);
-    *ret = buf;
-  } else {
-    *ret = NULL;
-    len = -1;
-  }
-
-  va_end(ap2);
-  return len;
-}
-
 char *strcasestr(const char *s, const char *find) {
   char c, sc;
   size_t len;
@@ -194,6 +172,28 @@ int strncasecmp(const char *s1, const char *s2, size_t n) {
   return strnicmp(s1, s2, n);
 }
 
+int vasprintf(char **ret, const char *fmt, va_list ap) {
+  char *buf;
+  int len;
+  size_t buflen;
+  va_list ap2;
+
+  va_copy(ap2, ap);
+  len = vsnprintf(NULL, 0, fmt, ap2);
+
+  if (len >= 0 &&
+      (buf = (char *)malloc((buflen = (size_t)(len + 1)))) != NULL) {
+    len = vsnprintf(buf, buflen, fmt, ap);
+    *ret = buf;
+  } else {
+    *ret = NULL;
+    len = -1;
+  }
+
+  va_end(ap2);
+  return len;
+}
+
 #if _MSC_VER < 1900
 namespace lldb_private {
 int vsnprintf(char *buffer, size_t count, const char *format, va_list argptr) {
-- 
2.26.0.windows.1

