--- a/qmake/CMakeLists.txt
+++ b/qmake/CMakeLists.txt
@@ -55,7 +55,6 @@
 qt_internal_add_tool(${target_name}
     TOOLS_TARGET Core # special case
     USER_FACING
-    INSTALL_VERSIONED_LINK
     SOURCES
         cachekeys.h
         generators/mac/pbuilder_pbx.cpp generators/mac/pbuilder_pbx.h
@@ -143,3 +142,7 @@
     doc/qmake.qdocconf
 )
 # special case end
+
+set_target_properties(${target_name} PROPERTIES
+    OUTPUT_NAME qmake-qt6
+)
--- a/src/tools/qtpaths/CMakeLists.txt
+++ b/src/tools/qtpaths/CMakeLists.txt
@@ -8,7 +8,6 @@
 qt_internal_add_tool(${target_name}
     TARGET_DESCRIPTION "Qt tool that provides the standard paths of the Qt framework"
     TOOLS_TARGET Core
-    INSTALL_VERSIONED_LINK
     SOURCES
         qtpaths.cpp
     DEFINES
@@ -30,3 +29,7 @@
         WIN32_EXECUTABLE FALSE
     )
 endif()
+
+set_target_properties(${target_name} PROPERTIES
+    OUTPUT_NAME qtpaths-qt6
+)
--- a/src/tools/qdbuscpp2xml/CMakeLists.txt
+++ b/src/tools/qdbuscpp2xml/CMakeLists.txt
@@ -47,3 +47,7 @@
 # qt_internal_extend_target(qdbuscpp2xml CONDITION force_bootstrap [...])
 # qt_internal_extend_target(qdbuscpp2xml CONDITION NOT force_bootstrap [...])
 # special case end
+
+set_target_properties(${target_name} PROPERTIES
+    OUTPUT_NAME qdbuscpp2xml-qt6
+)
--- a/src/tools/qdbusxml2cpp/CMakeLists.txt
+++ b/src/tools/qdbusxml2cpp/CMakeLists.txt
@@ -35,3 +35,7 @@
 # qt_internal_extend_target(qdbusxml2cpp CONDITION NOT QT_FEATURE_commandlineparser AND NOT force_bootstrap [...])
 # qt_internal_extend_target(qdbusxml2cpp CONDITION force_bootstrap [...])
 # special case end
+
+set_target_properties(${target_name} PROPERTIES
+    OUTPUT_NAME qdbusxml2cpp-qt6
+)
--- a/src/tools/windeployqt/CMakeLists.txt
+++ b/src/tools/windeployqt/CMakeLists.txt
@@ -30,3 +30,7 @@
     DEFINES
         QT_RELOCATABLE
 )
+
+set_target_properties(${target_name} PROPERTIES
+    OUTPUT_NAME "windeployqt-qt6"
+)
--- a/src/tools/windeployqt/utils.cpp
--- b/src/tools/windeployqt/utils.cpp
@@ -457,7 +457,7 @@
 
 QMap<QString, QString> queryQtPaths(const QString &qtpathsBinary, QString *errorMessage)
 {
-    const QString binary = !qtpathsBinary.isEmpty() ? qtpathsBinary : QStringLiteral("qtpaths");
+    const QString binary = !qtpathsBinary.isEmpty() ? qtpathsBinary : QStringLiteral("qtpaths6");
     QByteArray stdOut;
     QByteArray stdErr;
     unsigned long exitCode = 0;
--- a/src/tools/windeployqt/main.cpp
--- b/src/tools/windeployqt/main.cpp
@@ -1020,7 +1020,7 @@
     // Run lconvert to concatenate all files into a single named "qt_<prefix>.qm" in the application folder
     // Use QT_INSTALL_TRANSLATIONS as working directory to keep the command line short.
     const QString absoluteTarget = QFileInfo(target).absoluteFilePath();
-    const QString binary = QStringLiteral("lconvert");
+    const QString binary = QStringLiteral("lconvert-qt6");
     QStringList arguments;
     for (const QString &prefix : qAsConst(prefixes)) {
         arguments.clear();
