_realname=deno
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=1.45.5
pkgrel=1
pkgdesc="A secure runtime for JavaScript and TypeScript (mingw-w64)"
arch=('any')
mingw_arch=('ucrt64' 'clang64' 'clangarm64')
url='https://github.com/denoland/deno'
license=('MIT')
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs")
makedepends=("${MINGW_PACKAGE_PREFIX}-rust"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-python"
             "${MINGW_PACKAGE_PREFIX}-protobuf"
             "${MINGW_PACKAGE_PREFIX}-nodejs"
             "${MINGW_PACKAGE_PREFIX}-pkgconf"
             "${MINGW_PACKAGE_PREFIX}-v8"
             'git')
source=("git+$url#tag=v$pkgver"
        "001-buildflags-fix.patch")
sha256sums=('e27dfffcfdcf509271ece5c812996d6e0221a2968cf665397ed8665f7d897263'
            'a546a20adda59242647b1d43404271e24a1fc7b1621fbadd133ab4e44ff3418f')

prepare() {
  cd "${srcdir}/${_realname}"

  patch -Np1 -i "${srcdir}"/001-buildflags-fix.patch

  cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
}

build() {
  cd "${srcdir}/${_realname}"

  export RUSTY_V8_ARCHIVE=$(cygpath -m ${MINGW_PREFIX}/lib/libv8_monolith.a)

  cargo build --release --frozen
}

package() {
  cd "${srcdir}/${_realname}"

  cargo install \
    --offline \
    --no-track \
    --frozen \
    --path . \
    --root "${pkgdir}${MINGW_PREFIX}"

  install -Dm644 LICENSE.md "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE.md"
}
