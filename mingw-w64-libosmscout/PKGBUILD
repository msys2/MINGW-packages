# Maintainer: Adrian Jaekel <adrian at arteco dot de>

_realname=libosmscout
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=2023.03.30.1
pkgrel=5
pkgdesc="A Library for offline map rendering, routing and location lookup based on OpenStreetMap data (mingw-w64)"
arch=('any')
mingw_arch=('mingw64' 'ucrt64' 'clang64' 'clangarm64')
url="https://github.com/Framstag/libosmscout"
license=('spdx:LGPL-2.0-only')
depends=("${MINGW_PACKAGE_PREFIX}-cairo"
         "${MINGW_PACKAGE_PREFIX}-fontconfig"
         "${MINGW_PACKAGE_PREFIX}-freetype"
         "${MINGW_PACKAGE_PREFIX}-freeglut"
         "${MINGW_PACKAGE_PREFIX}-glew"
         "${MINGW_PACKAGE_PREFIX}-glfw"
         "${MINGW_PACKAGE_PREFIX}-glib2"
         "${MINGW_PACKAGE_PREFIX}-glm"
         "${MINGW_PACKAGE_PREFIX}-harfbuzz"
         "${MINGW_PACKAGE_PREFIX}-iconv"
         "${MINGW_PACKAGE_PREFIX}-libxml2"
         "${MINGW_PACKAGE_PREFIX}-marisa"
         "${MINGW_PACKAGE_PREFIX}-omp"
         "${MINGW_PACKAGE_PREFIX}-pango"
         "${MINGW_PACKAGE_PREFIX}-protobuf"
         "${MINGW_PACKAGE_PREFIX}-qt5-declarative"
         "${MINGW_PACKAGE_PREFIX}-qt5-svg"
         "${MINGW_PACKAGE_PREFIX}-qt5-location"
         "${MINGW_PACKAGE_PREFIX}-qt5-multimedia"
         "${MINGW_PACKAGE_PREFIX}-xz"
         "${MINGW_PACKAGE_PREFIX}-zlib")
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-pkgconf"
             "${MINGW_PACKAGE_PREFIX}-qt5-tools")
# imagemagick also installs "bin/import.exe"
conflicts=("${MINGW_PACKAGE_PREFIX}-imagemagick")
source=(${_realname}-${pkgver}.tar.gz::https://github.com/Framstag/libosmscout/archive/v${pkgver}.tar.gz
        001-fix-install-destinations.patch
        002-fix-build-with-libxml2-2.12.patch::https://github.com/Framstag/libosmscout/commit/db7b307d.patch)
sha256sums=('b51dc4ecbced421ed9db6359567be030c77f781b0da09830c0f2b06f675d004d'
            '1b57cf69903dacea4a6854991b83c9523a9f23b98ad39a7b773462802d8860ab'
            '7827e708586cd5f3385a19940fd9d627bdea3df244dbc016413c851f76f76e97')

prepare() {
  cd "${srcdir}"/${_realname}-${pkgver}
  patch -p1 -i "${srcdir}"/001-fix-install-destinations.patch
  patch -p1 -i "${srcdir}"/002-fix-build-with-libxml2-2.12.patch
}

build() {
  mkdir "${srcdir}"/build-${MSYSTEM} && cd "${srcdir}"/build-${MSYSTEM}

  if check_option "debug" "y"; then
    _build_type="Debug"
  else
    _build_type="Release"
  fi

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake -Wno-dev \
    -G"Ninja" \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DCMAKE_BUILD_TYPE=${_build_type} \
    -DOSMSCOUT_BUILD_TESTS=OFF \
    -DOSMSCOUT_BUILD_DEMOS=OFF \
    -DOSMSCOUT_INSTALL_QT_DLL=OFF \
    -DDirect2D_D2D1_LIBRARY=${MINGW_PREFIX}/lib/libd2d1.a \
    -DDirect2D_DWRITE_LIBRARY=${MINGW_PREFIX}/lib/libdwrite.a \
    "../${_realname}-${pkgver}"

  ${MINGW_PREFIX}/bin/cmake --build .
}

package() {
  cd "${srcdir}/build-${MSYSTEM}"
  DESTDIR=${pkgdir} ${MINGW_PREFIX}/bin/cmake --install .
}
