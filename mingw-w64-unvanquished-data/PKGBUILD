# ArchLinux (AUR):
# Maintainer: Viech <viech unvanquished net>
# MSYS2:
# Maintainer: Mateusz Miku≈Ça <mati865@gmail.com>

_realname=unvanquished-data
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=0.50.0
pkgrel=1

_gitver="archlinux/${pkgver}-${pkgrel}"

pkgdesc='Game assets for Unvanquished.'
arch=('any')
url='http://www.unvanquished.net'
license=('GPL3')

makedepends=("${MINGW_PACKAGE_PREFIX}-aria2>=1.18.7-2"
             'sed') # XXX dependency on sed for workaround below
source=("https://github.com/Unvanquished/Unvanquished/raw/${_gitver}/download-pk3-torrent.sh"
        "copy-instead-of-symlink.patch")

# disable package compression since assets are already compressed
PKGEXT='.pkg.tar'

prepare() {
  cd ${srcdir}

  patch -p1 -i ${srcdir}/copy-instead-of-symlink.patch
}

package() {
	# create installation directory
	install -dm755 "${pkgdir}${MINGW_PREFIX}/share/unvanquished/pkg/"

	# use package source directory as the cache for the download script
	if [ ! -d "${srcdir}/cache" ]; then
		mkdir "${srcdir}/cache"
	fi

	# attempt to copy existing assets from the system, so they aren't redownloaded
	if [ -d ${MINGW_PREFIX}/share/unvanquished/pkg ]; then
		echo "Copying existing assets from the system..."
		cp -r ${MINGW_PREFIX}/share/unvanquished/pkg/*.pk3 "${pkgdir}${MINGW_PREFIX}/share/unvanquished/pkg/" || true
	fi

	# make the download script aware of copied assets, so it will remove unneeded ones
	ls -c1 "${pkgdir}${MINGW_PREFIX}/share/unvanquished/pkg/" > "${srcdir}/cache/last-assets.txt"

	# remove old aria2 progress files in case the torrent itself was updated
	rm -f "${srcdir}/cache/"*".aria2"

	# XXX work around a bug in aria2/GnuTLS https handling by using http for now
	sed -i 's,https,http,' download-pk3-torrent.sh

  # MSYS cannot use directory links (junctions)
  sed -ie '/rm -f "$path\/pkg"/,+2d' download-pk3-torrent.sh

	# download new or modified assets
	./download-pk3-torrent.sh "${pkgdir}${MINGW_PREFIX}/share/unvanquished/pkg/" "${srcdir}/cache" "${pkgver}"
}

sha256sums=('4990c5271272a008e103a36868e1a26559c77d3056e3bb4a1504588acffb06ac'
            'db93d928e94b9840f2b441c06abf38615c3d4c7ce3868bf5601d53137d5567af')
