# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=libwmf
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=0.2.13
pkgrel=1
pkgdesc="Library for Converting Metafile Images (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32' 'clangarm64')
url="https://wvWare.sourceforge.io/"
msys2_references=(
  "cpe: cpe:/a:francis_james_franklin:libwmf"
  "cpe: cpe:/a:wvware:libwmf"
)
license=("GPL" "LGPL")
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-autotools")
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-freetype"
         "${MINGW_PACKAGE_PREFIX}-gdk-pixbuf2"
         "${MINGW_PACKAGE_PREFIX}-libjpeg"
         "${MINGW_PACKAGE_PREFIX}-libpng"
         "${MINGW_PACKAGE_PREFIX}-libxml2"
         "${MINGW_PACKAGE_PREFIX}-zlib")
source=(${_realname}-${pkgver}.tar.gz::https://github.com/caolanm/libwmf/archive/v${pkgver}.tar.gz
        libwmf-0.2.8.4-libpng.patch)
sha256sums=('18ba69febd2f515d98a2352de284a8051896062ac9728d2ead07bc39ea75a068'
            '6d00df85c02d1db26e67d0ec78a47a4c314fd0bf152df8284a527084bdd73b13')

prepare() {
  cd ${srcdir}/${_realname}-${pkgver}
  patch -p1 -i ${srcdir}/libwmf-0.2.8.4-libpng.patch
  libtoolize --force --copy --install
  autoreconf -fiv -Ipatches
}

build() {
  mkdir -p "${srcdir}/build-${MSYSTEM}" && cd "${srcdir}/build-${MSYSTEM}"

  "${srcdir}"/${_realname}-${pkgver}/configure \
    --prefix=${MINGW_PREFIX} \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --enable-shared \
    --disable-static \
    --with-libxml2 \
    --without-x

  make
}

package() {
  cd "${srcdir}/build-${MSYSTEM}"
  make DESTDIR="$pkgdir" install
  find "${pkgdir}${MINGW_PREFIX}" -name '*.def' -o -name '*.exp' | xargs -rtl1 rm
  rm "${pkgdir}${MINGW_PREFIX}"/lib/gdk-pixbuf-2.0/2.*/loaders/*.dll.a

  # fix .pc file
  sed -s "s|$(cygpath -m ${MINGW_PREFIX})|${MINGW_PREFIX}|g" -i "${pkgdir}${MINGW_PREFIX}"/lib/pkgconfig/libwmf.pc
}
