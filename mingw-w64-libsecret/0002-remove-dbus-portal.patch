--- libsecret-0.21.2/libsecret/secret-file-backend.c.orig	2023-12-08 11:18:34.000000000 +0100
+++ libsecret-0.21.2/libsecret/secret-file-backend.c	2024-01-20 12:31:47.791819300 +0100
@@ -26,9 +26,11 @@
 
 EGG_SECURE_DECLARE (secret_file_backend);
 
+#ifndef _WIN32
 #include <gio/gunixfdlist.h>
 #include <gio/gunixinputstream.h>
 #include <glib-unix.h>
+#endif
 
 #define PORTAL_BUS_NAME "org.freedesktop.portal.Desktop"
 #define PORTAL_OBJECT_PATH "/org/freedesktop/portal/desktop"
@@ -197,7 +199,7 @@
 	g_task_return_boolean (task, TRUE);
 	g_object_unref (task);
 }
-
+#ifndef _WIN32
 typedef struct {
 	gint io_priority;
 	GFile *file;
@@ -469,6 +471,7 @@
 						  task);
 	g_object_unref (fd_list);
 }
+#endif
 
 #ifdef WITH_TPM
 static GBytes *
@@ -553,7 +556,9 @@
 	SecretValue *password;
 	GTask *task;
 	GError *error = NULL;
+#ifndef _WIN32
 	InitClosure *init;
+#endif
 
 	task = g_task_new (initable, cancellable, callback, user_data);
 
@@ -577,6 +582,7 @@
 					    NULL);
 		g_object_unref (file);
 		secret_value_unref (password);
+#ifndef _WIN32
 	} else if (g_file_test ("/.flatpak-info", G_FILE_TEST_EXISTS) || g_getenv ("SNAP_NAME") != NULL) {
 		init = g_new0 (InitClosure, 1);
 		init->io_priority = io_priority;
@@ -585,6 +591,7 @@
 			init->cancellable = g_object_ref (cancellable);
 		g_task_set_task_data (task, init, init_closure_free);
 		g_bus_get (G_BUS_TYPE_SESSION, cancellable, on_bus_get, task);
+#endif
 	} else {
 #ifdef WITH_TPM
 		GBytes *decrypted = NULL;
