diff -Naur bzip2-1.1.0-orig/CMakeLists.txt bzip2-1.1.0-p/CMakeLists.txt
--- bzip2-1.1.0-orig/CMakeLists.txt	2025-05-26 09:32:19.052137200 +0300
+++ bzip2-1.1.0-p/CMakeLists.txt	2025-05-26 11:35:57.408586200 +0300
@@ -236,7 +236,9 @@
 endif()
 
 if(ENABLE_DEBUG)
-    set(DEBUGBUILD 1)
+    set(BZ_DEBUG 1)
+else()
+    set(BZ_DEBUG 0)
 endif()
 
 #add_definitions(-DHAVE_CONFIG_H)
@@ -279,88 +281,91 @@
     decompress.c
     bzlib.c)
 
+set(PUBLIC_HDRS
+  "bzlib.h"
+)
+
+set(PRIVATE_HDRS
+  "bzlib_private.h"
+)
+
 # The bz2 OBJECT-library, required for bzip2, bzip2recover.
 add_library(bz2_ObjLib OBJECT)
 target_sources(bz2_ObjLib
     PRIVATE   ${BZ2_SOURCES}
     PUBLIC    ${CMAKE_CURRENT_SOURCE_DIR}/bzlib_private.h
     INTERFACE ${CMAKE_CURRENT_SOURCE_DIR}/bzlib.h)
+target_compile_definitions(bz2_ObjLib PUBLIC "BZ2_STATICLIB")
+target_compile_definitions (bz2_ObjLib PRIVATE "BZ_DEBUG=${BZ_DEBUG}")
 
 # Windows resource file
-set(BZ2_RES "")
-if(WIN32)
+if(WIN32 AND BUILD_SHARED_LIBS)
     configure_file(
         version.rc.in
         ${CMAKE_CURRENT_BINARY_DIR}/version.rc
         @ONLY)
 
     set(BZ2_RES ${CMAKE_CURRENT_BINARY_DIR}/version.rc)
+    list(APPEND BZ2_SOURCES ${CMAKE_CURRENT_BINARY_DIR}/version.rc)
+    list(APPEND BZ2_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/libbz2.def)
 endif()
 
-if(ENABLE_SHARED_LIB)
-    # The libbz2 shared library.
-    add_library(bz2 SHARED ${BZ2_RES})
-    target_sources(bz2
-        PRIVATE   ${BZ2_SOURCES}
-                  ${CMAKE_CURRENT_SOURCE_DIR}/libbz2.def
-        PUBLIC    ${CMAKE_CURRENT_SOURCE_DIR}/bzlib_private.h
-        INTERFACE ${CMAKE_CURRENT_SOURCE_DIR}/bzlib.h)
-
-    # Always use '-fPIC'/'-fPIE' option for shared libraries.
-    set_property(TARGET bz2 PROPERTY POSITION_INDEPENDENT_CODE ON)
-
-    set_target_properties(bz2 PROPERTIES
-        COMPILE_FLAGS "${WARNCFLAGS}"
-        VERSION ${LT_VERSION} SOVERSION ${LT_SOVERSION})
-    install(TARGETS bz2 DESTINATION ${CMAKE_INSTALL_LIBDIR})
-    install(FILES bzlib.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
-
-    if(USE_OLD_SONAME)
-        # Hack to support the old libbz2.so.1.0 version by including an extra copy.
-        # Technically the old SONAME is not libtool compatible.
-        # This hack is to support binary compatibility with libbz2 in some distro packages.
-        if(UNIX AND NOT APPLE)
-            add_library(bz2_old_soname SHARED ${BZ2_RES})
-            target_sources(bz2_old_soname
-                PRIVATE   ${BZ2_SOURCES}
-                          ${CMAKE_CURRENT_SOURCE_DIR}/libbz2.def
-                PUBLIC    ${CMAKE_CURRENT_SOURCE_DIR}/bzlib_private.h
-                INTERFACE ${CMAKE_CURRENT_SOURCE_DIR}/bzlib.h
-            )
-            set_target_properties(bz2_old_soname PROPERTIES
-                COMPILE_FLAGS "${WARNCFLAGS}"
-                VERSION ${LT_SOVERSION}.${LT_AGE} SOVERSION ${LT_SOVERSION}.${LT_AGE}
-                OUTPUT_NAME bz2
-            )
-            install(TARGETS bz2_old_soname DESTINATION ${CMAKE_INSTALL_LIBDIR})
-        endif()
-    endif()
+if(BUILD_SHARED_LIBS)
+  set(LIB_TYPE SHARED)
+  set(target_suffix "shared")
+else()
+  set(LIB_TYPE STATIC)
+  set(target_suffix "static")
 endif()
 
-if(ENABLE_STATIC_LIB)
-    # The libbz2 static library.
-    add_library(bz2_static STATIC)
-    target_sources(bz2_static
-        PRIVATE     ${BZ2_SOURCES}
-        PUBLIC      ${CMAKE_CURRENT_SOURCE_DIR}/bzlib_private.h
-        INTERFACE   ${CMAKE_CURRENT_SOURCE_DIR}/bzlib.h)
-
-    # Use '-fPIC'/'-fPIE' option for static libraries by default.
-    # You may build with ENABLE_STATIC_LIB_IS_PIC=OFF to disable PIC for the static library.
-    if(ENABLE_STATIC_LIB_IS_PIC)
-        set_property(TARGET bz2_static PROPERTY POSITION_INDEPENDENT_CODE ON)
-    endif()
-
-    set_target_properties(bz2_static PROPERTIES
-        COMPILE_FLAGS       "${WARNCFLAGS}"
-        VERSION             ${LT_VERSION}
-        SOVERSION           ${LT_SOVERSION}
-        ARCHIVE_OUTPUT_NAME bz2_static)
-    target_compile_definitions(bz2_static PUBLIC BZ2_STATICLIB)
-    install(TARGETS bz2_static DESTINATION ${CMAKE_INSTALL_LIBDIR})
-    install(FILES bzlib.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
+set (include_dirs "$<BUILD_INTERFACE:${PROJECT_BINARY_DIR}/include>")
+list (APPEND include_dirs "$<INSTALL_INTERFACE:${INCLUDE_INSTALL_DIR}>")
+
+add_library(BZip2 ${LIB_TYPE} ${BZ2_SOURCES} ${PRIVATE_HDRS} ${PUBLIC_HDRS})
+
+set_target_properties (BZip2 PROPERTIES PUBLIC_HEADER "${PUBLIC_HDRS}")
+
+set_target_properties(BZip2 PROPERTIES
+    OUTPUT_NAME "bz2-1"
+    ARCHIVE_OUTPUT_NAME "bz2"
+    COMPILE_FLAGS "${WARNCFLAGS}"
+    VERSION ${LT_VERSION} SOVERSION ${LT_SOVERSION}
+)
+
+target_compile_definitions (BZip2 PRIVATE "BZ_DEBUG=${BZ_DEBUG}")
+target_compile_definitions(BZip2 PUBLIC "$<$<NOT:$<BOOL:${BUILD_SHARED_LIBS}>>:BZ2_STATICLIB>")
+
+if(BUILD_SHARED_LIBS OR ENABLE_STATIC_LIB_IS_PIC)
+  set_property(TARGET BZip2 PROPERTY POSITION_INDEPENDENT_CODE ON)
 endif()
 
+include(CMakePackageConfigHelpers)
+
+install (TARGETS BZip2
+  EXPORT bzip2-targets
+  PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT Development
+  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT Runtime
+  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT Development
+  ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT Development)
+install(FILES bzlib.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT Development)
+
+configure_package_config_file (bzip2-config.cmake.in
+  ${CMAKE_CURRENT_BINARY_DIR}/BZip2-config.cmake
+  INSTALL_DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/BZip2)
+
+write_basic_package_version_file (BZip2-config-version.cmake
+  VERSION ${VERSION} COMPATIBILITY SameMajorVersion)
+
+install (EXPORT bzip2-targets NAMESPACE BZip2::
+  DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/BZip2
+  NAMESPACE BZip2::
+  FILE bzip2-${target_suffix}-targets.cmake)
+
+install(FILES
+        "${CMAKE_CURRENT_BINARY_DIR}/bzip2-config.cmake"
+        "${CMAKE_CURRENT_BINARY_DIR}/bzip2-config-version.cmake"
+        DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/BZip2 COMPONENT Development)
+
 if(ENABLE_APP)
     # The bzip2 executable.
     add_executable(bzip2)
@@ -399,7 +399,7 @@
     install(TARGETS bzip2recover DESTINATION ${CMAKE_INSTALL_BINDIR})
 
     if(ENABLE_EXAMPLES)
-        if(ENABLE_SHARED_LIB)
+        if(BUILD_SHARED_LIBS)
             # The dlltest executable.
             add_executable(dlltest)
             target_sources(dlltest
diff -Naur bzip2-1.1.0-orig/CMakeOptions.txt bzip2-1.1.0-p/CMakeOptions.txt
--- bzip2-1.1.0-orig/CMakeOptions.txt	2025-05-26 09:32:19.052137200 +0300
+++ bzip2-1.1.0-p/CMakeOptions.txt	2025-05-26 09:48:24.278860100 +0300
@@ -18,9 +18,7 @@
 
 option(ENABLE_LIB_ONLY   "Build libbz2 only.  This is a short hand for -DENABLE_APP=0 -DENABLE_EXAMPLES=0")
 
-option(ENABLE_STATIC_LIB "Build libbz2 in static mode also")
-
-option(ENABLE_SHARED_LIB "Build libbz2 as a shared library" ON)
+option(BUILD_SHARED_LIBS "Build libbz2 as a shared library" ON)
 
 option(USE_OLD_SONAME "Use libbz2.so.1.0 for compatibility with old Makefiles" OFF)
 
diff -Naur bzip2-1.1.0-orig/bzip2-config.cmake.in bzip2-1.1.0-p/bzip2-config.cmake.in
--- bzip2-1.1.0-orig/bzip2-config.cmake.in	1970-01-01 03:00:00.000000000 +0300
+++ bzip2-1.1.0-p/bzip2-config.cmake.in	2025-05-25 23:33:44.218546300 +0300
@@ -0,0 +1,78 @@
+# Copyright (c) 2018 Sergiu Deitsch
+#
+# Permission is hereby granted, free of charge, to any person obtaining a copy
+# of this software and associated documentation files (the "Software"), to deal
+# in the Software without restriction, including without limitation the rights
+# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+# copies of the Software, and to permit persons to whom the Software is
+# furnished to do so, subject to the following conditions:
+#
+# The above copyright notice and this permission notice shall be included in all
+# copies or substantial portions of the Software.
+#
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A PARTMETISLAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+# SOFTWARE.
+
+@PACKAGE_INIT@
+
+set(@PROJECT_NAME@_known_comps static shared)
+set(@PROJECT_NAME@_comp_static NO)
+set(@PROJECT_NAME@_comp_shared NO)
+foreach (@PROJECT_NAME@_comp IN LISTS ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
+    if (@PROJECT_NAME@_comp IN_LIST @PROJECT_NAME@_known_comps)
+        set(@PROJECT_NAME@_comp_${@PROJECT_NAME@_comp} YES)
+    else ()
+        set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
+            "@PROJECT_NAME@ does not recognize component `${@PROJECT_NAME@_comp}`.")
+        set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
+        return()
+    endif ()
+endforeach ()
+
+if (@PROJECT_NAME@_comp_static AND @PROJECT_NAME@_comp_shared)
+    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
+        "@PROJECT_NAME@ `static` and `shared` components are mutually exclusive.")
+    set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
+    return()
+endif ()
+
+set(@PROJECT_NAME@_static_targets "${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-static-targets.cmake")
+set(@PROJECT_NAME@_shared_targets "${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-shared-targets.cmake")
+
+macro(@PROJECT_NAME@_load_targets type)
+    if (NOT EXISTS "${@PROJECT_NAME@_${type}_targets}")
+        set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
+            "@PROJECT_NAME@ `${type}` libraries were requested but not found.")
+        set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
+        return()
+    endif ()
+    include("${@PROJECT_NAME@_${type}_targets}")
+endmacro()
+
+if (@PROJECT_NAME@_comp_static)
+    @PROJECT_NAME@_load_targets(static)
+elseif (@PROJECT_NAME@_comp_shared)
+    @PROJECT_NAME@_load_targets(shared)
+elseif (DEFINED @PROJECT_NAME@_SHARED_LIBS AND @PROJECT_NAME@_SHARED_LIBS)
+    @PROJECT_NAME@_load_targets(shared)
+elseif (DEFINED @PROJECT_NAME@_SHARED_LIBS AND NOT @PROJECT_NAME@_SHARED_LIBS)
+    @PROJECT_NAME@_load_targets(static)
+elseif (BUILD_SHARED_LIBS)
+    if (EXISTS "${@PROJECT_NAME@_shared_targets}")
+        @PROJECT_NAME@_load_targets(shared)
+    else ()
+        @PROJECT_NAME@_load_targets(static)
+    endif ()
+else ()
+    if (EXISTS "${@PROJECT_NAME@_static_targets}")
+        @PROJECT_NAME@_load_targets(static)
+    else ()
+        @PROJECT_NAME@_load_targets(shared)
+    endif ()
+endif ()
+
diff -Naur bzip2-1.1.0-orig/bzlib.h bzip2-1.1.0-p/bzlib.h
--- bzip2-1.1.0-orig/bzlib.h	2025-05-26 09:32:19.052137200 +0300
+++ bzip2-1.1.0-p/bzlib.h	2025-05-26 11:30:42.075454000 +0300
@@ -65,35 +65,25 @@
    }
    bz_stream;
 
-
-#ifndef BZ_IMPORT
-#define BZ_EXPORT
-#endif
-
 #ifndef BZ_NO_STDIO
 /* Need a definitition for FILE */
 #include <stdio.h>
 #endif
 
-#ifdef _WIN32
-#   include <windows.h>
-#   ifdef small
-      /* windows.h define small to char */
-#      undef small
-#   endif
-#   ifndef WINAPI
-#   define WINAPI
-#   endif
-#   ifdef BZ_EXPORT
-#   define BZ_API(func) WINAPI func
+#ifdef BZ2_STATICLIB
+#  define BZ_API
+#  define BZ_EXTERN
+#elif defined(_WIN32)
+#   ifdef BZip2_EXPORTS
+#   define BZ_API __declspec(dllexport)
 #   define BZ_EXTERN extern
 #   else
    /* import windows dll dynamically */
-#   define BZ_API(func) (WINAPI * func)
+#   define BZ_API __declspec(dllimport)
 #   define BZ_EXTERN
 #   endif
 #else
-#   define BZ_API(func) func
+#   define BZ_API
 #endif
 
 #ifndef BZ_EXTERN
diff -Naur bzip2-1.1.0-orig/tests/CMakeLists.txt bzip2-1.1.0-p/tests/CMakeLists.txt
--- bzip2-1.1.0-orig/tests/CMakeLists.txt	2025-05-26 09:32:19.068181300 +0300
+++ bzip2-1.1.0-p/tests/CMakeLists.txt	2025-05-26 11:47:44.829249700 +0300
@@ -7,16 +7,12 @@
     file(TO_NATIVE_PATH ${CMAKE_BINARY_DIR}         BUILD)
     file(TO_NATIVE_PATH ${CMAKE_CURRENT_BINARY_DIR} TMP)
 
-    if(ENABLE_STATIC_LIB)
-        file(TO_NATIVE_PATH $<TARGET_FILE:bz2_static> LIBBZ2)
-    else()
-        file(TO_NATIVE_PATH $<TARGET_FILE:bz2>        LIBBZ2)
-    endif()
+    file(TO_NATIVE_PATH $<TARGET_FILE:BZip2> LIBBZ2)
 
     file(TO_NATIVE_PATH $<TARGET_FILE:bzip2> BZIP2)
 
 else() # Not WIN32
-    if(ENABLE_SHARED_LIB)
+    if(BUILD_SHARED_LIBS)
         set(LD_LIBRARY_PATH $<TARGET_FILE_DIR:bz2>:$ENV{LD_LIBRARY_PATH})
     endif()
 
@@ -24,11 +20,7 @@
     set(BUILD  ${CMAKE_BINARY_DIR})
     set(TMP    ${CMAKE_CURRENT_BINARY_DIR})
 
-    if(ENABLE_STATIC_LIB)
-        set(LIBBZ2 $<TARGET_FILE:bz2_static>)
-    else()
-        set(LIBBZ2 $<TARGET_FILE:bz2>)
-    endif()
+    set(LIBBZ2 $<TARGET_FILE:BZip2>)
 
     set(BZIP2 $<TARGET_FILE:bzip2>)
 
diff -Naur bzip2-1.1.0-orig/bzip2.pc.in bzip2-1.1.0-p/bzip2.pc.in
--- bzip2-1.1.0-orig/bzip2.pc.in	2025-05-26 13:44:27.069978000 +0300
+++ bzip2-1.1.0-p/bzip2.pc.in	2025-05-26 13:45:05.861645100 +0300
@@ -9,3 +9,4 @@
 Version: @VERSION@
 Libs: -L${libdir} -lbz2
 Cflags: -I${includedir}
+Cflags.private: -DBZ2_STATICLIB
