# Maintainer: Tim Stahlhut <stahta01@gmail.com>

_realname=wxWidgets
_wx_basever=3.2
# Example _wx_buildver value is "-rc"
_wx_buildver=

pkgbase=mingw-w64-${_realname}3.2
pkgname=("${MINGW_PACKAGE_PREFIX}-libwxbase${_wx_basever}"
#         "${MINGW_PACKAGE_PREFIX}-libwxbase${_wx_basever}-wxconfig"
         "${MINGW_PACKAGE_PREFIX}-libwxmsw${_wx_basever}"
         "${MINGW_PACKAGE_PREFIX}-libwxmsw${_wx_basever}-dev"
         "${MINGW_PACKAGE_PREFIX}-libwxmsw${_wx_basever}-wxconfig"
         "${MINGW_PACKAGE_PREFIX}-libwxgtk${_wx_basever}-gtk3"
         "${MINGW_PACKAGE_PREFIX}-libwxgtk${_wx_basever}-gtk3-dev"
         "${MINGW_PACKAGE_PREFIX}-libwxgtk${_wx_basever}-gtk3-wxconfig"
         "${MINGW_PACKAGE_PREFIX}-wx${_wx_basever}-i18n"
         "${MINGW_PACKAGE_PREFIX}-wx${_wx_basever}-cb_headers"
         "${MINGW_PACKAGE_PREFIX}-wx${_wx_basever}-headers"
         "${MINGW_PACKAGE_PREFIX}-wx${_wx_basever}-common")
pkgver=${_wx_basever}.0
pkgrel=1
pkgdesc="A C++ library that lets developers create applications for Windows, Linux and UNIX (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32' 'clangarm64')
url="https://wxwidgets.org/"
license=('custom:wxWindows')
makedepends=(
  "${MINGW_PACKAGE_PREFIX}-autotools"
  "patch"
  "${MINGW_PACKAGE_PREFIX}-libpng"
  "${MINGW_PACKAGE_PREFIX}-libjpeg-turbo"
  "${MINGW_PACKAGE_PREFIX}-libtiff"
  "${MINGW_PACKAGE_PREFIX}-cc"
  "${MINGW_PACKAGE_PREFIX}-gtk3"
  "${MINGW_PACKAGE_PREFIX}-pkg-config"
  "${MINGW_PACKAGE_PREFIX}-libsecret"
  "${MINGW_PACKAGE_PREFIX}-libnotify"
  "${MINGW_PACKAGE_PREFIX}-pcre2"
)
options=('strip' 'staticlibs' 'buildflags' '!debug')
#options=('!strip' 'staticlibs' 'buildflags' 'debug') # Best options for debugging CodeLite crashes
source=(
  https://github.com/wxWidgets/wxWidgets/releases/download/v${pkgver}${_wx_buildver}/${_realname}-${pkgver}${_wx_buildver}.tar.bz2

  # https://github.com/wxWidgets/wxWidgets/pull/22633
  101-wxWidgets-3.2.0-Fix-wxGTK-win-build.patch

  # This patch is a MSys2 run-time patch
  001-wxWidgets-3.0.2-relocate-prefix-in-bin-wx-config.patch

  # the wxTeam rejected this patch
  005-wxWidgets-3.1.3-Remove-WX_LIBS_STATIC-from-m4.patch

  # This is needed to build clang samples in check step
  010-wxWidgets-3.1.6-Redo-manifest-filename-logic.patch
)
sha256sums=('356e9b55f1ae3d58ae1fed61478e9b754d46b820913e3bfbc971c50377c1903a'
            'c9cd9120948a2216e6d3f46538eeacb5235678911b30c48336ee5074e7cf9840'
            '2b3b183a6a76ad539abc49a41033aa923c13b395c0e55189ba962068781c7135'
            '4a4828f0c9cdc638cffde6a30b5dfb14283719acc9e89e19de8ec2d5a80a5aec'
            'b30100e03f350e14060923781c3c7979735cc81996a13012bef980a23eb3d20b')
prepare() {
  cd "${srcdir}"/${_realname}-${pkgver}${_wx_buildver}

  # https://github.com/wxWidgets/wxWidgets/pull/22633
  # PR waiting to be applied
  patch -p1 -i "${srcdir}"/101-wxWidgets-3.2.0-Fix-wxGTK-win-build.patch

  # Fix MSys2 Run-Time wx-config bug.
  patch -p1 -i "${srcdir}"/001-wxWidgets-3.0.2-relocate-prefix-in-bin-wx-config.patch

  # This patch is not really needed; but, WX_LIBS_STATIC does not work correctly under MSys2
  # Removed it to see if anything breaks or if anything is fixed.
  patch -p1 -i "${srcdir}"/005-wxWidgets-3.1.3-Remove-WX_LIBS_STATIC-from-m4.patch

  patch -p1 -i "${srcdir}"/010-wxWidgets-3.1.6-Redo-manifest-filename-logic.patch
}

build() {
  ####
  # Configure options added to support other software:
  #   --enable-graphics_ctx     codelite
  #   --enable-graphics-d2d     codeblocks
  #
  # Configure options added to check for build issues
  #   --disable-precomp-headers
  #
  # Configure options added to avoid possible future issues
  #   --with-cxx=17
  #   --enable-std_string
  #   --enable-std_iostreams
  #   --enable-std_containers_compat
  #
  # Configure options added to avoid warnings:
  #   --with-regex=builtin
  #
  # Configure options known to cause build errors:
  #   --disable-regkey                                compile error
  #
  # Configure options known to cause build errors under wxGTK/Win:
  #   --with-opengl                                   configure error
  #   --enable-accessibility                          compile error
  #     "wxUSE_ACCESSIBILITY is currently only supported under wxMSW"
  #
  # Configure options added to avoid wxGTK/Win build errors:
  #   --without-opengl
  #
  ####

  if check_option "buildflags" "y"; then
  # Remove the -O and -ggdb options to avoid configuration warnings
  # from the normal settings found in /etc/makepkg_mingw??.conf

    CXXFLAGS=${CXXFLAGS/-Og }
    CXXFLAGS=${CXXFLAGS/-O2 }
    CXXFLAGS=${CXXFLAGS/-ggdb }

    CFLAGS=${CFLAGS/-Og }
    CFLAGS=${CFLAGS/-O2 }
    CFLAGS=${CFLAGS/-ggdb }
  fi

  local -a _debug_options=()

  if check_option "debug" "y"; then
    _debug_options+=("--enable-debug=yes")
    _debug_options+=("--enable-debug_gdb")
  else
    _debug_options+=("--enable-optimise")
  fi

  #echo "_debug_options := ${_debug_options[@]}"

  [[ -d "${srcdir}"/build-gtk3-${MSYSTEM}-shared ]] && rm -rf "${srcdir}"/build-gtk3-${MSYSTEM}-shared
  mkdir -p "${srcdir}"/build-gtk3-${MSYSTEM}-shared && cd "${srcdir}"/build-gtk3-${MSYSTEM}-shared

  ../${_realname}-${pkgver}${_wx_buildver}/configure \
    --prefix=${MINGW_PREFIX} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --build=${MINGW_CHOST} \
    "${_debug_options[@]}" \
    --without-xtest \
    --enable-shared \
    --enable-std_string \
    --enable-std_iostreams \
    --enable-std_containers_compat \
    --enable-iff \
    --disable-permissive \
    --enable-unicode \
    --enable-graphics_ctx \
    --enable-graphics-d2d \
    --disable-monolithic \
    --disable-precomp-headers \
    --with-gtk=3 \
    --with-cxx=17 \
    --with-libpng=sys \
    --with-libjpeg=sys \
    --with-libtiff=sys \
    --with-zlib=sys \
    --with-expat=sys \
    --with-regex=builtin \
    --with-liblzma \
    --without-opengl

  make #VERBOSE=1

  [[ -d "${srcdir}"/build-gtk3-${MSYSTEM}-static ]] && rm -rf "${srcdir}"/build-gtk3-${MSYSTEM}-static
  mkdir -p "${srcdir}"/build-gtk3-${MSYSTEM}-static && cd "${srcdir}"/build-gtk3-${MSYSTEM}-static

  ../${_realname}-${pkgver}${_wx_buildver}/configure \
    --prefix=${MINGW_PREFIX} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --build=${MINGW_CHOST} \
    "${_debug_options[@]}" \
    --without-xtest \
    --disable-shared \
    --enable-std_string \
    --enable-std_iostreams \
    --enable-std_containers_compat \
    --enable-iff \
    --disable-permissive \
    --enable-unicode \
    --enable-graphics_ctx \
    --enable-graphics-d2d \
    --disable-monolithic \
    --disable-precomp-headers \
    --with-gtk=3 \
    --with-cxx=17 \
    --with-libpng=builtin \
    --with-libjpeg=builtin \
    --with-libtiff=builtin \
    --with-zlib=builtin \
    --with-expat=builtin \
    --with-regex=builtin \
    --with-liblzma \
    --without-opengl

  make #VERBOSE=1 -j1

  [[ -d "${srcdir}"/build-msw-${MSYSTEM}-shared ]] && rm -rf "${srcdir}"/build-msw-${MSYSTEM}-shared
  mkdir -p "${srcdir}"/build-msw-${MSYSTEM}-shared && cd "${srcdir}"/build-msw-${MSYSTEM}-shared

  ../${_realname}-${pkgver}${_wx_buildver}/configure \
    --prefix=${MINGW_PREFIX} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --build=${MINGW_CHOST} \
    "${_debug_options[@]}" \
    --enable-shared \
    --enable-std_string \
    --enable-std_iostreams \
    --enable-std_containers_compat \
    --enable-iff \
    --disable-permissive \
    --enable-unicode \
    --enable-graphics_ctx \
    --enable-graphics-d2d \
    --enable-accessibility \
    --disable-monolithic \
    --disable-precomp-headers \
    --with-msw \
    --with-cxx=17 \
    --with-opengl \
    --with-libpng=sys \
    --with-libjpeg=sys \
    --with-libtiff=sys \
    --with-zlib=sys \
    --with-expat=sys \
    --with-regex=builtin \
    --with-liblzma

  make #VERBOSE=1


  [[ -d "${srcdir}"/build-msw-${MSYSTEM}-static ]] && rm -rf "${srcdir}"/build-msw-${MSYSTEM}-static
  mkdir -p "${srcdir}"/build-msw-${MSYSTEM}-static && cd "${srcdir}"/build-msw-${MSYSTEM}-static

  ../${_realname}-${pkgver}${_wx_buildver}/configure \
    --prefix=${MINGW_PREFIX} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --build=${MINGW_CHOST} \
    "${_debug_options[@]}" \
    --disable-shared \
    --enable-std_string \
    --enable-std_iostreams \
    --enable-std_containers_compat \
    --enable-iff \
    --disable-permissive \
    --enable-unicode \
    --enable-graphics_ctx \
    --enable-graphics-d2d \
    --enable-accessibility \
    --disable-monolithic \
    --disable-precomp-headers \
    --with-msw \
    --with-cxx=17 \
    --with-opengl \
    --with-libpng=builtin \
    --with-libjpeg=builtin \
    --with-libtiff=builtin \
    --with-zlib=builtin \
    --with-expat=builtin \
    --with-regex=builtin \
    --with-liblzma

  make #VERBOSE=1 -j1
}

check() {
  cd "${srcdir}/build-msw-${MSYSTEM}-shared/samples"    && make -k --jobs=1 || true
#  cd "${srcdir}/build-msw-${MSYSTEM}-shared/tests"      && make -k --jobs=1 || true

#  cd "${srcdir}"/build-gtk3-${MSYSTEM}-shared/samples   && make -k --jobs=1 # || true
#  cd "${srcdir}"/build-gtk3-${MSYSTEM}-shared/tests     && make -k --jobs=1 # || true
}

package_libwxbase3.2() {
  pkgdesc="wxBase shared libraries for wxwidgets ${_wx_basever} (mingw-w64)"
  depends=("${MINGW_PACKAGE_PREFIX}-expat"
           "${MINGW_PACKAGE_PREFIX}-pcre2"
           "${MINGW_PACKAGE_PREFIX}-libsecret")

  cd "${srcdir}"/build-msw-${MSYSTEM}-shared
  make DESTDIR="${pkgdir}" install

  rm    "$pkgdir"${MINGW_PREFIX}/bin/wx-config
  rm    "$pkgdir"${MINGW_PREFIX}/bin/*.exe
  rm    "$pkgdir"${MINGW_PREFIX}/bin/wxmsw*.dll
  rm -r "$pkgdir"${MINGW_PREFIX}/share
  rm -r "$pkgdir"${MINGW_PREFIX}/include
  rm -r "$pkgdir"${MINGW_PREFIX}/lib
}

package_libwxmsw3.2-dev() {
  pkgdesc="A C++ library that lets developers create applications for Windows, Linux and UNIX (mingw-w64)"
  depends=("${MINGW_PACKAGE_PREFIX}-libwxmsw${_wx_basever}"
           "${MINGW_PACKAGE_PREFIX}-libwxbase${_wx_basever}"
           "${MINGW_PACKAGE_PREFIX}-wx${_wx_basever}-i18n"
           "${MINGW_PACKAGE_PREFIX}-wx${_wx_basever}-headers")
  optdepends=("${MINGW_PACKAGE_PREFIX}-libwxmsw${_wx_basever}-wxconfig"
              "${MINGW_PACKAGE_PREFIX}-wx${_wx_basever}-common")
  provides=("${MINGW_PACKAGE_PREFIX}-wxWidgets${_wx_basever}"
            "${MINGW_PACKAGE_PREFIX}-wxmsw${_wx_basever}")
  conflicts=("${MINGW_PACKAGE_PREFIX}-wxWidgets${_wx_basever}")

  #cd "${srcdir}"/build-base-${MSYSTEM}-static
  #make DESTDIR="${pkgdir}" install-wxconfig

  #cd "${srcdir}"/build-base-${MSYSTEM}-shared
  #make DESTDIR="${pkgdir}" install-wxconfig

  cd "${srcdir}"/build-msw-${MSYSTEM}-static
  make DESTDIR="${pkgdir}" install

  cd "${srcdir}"/build-msw-${MSYSTEM}-shared
  make DESTDIR="${pkgdir}" install

  # Replace real full path with psuedo full path;
  # this seems to be needed sometime, but not always.
  # It is likely related to the MSys2 installation path
  local MINGW_PREFIX_WIN=$(cygpath -am ${MINGW_PREFIX})
  sed -s "s|-L${MINGW_PREFIX_WIN}/lib|-L${MINGW_PREFIX}/lib|g" -i "${pkgdir}${MINGW_PREFIX}/bin/wx-config"
  sed -s "s|-L${MINGW_PREFIX_WIN}/lib|-L${MINGW_PREFIX}/lib|g" -i "${pkgdir}${MINGW_PREFIX}/lib/wx/config/msw-unicode-${_wx_basever}"
  sed -s "s|-L${MINGW_PREFIX_WIN}/lib|-L${MINGW_PREFIX}/lib|g" -i "${pkgdir}${MINGW_PREFIX}/lib/wx/config/msw-unicode-static-${_wx_basever}"

  # create wx-config copy with version file suffix
  cp ${pkgdir}${MINGW_PREFIX}/bin/wx-config{,-${_wx_basever}}

  rm    "$pkgdir"${MINGW_PREFIX}/bin/wxrc.exe
  rm    "$pkgdir"${MINGW_PREFIX}/bin/*.dll
  rm    "$pkgdir"${MINGW_PREFIX}/bin/wx-config
  rm -r "$pkgdir"${MINGW_PREFIX}/share
  rm -r "$pkgdir"${MINGW_PREFIX}/include
}

package_libwxmsw3.2() {
  pkgdesc="wxMSW shared libraries for wxwidgets ${_wx_basever} (mingw-w64)"
  depends=("${MINGW_PACKAGE_PREFIX}-libwxbase${_wx_basever}")

  cd "${srcdir}"/build-msw-${MSYSTEM}-shared
  make DESTDIR="${pkgdir}" install

  rm    "$pkgdir"${MINGW_PREFIX}/bin/wx-config
  rm    "$pkgdir"${MINGW_PREFIX}/bin/*.exe
  rm    "$pkgdir"${MINGW_PREFIX}/bin/wxbase*.dll
  rm -r "$pkgdir"${MINGW_PREFIX}/share
  rm -r "$pkgdir"${MINGW_PREFIX}/include
  rm -r "$pkgdir"${MINGW_PREFIX}/lib
}

package_libwxgtk3.2-gtk3-dev() {
  pkgdesc="A C++ library that lets developers create applications for Windows, Linux and UNIX using GTK3 (mingw-w64)"
  depends=("${MINGW_PACKAGE_PREFIX}-libwxgtk${_wx_basever}-gtk3"
           "${MINGW_PACKAGE_PREFIX}-libwxbase${_wx_basever}"
           "${MINGW_PACKAGE_PREFIX}-wx${_wx_basever}-i18n"
           "${MINGW_PACKAGE_PREFIX}-wx${_wx_basever}-headers")
  optdepends=("${MINGW_PACKAGE_PREFIX}-libwxgtk${_wx_basever}-gtk3-wxconfig"
              "${MINGW_PACKAGE_PREFIX}-wx${_wx_basever}-common")
  provides=("${MINGW_PACKAGE_PREFIX}-wxWidgets${_wx_basever}")
  conflicts=("${MINGW_PACKAGE_PREFIX}-wxWidgets${_wx_basever}")

  cd "${srcdir}"/build-gtk3-${MSYSTEM}-static
  make DESTDIR="${pkgdir}" install

  cd "${srcdir}"/build-gtk3-${MSYSTEM}-shared
  make DESTDIR="${pkgdir}" install

  # Replace real full path with psuedo full path;
  # this seems to be needed sometime, but not always.
  # It is likely related to the MSys2 installation path
  local MINGW_PREFIX_WIN=$(cygpath -am ${MINGW_PREFIX})
  sed -s "s|-L${MINGW_PREFIX_WIN}/lib|-L${MINGW_PREFIX}/lib|g" -i "${pkgdir}${MINGW_PREFIX}/bin/wx-config"
  sed -s "s|-L${MINGW_PREFIX_WIN}/lib|-L${MINGW_PREFIX}/lib|g" -i "${pkgdir}${MINGW_PREFIX}/lib/wx/config/gtk3-unicode-${_wx_basever}"
  sed -s "s|-L${MINGW_PREFIX_WIN}/lib|-L${MINGW_PREFIX}/lib|g" -i "${pkgdir}${MINGW_PREFIX}/lib/wx/config/gtk3-unicode-static-${_wx_basever}"

  # create wx-config copy with version file suffix
  cp ${pkgdir}${MINGW_PREFIX}/bin/wx-config{,-${_wx_basever}}

  rm    "$pkgdir"${MINGW_PREFIX}/bin/wxrc.exe
  rm    "$pkgdir"${MINGW_PREFIX}/bin/*.dll
  rm    "$pkgdir"${MINGW_PREFIX}/bin/wx-config
  rm -r "$pkgdir"${MINGW_PREFIX}/share
  rm -r "$pkgdir"${MINGW_PREFIX}/include
}

package_libwxgtk3.2-gtk3() {
  pkgdesc="wxGTK/GTK3 shared libraries for wxwidgets ${_wx_basever} (mingw-w64)"
  depends=("${MINGW_PACKAGE_PREFIX}-libwxbase${_wx_basever}")

  cd "${srcdir}"/build-gtk3-${MSYSTEM}-shared
  make DESTDIR="${pkgdir}" install

  rm    "$pkgdir"${MINGW_PREFIX}/bin/wx-config
  rm    "$pkgdir"${MINGW_PREFIX}/bin/*.exe
  rm    "$pkgdir"${MINGW_PREFIX}/bin/wxbase*.dll
  rm -r "$pkgdir"${MINGW_PREFIX}/share
  rm -r "$pkgdir"${MINGW_PREFIX}/include
  rm -r "$pkgdir"${MINGW_PREFIX}/lib
}

package_wx3.2-headers() {
  pkgdesc="Common headers for wxwidgets ${_wx_basever} (mingw-w64)"
  depends=("${MINGW_PACKAGE_PREFIX}-expat"
           "${MINGW_PACKAGE_PREFIX}-pcre2"
           "${MINGW_PACKAGE_PREFIX}-libsecret")

  # Not sure if the static needs to be installed
  cd "${srcdir}"/build-msw-${MSYSTEM}-static
  make DESTDIR="${pkgdir}" install

  cd "${srcdir}"/build-msw-${MSYSTEM}-shared
  make DESTDIR="${pkgdir}" install

  rm -r "$pkgdir"${MINGW_PREFIX}/bin
  rm -r "$pkgdir"${MINGW_PREFIX}/share
  rm -r "$pkgdir"${MINGW_PREFIX}/lib

  # License files
  cd "${srcdir}"/${_realname}-${pkgver}${_wx_buildver}/docs
  install -Dm644 preamble.txt "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}${_wx_basever}/preamble.txt"
  install -Dm644 licence.txt  "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}${_wx_basever}/licence.txt"
  install -Dm644 licendoc.txt "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}${_wx_basever}/licendoc.txt"
  install -Dm644 lgpl.txt     "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}${_wx_basever}/lgpl.txt"
  install -Dm644 gpl.txt      "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}${_wx_basever}/gpl.txt"
  install -Dm644 xserver.txt  "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}${_wx_basever}/xserver.txt"
}

package_libwxmsw3.2-wxconfig() {
  pkgdesc="wx-config scripts for wxMSW/wxWidgets ${_wx_basever} (mingw-w64)"
  depends=("${MINGW_PACKAGE_PREFIX}-libwxmsw${_wx_basever}-dev")
  provides=("${MINGW_PACKAGE_PREFIX}-wxconfig")
  conflicts=("${MINGW_PACKAGE_PREFIX}-wxconfig")

  cd "${srcdir}"/build-msw-${MSYSTEM}-static
  make DESTDIR="${pkgdir}" install-wxconfig
  mv ${pkgdir}${MINGW_PREFIX}/bin/wx-config{,-static}

  cd "${srcdir}"/build-msw-${MSYSTEM}-shared
  make DESTDIR="${pkgdir}" install-wxconfig

  # Replace real full path with psuedo full path;
  # this seems to be needed sometime, but not always.
  # It is likely related to the MSys2 installation path
  local MINGW_PREFIX_WIN=$(cygpath -am ${MINGW_PREFIX})
  sed -s "s|-L${MINGW_PREFIX_WIN}/lib|-L${MINGW_PREFIX}/lib|g" -i "${pkgdir}${MINGW_PREFIX}/bin/wx-config"
  sed -s "s|-L${MINGW_PREFIX_WIN}/lib|-L${MINGW_PREFIX}/lib|g" -i "${pkgdir}${MINGW_PREFIX}/bin/wx-config-static"

  # Remove secondary wx-config files
  rm -f ${pkgdir}${MINGW_PREFIX}/lib/wx/config/msw-unicode-${_wx_basever}
  rm -f ${pkgdir}${MINGW_PREFIX}/lib/wx/config/msw-unicode-static-${_wx_basever}
}

package_libwxgtk3.2-gtk3-wxconfig() {
  pkgdesc="wx-config scripts for wxGTK/wxWidgets ${_wx_basever} (mingw-w64)"
  depends=("${MINGW_PACKAGE_PREFIX}-libwxgtk${_wx_basever}-gtk3-dev")
  provides=("${MINGW_PACKAGE_PREFIX}-wxconfig")
  conflicts=("${MINGW_PACKAGE_PREFIX}-wxconfig")

  cd "${srcdir}"/build-gtk3-${MSYSTEM}-static
  make DESTDIR="${pkgdir}" install-wxconfig
  mv ${pkgdir}${MINGW_PREFIX}/bin/wx-config{,-static}

  cd "${srcdir}"/build-gtk3-${MSYSTEM}-shared
  make DESTDIR="${pkgdir}" install-wxconfig

  # Replace real full path with psuedo full path;
  # this seems to be needed sometime, but not always.
  # It is likely related to the MSys2 installation path
  local MINGW_PREFIX_WIN=$(cygpath -am ${MINGW_PREFIX})
  sed -s "s|-L${MINGW_PREFIX_WIN}/lib|-L${MINGW_PREFIX}/lib|g" -i "${pkgdir}${MINGW_PREFIX}/bin/wx-config"
  sed -s "s|-L${MINGW_PREFIX_WIN}/lib|-L${MINGW_PREFIX}/lib|g" -i "${pkgdir}${MINGW_PREFIX}/bin/wx-config-static"

  # Remove secondary wx-config files
  rm -f ${pkgdir}${MINGW_PREFIX}/lib/wx/config/gtk3-unicode-${_wx_basever}
  rm -f ${pkgdir}${MINGW_PREFIX}/lib/wx/config/gtk3-unicode-static-${_wx_basever}
}

package_wx3.2-i18n() {
  pkgdesc="internationalization for wxWidgets ${_wx_basever} (mingw-w64)"
  depends=()

  cd "${srcdir}"/build-msw-${MSYSTEM}-shared
  make DESTDIR="${pkgdir}" install
  rm -fr ${pkgdir}${MINGW_PREFIX}/{bin,include,lib}
  rm -fr ${pkgdir}${MINGW_PREFIX}/share/{aclocal,bakefile,licenses}
}

package_wx3.2-common() {
  pkgdesc="Bakefiles presets, wxwin.m4, and wxrc for wxWidgets ${_wx_basever} (mingw-w64)"
  depends=()
  provides=("${MINGW_PACKAGE_PREFIX}-wx-common")
  conflicts=("${MINGW_PACKAGE_PREFIX}-wx-common")

  cd "${srcdir}"/build-msw-${MSYSTEM}-shared
  make DESTDIR="${pkgdir}" install-wxrc

  rm    "$pkgdir"${MINGW_PREFIX}/bin/wxrc-${_wx_basever}.exe

  mkdir -p ${pkgdir}${MINGW_PREFIX}/share/bakefile/presets
  cd ${pkgdir}${MINGW_PREFIX}/share/bakefile/presets
  cp ${srcdir}/${_realname}-${pkgver}${_wx_buildver}/build/bakefiles/wxpresets/presets/*.* ./

  install -Dm644 "${srcdir}/${_realname}-${pkgver}${_wx_buildver}/wxwin.m4" -t ${pkgdir}${MINGW_PREFIX}/share/aclocal
}

package_wx3.2-cb_headers() {
  pkgdesc="private wxWidgets MSW headers needed by Code::Blocks (mingw-w64)"
  depends=("${MINGW_PACKAGE_PREFIX}-wx${_wx_basever}-headers")

  mkdir -p ${pkgdir}${MINGW_PREFIX}/include/wx-${_wx_basever}/wx/msw/private
  cd ${pkgdir}${MINGW_PREFIX}/include/wx-${_wx_basever}/wx/msw/private
  cp ${srcdir}/${_realname}-${pkgver}${_wx_buildver}/include/wx/msw/private/comptr.h ./
  cp ${srcdir}/${_realname}-${pkgver}${_wx_buildver}/include/wx/msw/private/graphicsd2d.h ./
  cp ${srcdir}/${_realname}-${pkgver}${_wx_buildver}/include/wx/msw/private/keyboard.h ./
}

# template start; name=mingw-w64-splitpkg-wrappers; version=1.0;
# vim: set ft=bash :

# generate wrappers
for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
# template end;
