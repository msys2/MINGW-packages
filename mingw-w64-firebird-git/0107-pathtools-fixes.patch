diff --git a/src/common/utils.cpp b/src/common/utils.cpp
index 0480f3df1d..f684f7f8a4 100644
--- a/src/common/utils.cpp
+++ b/src/common/utils.cpp
@@ -47,6 +47,7 @@
 #include "../common/classes/locks.h"
 #include "../common/classes/init.h"
 #include "../common/isc_proto.h"
+#include "../common/pathtools.h"
 #include "../jrd/constants.h"
 #include "firebird/impl/inf_pub.h"
 #include "../jrd/align.h"
@@ -1203,9 +1204,30 @@ Firebird::PathName getPrefix(unsigned int prefType, const char* name)
 	char tmp[MAXPATHLEN];
 
 	const char* configDir[] = {
+#ifdef MINGW
+		single_path_relocation(FB_BINDIR,FB_BINDIR),
+		single_path_relocation(FB_BINDIR,FB_SBINDIR),
+		single_path_relocation(FB_BINDIR,FB_CONFDIR),
+		single_path_relocation(FB_BINDIR,FB_LIBDIR),
+		single_path_relocation(FB_BINDIR,FB_INCDIR),
+		single_path_relocation(FB_BINDIR,FB_DOCDIR),
+		single_path_relocation(FB_BINDIR,""),
+		single_path_relocation(FB_BINDIR,FB_SAMPLEDIR),
+		single_path_relocation(FB_BINDIR,FB_SAMPLEDBDIR),
+		single_path_relocation(FB_BINDIR,""),
+		single_path_relocation(FB_BINDIR,FB_INTLDIR),
+		single_path_relocation(FB_BINDIR,FB_MISCDIR),
+		single_path_relocation(FB_BINDIR,FB_SECDBDIR),
+		single_path_relocation(FB_BINDIR,FB_MSGDIR),
+		single_path_relocation(FB_BINDIR,FB_LOGDIR),
+		single_path_relocation(FB_BINDIR,FB_GUARDDIR),
+		single_path_relocation(FB_BINDIR,FB_PLUGDIR),
+		single_path_relocation(FB_BINDIR,FB_TZDATADIR)
+#else
 		FB_BINDIR, FB_SBINDIR, FB_CONFDIR, FB_LIBDIR, FB_INCDIR, FB_DOCDIR, "", FB_SAMPLEDIR,
 		FB_SAMPLEDBDIR, "", FB_INTLDIR, FB_MISCDIR, FB_SECDBDIR, FB_MSGDIR, FB_LOGDIR,
 		FB_GUARDDIR, FB_PLUGDIR, FB_TZDATADIR
+#endif
 	};
 
 	fb_assert(FB_NELEM(configDir) == Firebird::IConfigManager::DIR_COUNT);
diff --git a/src/yvalve/config/os/win32/config_root.cpp b/src/yvalve/config/os/win32/config_root.cpp
index 3658ee3d89..c3d9fdea2b 100644
--- a/src/yvalve/config/os/win32/config_root.cpp
+++ b/src/yvalve/config/os/win32/config_root.cpp
@@ -28,6 +28,7 @@
 #include "fb_types.h"
 #include "../../../../common/classes/fb_string.h"
 #include "../../../../common/dllinst.h"
+#include "../../../../common/pathtools.h"
 #include "../../../../yvalve/config/os/config_root.h"
 
 using Firebird::PathName;
@@ -60,7 +61,11 @@ bool getPathFromHInstance(PathName& root)
 
 void ConfigRoot::osConfigRoot()
 {
+#ifdef MINGW
+	root_dir = single_path_relocation(FB_BINDIR,FB_PREFIX);
+#else
 	root_dir = install_dir;
+#endif
 }
 
 void ConfigRoot::osConfigInstallDir()
@@ -107,7 +112,11 @@ void ConfigRoot::osConfigInstallDir()
 	if (install_dir.isEmpty())
 	{
 		// As a last resort get it from the default install directory
+#ifdef MINGW
+		install_dir = single_path_relocation(FB_BINDIR,FB_PREFIX);
+#else
 		install_dir = FB_PREFIX;
+#endif
 	}
 
 	PathUtils::ensureSeparator(install_dir);
diff --git a/src/yvalve/gds.cpp b/src/yvalve/gds.cpp
index c0b4f3143d..7b31261c7d 100644
--- a/src/yvalve/gds.cpp
+++ b/src/yvalve/gds.cpp
@@ -60,6 +60,7 @@
 #include "../common/classes/timestamp.h"
 #include "../common/classes/init.h"
 #include "../common/classes/TempFile.h"
+#include "../common/pathtools.h"
 #include "../common/utils_proto.h"
 #include "../common/ThreadStart.h"
 #include "../common/Int128.h"
@@ -4068,13 +4069,21 @@ public:
 		{
 			prefix = Firebird::Config::getRootDirectory();
 			if (prefix.isEmpty() && !GetProgramFilesDir(prefix))
+#ifdef MINGW
+				prefix = FB_CONFDIR[0] ? single_path_relocation(FB_BINDIR,FB_CONFDIR) : single_path_relocation(FB_BINDIR,FB_PREFIX);
+#else
 				prefix = FB_CONFDIR[0] ? FB_CONFDIR : FB_PREFIX;
+#endif
 		}
 		catch (const Firebird::Exception&)
 		{
 			// CVC: Presumably here we failed because the config file can't be located.
 			if (!GetProgramFilesDir(prefix))
+#ifdef MINGW
+				prefix = FB_CONFDIR[0] ? single_path_relocation(FB_BINDIR,FB_CONFDIR) : single_path_relocation(FB_BINDIR,FB_PREFIX);
+#else
 				prefix = FB_CONFDIR[0] ? FB_CONFDIR : FB_PREFIX;
+#endif
 		}
 		prefix.copyTo(fb_prefix_val, sizeof(fb_prefix_val));
 		fb_prefix = fb_prefix_val;
@@ -4134,7 +4143,11 @@ public:
 		Firebird::PathName msgPrefix;
 		if (!fb_utils::readenv(FB_MSG_ENV, msgPrefix))
 		{
+#ifdef MINGW
+			msgPrefix = FB_MSGDIR[0] ? single_path_relocation(FB_BINDIR,FB_MSGDIR) : prefix;
+#else
 			msgPrefix = FB_MSGDIR[0] ? FB_MSGDIR : prefix;
+#endif
 		}
 		msgPrefix.copyTo(fb_prefix_msg_val, sizeof(fb_prefix_msg_val));
 		fb_prefix_msg = fb_prefix_msg_val;
