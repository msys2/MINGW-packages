diff --git a/CMakeLists.txt b/CMakeLists.txt
index 15da246..dced712 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -119,7 +119,8 @@ if (ENABLE_NLS)
   install(DIRECTORY "${gettext_outDir}" DESTINATION "share")
 endif ()
 
-option(BUILD_TESTS "Enable automatic testing" False)
+#option(BUILD_TESTS "Enable automatic testing" False)
+option(BUILD_TESTS "Enable automatic testing" True)
 
 if (BUILD_TESTS)
   find_program(SHELL_CMD NAMES sh bash
diff --git a/cmake/compiler.cmake b/cmake/compiler.cmake
index cf94ed3..02f0517 100644
--- a/cmake/compiler.cmake
+++ b/cmake/compiler.cmake
@@ -23,7 +23,7 @@ elseif (MSVC)
 elseif (NOT MSVC)
   check_cxx_compiler_flag("-std=c++11" CXX_SUPPORTS_CXX11)
   if (CXX_SUPPORTS_CXX11)
-    append("-std=c++11" CMAKE_CXX_FLAGS)
+    append("-std=gnu++20" CMAKE_CXX_FLAGS)
   else ()
     message(FATAL_ERROR "sdcv requires C++11 support but the '-std=c++11' flag isn't supported.")
   endif()
diff --git a/src/sdcv.cpp b/src/sdcv.cpp
index 170ac2f..4d7f3f6 100644
--- a/src/sdcv.cpp
+++ b/src/sdcv.cpp
@@ -147,9 +147,20 @@ try {
         data_dir = get_impl(opt_data_dir);
     }
 
+    /* fprintf(stdout, "UserHomeDir: %s\n", std::string(g_get_home_dir()).c_str()); */
+    /* fprintf(stdout, "UserDataDir: %s\n", std::string(g_get_user_data_dir()).c_str()); */
+
     std::string conf_dir = std::string(g_get_home_dir()) + G_DIR_SEPARATOR + ".stardict";
-    if (!g_file_test(conf_dir.c_str(), G_FILE_TEST_IS_DIR))
-        conf_dir = std::string(g_get_user_data_dir()) + G_DIR_SEPARATOR + "stardict";
+    if (!g_file_test(conf_dir.c_str(), G_FILE_TEST_IS_DIR)) {
+
+#ifdef __MSYS2__
+    conf_dir = std::string(g_get_user_data_dir()) + G_DIR_SEPARATOR + "stardict";
+#else
+    conf_dir = std::string(std::string(g_get_home_dir())) + G_DIR_SEPARATOR + ".local/share/stardict";
+#endif
+
+    }
+
 
     std::list<std::string> dicts_dir_list;
     if (!only_data_dir)
diff --git a/src/stardict_lib.cpp b/src/stardict_lib.cpp
index 4202538..c27369f 100644
--- a/src/stardict_lib.cpp
+++ b/src/stardict_lib.cpp
@@ -48,9 +48,9 @@ static bool bIsPureEnglish(const gchar *str)
     // i think this should work even when it is UTF8 string :).
     for (int i = 0; str[i] != 0; i++)
         //if(str[i]<0)
-        //if(str[i]<32 || str[i]>126) // tab equal 9,so this is not OK.
+        if((str[i]<32 || str[i]>126) && str[i] == 9 ) // tab equal 9,so this is not OK.
         // Better use isascii() but not str[i]<0 while char is default unsigned in arm
-        if (!isascii(str[i]))
+        /* if (!isascii(str[i])) */
             return false;
     return true;
 }
@@ -565,7 +565,15 @@ bool OffsetIndex::load_cache(const std::string &url)
     const std::list<std::string> vars = get_cache_variant(url);
 
     for (const std::string &item : vars) {
+
+#ifdef __MINGW64__
+        struct ::_stat64 idxstat, cachestat;
+#elif __MINGW32__
+        struct ::_stat32 idxstat, cachestat;
+#elif __MSYS__
         struct ::stat idxstat, cachestat;
+#endif 
+
         if (g_stat(url.c_str(), &idxstat) != 0 || g_stat(item.c_str(), &cachestat) != 0)
             continue;
         if (cachestat.st_mtime < idxstat.st_mtime)
diff --git a/tests/t_list b/tests/t_list
index a8c92c4..a6d5b4a 100755
--- a/tests/t_list
+++ b/tests/t_list
@@ -9,6 +9,7 @@ nmy=$(($ncom+$nspe))
 
 if [ $nmy -ne $ndicts ]; then
 	echo "should be: $nmy, we have: $ndicts" >&2
+    echo "XDG: ${XDG_DATA_HOME:-$HOME/.local/share}"
 	exit 1
 fi
 
diff --git a/tests/t_use b/tests/t_use
index ad6f39b..f6b0224 100755
--- a/tests/t_use
+++ b/tests/t_use
@@ -15,6 +15,6 @@ if [ -z "$RES" ]; then
 	exit 1
 fi
 
-rm -fr "${XDG_DATA_HOME:-$HOME/.local/share}"/stardict/dic/stardict-test_dict-2.4.2
+rm -fr "${XDG_DATA_HOME:-$HOME/.local/share}"/stardict/
 
 exit 0
diff --git a/tests/t_utf8input b/tests/t_utf8input
index 6111ac0..a836d8c 100755
--- a/tests/t_utf8input
+++ b/tests/t_utf8input
@@ -19,6 +19,8 @@ for i in `"$PATH_TO_SDCV" --utf8-input -n человек 2>&1`; do
 	fi
 done
 
+rm -fr "${XDG_DATA_HOME:-$HOME/.local/share}"/stardict
+
 if [ $j -eq 1 ]; then
 	echo "$0: empty results of search: test failed" >&2
 	exit 1
