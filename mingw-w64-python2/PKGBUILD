# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>
# Contributor: Saul Ibarra Corretge <saghul@gmail.com>

_realname=python2
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=2.7.8
pkgrel=8
_pybasever=2.7
pkgdesc="A high-level scripting language (mingw-w64)"
arch=('any')
license=('PSF')
url="http://www.python.org/"
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs" 
         "${MINGW_PACKAGE_PREFIX}-expat"
         "${MINGW_PACKAGE_PREFIX}-bzip2"
         "${MINGW_PACKAGE_PREFIX}-gdbm"
         "${MINGW_PACKAGE_PREFIX}-libffi"
         "${MINGW_PACKAGE_PREFIX}-ncurses"
         "${MINGW_PACKAGE_PREFIX}-openssl"
         "${MINGW_PACKAGE_PREFIX}-readline"
         "${MINGW_PACKAGE_PREFIX}-tcl"
         "${MINGW_PACKAGE_PREFIX}-tk"
         "${MINGW_PACKAGE_PREFIX}-zlib"
        )
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc" "${MINGW_PACKAGE_PREFIX}-pkg-config")
options=('!makeflags' 'staticlibs' 'strip' '!debug')
source=("http://www.python.org/ftp/python/${pkgver%rc?}/Python-${pkgver}.tar.xz"
        0000-make-_sysconfigdata.py-relocatable.patch
        0100-MINGW-BASE-use-NT-thread-model.patch
        0110-MINGW-translate-gcc-internal-defines-to-python-platf.patch
        0120-MINGW-use-header-in-lowercase.patch
        0130-MINGW-configure-MACHDEP-and-platform-for-build.patch
        0140-MINGW-preset-configure-defaults.patch
        0150-MINGW-configure-largefile-support-for-windows-builds.patch
        0160-MINGW-add-wincrypt.h-in-Python-random.c.patch
        0180-MINGW-init-system-calls.patch
        0190-MINGW-detect-REPARSE_DATA_BUFFER.patch
        0200-MINGW-build-in-windows-modules-winreg.patch
        0210-MINGW-determine-if-pwdmodule-should-be-used.patch
        0220-MINGW-default-sys.path-calculations-for-windows-plat.patch
        0230-MINGW-AC_LIBOBJ-replacement-of-fileblocks.patch
        0250-MINGW-compiler-customize-mingw-cygwin-compilers.patch
        0270-CYGWIN-issue13756-Python-make-fail-on-cygwin.patch
        0280-issue17219-add-current-dir-in-library-path-if-buildi.patch
        0290-issue6672-v2-Add-Mingw-recognition-to-pyport.h-to-al.patch
        0300-MINGW-configure-for-shared-build.patch
        0310-MINGW-dynamic-loading-support.patch
        0320-MINGW-implement-exec-prefix.patch
        0330-MINGW-ignore-main-program-for-frozen-scripts.patch
        0340-MINGW-setup-exclude-termios-module.patch
        0350-MINGW-setup-_multiprocessing-module.patch
        0360-MINGW-setup-select-module.patch
        0370-MINGW-setup-_ctypes-module-with-system-libffi.patch
        0380-MINGW-defect-winsock2-and-setup-_socket-module.patch
        0390-MINGW-exclude-unix-only-modules.patch
        0400-MINGW-setup-msvcrt-module.patch
        0410-MINGW-build-extensions-with-GCC.patch
        0420-MINGW-use-Mingw32CCompiler-as-default-compiler-for-m.patch
        0430-MINGW-find-import-library.patch
        0440-MINGW-setup-_ssl-module.patch
        0450-MINGW-export-_PyNode_SizeOf-as-PyAPI-for-parser-modu.patch
        0460-MINGW-generalization-of-posix-build-in-sysconfig.py.patch
        0462-MINGW-support-stdcall-without-underscore.patch
        0480-MINGW-generalization-of-posix-build-in-distutils-sys.patch
        0490-MINGW-customize-site.patch
        0500-add-python-config-sh.patch
        0510-cross-darwin-feature.patch
        0520-py3k-mingw-ntthreads-vs-pthreads.patch
        0530-mingw-system-libffi.patch
        0540-mingw-semicolon-DELIM.patch
        0550-mingw-regen-use-stddef_h.patch
        0560-mingw-use-posix-getpath.patch
        0565-mingw-add-ModuleFileName-dir-to-PATH.patch
        0570-mingw-add-BUILDIN_WIN32_MODULEs-time-msvcrt.patch
        0580-mingw32-test-REPARSE_DATA_BUFFER.patch
        0590-mingw-INSTALL_SHARED-LDLIBRARY-LIBPL.patch
        0600-msys-mingw-prefer-unix-sep-if-MSYSTEM.patch
        0610-msys-cygwin-semi-native-build-sysconfig.patch
        0620-mingw-sysconfig-like-posix.patch
        0630-mingw-_winapi_as_builtin_for_Popen_in_cygwinccompiler.patch
        0640-mingw-x86_64-size_t-format-specifier-pid_t.patch
        0650-cross-dont-add-multiarch-paths-if-cross-compiling.patch
        0660-mingw-use-backslashes-in-compileall-py.patch
        0670-msys-convert_path-fix-and-root-hack.patch
        0690-allow-static-tcltk.patch
        0710-CROSS-properly-detect-WINDOW-_flags-for-different-nc.patch
        0720-mingw-pdcurses_ISPAD.patch
        0740-grammar-fixes.patch
        0750-Add-interp-Python-DESTSHARED-to-PYTHONPATH-b4-pybuilddir-txt-dir.patch
        0760-msys-monkeypatch-os-system-via-sh-exe.patch
        0770-msys-replace-slashes-used-in-io-redirection.patch
        0790-mingw-add-_exec_prefix-for-tcltk-dlls.patch
        0800-mingw-install-layout-as-posix.patch
        0820-mingw-reorder-bininstall-ln-symlink-creation.patch
        0830-add-build-sysroot-config-option.patch
        0840-add-builddir-to-library_dirs.patch
        0850-cross-PYTHON_FOR_BUILD-gteq-276-and-fullpath-it.patch
        0860-mingw-build-optimized-ext.patch
        0910-fix-using-dllhandle-and-winver-mingw.patch
        1000-dont-link-with-gettext.patch
        1010-ctypes-python-dll.patch
        1020-gdbm-module-includes.patch
        1030-use-gnu_printf-in-format.patch
        1040-install-msilib.patch)


prepare() {
  cd "${srcdir}/Python-${pkgver}"

  # these are created by patches
  rm -f Misc/config_mingw Misc/cross_mingw32 Misc/python-config.sh.in Misc/cross_mingw32 Misc/python-config-u.sh.in Python/fileblocks.c

  plain "Apply Ray Donnelly's relocatability enabling patch"
  patch -Np1 -i "${srcdir}"/0000-make-_sysconfigdata.py-relocatable.patch

  plain "Apply Roumen Petrov's core patches (15)"
  patch -p1 -i "${srcdir}"/0100-MINGW-BASE-use-NT-thread-model.patch
  patch -p1 -i "${srcdir}"/0110-MINGW-translate-gcc-internal-defines-to-python-platf.patch
  patch -p1 -i "${srcdir}"/0120-MINGW-use-header-in-lowercase.patch
  patch -p1 -i "${srcdir}"/0130-MINGW-configure-MACHDEP-and-platform-for-build.patch
  patch -p1 -i "${srcdir}"/0140-MINGW-preset-configure-defaults.patch
  patch -p1 -i "${srcdir}"/0150-MINGW-configure-largefile-support-for-windows-builds.patch
  patch -p1 -i "${srcdir}"/0160-MINGW-add-wincrypt.h-in-Python-random.c.patch
  patch -p1 -i "${srcdir}"/0180-MINGW-init-system-calls.patch
  patch -p1 -i "${srcdir}"/0190-MINGW-detect-REPARSE_DATA_BUFFER.patch
  patch -p1 -i "${srcdir}"/0200-MINGW-build-in-windows-modules-winreg.patch
  patch -p1 -i "${srcdir}"/0210-MINGW-determine-if-pwdmodule-should-be-used.patch
  patch -p1 -i "${srcdir}"/0220-MINGW-default-sys.path-calculations-for-windows-plat.patch
  patch -p1 -i "${srcdir}"/0230-MINGW-AC_LIBOBJ-replacement-of-fileblocks.patch

  plain "Apply Roumen Petrov's compiler patch (2)"
  patch -p1 -i "${srcdir}"/0250-MINGW-compiler-customize-mingw-cygwin-compilers.patch

  plain "Apply Roumen Petrov's extensions patches (23)"
  patch -p1 -i "${srcdir}"/0270-CYGWIN-issue13756-Python-make-fail-on-cygwin.patch
  patch -p1 -i "${srcdir}"/0280-issue17219-add-current-dir-in-library-path-if-buildi.patch
  patch -p1 -i "${srcdir}"/0290-issue6672-v2-Add-Mingw-recognition-to-pyport.h-to-al.patch
  patch -p1 -i "${srcdir}"/0300-MINGW-configure-for-shared-build.patch
  patch -p1 -i "${srcdir}"/0310-MINGW-dynamic-loading-support.patch
  patch -p1 -i "${srcdir}"/0320-MINGW-implement-exec-prefix.patch
  patch -p1 -i "${srcdir}"/0330-MINGW-ignore-main-program-for-frozen-scripts.patch
  patch -p1 -i "${srcdir}"/0340-MINGW-setup-exclude-termios-module.patch
  patch -p1 -i "${srcdir}"/0350-MINGW-setup-_multiprocessing-module.patch
  patch -p1 -i "${srcdir}"/0360-MINGW-setup-select-module.patch
  patch -p1 -i "${srcdir}"/0370-MINGW-setup-_ctypes-module-with-system-libffi.patch
  patch -p1 -i "${srcdir}"/0380-MINGW-defect-winsock2-and-setup-_socket-module.patch
  patch -p1 -i "${srcdir}"/0390-MINGW-exclude-unix-only-modules.patch
  patch -p1 -i "${srcdir}"/0400-MINGW-setup-msvcrt-module.patch
  patch -p1 -i "${srcdir}"/0410-MINGW-build-extensions-with-GCC.patch
  patch -p1 -i "${srcdir}"/0420-MINGW-use-Mingw32CCompiler-as-default-compiler-for-m.patch
  patch -p1 -i "${srcdir}"/0430-MINGW-find-import-library.patch
  patch -p1 -i "${srcdir}"/0440-MINGW-setup-_ssl-module.patch
  patch -p1 -i "${srcdir}"/0450-MINGW-export-_PyNode_SizeOf-as-PyAPI-for-parser-modu.patch
  patch -p1 -i "${srcdir}"/0460-MINGW-generalization-of-posix-build-in-sysconfig.py.patch
  patch -p1 -i "${srcdir}"/0462-MINGW-support-stdcall-without-underscore.patch
  patch -p1 -i "${srcdir}"/0480-MINGW-generalization-of-posix-build-in-distutils-sys.patch
  patch -p1 -i "${srcdir}"/0490-MINGW-customize-site.patch

  plain "Apply Ray Donnelly's general/cross patches (32)"
  patch -p1 -i "${srcdir}"/0500-add-python-config-sh.patch
  patch -p1 -i "${srcdir}"/0510-cross-darwin-feature.patch
  patch -p1 -i "${srcdir}"/0520-py3k-mingw-ntthreads-vs-pthreads.patch
  patch -p1 -i "${srcdir}"/0530-mingw-system-libffi.patch
  patch -p1 -i "${srcdir}"/0540-mingw-semicolon-DELIM.patch
  patch -p1 -i "${srcdir}"/0550-mingw-regen-use-stddef_h.patch
  patch -p1 -i "${srcdir}"/0560-mingw-use-posix-getpath.patch
  patch -p1 -i "${srcdir}"/0565-mingw-add-ModuleFileName-dir-to-PATH.patch
  patch -p1 -i "${srcdir}"/0570-mingw-add-BUILDIN_WIN32_MODULEs-time-msvcrt.patch
  patch -p1 -i "${srcdir}"/0580-mingw32-test-REPARSE_DATA_BUFFER.patch
  patch -p1 -i "${srcdir}"/0590-mingw-INSTALL_SHARED-LDLIBRARY-LIBPL.patch
  patch -p1 -i "${srcdir}"/0600-msys-mingw-prefer-unix-sep-if-MSYSTEM.patch
  patch -p1 -i "${srcdir}"/0610-msys-cygwin-semi-native-build-sysconfig.patch
  patch -p1 -i "${srcdir}"/0620-mingw-sysconfig-like-posix.patch
  patch -p1 -i "${srcdir}"/0630-mingw-_winapi_as_builtin_for_Popen_in_cygwinccompiler.patch
  patch -p1 -i "${srcdir}"/0640-mingw-x86_64-size_t-format-specifier-pid_t.patch
  patch -p1 -i "${srcdir}"/0650-cross-dont-add-multiarch-paths-if-cross-compiling.patch
  patch -p1 -i "${srcdir}"/0660-mingw-use-backslashes-in-compileall-py.patch
  patch -p1 -i "${srcdir}"/0670-msys-convert_path-fix-and-root-hack.patch
  patch -p1 -i "${srcdir}"/0690-allow-static-tcltk.patch
  patch -p1 -i "${srcdir}"/0710-CROSS-properly-detect-WINDOW-_flags-for-different-nc.patch
  patch -p1 -i "${srcdir}"/0720-mingw-pdcurses_ISPAD.patch
  patch -p1 -i "${srcdir}"/0740-grammar-fixes.patch
  patch -p1 -i "${srcdir}"/0750-Add-interp-Python-DESTSHARED-to-PYTHONPATH-b4-pybuilddir-txt-dir.patch
  patch -p1 -i "${srcdir}"/0760-msys-monkeypatch-os-system-via-sh-exe.patch
  patch -p1 -i "${srcdir}"/0770-msys-replace-slashes-used-in-io-redirection.patch
  patch -p1 -i "${srcdir}"/0790-mingw-add-_exec_prefix-for-tcltk-dlls.patch
  patch -p1 -i "${srcdir}"/0800-mingw-install-layout-as-posix.patch
  patch -p1 -i "${srcdir}"/0820-mingw-reorder-bininstall-ln-symlink-creation.patch
  patch -p1 -i "${srcdir}"/0830-add-build-sysroot-config-option.patch
  patch -p1 -i "${srcdir}"/0840-add-builddir-to-library_dirs.patch
  patch -p1 -i "${srcdir}"/0850-cross-PYTHON_FOR_BUILD-gteq-276-and-fullpath-it.patch
  patch -p1 -i "${srcdir}"/0860-mingw-build-optimized-ext.patch
  patch -p1 -i "${srcdir}"/0910-fix-using-dllhandle-and-winver-mingw.patch

  plain "Apply Alexey Pavlov's mingw-w64 patches (2)"
  patch -p1 -i "${srcdir}"/1000-dont-link-with-gettext.patch
  patch -p1 -i "${srcdir}"/1010-ctypes-python-dll.patch
  patch -p1 -i "${srcdir}"/1020-gdbm-module-includes.patch
  patch -p1 -i "${srcdir}"/1030-use-gnu_printf-in-format.patch
  patch -p1 -i "${srcdir}"/1040-install-msilib.patch

  autoreconf -vfi

  # Temporary workaround for FS#22322
  # See http://bugs.python.org/issue10835 for upstream report
  #sed -i "/progname =/s/python/python${_pybasever}/" Python/pythonrun.c

  # Enable built-in SQLite module to load extensions (fix FS#22122)
  sed -i "/SQLITE_OMIT_LOAD_EXTENSION/d" setup.py

  # FS#23997
  sed -i -e "s|^#.* /usr/local/bin/python|#!/usr/bin/env python2|" Lib/cgi.py

  sed -i "s/python2.3/python2/g" Lib/distutils/tests/test_build_scripts.py \
  Lib/distutils/tests/test_install_scripts.py Tools/scripts/gprof2html.py

  touch Include/graminit.h
  touch Python/graminit.c
  touch Parser/Python.asdl
  touch Parser/asdl.py
  touch Parser/asdl_c.py
  touch Include/Python-ast.h
  touch Python/Python-ast.c
  echo \"\" > Parser/pgen.stamp
    
  # Ensure that we are using the system copy of various libraries (expat, zlib and libffi),
  # rather than copies shipped in the tarball
  rm -r Modules/expat
  rm -r Modules/zlib
  rm -r Modules/_ctypes/{darwin,libffi}*
}

build() {
  pushd ${MINGW_PREFIX} > /dev/null
  export PREFIX_WIN=`pwd -W`
  popd > /dev/null

  CFLAGS+=" -fwrapv -D__USE_MINGW_ANSI_STDIO=1 "
  CXXFLAGS+=" -fwrapv -D__USE_MINGW_ANSI_STDIO=1 "
  CPPFLAGS+=" -I${PREFIX_WIN}/include/ncursesw "

  if check_option "strip" "y"; then
    LDFLAGS+=" -s "
  fi
  if check_option "debug" "n"; then
    CFLAGS+=" -DNDEBUG "
    CXXFLAGS+=" -DNDEBUG "
  else
    plain " -DDEBUG -DPy_DEBUG -D_DEBUG does not work unfortunately .."
    #    CFLAGS+=" -DDEBUG -DPy_DEBUG -D_DEBUG "
    #    CXXFLAGS+=" -DDEBUG -DPy_DEBUG -D_DEBUG "
    CFLAGS+=" -O0 -ggdb"
    CXXFLAGS+=" -O0 -ggdb"
  fi

  LIBFFI_INC=`${MINGW_PREFIX}/bin/pkg-config libffi --cflags-only-I | sed "s|\-I||g"`
  pushd ${LIBFFI_INC} > /dev/null
  export LIBFFI_INCLUDEDIR=`pwd -W`
  popd > /dev/null

  # Workaround for conftest error on 64-bit builds
  export ac_cv_working_tzset=no

  mkdir -p "${srcdir}/build-${CARCH}" && cd "${srcdir}/build-${CARCH}"
  MSYSTEM=MINGW ../Python-${pkgver}/configure \
    --prefix=${MINGW_PREFIX} \
    --host=${MINGW_CHOST} \
    --build=${MINGW_CHOST} \
    --enable-shared \
    --with-threads \
    --with-system-expat \
    --with-system-ffi \
    OPT=""
    #--with-dbmliborder='gdbm:ndbm'
  make
}

check() {
  cd "${srcdir}/build-${CARCH}"
  make test
}

package() {
  cd "${srcdir}/build-${CARCH}"
  MSYSTEM=MINGW \
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  make install DESTDIR="$pkgdir"
  
  mv "${pkgdir}${MINGW_PREFIX}"/bin/smtpd.py "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/

  # Copy python import library to $prefix/lib because some programs can't find it in other locations
  cp -f "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config/libpython${_pybasever}.dll.a "${pkgdir}${MINGW_PREFIX}"/lib/libpython${_pybasever}.dll.a
  
  # some useful "stuff"
  install -dm755 "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/{i18n,scripts}
  install -m755 "${srcdir}/Python-${pkgver}"/Tools/i18n/{msgfmt,pygettext}.py "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/i18n/
  install -m755 "${srcdir}/Python-${pkgver}"/Tools/scripts/{README,*py} "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/scripts/

  # clean up #!s
  find "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/ -name '*.py' | \
    xargs sed -i "s|#[ ]*![ ]*/usr/bin/env python$|#!/usr/bin/env python2|"

  # clean-up reference to build directory
  sed -i "s#${srcdir}/Python-${pkgver}:##" "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config/Makefile

  for fscripts in 2to3 idle pydoc; do
    sed -e "s|${MINGW_PREFIX}/bin/python${_pybasever}.exe|/usr/bin/env python${_pybasever}.exe|g" -i "${pkgdir}${MINGW_PREFIX}"/bin/$fscripts
  done

  sed -i "s|#!${pkgdir}${MINGW_PREFIX}/bin/python${_pybasever}.exe|#!/usr/bin/env python${_pybasever}.exe|" "${pkgdir}${MINGW_PREFIX}"/bin/python${_pybasever}-config
  sed -i "s|#!${pkgdir}${MINGW_PREFIX}/bin/python${_pybasever}.exe|#!/usr/bin/env python${_pybasever}.exe|" "${pkgdir}${MINGW_PREFIX}"/bin/python2-config
  sed -i "s|#!${pkgdir}${MINGW_PREFIX}/bin/python${_pybasever}.exe|#!/usr/bin/env python${_pybasever}.exe|" "${pkgdir}${MINGW_PREFIX}"/bin/python-config

  # fix permissons
  find ${pkgdir}${MINGW_PREFIX} -type f \( -name "*.dll" -o -name "*.exe" \) | xargs chmod 0755

  # Fix up two instances of MSYS2 paths in python-config.sh in-case the final consumer of the results are native executables.
  sed -i "s|${MINGW_PREFIX}|${PREFIX_WIN}|" "${pkgdir}${MINGW_PREFIX}"/bin/python-config.sh

  # replace paths in sysconfig
  sed -i "s|${pkgdir}${MINGW_PREFIX}|${MINGW_PREFIX}|g" \
    "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/_sysconfigdata.py \
    "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/smtpd.py

  # Create python executable with windows subsystem
  cp -f "${pkgdir}${MINGW_PREFIX}"/bin/python2.exe "${pkgdir}${MINGW_PREFIX}"/bin/python2w.exe
  ${MINGW_PREFIX}/bin/objcopy --subsystem windows "${pkgdir}${MINGW_PREFIX}"/bin/python2w.exe

  # Add a wrapper script to force -i when invoking python. Please don't move this into a patch as
  # hopefully one day we won't need this hack (when we replace mintty with a real console).
  _exename="python2"
  mv "${pkgdir}"${MINGW_PREFIX}/bin/${_exename}.exe "${pkgdir}"${MINGW_PREFIX}/bin/${_exename}_exe
  echo "#!/usr/bin/env bash"                                           > "${pkgdir}"${MINGW_PREFIX}/bin/${_exename}
  echo "if [ \$# -eq 0 ]; then"                                       >> "${pkgdir}"${MINGW_PREFIX}/bin/${_exename}
  echo '  "$( dirname ${BASH_SOURCE[0]} )/'${_exename}'.exe" -i "$@"' >> "${pkgdir}"${MINGW_PREFIX}/bin/${_exename}
  echo "else"                                                         >> "${pkgdir}"${MINGW_PREFIX}/bin/${_exename}
  echo '  "$( dirname ${BASH_SOURCE[0]} )/'${_exename}'.exe" "$@"'    >> "${pkgdir}"${MINGW_PREFIX}/bin/${_exename}
  echo "fi"                                                           >> "${pkgdir}"${MINGW_PREFIX}/bin/${_exename}
  mv "${pkgdir}"${MINGW_PREFIX}/bin/${_exename}_exe "${pkgdir}"${MINGW_PREFIX}/bin/${_exename}.exe
}

sha1sums=('9c6281eeace0c3646fa556c8087bb1b7e033c9c4'
          'ff058a6494ce5a91096a756ca8602fac14e4bf5a'
          'ee2babe00eaad35482acfffb612f68b364150c31'
          'f25698bfa5713ac8a215cc31ca29d75e1219fe95'
          'a35253f4a021f9f9237a0ad2d178731046e130e8'
          '39b87abfb3a4d8a0f6a16a1c627ece0527181d92'
          '03fc84385039f2e74ffae06b706eedf9e4eced58'
          '4b375570d32e6779cd26ae4578054fc0031a1057'
          'ff3ccc52729cc4e9c321677787f0af2dea842095'
          'bb90366209e8832f8b5abc8ab0352dc97020fa5d'
          '6f6484021f9a7ce71c2aa88a6aebab890ed85690'
          '0bbf753a8e52c413199abe504577c6099e97657a'
          '233a3008e3ed8ad38806b996186f2b4b00e95787'
          '598c40d4211a786b6bd05a6a1495ca9321258ec5'
          'fd22959c09d157561564ba661ebe5be2052cd017'
          'fc2686d5e190504577586419c4971e3668fb3c57'
          '32a3d0ff21f527ed50d036182715c6e1e036928a'
          '06d6e9f1ce0915855968735df3101731e3142544'
          '4b163ecefaf551469ddd6b622552dce1830f7ff8'
          'd3f588023ea932716b479cbb71b2dc2a98bca122'
          '6d6ab5d60ff66b7215f071585af616c4bfea4af8'
          '40b2a234bbb225d012af33debb8df015bfda4f1a'
          '5a321b071d9f293c4783edf0cbc5489e641bddc5'
          '82e544e64670423f88036947cabb65bd50dec537'
          '368de9bdb53c5e50643fd09738ae6ca7906d6105'
          'accf4f618f7a2a9859a913ca9be710582277e427'
          '8d5fdb792196d6a84bd28884733dfb738dd6470d'
          '1dfd90e1f13c6f0ab66931bf258a8d4e892a68ea'
          '6c06a12feb60e4d51348f78f0472cc6e5a079635'
          'a58c2889f0bf26de6e73fe2695c08ebeeb3110ab'
          'cea733d5d3b673730a25ebfd46a4c50299dae486'
          '0dc29ad579843c85bf256ec41599a5d12fd52c61'
          '885469472b14ecd3aa2ed84263fa760d263854fc'
          '6d218cb3c6d0eaeef8a957df4e5f15cba9772218'
          'b2066325426efc276fbf88c38e55b9f0db03d9d6'
          '18701870027b418c06a1ae239fe623b711d74540'
          '0d8474e5a7bfa3eda5e0c8277b3b12f70b7fa14d'
          'fbcb6e56808efc9b91244065a2399cf1a03f653b'
          'b28bf367d49b81bf44bc21e24928a04bac31531f'
          '8b8739dc17a377e16a98a77166c79c0a62e98b9d'
          'd54101fd632d41eca98558668946c2e396c02ff1'
          '5f8c012c367c25ec9a55bff86edf09e841aa70ff'
          '26f0fad5905dae6a7ea69feb96b1eeead0e90a61'
          'db28b6f95fc24d6abbb3797d1d9c7768a87ad73d'
          '8ec51c213c62f1db0a4a61cf4eaa69b26e26457b'
          '56bca8df15fde1bd12bd1ae939eafef442bdab9d'
          'b7ed33f832b8fa0b1b930e0ba27600cda8184e44'
          '3b5706efe88d0b6e7a0b6c55ba6d203e37baddcf'
          '9118fcc8fe2b141bf13fd5a843bc3eb5213a0a93'
          'b3e3f8cf921dca507ffd097f71092de536e9f525'
          '8da64221399e539cb3356c49ac8bc1a8c8d5fef3'
          '0e756f98fcb75a9916421cffeaece971d5dbc74b'
          '9205d40b67f97a1ad797c3c5648fe903815e962f'
          '4133b4171a73d4de87a45589e80702f2e674b88a'
          '406d57de80f77111466fd163a3ec82ee0f94d94a'
          '333ab511a4b10de9876bd6eb7ca03148535005b4'
          '68a6e12bb892171e4e2238285b99e667d65d3626'
          'e3800d6717305bd708c8605a017d1abd05d8fb7b'
          '86ec96aa948c4bb504122a0dc1ba9a5d2ec12d57'
          '63d9f98f0822054c113378eac469a589a4433f9e'
          '0ee936bfbabd7a858755acf1a717537f13a02336'
          '9d1979be09d6a503ac6106dfb96831c44a206135'
          '772f1a7478761b5edf33ddf026505ded17263754'
          '9f3a2a955023f3aab43ba5b09a97c5ac63df9ed7'
          '0201577ba7a2d69f2d73e14651c4748e6b3bbe79'
          '7524d140ed956cc954d86dc60e424dd312319a34'
          'c6a33dae9100bed3cc9a666e89945bc2e82e1912'
          '418a26fd8f2a47b7d98273b335814fa0c48c5e6e'
          '6c2eceaf897daad320826692d2b176caa8a14ffc'
          '0e51c781ae921e45bd240572530a0cfa259b87bf'
          '70eb399b5d27a624b09c21f38d753ecda21e4b2a'
          'd935249cdc36c5dfb17d9b1d852d6755d23d89bb'
          '2c20df25b6249caec41b66d3c5d49d19b906b4ba'
          '50edd9f69058917c7efa8af787e1f632121f07f0'
          'd0eac38880e7f36131a9d3d6de67d465d3032aff'
          'a90c50280cca649e01b1b18ccff1aa6f2912ad37'
          '2117c93358879d6262c618526a00152eec00f141'
          '864396853b7202974e8d18fb70433edbce8334f9')
