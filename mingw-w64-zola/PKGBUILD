# Maintainer: Konstantin Podsvirov <konstantin@podsvirov.su>

_realname=zola
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=0.21.0
pkgrel=1
pkgdesc="A fast static site generator in a single binary with everything built-in (mingw-w64)"
arch=('any')
mingw_arch=('ucrt64' 'clang64')
url='https://www.getzola.org/'
msys2_repository_url='https://github.com/getzola/zola'
license=('spdx:MIT')
makedepends=("${MINGW_PACKAGE_PREFIX}-rust")
source=("${msys2_repository_url}/archive/v${pkgver}/${_realname}-${pkgver}.tar.gz")
sha256sums=('bbfbc0496cf6612b6030c6d97b0fd2567f5ec41e251f8874b6c9ccda4c8149d4')

prepare() {
  cd "${_realname}-${pkgver}"

  # if cargo wants to make an http request at build stage, use `cargo fetch --locked` instead
  cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
}

build() {
  cd "${_realname}-${pkgver}"

  cargo build --release --frozen
}

check() {
  cd "${_realname}-${pkgver}"

  cargo test --release --frozen
}

package() {
  cd "${_realname}-${pkgver}"

  cargo install \
    --offline \
    --no-track \
    --frozen \
    --path . \
    --root "${pkgdir}${MINGW_PREFIX}"

  local _target="./target/release/${_realname}.exe"
  $_target completion bash | install -Dm0644 /dev/stdin "${pkgdir}${MINGW_PREFIX}/share/bash-completion/completions/${_realname}"
  $_target completion fish | install -Dm0644 /dev/stdin "${pkgdir}${MINGW_PREFIX}/share/fish/vendor_completions.d/${_realname}.fish"
  $_target completion zsh  | install -Dm0644 /dev/stdin "${pkgdir}${MINGW_PREFIX}/share/zsh/site-functions/_${_realname}"

  install -Dm644 LICENSE "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE"
}
