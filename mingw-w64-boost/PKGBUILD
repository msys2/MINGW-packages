# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=boost
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=1.57.0
_boostver=${pkgver//./_}
pkgrel=1
pkgdesc="Free peer-reviewed portable C++ source libraries (mingw-w64)"
arch=('any')
url="http://www.boost.org/"
license=('custom')
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-zlib"
         "${MINGW_PACKAGE_PREFIX}-bzip2"
         "${MINGW_PACKAGE_PREFIX}-icu")
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc"
             "${MINGW_PACKAGE_PREFIX}-python2"
             "${MINGW_PACKAGE_PREFIX}-python3")
options=('strip' 'buildflags' 'staticlibs')
source=(http://downloads.sourceforge.net/sourceforge/boost/boost_${_boostver}.tar.bz2
        boost-1.48.0-add-bjam-man-page.patch
        boost-1.50.0-fix-non-utf8-files.patch
        boost-1.50.0-pool.patch
        boost-1.54.0-bootstrap.patch
        boost-1.57.0-Add-missing-include-to-signals2-trackable.hpp.patch
        boost-1.56-mingw-context.patch
        using-mingw-w64-python.patch
        )
md5sums=('1be49befbdd9a5ce9def2983ba3e7b76'
         'dff8166486150121bf89d7050c7e5c49'
         'ef427ef3a47f8fdeeb6b4ae3246aa84f'
         'a69f826fd911dcf34189aaaacf16853f'
         '45dbfa0c971c8625c5cb985e6ed71b5d'
         '26a97a0abc51efb7e87853d4d1030d48'
         '2c65a8915b70b9de25ac37a73a74d84d'
         'c2aac61b370b321552b5240b9ee7248e')

prepare() {
  cd "${srcdir}/boost_${_boostver}"

  patch -p1 -i ${srcdir}/boost-1.50.0-fix-non-utf8-files.patch
  patch -p1 -i ${srcdir}/boost-1.48.0-add-bjam-man-page.patch
  patch -p1 -i ${srcdir}/boost-1.50.0-pool.patch
  patch -p1 -i ${srcdir}/boost-1.56-mingw-context.patch
  patch -p1 -i ${srcdir}/boost-1.54.0-bootstrap.patch
  patch -p1 -i ${srcdir}/boost-1.57.0-Add-missing-include-to-signals2-trackable.hpp.patch
  
  # Use out own build Python
  patch -p1 -i ${srcdir}/using-mingw-w64-python.patch

  pushd ${MINGW_PREFIX} > /dev/null
  export PREFIX_DEPS=`pwd -W`
  popd > /dev/null
  
  echo "using python : 2.7 : ${PREFIX_DEPS}/bin/python2.exe : ${PREFIX_DEPS}/include/python2.7 ;" >> ./tools/build/src/user-config.jam
  echo "using python : 3.4 : ${PREFIX_DEPS}/bin/python3.exe : ${PREFIX_DEPS}/include/python3.4m : ${PREFIX_DEPS}/lib/python3.4/config-3.4m ;" >> ./tools/build/src/user-config.jam

  mkdir -p "${srcdir}/boost-${MINGW_CHOST}"
  lndir "${srcdir}/boost_${_boostver}" "${srcdir}/boost-${MINGW_CHOST}"
}

build() {
  cd "${srcdir}/boost-${MINGW_CHOST}"
  ./bootstrap.sh --with-icu=${MINGW_PREFIX} --with-python=${MINGW_PREFIX}

  case ${CARCH} in
    i686)
      local _model=32
    ;;
    x86_64)
      local _model=64
    ;;
  esac

  if check_option "debug" "y"; then
      local variant=debug
  else
      local variant=release
  fi

  ./b2 \
    toolset=gcc \
    variant=$variant \
    threading=multi \
    threadapi=win32 \
    link=shared,static \
    runtime-link=shared \
    --debug-configuration \
    --prefix=${pkgdir}${MINGW_PREFIX} \
    -sHAVE_ICU=1 \
    -sICU_PATH=${MINGW_PREFIX} \
    -sICU_LINK="-L${MINGW_PREFIX}/lib -licuuc -licuin -licudt" \
    -sICONV_PATH=${MINGW_PREFIX} \
    -sICONV_LINK="-L${MINGW_PREFIX}/lib -liconv" \
    -sNO_BZIP2 \
    -sBZIP2_BINARY=bz2 \
    -sBZIP2_INCLUDE=${MINGW_PREFIX}/include \
    -sBZIP2_LIBPATH=${MINGW_PREFIX}/lib \
    -sNO_ZLIB \
    -sZLIB_BINARY=z \
    -sZLIB_INCLUDE=${MINGW_PREFIX}/include \
    -sZLIB_LIBPATH=${MINGW_PREFIX}/zlib \
    pch=off \
    -d2 \
    address-model=${_model} \
    --layout=tagged \
    --without-mpi
}

package() {
  cd "${srcdir}/boost-${MINGW_CHOST}"
  case ${CARCH} in
    i686)
      local _model=32
    ;;
    x86_64)
      local _model=64
    ;;
  esac

  if check_option "debug" "y"; then
      local variant=debug
  else
      local variant=release
  fi

  ./b2 \
      toolset=gcc \
      variant=$variant \
      threading=multi \
      threadapi=win32 \
      link=shared,static \
      runtime-link=shared \
      --prefix=${pkgdir}${MINGW_PREFIX} \
      -sHAVE_ICU=1 \
      -sICU_PATH=${MINGW_PREFIX} \
      -sICU_LINK="-L${MINGW_PREFIX}/lib -licuuc -licuin -licudt" \
      -sICONV_PATH=${MINGW_PREFIX} \
      -sICONV_LINK="-L${MINGW_PREFIX}/lib -liconv" \
      -sNO_BZIP2 \
      -sBZIP2_BINARY=bz2 \
      -sBZIP2_INCLUDE=${MINGW_PREFIX}/include \
      -sBZIP2_LIBPATH=${MINGW_PREFIX}/lib \
      -sNO_ZLIB \
      -sZLIB_BINARY=z \
      -sZLIB_INCLUDE=${MINGW_PREFIX}/include \
      -sZLIB_LIBPATH=${MINGW_PREFIX}/zlib \
      address-model=${_model} \
      --layout=tagged install \
      --without-mpi

  mkdir -p ${pkgdir}${MINGW_PREFIX}/bin
  mv ${pkgdir}${MINGW_PREFIX}/lib/*.dll ${pkgdir}${MINGW_PREFIX}/bin
}
