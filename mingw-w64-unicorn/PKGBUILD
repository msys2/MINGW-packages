# Maintainer: Michael Hansen <zrax0111 gmail com>

_realname=unicorn
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-unicorn"
         "${MINGW_PACKAGE_PREFIX}-python-unicorn")
_rc=-rc6
_basever=2.0.0
pkgver=${_basever}${_rc//-/}
pkgrel=2
pkgdesc="A lightweight multi-platform, multi-architecture CPU emulator framework based on QEMU (mingw-w64)"
url='https://www.unicorn-engine.org/index.html'
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32')
license=('GPL2')
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs")
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-python"
             "${MINGW_PACKAGE_PREFIX}-python-setuptools")
source=("${_realname}-${pkgver}.tar.gz::https://github.com/unicorn-engine/unicorn/archive/${_basever}${_rc}.tar.gz"
        "001-bindings-python.patch"
        "002-getpagesize-clang.patch")
sha512sums=('a80a9408bc5b41b6961049849a8a63f69399325a4e4d8e41f4512173d24a837048d9ac03064bc16eb129e5f52828507baa059fda64430ec52b4f9ef339d61f0d'
            '1d849580a7c79db1090d17b10cf4f5c80e2d545da9e7e2f540e3c59318d343fa8e5176a76ef4e19a2734b96891c0543189693534811c6ad369185461067d0356'
            'ba35ee611ee312c851a07533caaf8a7a6c6a398fe3544c9ba843a2e3c333859ef0433fbbee28ff0aaa61893f44cea45691339fcc05779a3837ae5fdbdd87577a')

prepare() {
  cd "${srcdir}"/${_realname}-${_basever}${_rc}
  pwd

  patch -Np1 -i "${srcdir}"/001-bindings-python.patch
  patch -Np1 -i "${srcdir}"/002-getpagesize-clang.patch
}

build() {
  cd "${srcdir}"/${_realname}-${_basever}${_rc}

  # Build unicorn
  mkdir -p "${srcdir}/build-${MSYSTEM}" && cd "${srcdir}/build-${MSYSTEM}"

  declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    "${MINGW_PREFIX}"/bin/cmake.exe \
      -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}" \
      "${extra_config[@]}" \
      -GNinja \
      ../${_realname}-${_basever}${_rc}

  "${MINGW_PREFIX}"/bin/cmake.exe --build .

  # Build bindings
  (cd "${srcdir}"/${_realname}-${_basever}${_rc}/bindings
    ${MINGW_PREFIX}/bin/python const_generator.py python
  )
  (cd "${srcdir}"/${_realname}-${_basever}${_rc}/bindings/python
    ${MINGW_PREFIX}/bin/python setup.py build
  )
}

check() {
  cd "${srcdir}/build-${MSYSTEM}"

  "${MINGW_PREFIX}"/bin/cmake.exe --build . --target test
}

package_unicorn() {
  cd "${srcdir}/build-${MSYSTEM}"

  DESTDIR="${pkgdir}" "${MINGW_PREFIX}"/bin/cmake.exe --install .

  install -Dm644 "${srcdir}/${_realname}-${_basever}${_rc}/COPYING" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING"
  install -Dm644 "${srcdir}/${_realname}-${_basever}${_rc}/COPYING.LGPL2" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING.LGPL2"
  install -Dm644 "${srcdir}/${_realname}-${_basever}${_rc}/COPYING_GLIB" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING_GLIB"
}

package_python-unicorn() {
  depends=("${MINGW_PACKAGE_PREFIX}-python" "${MINGW_PACKAGE_PREFIX}-unicorn")
  provides=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
  conflicts=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
  replaces=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
  
  cd "${_realname}-${_basever}${_rc}/bindings/python"

  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python setup.py install --root="${pkgdir}" --prefix="${MINGW_PREFIX}" \
    -O1 --skip-build

  install -Dm 644 sample* shellcode.py -t "${pkgdir}${MINGW_PREFIX}/share/doc/python-${_realname}/samples"
}

# template start; name=mingw-w64-splitpkg-wrappers; version=1.0;
# vim: set ft=bash :

# generate wrappers
for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
# template end;
