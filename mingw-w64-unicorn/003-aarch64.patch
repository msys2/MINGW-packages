Assume that the target architecture is aarch64 if it is neither i686 nor
x86_64.

This is probably not upstreamable. But it should be good enough for the
architectures that are supported by MSYS2.

diff -urN unicorn-2.0.1.post1/CMakeLists.txt.orig unicorn-2.0.1.post1/CMakeLists.txt
--- unicorn-2.0.1.post1/CMakeLists.txt.orig	2022-11-16 15:16:49.000000000 +0100
+++ unicorn-2.0.1.post1/CMakeLists.txt	2024-11-06 09:04:28.474013400 +0100
@@ -137,10 +137,15 @@
             set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -m32")
             set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -m32")
         else()
-            set(UNICORN_TARGET_ARCH "i386")
-            set(UNICORN_CFLAGS -m64 -mcx16)
-            set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -m64")
-            set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -m64")
+            string(FIND "${UC_COMPILER_VERSION}" "x86_64" UC_RET)
+            if(${UC_RET} GREATER_EQUAL "0")
+                set(UNICORN_TARGET_ARCH "i386")
+                set(UNICORN_CFLAGS -m64 -mcx16)
+                set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -m64")
+                set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -m64")
+            else()
+                set(UNICORN_TARGET_ARCH "aarch64")
+            endif()
         endif()
     elseif(ANDROID_ABI)
         string(FIND "${ANDROID_ABI}" "arm64" UC_RET)
