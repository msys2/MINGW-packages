
_realname=sqlitestudio
_commit=c12b18bdcd0a55322d183ded2b677236b9e02eed
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}"
         "${MINGW_PACKAGE_PREFIX}-${_realname}-plugins")
pkgver=3.4.15.r1287.gc12b18b
pkgrel=1
arch=('any')
mingw_arch=('mingw64' 'ucrt64')
pkgdesc="Multi-platform SQLite database manager (mingw-w64)"
url="https://sqlitestudio.pl/"
msys2_repository_url="https://github.com/pawelsalawa/sqlitestudio"
msys2_references=(
  "aur : sqlitestudio"
)
license=("spdx:GPL-3.0")
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-openssl"
         "${MINGW_PACKAGE_PREFIX}-qt6-base"
         "${MINGW_PACKAGE_PREFIX}-qt6-declarative"
         "${MINGW_PACKAGE_PREFIX}-qt6-imageformats"
         "${MINGW_PACKAGE_PREFIX}-qt6-svg"
         "${MINGW_PACKAGE_PREFIX}-wineditline"
         "${MINGW_PACKAGE_PREFIX}-zlib")
makedepends=("git"
             "${MINGW_PACKAGE_PREFIX}-gcc"
             "${MINGW_PACKAGE_PREFIX}-make"
             "${MINGW_PACKAGE_PREFIX}-pkgconf"
             "${MINGW_PACKAGE_PREFIX}-python"
             "${MINGW_PACKAGE_PREFIX}-qt6-tools"
             "${MINGW_PACKAGE_PREFIX}-tcl")
source=("${_realname}"::"git+https://github.com/pawelsalawa/$_realname.git#commit=$_commit"
        "001-destdir.patch"
        "002-wineditline-link.patch")
sha256sums=('d04fd0c484b1d411bf4cae86eaa7e78b2a586a591c75e4f47dd9d9cf39c99e4e'
            '895958f1857fc9f8bfeffa88daa50e599082695d7ece974fb3dc6f1350806341'
            '6154c2f9c491a1823a2bdc79594d118ed767c1fc28946608a3a3a7ad0a31cf91')

pkgver() {
  cd "${srcdir}/${_realname}"

  git describe --tags --long --abbrev=7 | sed 's/\([^-]*-g\)/r\1/;s/-/./g'
}

apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying ${_patch}"
    patch -Nbp1 -i "${srcdir}/${_patch}"
  done
}

prepare() {
  cd ${_realname}

  apply_patch_with_msg \
    001-destdir.patch \
    002-wineditline-link.patch
}

build() {
  mkdir -p build-${MSYSTEM}
  cd build-${MSYSTEM}

  declare -a _build_type
  if check_option "debug" "n"; then
    _build_type=release
  else
    _build_type=debug
  fi

  MSYS2_ARG_CONV_EXCL="QMAKE_CXXFLAGS=" \
  ${MINGW_PREFIX}/bin/qmake6 \
    QMAKE_CXXFLAGS="-DSYS_PLUGINS_DIR=${MINGW_PREFIX}/lib/sqlitestudio" \
    QMAKE_CXXFLAGS+=`pkgconf --cflags wineditline` \
    ../${_realname}/SQLiteStudio3

  # MSYS2_ARG_CONV_EXCL again for QMake called during the build
  MSYS2_ARG_CONV_EXCL="QMAKE_CXXFLAGS=" \
  ${MINGW_PREFIX}/bin/mingw32-make $_build_type 

  mkdir plugins
  cd plugins
  ${MINGW_PREFIX}/bin/qmake6 \
    QMAKE_CXXFLAGS+=`pkgconf --cflags python3` \
    ../../${_realname}/Plugins

  ${MINGW_PREFIX}/bin/mingw32-make $_build_type -j 1
}

package_sqlitestudio() {
  cd "${srcdir}/build-${MSYSTEM}"

  install -Dm644 bin/*.dll -t "${pkgdir}${MINGW_PREFIX}"/bin
  install -Dm644 bin/*.exe -t "${pkgdir}${MINGW_PREFIX}"/bin
  install -Dm644 "${srcdir}/${_realname}/LICENSE" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE"
}

package_sqlitestudio-plugins() {
  pkgdesc='Official plugins for sqlitestudio (mingw-w64)'
  depends=("${MINGW_PACKAGE_PREFIX}-${_realname}"
           "${MINGW_PACKAGE_PREFIX}-python"
           "${MINGW_PACKAGE_PREFIX}-tcl")

  cd "${srcdir}/build-${MSYSTEM}"

  install -Dm644 sqlitestudio/plugins/*.dll -t "${pkgdir}${MINGW_PREFIX}"/lib/sqlitestudio
}

# template start; name=mingw-w64-splitpkg-wrappers; version=1.0;
# vim: set ft=bash :

# generate wrappers
for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
# template end;
