Description: adapt PyFrameObject accessors to python/3.11
 The structure is now opaque in C, breaking the current build.
 .
 Remove the python_support.c wrappers, even if this modifies the way
 callers must count references.
Forwarded: https://github.com/AdaCore/gnatcoll-bindings/pull/17
Author: Nicolas Boulenguez <nicolas@debian.org>

--- a/python3/gnatcoll-python.ads
+++ b/python3/gnatcoll-python.ads
@@ -1072,7 +1072,6 @@
 
    function PyFrame_Get_Code (Frame : PyFrameObject) return PyCodeObject;
    --  Return code object associated with the frame.
-   --  Returns a borrowed reference, no need to Py_DECREF
 
    function PyCode_Get_Filename (Code : PyCodeObject) return PyObject;
    --  Return file name of the code object.
@@ -1084,7 +1083,6 @@
 
    function PyFrame_Get_Back (Frame : PyFrameObject) return PyFrameObject;
    --  Return previous frame in stack.
-   --  Returns a borrowed reference, no need to Py_DECREF
 
    -------------
    -- Threads --
@@ -1176,8 +1174,8 @@
    pragma Import (C, PyMethod_Function, "PyMethod_Function");
    pragma Import (C, PyMethod_Self, "PyMethod_Self");
    pragma Import (C, PyFrame_GetLineNumber, "PyFrame_GetLineNumber");
-   pragma Import (C, PyFrame_Get_Code, "ada_pyframe_get_code");
-   pragma Import (C, PyFrame_Get_Back, "ada_pyframe_get_back");
+   pragma Import (C, PyFrame_Get_Code, "PyFrame_GetCode");
+   pragma Import (C, PyFrame_Get_Back, "PyFrame_GetBack");
    pragma Import (C, PyCode_Get_Filename, "ada_pycode_get_filename");
    pragma Import (C, PyCode_Get_Name, "ada_pycode_get_name");
    pragma Import (C, Py_TYPE, "__gnatcoll_py_type");
--- a/python3/python_support.c
+++ b/python3/python_support.c
@@ -810,18 +810,6 @@
   return PyObject_CallMethod (io, "open", "ss", file_name, mode);
 }
 
-PyCodeObject*
-ada_pyframe_get_code (PyFrameObject* obj)
-{
-   return obj->f_code;
-}
-
-PyFrameObject*
-ada_pyframe_get_back (PyFrameObject* obj)
-{
-   return obj->f_back;
-}
-
 PyObject*
 ada_pycode_get_filename (PyCodeObject* obj)
 {
