# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Maintainer: Ray Donnelly <mingw.android@gmail.com>

_realname=qt-creator
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
# WIP for 3.?
__pre=-beta1
_base_ver=3.3.0
#_base_ver=3.2.2
pkgver=${_base_ver}${_pre}
pkgrel=1
pkgdesc='Cross-patform IDE (mingw-w64)'
url='http://qt-project.org'
install=qt-creator-${CARCH}.install
arch=('any')
depends=("${MINGW_PACKAGE_PREFIX}-qt5"
         "${MINGW_PACKAGE_PREFIX}-gcc"
         "${MINGW_PACKAGE_PREFIX}-make"
         "${MINGW_PACKAGE_PREFIX}-qbs")
makedepends=("${MINGW_PACKAGE_PREFIX}-clang")
options=('docs' 'staticlibs') # 'debug' '!strip')
optdepends=("${MINGW_PACKAGE_PREFIX}-gdb: for the debugger"
            "${MINGW_PACKAGE_PREFIX}-cmake: for cmake project support"
            "${MINGW_PACKAGE_PREFIX}-clang: for clang code model"
            #'openssh-askpass: for ssh support'
            #'git: for git support'
            #'mercurial: for mercurial support'
            #'bzr: for bazaar support'
            )
_pkgfqn="${_realname}-opensource-src-${_base_ver}${__pre}"
source=(http://download.qt-project.org/development_releases/qtcreator/${_base_ver%.*}/${_base_ver}${__pre}/${_pkgfqn}.tar.gz
        #http://download.qt-project.org/official_releases/qtcreator/${pkgver%.*}/${pkgver}/${_pkgfqn}.tar.gz
        0001-Qbs-Do-not-crash-when-using-simplified-project-view.patch
        0001-autotools-Allow-builds-to-be-done-in-buildDir.patch
        0001-autotools-Remove-broken-unchanged-check.patch
        0002-autotools-Use-summaryInWorkdir.patch
        0001-debugger-Don-t-skip-first-char-after-This-GDB-was-co.patch
        qt-creator-3.2.0-Allow-static-clang-via-LLVM_STATIC-env-var.patch
        qt-creator-3.2.0-Allow-iOS-plugin-on-any-platform.patch
        qt-creator-3.2.0-Define-QBS_INSTALL_DIR-as-relative-path.patch
        qt-creator-3.2.0-qbs-CONFIG-add-qbs_enable_project_file_updates.patch
        qt-creator-3.2.0-qbs-fileName-to-filePath.patch
        qt-creator-3.2.0-MSYS2-autotools-run-shell-scripts-via-sh.patch
        qt-creator-3.2.0-autotools-allow-non-Automake-Makefile-in-projects.patch
        qt-creator-3.2.0-i[3456]86-and-x86-have-32bit-wordWidth.patch
        qt-creator-3.3.0-abi-msys-is-Windows.patch)
noextract=(${_pkgfqn}.tar.gz)
sha256sums=('96ed5896f384d0032d01870ddac51a07e936c71e5dca0c8032e23416259005e2'
            '18f59946054e667b56276f53ec544d4786c3c249fee6c0bd9b0b565ed4b7cf2d'
            '6c34b2bad7a24c5922d237dc67fcced14e83d65116f77cd84aa80ae2ebd4aad9'
            '2f45ff4c2806c90c36f19da07707fef213e50fbf8825fe169e1bce6349efacee'
            '22253cf29a2c8effebb1cc8313a0f350cf993d7fc404763063e6bd8444fa61f1'
            '12aef50d3c90dfd5bcd9ac98ebd89d29a23d2420e8adf9c65d818ee2219ef21b'
            '45b9fc82c7a9364450420920adcdb04a3b67eeb96f64733166da757a5ab91013'
            '04715f44a2921306538500978b4e1425a17b5c2552c5f5b6561836858448d4ba'
            '18479a8a8eac63ae7e8dac2f3b18a3345f8e78779cc8b56fde4dc58f0fd4ada6'
            '1a1738379b0413484fd1ff3521b6bc85d034f5f964311d963dd044b4966b274b'
            '8244e66b1604d10951f1b32be3269ef453c47e9eb1b80c30be79a124b697ae0a'
            '835c32b31000d2ef5c0e4a1f4f7872ecce77c19ea7cf25b5956f79bfe79094f2'
            '809c0499b881866424fa4d3e0d2e3ce402b127221c070a35da4b135818a79eeb'
            '79fc4d2ef02ff8f458b1b330c683c2a86397f056369c90176a9ddbeba3b719fd'
            'c4cae708825102d538e1ecb9a88ecb216d366feb779553a2e91f97c4b78f8427')
prepare() {
  cd $startdir/
  [ -d ${srcdir}/${_pkgfqn} ] && rm -rf ${srcdir}/${_pkgfqn}
  tar -xzf ${startdir}/${_pkgfqn}.tar.gz -C $srcdir || true

  cd ${srcdir}/${_pkgfqn}

# Not needed for > 3.2.2
# patch -p1 -i "${srcdir}"/0001-Qbs-Do-not-crash-when-using-simplified-project-view.patch

# Attempting to upstream: https://codereview.qt-project.org/#/c/93073/
# patch -p1 -i "${srcdir}"/0001-autotools-Allow-builds-to-be-done-in-buildDir.patch

# Attempting to upstream: https://codereview.qt-project.org/#/c/94366/
  patch -p1 -i "${srcdir}"/0001-autotools-Remove-broken-unchanged-check.patch
# patch -p1 -i "${srcdir}"/0002-autotools-Use-summaryInWorkdir.patch
# Already upstreamed: https://codereview.qt-project.org/#/c/94248/
# patch -p1 -i "${srcdir}"/0001-debugger-Don-t-skip-first-char-after-This-GDB-was-co.patch
  patch -p1 -i "${srcdir}"/qt-creator-3.2.0-Allow-static-clang-via-LLVM_STATIC-env-var.patch
  patch -p1 -i "${srcdir}"/qt-creator-3.2.0-Allow-iOS-plugin-on-any-platform.patch
  patch -p1 -i "${srcdir}"/qt-creator-3.2.0-Define-QBS_INSTALL_DIR-as-relative-path.patch
  patch -p1 -i "${srcdir}"/qt-creator-3.2.0-qbs-CONFIG-add-qbs_enable_project_file_updates.patch
# This one is only needed if you want to use qbs-git instead of qbs.
# patch -p1 -i "${srcdir}"/qt-creator-3.2.0-qbs-fileName-to-filePath.patch
  patch -p1 -i "${srcdir}"/qt-creator-3.2.0-MSYS2-autotools-run-shell-scripts-via-sh.patch
  patch -p1 -i "${srcdir}"/qt-creator-3.2.0-autotools-allow-non-Automake-Makefile-in-projects.patch
  patch -p1 -i "${srcdir}"/qt-creator-3.2.0-i[3456]86-and-x86-have-32bit-wordWidth.patch
  patch -p1 -i "${srcdir}"/qt-creator-3.3.0-abi-msys-is-Windows.patch

  # Use system installed qbs
  rm -rf src/shared/qbs
}

build() {
  [ -d ${srcdir}/build-${MINGW_CHOST} ] && rm -rf ${srcdir}/build-${MINGW_CHOST}
  mkdir ${srcdir}/build-${MINGW_CHOST}
  cd ${srcdir}/build-${MINGW_CHOST}
  export LLVM_INSTALL_DIR=${MINGW_PREFIX}
  export QBS_INSTALL_DIR=${MINGW_PREFIX}
  export LLVM_STATIC=1
  if check_option "debug" "y"; then
    _config_variant=debug
  else
    _config_variant=release
  fi
  ${MINGW_PREFIX}/bin/qmake.exe ../${_pkgfqn}/qtcreator.pro CONFIG+=${_config_variant}
  make
  make docs
}

package() {
  cd ${srcdir}/build-${MINGW_CHOST}
  make INSTALL_ROOT="${pkgdir}${MINGW_PREFIX}" install
  make INSTALL_ROOT="${pkgdir}${MINGW_PREFIX}" install_docs
  
  install -Dm644 ${srcdir}/${_pkgfqn}/LGPL_EXCEPTION.TXT ${pkgdir}${MINGW_PREFIX}/share/licenses/qtcreator/LGPL_EXCEPTION.TXT
}

# Please leave this block here as I use
# it to quickly make and test changes.
# return 0
# ALLGOOD="yes"
# PLUGINS="Debugger ProjectExplorer AutotoolsProjectManager"
# for PLUGIN in $PLUGINS; do
#   PLUGINLC=$(echo ${PLUGIN} | tr 'A-Z' 'a-z')
#   pushd src/build-x86_64-w64-mingw32/src/plugins/${PLUGINLC}
#     PATH=/mingw64/bin:"$PATH" make || ALLGOOD="no"
#   popd
# done
# if [ "${ALLGOOD}" = "yes" ]; then
# (
#   QTCPID=$(ps --windows | grep creator | awk '{ print $1; }')
#   while [ -n "$QTCPID" ]; do
#     cmd.exe /c "taskkill /PID $QTCPID"
#     sleep 1
#     QTCPID=$(ps --windows | grep creator | awk '{ print $1; }')
#   done
#   for PLUGIN in $PLUGINS; do
#     PLUGINLC=$(echo ${PLUGIN} | tr 'A-Z' 'a-z')
#     pushd src/build-x86_64-w64-mingw32/src/plugins/${PLUGINLC}
#       cp ../../../lib/qtcreator/plugins/${PLUGIN}d.dll /mingw64/lib/qtcreator/plugins/
#     popd
#   done
#   /mingw64/bin/qtcreator &
#   )
# fi
