diff -urN qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/autogenstep.cpp qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/autogenstep.cpp
--- qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/autogenstep.cpp	2014-08-23 23:40:48.876515200 +0100
+++ qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/autogenstep.cpp	2014-08-23 23:41:22.947841700 +0100
@@ -33,6 +33,7 @@
 #include "autotoolsproject.h"
 #include "autotoolsbuildconfiguration.h"
 #include "autotoolsprojectconstants.h"
+#include "shellprocessparameters.h"
 
 #include <projectexplorer/buildsteplist.h>
 #include <projectexplorer/target.h>
@@ -157,11 +158,12 @@
 
     ProcessParameters *pp = processParameters();
     pp->setMacroExpander(bc->macroExpander());
-    pp->setEnvironment(bc->environment());
     const QString projectDir(bc->target()->project()->projectDirectory().toString());
     pp->setWorkingDirectory(projectDir);
-    pp->setCommand(QLatin1String("./autogen.sh"));
-    pp->setArguments(additionalArguments());
+    ShellScriptProcessParametersSetCommandAndArguments(pp,
+                                                       bc->environment(),
+                                                       QLatin1String("./autogen.sh"),
+                                                       additionalArguments());
     pp->resolveAll();
 
     return AbstractProcessStep::init();
@@ -276,11 +278,12 @@
 
     ProcessParameters param;
     param.setMacroExpander(bc->macroExpander());
-    param.setEnvironment(bc->environment());
     const QString projectDir(bc->target()->project()->projectDirectory().toString());
     param.setWorkingDirectory(projectDir);
-    param.setCommand(QLatin1String("./autogen.sh"));
-    param.setArguments(m_autogenStep->additionalArguments());
+    ShellScriptProcessParametersSetCommandAndArguments(&param,
+                                                       bc->environment(),
+                                                       QLatin1String("./autogen.sh"),
+                                                       m_autogenStep->additionalArguments());
     m_summaryText = param.summary(displayName());
     emit updateSummary();
 }
diff -urN qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/autoreconfstep.cpp qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/autoreconfstep.cpp
--- qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/autoreconfstep.cpp	2014-08-23 23:40:48.875515000 +0100
+++ qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/autoreconfstep.cpp	2014-08-23 23:41:22.971344700 +0100
@@ -33,6 +33,7 @@
 #include "autotoolsproject.h"
 #include "autotoolsbuildconfiguration.h"
 #include "autotoolsprojectconstants.h"
+#include "shellprocessparameters.h"
 
 #include <projectexplorer/buildsteplist.h>
 #include <projectexplorer/target.h>
@@ -156,11 +157,12 @@
 
     ProcessParameters *pp = processParameters();
     pp->setMacroExpander(bc->macroExpander());
-    pp->setEnvironment(bc->environment());
     const QString projectDir(bc->target()->project()->projectDirectory().toString());
     pp->setWorkingDirectory(projectDir);
-    pp->setCommand(QLatin1String("autoreconf"));
-    pp->setArguments(additionalArguments());
+    ShellScriptProcessParametersSetCommandAndArguments(pp,
+                                                       bc->environment(),
+                                                       QLatin1String("autoreconf"),
+                                                       additionalArguments());
     pp->resolveAll();
 
     return AbstractProcessStep::init();
@@ -270,11 +272,12 @@
 
     ProcessParameters param;
     param.setMacroExpander(bc->macroExpander());
-    param.setEnvironment(bc->environment());
     const QString projectDir(bc->target()->project()->projectDirectory().toString());
     param.setWorkingDirectory(projectDir);
-    param.setCommand(QLatin1String("autoreconf"));
-    param.setArguments(m_autoreconfStep->additionalArguments());
+    ShellScriptProcessParametersSetCommandAndArguments(&param,
+                                                       bc->environment(),
+                                                       QLatin1String("autoreconf"),
+                                                       m_autoreconfStep->additionalArguments());
     m_summaryText = param.summary(displayName());
     emit updateSummary();
 }
diff -urN qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/autotoolsprojectmanager.pro qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/autotoolsprojectmanager.pro
--- qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/autotoolsprojectmanager.pro	2014-08-23 23:40:48.872514600 +0100
+++ qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/autotoolsprojectmanager.pro	2014-08-23 23:41:22.971844700 +0100
@@ -14,7 +14,8 @@
           autoreconfstep.h\
           configurestep.h\
           makefileparserthread.h\
-          makefileparser.h
+          makefileparser.h \
+          shellprocessparameters.h
 SOURCES = autotoolsprojectplugin.cpp\
           autotoolsopenprojectwizard.cpp\
           autotoolsmanager.cpp\
@@ -28,5 +29,6 @@
           autoreconfstep.cpp\
           configurestep.cpp\
           makefileparserthread.cpp\
-          makefileparser.cpp
+          makefileparser.cpp\
+          shellprocessparameters.cpp
 RESOURCES += autotoolsproject.qrc
diff -urN qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/autotoolsprojectmanager.qbs qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/autotoolsprojectmanager.qbs
--- qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/autotoolsprojectmanager.qbs	2014-08-23 23:40:48.872514600 +0100
+++ qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/autotoolsprojectmanager.qbs	2014-08-23 23:41:22.972844800 +0100
@@ -43,5 +43,7 @@
         "makefileparserthread.h",
         "makestep.cpp",
         "makestep.h",
+        "shellprocessparameters.cpp",
+        "shellprocessparameters.h",
     ]
 }
diff -urN qt-creator-opensource-src-3.3.0-beta1/src/plugins/autotoolsprojectmanager/configurestep.cpp qt-creator-opensource-src-3.3.0-beta1/src/plugins/autotoolsprojectmanager/configurestep.cpp
--- qt-creator-opensource-src-3.3.0-beta1/src/plugins/autotoolsprojectmanager/configurestep.cpp.orig	2014-10-29 08:44:30.000000000 +0000
+++ qt-creator-opensource-src-3.3.0-beta1/src/plugins/autotoolsprojectmanager/configurestep.cpp	2014-10-31 21:09:11.552127200 +0000
@@ -34,6 +34,7 @@
 #include "autotoolsproject.h"
 #include "autotoolsbuildconfiguration.h"
 #include "autotoolsprojectconstants.h"
+#include "shellprocessparameters.h"
 
 #include <projectexplorer/buildsteplist.h>
 #include <projectexplorer/target.h>
@@ -172,10 +173,11 @@
 
     ProcessParameters *pp = processParameters();
     pp->setMacroExpander(bc->macroExpander());
-    pp->setEnvironment(bc->environment());
     pp->setWorkingDirectory(bc->buildDirectory().toString());
-    pp->setCommand(projectDirRelativeToBuildDir(bc) + QLatin1String("configure"));
-    pp->setArguments(additionalArguments());
+    ShellScriptProcessParametersSetCommandAndArguments(pp,
+                                                       bc->environment(), 
+                                                       projectDirRelativeToBuildDir(bc) + QLatin1String("configure"),
+                                                       additionalArguments());
     pp->resolveAll();
 
     return AbstractProcessStep::init();
@@ -295,10 +297,11 @@
 
     ProcessParameters param;
     param.setMacroExpander(bc->macroExpander());
-    param.setEnvironment(bc->environment());
     param.setWorkingDirectory(bc->buildDirectory().toString());
-    param.setCommand(projectDirRelativeToBuildDir(bc) + QLatin1String("configure"));
-    param.setArguments(m_configureStep->additionalArguments());
+    ShellScriptProcessParametersSetCommandAndArguments(&param,
+                                                       bc->environment(),
+                                                       projectDirRelativeToBuildDir(bc) + QLatin1String("configure"),
+                                                       m_configureStep->additionalArguments());
     m_summaryText = param.summaryInWorkdir(displayName());
     emit updateSummary();
 }
diff -urN qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/makestep.cpp qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/makestep.cpp
--- qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/makestep.cpp	2014-08-23 23:40:48.875015000 +0100
+++ qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/makestep.cpp	2014-08-23 23:41:22.975845200 +0100
@@ -33,6 +33,7 @@
 #include "autotoolsproject.h"
 #include "autotoolsprojectconstants.h"
 #include "autotoolsbuildconfiguration.h"
+#include "shellprocessparameters.h"
 
 #include <projectexplorer/buildsteplist.h>
 #include <projectexplorer/target.h>
@@ -187,10 +188,8 @@
     // Force output to english for the parsers. Do this here and not in the toolchain's
     // addToEnvironment() to not screw up the users run environment.
     env.set(QLatin1String("LC_ALL"), QLatin1String("C"));
-    pp->setEnvironment(env);
     pp->setWorkingDirectory(bc->buildDirectory().toString());
-    pp->setCommand(tc ? tc->makeCommand(bc->environment()) : QLatin1String("make"));
-    pp->setArguments(arguments);
+    ShellScriptProcessParametersSetMakeCommandAndArguments(pp, env, tc, bc, arguments);
     pp->resolveAll();
 
     setOutputParser(new GnuMakeParser());
@@ -311,10 +310,8 @@
 
         ProcessParameters param;
         param.setMacroExpander(bc->macroExpander());
-        param.setEnvironment(bc->environment());
         param.setWorkingDirectory(bc->buildDirectory().toString());
-        param.setCommand(tc->makeCommand(bc->environment()));
-        param.setArguments(arguments);
+        ShellScriptProcessParametersSetMakeCommandAndArguments(&param, bc->environment(), tc, bc, arguments);
         m_summaryText = param.summary(displayName());
     } else {
         m_summaryText = QLatin1String("<b>") + ProjectExplorer::ToolChainKitInformation::msgNoToolChainInTarget()  + QLatin1String("</b>");
diff -urN qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/shellprocessparameters.cpp qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/shellprocessparameters.cpp
--- qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/shellprocessparameters.cpp	1970-01-01 01:00:00.000000000 +0100
+++ qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/shellprocessparameters.cpp	2014-08-23 23:41:22.977345400 +0100
@@ -0,0 +1,86 @@
+/**************************************************************************
+**
+** Copyright (C) 2014 Ray Donnelly.
+** Author: Ray Donnelly (mingw.android@gmail.com)
+** Contact: http://www.qt-project.org/legal
+**
+** This file is part of Qt Creator.
+**
+** Commercial License Usage
+** Licensees holding valid commercial Qt licenses may use this file in
+** accordance with the commercial license agreement provided with the
+** Software or, alternatively, in accordance with the terms contained in
+** a written agreement between you and Digia.  For licensing terms and
+** conditions see http://qt.digia.com/licensing.  For further information
+** use the contact form at http://qt.digia.com/contact-us.
+**
+** GNU Lesser General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Digia gives you certain additional
+** rights.  These rights are described in the Digia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+****************************************************************************/
+
+#include <QString>
+#include <QProcess>
+#include <QDir>
+#include <QFileInfo>
+
+#include "shellprocessparameters.h"
+
+using namespace Utils;
+using namespace ProjectExplorer;
+
+void ShellScriptProcessParametersSetCommandAndArguments(ProcessParameters *procParams,
+                                                        Environment const& env,
+                                                        QString command, QString args)
+{
+#if defined(Q_OS_WIN)
+    /* MSYS2 specific. This could be improved with a setting in Tools->Options */
+    QString sh_dir = QFileInfo(QCoreApplication::applicationDirPath()
+                               + QLatin1String("\\..\\..\\usr\\bin")).absoluteFilePath();
+    QString sh_exe = QFileInfo(sh_dir
+                               + QLatin1String("\\sh.exe")).absoluteFilePath();
+    Utils::Environment envCopy(env);
+    envCopy.prependOrSetPath(sh_dir);
+    procParams->setEnvironment(envCopy);
+    procParams->setCommand(sh_exe);
+    procParams->setArguments(QLatin1String("-c \"")
+                             + command
+                             + QLatin1String(" ")
+                             + args
+                             + QLatin1String("\""));
+#else
+    procParams->setEnvironment(env);
+    procParams->setCommand(command);
+    procParams->setArguments(args);
+#endif
+}
+
+void ShellScriptProcessParametersSetMakeCommandAndArguments(ProcessParameters *procParams,
+                                                            Environment const& env,
+                                                            ToolChain const* toolchain,
+                                                            BuildConfiguration *buildConfig,
+                                                            QString args)
+{
+#if defined(Q_OS_WIN)
+    Q_UNUSED(buildConfig);
+    Q_UNUSED(toolchain);
+    QString makeCommand = QLatin1String("make");
+#else
+    QString makeCommand = (toolchain && buildConfig)
+                           ? toolchain->makeCommand(buildConfig->environment())
+                           : QLatin1String("make");
+#endif
+    ShellScriptProcessParametersSetCommandAndArguments(procParams,
+                                                       env,
+                                                       makeCommand,
+                                                       args);
+}
diff -urN qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/shellprocessparameters.h qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/shellprocessparameters.h
--- qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/shellprocessparameters.h	1970-01-01 01:00:00.000000000 +0100
+++ qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/shellprocessparameters.h	2014-08-23 23:41:22.978345500 +0100
@@ -0,0 +1,49 @@
+/**************************************************************************
+**
+** Copyright (C) 2014 Ray Donnelly.
+** Author: Ray Donnelly (mingw.android@gmail.com)
+** Contact: http://www.qt-project.org/legal
+**
+** This file is part of Qt Creator.
+**
+** Commercial License Usage
+** Licensees holding valid commercial Qt licenses may use this file in
+** accordance with the commercial license agreement provided with the
+** Software or, alternatively, in accordance with the terms contained in
+** a written agreement between you and Digia.  For licensing terms and
+** conditions see http://qt.digia.com/licensing.  For further information
+** use the contact form at http://qt.digia.com/contact-us.
+**
+** GNU Lesser General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Digia gives you certain additional
+** rights.  These rights are described in the Digia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+****************************************************************************/
+
+#ifndef SHELLPROCESSPARAMETERS_H
+#define SHELLPROCESSPARAMETERS_H
+
+#include <projectexplorer/processparameters.h>
+#include <projectexplorer/toolchain.h>
+#include "autotoolsbuildconfiguration.h"
+
+void ShellScriptProcessParametersSetCommandAndArguments(ProjectExplorer::ProcessParameters *pp,
+                                                        Utils::Environment const& env,
+                                                        QString command,
+                                                        QString args);
+
+void ShellScriptProcessParametersSetMakeCommandAndArguments(ProjectExplorer::ProcessParameters *procParams,
+                                                            Utils::Environment const& env,
+                                                            ProjectExplorer::ToolChain const* toolchain,
+                                                            ProjectExplorer::BuildConfiguration *buildConfig,
+                                                            QString args);
+
+#endif // SHELLPROCESSPARAMETERS_H
