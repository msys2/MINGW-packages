# Maintainer: Christoph Reiter <reiter.christoph@gmail.com>

_realname=zlib-ng
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}" "${MINGW_PACKAGE_PREFIX}-${_realname}-compat")
pkgver=2.2.4
pkgrel=1
pkgdesc='zlib replacement with optimizations for next generation systems (mingw-w64)'
url='https://github.com/zlib-ng/zlib-ng'
arch=('any')
mingw_arch=('mingw64' 'ucrt64' 'clang64' 'clangarm64')
license=("spdx:Zlib")
makedepends=(
  "${MINGW_PACKAGE_PREFIX}-cmake"
  "${MINGW_PACKAGE_PREFIX}-ninja"
  "${MINGW_PACKAGE_PREFIX}-cc"
)
source=("${url}/archive/refs/tags/${pkgver}/${_realname}-${pkgver}.tar.gz"
        "0001-match-existing-zlib-naming.patch")
sha256sums=('a73343c3093e5cdc50d9377997c3815b878fd110bf6511c2c7759f2afb90f5a3'
            '0ef20daf2831de920ded52369a74fe81e2330c184371c762552d141e3aa76554')
b2sums=('eb118c4b1d6de1b6cb5e3e1fcc8cc36ccf794321fab49f6070868515b179845495bf8833222107cc874397a3c2043a39c28d0f5d5a2bd450afaba606747a07cd'
        '2e2744364c82b529f433433ca3c0cf1392d33bc6040bf51d0303f8d3ea789e0c6af45ee654d0d890ff9285a1124af71ca8b4c8f6dc224d21242d12ac59ff2191')

prepare() {
  cd "${_realname}-${pkgver}"
  # 1) Fix the zlib-ng naming to match the .pc file
  # 2) Make the compat naming the same as our current zlib
  patch -p1 -i "${srcdir}/0001-match-existing-zlib-naming.patch"
}

build() {
  cd "${_realname}-${pkgver}"

  declare -a extra_config
  extra_config=(
    -G Ninja
    -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}"
    -Wno-dev
    -DWITH_GTEST=OFF
  )

  # gcc 15.1 toolchain crashes sometimes when linking tests
  if [[ ${MSYSTEM} != CLANG* ]]; then
    extra_config+=("-DZLIB_ENABLE_TESTS=OFF")
  fi

  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  echo "Building zlib-ng"
  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    cmake -B build-static \
      -DBUILD_SHARED_LIBS=OFF \
      "${extra_config[@]}"
  cmake --build build-static

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    cmake -B build \
      -DBUILD_SHARED_LIBS=ON \
      "${extra_config[@]}"
  cmake --build build

  echo "Building zlib-ng-compat"
  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    cmake -B build-compat-static \
      -DBUILD_SHARED_LIBS=OFF \
      "${extra_config[@]}" \
      -DZLIB_COMPAT=ON
  cmake --build build-compat-static

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    cmake -B build-compat \
      -DBUILD_SHARED_LIBS=ON \
      "${extra_config[@]}" \
      -DZLIB_COMPAT=ON
  cmake --build build-compat
}

check() {
  cd "${_realname}-${pkgver}"
  echo "Checking zlib-ng"
  ctest --output-on-failure --test-dir build
  echo "Checking zlib-ng-compat"
  ctest --output-on-failure --test-dir build-compat
}

package_zlib-ng() {
  cd "${_realname}-${pkgver}"

  DESTDIR="${pkgdir}" cmake --install build-static
  DESTDIR="${pkgdir}" cmake --install build
  install -Dm 644 LICENSE.md -t "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}"
  install -Dm 644 README.md -t "${pkgdir}${MINGW_PREFIX}/share/doc/${_realname}"
}

package_zlib-ng-compat() {
  pkgdesc+=" (zlib compat)"
  provides=("${MINGW_PACKAGE_PREFIX}-zlib")
  conflicts=("${MINGW_PACKAGE_PREFIX}-zlib")

  cd "${_realname}-${pkgver}"
  DESTDIR="${pkgdir}" cmake --install build-compat-static
  DESTDIR="${pkgdir}" cmake --install build-compat
  install -Dm 644 LICENSE.md -t "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}-compat"
  install -Dm 644 README.md -t "${pkgdir}${MINGW_PREFIX}/share/doc/${_realname}-compat"
}

# template start; name=mingw-w64-splitpkg-wrappers; version=1.0;
# vim: set ft=bash :

# generate wrappers
for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
# template end;
