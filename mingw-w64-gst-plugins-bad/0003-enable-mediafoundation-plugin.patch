--- a/sys/mediafoundation/gstmfutils.h
+++ b/sys/mediafoundation/gstmfutils.h
@@ -38,6 +38,10 @@
 
 G_BEGIN_DECLS
 
+#ifndef GUID_NULL
+DEFINE_GUID(GUID_NULL, 0,0,0, 0,0,0,0, 0,0,0,0);
+#endif
+
 #define GST_MF_VIDEO_FORMATS \
   "{ BGRx, BGRA, BGR, RGB15, RGB16, VUYA, YUY2, YVYU, UYVY, NV12, YV12, I420," \
   " P010, P016, v210, v216, GRAY16_LE }"
--- a/sys/mediafoundation/meson.build
+++ b/sys/mediafoundation/meson.build
@@ -50,9 +50,9 @@
   subdir_done()
 endif
 
-if cc.get_id() != 'msvc'
+if host_system != 'windows'
   if mf_option.enabled()
-    error('mediafoundation plugin can only be built with MSVC')
+    error('mediafoundation plugin can only be built for Microsoft Windows')
   endif
   subdir_done()
 endif
--- a/sys/mediafoundation/gstmftransform.cpp
+++ b/sys/mediafoundation/gstmftransform.cpp
@@ -917,7 +917,7 @@
     object->output_id = 0;
   }
 
-  hr = object->transform->QueryInterface (IID_PPV_ARGS (&object->codec_api));
+  hr = object->transform->QueryInterface (IID_ICodecAPI, reinterpret_cast<void**>(&object->codec_api));
   if (!gst_mf_result (hr)) {
     GST_WARNING_OBJECT (object, "ICodecAPI is unavailable");
   }
--- a/sys/mediafoundation/gstmfvideobuffer.h
+++ b/sys/mediafoundation/gstmfvideobuffer.h
@@ -32,6 +32,7 @@
 #endif
 
 /* Define UUID for QueryInterface() */
+DEFINE_GUID(IID_IGstMFVideoBuffer, 0xce922806, 0xa8a6, 0x4e1e, 0x87,0x1f, 0xe0,0xcd,0xd5,0xfc,0x98,0x99);
 class DECLSPEC_UUID("ce922806-a8a6-4e1e-871f-e0cdd5fc9899")
 IGstMFVideoBuffer : public IMFMediaBuffer, public IMF2DBuffer
 {
@@ -119,5 +120,7 @@
   gpointer user_data_;
   GDestroyNotify notify_;
 };
-
+#ifdef __CRT_UUID_DECL
+__CRT_UUID_DECL(IGstMFVideoBuffer, 0xce922806, 0xa8a6, 0x4e1e, 0x87,0x1f, 0xe0,0xcd,0xd5,0xfc,0x98,0x99)
+#endif
 #endif /* __GST_MF_VIDEO_BUFFER_H__ */
