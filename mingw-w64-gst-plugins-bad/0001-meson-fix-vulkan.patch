--- a/gst-libs/gst/vulkan/meson.build
+++ a/gst-libs/gst/vulkan/meson.build
@@ -109,7 +109,7 @@
   #   on implementing a proper Metal extension for Vulkan
   #   https://github.com/KhronosGroup/MoltenVK/issues/492
   vulkan_dep = cc.find_library('MoltenVK', required : get_option('vulkan'))
-elif host_system == 'windows'
+elif host_system == 'windows' and cc.get_id() == 'msvc'
   vulkan_root = run_command(python3, '-c', 'import os; print(os.environ.get("VK_SDK_PATH"))', check: false).stdout().strip()
   if vulkan_root != '' and vulkan_root != 'None'
     vulkan_lib_dir = ''
@@ -138,7 +138,7 @@
   endif
 endif
 
-if host_system != 'windows'
+if host_system != 'windows' or cc.get_id() != 'msvc'
   has_vulkan_header = cc.has_header('vulkan/vulkan_core.h')
 endif
 
--- ./gst-libs/gst/vulkan/meson.build.orig	2022-02-05 14:20:35.191999800 +0100
+++ ./gst-libs/gst/vulkan/meson.build	2022-02-05 14:21:13.880211400 +0100
@@ -242,8 +242,14 @@
 if host_system == 'windows'
   gdi_dep = cc.find_library('gdi32', required : get_option('vulkan'))
 
+  if vulkan_inc_dir != ''
+    has_vulkan_win32 = cc.has_header('vulkan/vulkan_win32.h', args: '-I' + vulkan_inc_dir)
+  else
+    has_vulkan_win32 = cc.has_header('vulkan/vulkan_win32.h')
+  endif
+
   # Cannot use internal dependency object with cc.has_header()
-  if gdi_dep.found() and cc.has_header('vulkan/vulkan_win32.h', args: '-I' + vulkan_inc_dir)
+  if gdi_dep.found() and has_vulkan_win32
     vulkan_priv_sources += ['win32/gstvkwindow_win32.c']
     optional_deps += [gdi_dep]
     vulkan_windowing = true
