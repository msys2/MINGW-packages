--- gst-plugins-bad-1.26.0/gst-libs/gst/vulkan/meson.build.orig	2025-03-12 07:18:50.597573000 +0100
+++ gst-plugins-bad-1.26.0/gst-libs/gst/vulkan/meson.build	2025-03-12 07:26:11.480212400 +0100
@@ -128,7 +128,7 @@
     objcpp = meson.get_compiler('objcpp')
     vulkan_dep = objcpp.find_library('MoltenVK', required : vulkan_opt)
   endif
-elif host_system == 'windows'
+elif host_system == 'windows' and cc.get_id() == 'msvc'
   vulkan_root = run_command(python3, '-c', 'import os; print(os.environ.get("VK_SDK_PATH"))', check: false).stdout().strip()
   if vulkan_root != '' and vulkan_root != 'None'
     vulkan_lib_dir = ''
@@ -158,7 +158,7 @@
   endif
 endif
 
-if host_system != 'windows'
+if host_system != 'windows' or cc.get_id() != 'msvc'
   has_vulkan_header = cc.has_header('vulkan/vulkan_core.h', dependencies: vulkan_dep, required: vulkan_opt)
 endif
 
@@ -284,8 +284,14 @@
 if host_system == 'windows'
   gdi_dep = cc.find_library('gdi32', required : vulkan_opt)
 
+  if vulkan_inc_dir != ''
+    has_vulkan_win32 = cc.has_header('vulkan/vulkan_win32.h', args: '-I' + vulkan_inc_dir)
+  else
+    has_vulkan_win32 = cc.has_header('vulkan/vulkan_win32.h')
+  endif
+
   # Cannot use internal dependency object with cc.has_header()
-  if gdi_dep.found() and cc.has_header('vulkan/vulkan_win32.h', args: '-I' + vulkan_inc_dir, required: vulkan_opt)
+  if gdi_dep.found() and has_vulkan_win32
     vulkan_priv_sources += ['win32/gstvkwindow_win32.c']
     optional_deps += [gdi_dep]
     vulkan_windowing = true
