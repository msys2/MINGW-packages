# Maintainer: Junjie Mao <eternal.n08@gmail.com>

_realname=ocaml
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=4.02.3
pkgrel=2
pkgdesc="An industrial strength programming language supporting functional, imperative and object-oriented styles (mingw-w64)"
arch=('any')
url='http://ocaml.org/'
license=('Q Public Licence 1.0' 'GPL2')
depends=("${MINGW_PACKAGE_PREFIX}-flexdll")
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc"
             "diffutils")
source=("http://caml.inria.fr/pub/distrib/ocaml-${pkgver%.*}/${_realname}-${pkgver}.tar.gz"
        "0002-Adapt-to-msys2-directory-layout.patch"
        "0003-Install-manuals-in-msys2.patch"
        "0004-camlheader-has-the-extension-.exe-in-msys2.patch"
        "0005-Install-libraries-to-lib-ocaml-instead-of-lib.patch"
        "0006-Configure-the-relative-paths-for-ocaml-libraries-on-.patch"
        "0007-Convert-to-windows-path-before-checking-stats.patch"
        "0008-Use-the-standard-paths-as-default-in-ocamlbuild.patch")
sha256sums=('928fb5f64f4e141980ba567ff57b62d8dc7b951b58be9590ffb1be2172887a72'
            '491e651ef0a5e361b5b1c3081cc406cd604782e33695b0b5bb4b602dd44b5ec9'
            '2f410412bd61ed7912ce6784ed56e3e0713c67e11daaceef4a2642fe537cfd66'
            '1932626f4bb89233811d2b49ce03f8eecd06a72d6a8e9d3b19afd8193fd59b99'
            '2e1eae8bf4f7564c3e8e634d8f9d541d6878ee29eb7a59b1025a1162d90cbfdc'
            'fac7dcddfed2e8a7a305fb86c1594f596cc8391ac58551fb4e02a5de0ab5da6e'
            '117e62270038aac0f7a2737685c04120864ab3a89b816c6e54c5a81cc848293c'
            '5dce92c7b228eee6dda9595288e83b5c47008b530013ca851ebc888700a2ae6a')
install=ocaml-${CARCH}.install

prepare() {
  cd ${srcdir}/${_realname}-${pkgver}

  mv config/Makefile.mingw{,32}
  cp config/m-nt.h config/m.h
  cp config/s-nt.h config/s.h

  patch -p1 -i ${srcdir}/0002-Adapt-to-msys2-directory-layout.patch
  patch -p1 -i ${srcdir}/0003-Install-manuals-in-msys2.patch
  patch -p1 -i ${srcdir}/0004-camlheader-has-the-extension-.exe-in-msys2.patch
  patch -p1 -i ${srcdir}/0005-Install-libraries-to-lib-ocaml-instead-of-lib.patch
  patch -p1 -i ${srcdir}/0006-Configure-the-relative-paths-for-ocaml-libraries-on-.patch
  patch -p1 -i ${srcdir}/0007-Convert-to-windows-path-before-checking-stats.patch
  patch -p1 -i ${srcdir}/0008-Use-the-standard-paths-as-default-in-ocamlbuild.patch
}

build() {
  [[ -d ${srcdir}/build-${MINGW_CHOST} ]] && rm -rf ${srcdir}/build-${MINGW_CHOST}
  cp -rf ${_realname}-${pkgver} build-${MINGW_CHOST}

  unset FLEXDIR
  unset OCAMLDIR
  cd ${srcdir}/build-${MINGW_CHOST}
  cp config/Makefile.${MINGW_PREFIX#/} config/Makefile

  make -f Makefile.nt world TOOLPREF= -j1
  make -f Makefile.nt bootstrap TOOLPREF= -j1
  make -f Makefile.nt opt TOOLPREF= -j1
  make -f Makefile.nt opt.opt TOOLPREF= -j1
}

check() {
  # The testsuite refuses to compile due to lack of headers such as sys/resource.h
  plain "skip"
}

package() {
  cd ${srcdir}/build-${MINGW_CHOST}
  make -f Makefile.nt install TOOLPREF= PREFIX="${pkgdir}${MINGW_PREFIX}" -j1
  [ -f LICENSE ] && install -Dm644 LICENSE ${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE
  mv ${pkgdir}${MINGW_PREFIX}/lib/ocaml/stublibs/*.dll ${pkgdir}${MINGW_PREFIX}/bin
}
