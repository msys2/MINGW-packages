diff -ruN putty/windows/windlg.c putty.new/windows/windlg.c
--- putty/windows/windlg.c	2014-11-19 13:05:38.160482800 +0100
+++ putty.new/windows/windlg.c	2014-11-19 12:55:03.122840200 +0100
@@ -209,7 +209,7 @@
 	  case IDA_LICENCE:
 	    EnableWindow(hwnd, 0);
 	    DialogBox(hinst, MAKEINTRESOURCE(IDD_LICENCEBOX),
-		      hwnd, LicenceProc);
+		      hwnd, (DLGPROC)LicenceProc);
 	    EnableWindow(hwnd, 1);
 	    SetActiveWindow(hwnd);
 	    return 0;
@@ -607,7 +607,7 @@
 void modal_about_box(HWND hwnd)
 {
     EnableWindow(hwnd, 0);
-    DialogBox(hinst, MAKEINTRESOURCE(IDD_ABOUTBOX), hwnd, AboutProc);
+    DialogBox(hinst, MAKEINTRESOURCE(IDD_ABOUTBOX), hwnd, (DLGPROC)AboutProc);
     EnableWindow(hwnd, 1);
     SetActiveWindow(hwnd);
 }
@@ -627,7 +627,7 @@
     {
 	HWND hwnd;
 	hwnd = CreateDialog(hinst, MAKEINTRESOURCE(IDD_ABOUTBOX),
-			    NULL, NullDlgProc);
+			    NULL, (DLGPROC)NullDlgProc);
 	ShowWindow(hwnd, SW_HIDE);
 	SetActiveWindow(hwnd);
 	DestroyWindow(hwnd);
@@ -734,7 +734,7 @@
 {
     if (!logbox) {
 	logbox = CreateDialog(hinst, MAKEINTRESOURCE(IDD_LOGBOX),
-			      hwnd, LogProc);
+			      hwnd, (DLGPROC)LogProc);
 	ShowWindow(logbox, SW_SHOWNORMAL);
     }
     SetActiveWindow(logbox);
@@ -742,7 +742,7 @@
 
 void showabout(HWND hwnd)
 {
-    DialogBox(hinst, MAKEINTRESOURCE(IDD_ABOUTBOX), hwnd, AboutProc);
+  DialogBox(hinst, MAKEINTRESOURCE(IDD_ABOUTBOX), hwnd, (DLGPROC)AboutProc);
 }
 
 int verify_ssh_host_key(void *frontend, char *host, int port, char *keytype,
diff -ruN putty/windows/window.c putty.new/windows/window.c
--- putty/windows/window.c	2014-11-19 13:05:38.160482800 +0100
+++ putty.new/windows/window.c	2014-11-19 12:57:54.829526500 +0100
@@ -803,7 +803,7 @@
 	    AppendMenu(m, MF_SEPARATOR, 0, 0);
 	    AppendMenu(m, MF_ENABLED, IDM_NEWSESS, "Ne&w Session...");
 	    AppendMenu(m, MF_ENABLED, IDM_DUPSESS, "&Duplicate Session");
-	    AppendMenu(m, MF_POPUP | MF_ENABLED, savedsess_menu,
+	    AppendMenu(m, MF_POPUP | MF_ENABLED, (UINT_PTR)savedsess_menu,
 		       "Sa&ved Sessions");
 	    AppendMenu(m, MF_ENABLED, IDM_RECONF, "Chan&ge Settings...");
 	    AppendMenu(m, MF_SEPARATOR, 0, 0);
@@ -1008,7 +1008,7 @@
 		saved_menu = new_menu; /* XXX lame stacking */
 		new_menu = CreatePopupMenu();
 		AppendMenu(saved_menu, MF_POPUP | MF_ENABLED,
-			   new_menu, specials[i].name);
+			   (UINT_PTR)new_menu, specials[i].name);
 		break;
 	      case TS_EXITMENU:
 		nesting--;
@@ -1039,7 +1039,7 @@
 	if (new_menu) {
 	    InsertMenu(popup_menus[j].menu, IDM_SHOWLOG,
 		       MF_BYCOMMAND | MF_POPUP | MF_ENABLED,
-		       new_menu, "S&pecial Command");
+		       (UINT_PTR)new_menu, "S&pecial Command");
 	    InsertMenu(popup_menus[j].menu, IDM_SHOWLOG,
 		       MF_BYCOMMAND | MF_SEPARATOR, IDM_SPECIALSEP, 0);
 	}
diff -ruN putty/windows/wingss.c putty.new/windows/wingss.c
--- putty/windows/wingss.c	2014-11-19 12:27:33.408335000 +0100
+++ putty.new/windows/wingss.c	2014-11-19 12:42:57.128972300 +0100
@@ -90,7 +90,7 @@
 	if (ret == ERROR_SUCCESS && type == REG_SZ) {
 	    buffer = snewn(size + 20, char);
 	    ret = RegQueryValueEx(regkey, "InstallDir", NULL,
-				  &type, buffer, &size);
+				  &type, (LPBYTE)buffer, &size);
 	    if (ret == ERROR_SUCCESS && type == REG_SZ) {
 		strcat(buffer, "\\bin\\gssapi32.dll");
 		module = LoadLibrary(buffer);
diff -ruN putty/windows/winhelp.c putty.new/windows/winhelp.c
--- putty/windows/winhelp.c	2014-11-19 13:05:38.160482800 +0100
+++ putty.new/windows/winhelp.c	2014-11-19 12:36:01.276512800 +0100
@@ -105,7 +105,7 @@
 #endif /* NO_HTMLHELP */
 	if (help_path) {
 	    char *cmd = dupprintf("JI(`',`%.*s')", colonpos, topic);
-	    WinHelp(hwnd, help_path, HELP_COMMAND, cmd);
+	    WinHelp(hwnd, help_path, HELP_COMMAND, (LPARAM)cmd);
 	    sfree(cmd);
 	}
     } else {
diff -ruN putty/windows/winpgen.c putty.new/windows/winpgen.c
--- putty/windows/winpgen.c	2014-11-19 13:05:38.191677400 +0100
+++ putty.new/windows/winpgen.c	2014-11-19 13:03:39.991112100 +0100
@@ -302,7 +302,7 @@
 	    return 0;
 	  case 101:
 	    EnableWindow(hwnd, 0);
-	    DialogBox(hinst, MAKEINTRESOURCE(214), hwnd, LicenceProc);
+	    DialogBox(hinst, MAKEINTRESOURCE(214), hwnd, (DLGPROC)LicenceProc);
 	    EnableWindow(hwnd, 1);
 	    SetActiveWindow(hwnd);
 	    return 0;
@@ -678,7 +678,7 @@
             pps.comment = comment;
 	    dlgret = DialogBoxParam(hinst,
 				    MAKEINTRESOURCE(210),
-				    NULL, PassphraseProc,
+				    NULL, (DLGPROC)PassphraseProc,
 				    (LPARAM) &pps);
 	    if (!dlgret) {
 		ret = -2;
@@ -846,7 +846,7 @@
 	    AppendMenu(menu1, MF_ENABLED, IDC_SAVE, "&Save private key");
 	    AppendMenu(menu1, MF_SEPARATOR, 0, 0);
 	    AppendMenu(menu1, MF_ENABLED, IDC_QUIT, "E&xit");
-	    AppendMenu(menu, MF_POPUP | MF_ENABLED, menu1, "&File");
+	    AppendMenu(menu, MF_POPUP | MF_ENABLED, (UINT_PTR)menu1, "&File");
 	    state->filemenu = menu1;
 
 	    menu1 = CreateMenu();
@@ -855,7 +855,7 @@
 	    AppendMenu(menu1, MF_ENABLED, IDC_KEYSSH1, "SSH-&1 key (RSA)");
 	    AppendMenu(menu1, MF_ENABLED, IDC_KEYSSH2RSA, "SSH-2 &RSA key");
 	    AppendMenu(menu1, MF_ENABLED, IDC_KEYSSH2DSA, "SSH-2 &DSA key");
-	    AppendMenu(menu, MF_POPUP | MF_ENABLED, menu1, "&Key");
+	    AppendMenu(menu, MF_POPUP | MF_ENABLED, (UINT_PTR)menu1, "&Key");
 	    state->keymenu = menu1;
 
 	    menu1 = CreateMenu();
@@ -865,7 +865,7 @@
 		       "Export &OpenSSH key");
 	    AppendMenu(menu1, MF_ENABLED, IDC_EXPORT_SSHCOM,
 		       "Export &ssh.com key");
-	    AppendMenu(menu, MF_POPUP | MF_ENABLED, menu1,
+	    AppendMenu(menu, MF_POPUP | MF_ENABLED, (UINT_PTR)menu1,
 		       "Con&versions");
 	    state->cvtmenu = menu1;
 
@@ -873,7 +873,7 @@
 	    AppendMenu(menu1, MF_ENABLED, IDC_ABOUT, "&About");
 	    if (has_help())
 		AppendMenu(menu1, MF_ENABLED, IDC_GIVEHELP, "&Help");
-	    AppendMenu(menu, MF_POPUP | MF_ENABLED, menu1, "&Help");
+	    AppendMenu(menu, MF_POPUP | MF_ENABLED, (UINT_PTR)menu1, "&Help");
 
 	    SetMenu(hwnd, menu);
 	}
@@ -1047,7 +1047,7 @@
 	    break;
 	  case IDC_ABOUT:
 	    EnableWindow(hwnd, 0);
-	    DialogBox(hinst, MAKEINTRESOURCE(213), hwnd, AboutProc);
+	    DialogBox(hinst, MAKEINTRESOURCE(213), hwnd, (DLGPROC)AboutProc);
 	    EnableWindow(hwnd, 1);
 	    SetActiveWindow(hwnd);
 	    return 0;
@@ -1452,7 +1452,7 @@
     }
 
     random_ref();
-    ret = DialogBox(hinst, MAKEINTRESOURCE(201), NULL, MainDlgProc) != IDOK;
+    ret = DialogBox(hinst, MAKEINTRESOURCE(201), NULL, (DLGPROC)MainDlgProc) != IDOK;
 
     cleanup_exit(ret);
     return ret;			       /* just in case optimiser complains */
diff -ruN putty/windows/winpgnt.c putty.new/windows/winpgnt.c
--- putty/windows/winpgnt.c	2014-11-19 13:05:38.191677400 +0100
+++ putty.new/windows/winpgnt.c	2014-11-19 12:40:38.226534000 +0100
@@ -218,7 +218,7 @@
 	    return 0;
 	  case 101:
 	    EnableWindow(hwnd, 0);
-	    DialogBox(hinst, MAKEINTRESOURCE(214), hwnd, LicenceProc);
+	    DialogBox(hinst, MAKEINTRESOURCE(214), hwnd, (DLGPROC)LicenceProc);
 	    EnableWindow(hwnd, 1);
 	    SetActiveWindow(hwnd);
 	    return 0;
@@ -539,7 +539,7 @@
 
 		original_pass = 1;
 		dlgret = DialogBoxParam(hinst, MAKEINTRESOURCE(210),
-					NULL, PassphraseProc, (LPARAM) &pps);
+					NULL, (DLGPROC)PassphraseProc, (LPARAM) &pps);
 		passphrase_box = NULL;
 		if (!dlgret) {
 		    if (comment)
@@ -1816,7 +1816,7 @@
 	  case IDM_VIEWKEYS:
 	    if (!keylist) {
 		keylist = CreateDialog(hinst, MAKEINTRESOURCE(211),
-				       NULL, KeyListProc);
+				       NULL, (DLGPROC)KeyListProc);
 		ShowWindow(keylist, SW_SHOWNORMAL);
 	    }
 	    /* 
@@ -1841,7 +1841,7 @@
 	  case IDM_ABOUT:
 	    if (!aboutbox) {
 		aboutbox = CreateDialog(hinst, MAKEINTRESOURCE(213),
-					NULL, AboutProc);
+					NULL, (DLGPROC)AboutProc);
 		ShowWindow(aboutbox, SW_SHOWNORMAL);
 		/* 
 		 * Sometimes the window comes up minimised / hidden
diff -ruN putty/windows/winprint.c putty.new/windows/winprint.c
--- putty/windows/winprint.c	2014-11-19 12:27:33.423960900 +0100
+++ putty.new/windows/winprint.c	2014-11-19 13:00:03.195945500 +0100
@@ -30,7 +30,7 @@
      * we'll need for the output. Discard the return value since it
      * will almost certainly be a failure due to lack of space.
      */
-    EnumPrinters(param, NULL, level, (*buffer)+offset, 512,
+    EnumPrinters(param, NULL, level, (LPBYTE)((*buffer)+offset), 512,
 		 &needed, &nprinters);
 
     if (needed < 512)
@@ -38,7 +38,7 @@
 
     *buffer = sresize(*buffer, offset+needed, char);
 
-    if (EnumPrinters(param, NULL, level, (*buffer)+offset,
+    if (EnumPrinters(param, NULL, level, (LPBYTE)((*buffer)+offset),
                      needed, &needed, &nprinters) == 0)
         return FALSE;
 
@@ -139,7 +139,7 @@
     docinfo.pOutputFile = NULL;
     docinfo.pDatatype = "RAW";
 
-    if (!StartDocPrinter(ret->hprinter, 1, (LPSTR)&docinfo))
+    if (!StartDocPrinter(ret->hprinter, 1, (LPBYTE)&docinfo))
 	goto error;
     jobstarted = 1;
 
diff -ruN putty/windows/winstore.c putty.new/windows/winstore.c
--- putty/windows/winstore.c	2014-11-19 12:27:33.439585700 +0100
+++ putty.new/windows/winstore.c	2014-11-19 12:52:08.474598400 +0100
@@ -110,7 +110,7 @@
 void write_setting_s(void *handle, const char *key, const char *value)
 {
     if (handle)
-	RegSetValueEx((HKEY) handle, key, 0, REG_SZ, value,
+      RegSetValueEx((HKEY) handle, key, 0, REG_SZ, (LPBYTE)value,
 		      1 + strlen(value));
 }
 
@@ -168,7 +168,7 @@
     allocsize = size+1;         /* allow for an extra NUL if needed */
     ret = snewn(allocsize, char);
     if (RegQueryValueEx((HKEY) handle, key, 0,
-			&type, ret, &size) != ERROR_SUCCESS ||
+			&type, (LPBYTE)ret, &size) != ERROR_SUCCESS ||
 	type != REG_SZ) {
         sfree(ret);
         return NULL;
@@ -372,7 +372,7 @@
 
     readlen = len;
     otherstr = snewn(len, char);
-    ret = RegQueryValueEx(rkey, regname, NULL, &type, otherstr, &readlen);
+    ret = RegQueryValueEx(rkey, regname, NULL, &type, (LPBYTE)otherstr, &readlen);
 
     if (ret != ERROR_SUCCESS && ret != ERROR_MORE_DATA &&
 	!strcmp(keytype, "rsa")) {
@@ -385,7 +385,7 @@
 	char *oldstyle = snewn(len + 10, char);	/* safety margin */
 	readlen = len;
 	ret = RegQueryValueEx(rkey, justhost, NULL, &type,
-			      oldstyle, &readlen);
+			      (LPBYTE)oldstyle, &readlen);
 
 	if (ret == ERROR_SUCCESS && type == REG_SZ) {
 	    /*
@@ -431,7 +431,7 @@
 	     * wrong, and hyper-cautiously do nothing.
 	     */
 	    if (!strcmp(otherstr, key))
-		RegSetValueEx(rkey, regname, 0, REG_SZ, otherstr,
+	      RegSetValueEx(rkey, regname, 0, REG_SZ, (LPBYTE)otherstr,
 			      strlen(otherstr) + 1);
 	}
 
@@ -466,7 +466,7 @@
 
     if (RegCreateKey(HKEY_CURRENT_USER, PUTTY_REG_POS "\\SshHostKeys",
 		     &rkey) == ERROR_SUCCESS) {
-	RegSetValueEx(rkey, regname, 0, REG_SZ, key, strlen(key) + 1);
+      RegSetValueEx(rkey, regname, 0, REG_SZ, (LPBYTE)key, strlen(key) + 1);
 	RegCloseKey(rkey);
     } /* else key does not exist in registry */
 
@@ -526,7 +526,7 @@
     if (RegOpenKey(HKEY_CURRENT_USER, PUTTY_REG_POS, &rkey) ==
 	ERROR_SUCCESS) {
 	int ret = RegQueryValueEx(rkey, "RandSeedFile",
-				  0, &type, seedpath, &size);
+				  0, &type, (LPBYTE)seedpath, (LPDWORD)&size);
 	if (ret != ERROR_SUCCESS || type != REG_SZ)
 	    seedpath[0] = '\0';
 	RegCloseKey(rkey);
@@ -662,7 +662,7 @@
     value_length = 200;
     old_value = snewn(value_length, char);
     ret = RegQueryValueEx(pjumplist_key, reg_jumplist_value, NULL, &type,
-                          old_value, &value_length);
+                          (LPBYTE)old_value, (LPDWORD)&value_length);
     /* When the passed buffer is too small, ERROR_MORE_DATA is
      * returned and the required size is returned in the length
      * argument. */
@@ -670,7 +670,7 @@
         sfree(old_value);
         old_value = snewn(value_length, char);
         ret = RegQueryValueEx(pjumplist_key, reg_jumplist_value, NULL, &type,
-                              old_value, &value_length);
+                              (LPBYTE)old_value, (LPDWORD)&value_length);
     }
 
     if (ret == ERROR_FILE_NOT_FOUND) {
@@ -744,7 +744,7 @@
 
         /* Save the new list to the registry. */
         ret = RegSetValueEx(pjumplist_key, reg_jumplist_value, 0, REG_MULTI_SZ,
-                            new_value, piterator_new - new_value);
+                            (LPBYTE)new_value, piterator_new - new_value);
 
         sfree(old_value);
         old_value = new_value;
