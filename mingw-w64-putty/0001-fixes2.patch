diff -aur -xterminal.c '-x*.orig' '-x*.rej' putty-0.67.orig/misc.c putty-0.67/misc.c
--- putty-0.67.orig/misc.c	2016-02-29 21:02:33.000000000 +0100
+++ putty-0.67/misc.c	2016-03-19 21:12:29.993850200 +0100
@@ -360,21 +360,21 @@
 
 /*
  * Do an sprintf(), but into a custom-allocated buffer.
- * 
+ *
  * Currently I'm doing this via vsnprintf. This has worked so far,
  * but it's not good, because vsnprintf is not available on all
  * platforms. There's an ifdef to use `_vsnprintf', which seems
  * to be the local name for it on Windows. Other platforms may
  * lack it completely, in which case it'll be time to rewrite
  * this function in a totally different way.
- * 
+ *
  * The only `properly' portable solution I can think of is to
  * implement my own format string scanner, which figures out an
  * upper bound for the length of each formatting directive,
  * allocates the buffer as it goes along, and calls sprintf() to
  * actually process each directive. If I ever need to actually do
  * this, some caveats:
- * 
+ *
  *  - It's very hard to find a reliable upper bound for
  *    floating-point values. %f, in particular, when supplied with
  *    a number near to the upper or lower limit of representable
@@ -383,10 +383,10 @@
  *    constants in <float.h>, or even to predict it dynamically by
  *    looking at the exponent of the specific float provided, but
  *    it won't be fun.
- * 
+ *
  *  - Don't forget to _check_, after calling sprintf, that it's
  *    used at most the amount of space we had available.
- * 
+ *
  *  - Fault any formatting directive we don't fully understand. The
  *    aim here is to _guarantee_ that we never overflow the buffer,
  *    because this is a security-critical function. If we see a
@@ -551,7 +551,7 @@
 /* ----------------------------------------------------------------------
  * Generic routines to deal with send buffers: a linked list of
  * smallish blocks, with the operations
- * 
+ *
  *  - add an arbitrary amount of data to the end of the list
  *  - remove the first N bytes from the list
  *  - return a (pointer,length) pair giving some initial data in
@@ -834,7 +834,7 @@
     if (L) {
 	int delta;
 	debug_printf("\t%d (0x%x) bytes:\n", len, len);
-	delta = 15 & (unsigned long int) p;
+	delta = 15 & (uintptr_t) p;
 	p -= delta;
 	len += delta;
     }
diff -aur -xterminal.c '-x*.orig' '-x*.rej' putty-0.67.orig/mkfiles.pl putty-0.67/mkfiles.pl
--- putty-0.67.orig/mkfiles.pl	2016-02-29 21:02:33.000000000 +0100
+++ putty-0.67/mkfiles.pl	2016-03-19 21:12:29.993850200 +0100
@@ -454,11 +454,11 @@
     "# You may also need to tell windres where to find include files:\n".
     "# RCINC = --include-dir c:\\cygwin\\include\\\n".
     "\n".
-    &splitline("CFLAGS = -mno-cygwin -Wall -O2 -D_WINDOWS -DDEBUG -DWIN32S_COMPAT".
+    &splitline("CFLAGS = -Wall -Werror -O2 -D_WINDOWS -DDEBUG -DWIN32S_COMPAT".
       " -D_NO_OLDNAMES -DNO_MULTIMON -DNO_HTMLHELP -DNO_SECUREZEROMEMORY " .
 	       (join " ", map {"-I$dirpfx$_"} @srcdirs)) .
 	       "\n".
-    "LDFLAGS = -mno-cygwin -s\n".
+    "LDFLAGS = -s\n".
     &splitline("RCFLAGS = \$(RCINC) --define WIN32=1 --define _WIN32=1 ".
       "--define WINVER=0x0400 ".(join " ", map {"-I$dirpfx$_"} @srcdirs))."\n".
     "\n".
diff -aur -xterminal.c '-x*.orig' '-x*.rej' putty-0.67.orig/sshbn.c putty-0.67/sshbn.c
--- putty-0.67.orig/sshbn.c	2016-02-29 21:02:33.000000000 +0100
+++ putty-0.67/sshbn.c	2016-03-19 21:12:30.009476500 +0100
@@ -7,6 +7,7 @@
 #include <stdlib.h>
 #include <string.h>
 #include <limits.h>
+#include <stdint.h>
 
 #include "misc.h"
 
@@ -576,7 +577,7 @@
 	if (h >= m0) {
 	    /*
 	     * Special case.
-	     * 
+	     *
 	     * To illustrate it, suppose a BignumInt is 8 bits, and
 	     * we are dividing (say) A1:23:45:67 by A1:B2:C3. Then
 	     * our initial division will be 0xA123 / 0xA1, which
@@ -585,7 +586,7 @@
 	     * are not violated, since the full number A1:23:... is
 	     * _less_ than the quotient prefix A1:B2:... and so the
 	     * following correction loop would have sorted it out.
-	     * 
+	     *
 	     * In this situation we set q to be the largest
 	     * quotient we _can_ stomach (0xFF, of course).
 	     */
@@ -1795,7 +1796,7 @@
             if (ptrnum >= lenof(ptrs))
                 break;
             ptrs[ptrnum++] = q;
-            
+
             for (i = -((end - start) & 1); i < end-start; i += 2) {
                 unsigned char val = (i < 0 ? 0 : fromxdigit(start[i]));
                 val = val * 16 + fromxdigit(start[i+1]);
@@ -1824,7 +1825,7 @@
                 char *bs = bignum_decimal(b);
                 char *cs = bignum_decimal(c);
                 char *ps = bignum_decimal(p);
-                
+
                 printf("%d: fail: %s * %s gave %s expected %s\n",
                        line, as, bs, ps, cs);
                 fails++;
@@ -1860,7 +1861,7 @@
                 char *ms = bignum_decimal(m);
                 char *cs = bignum_decimal(c);
                 char *ps = bignum_decimal(p);
-                
+
                 printf("%d: fail: %s * %s mod %s gave %s expected %s\n",
                        line, as, bs, ms, ps, cs);
                 fails++;
@@ -1898,7 +1899,7 @@
                 char *cs = bignum_decimal(modulus);
                 char *ds = bignum_decimal(answer);
                 char *ps = bignum_decimal(expected);
-                
+
                 printf("%d: fail: %s ^ %s mod %s gave %s expected %s\n",
                        line, as, bs, cs, ds, ps);
                 fails++;
diff -aur -xterminal.c '-x*.orig' '-x*.rej' putty-0.67.orig/sshbn.h putty-0.67/sshbn.h
--- putty-0.67.orig/sshbn.h	2016-02-29 21:02:33.000000000 +0100
+++ putty-0.67/sshbn.h	2016-03-19 21:12:30.009476500 +0100
@@ -26,7 +26,7 @@
  * using the same 'two machine registers' kind of code generation that
  * 32-bit targets use for 64-bit ints. If we have one of these, we can
  * use a 64-bit BignumInt and a 128-bit BignumDblInt. */
-typedef __uint64_t BignumInt;
+typedef uint64_t BignumInt;
 typedef __uint128_t BignumDblInt;
 #define BIGNUM_INT_MASK  0xFFFFFFFFFFFFFFFFULL
 #define BIGNUM_TOP_BIT   0x8000000000000000ULL
diff -aur -xterminal.c '-x*.orig' '-x*.rej' putty-0.67.orig/windows/wincons.c putty-0.67/windows/wincons.c
--- putty-0.67.orig/windows/wincons.c	2016-02-29 21:02:33.000000000 +0100
+++ putty-0.67/windows/wincons.c	2016-03-19 21:12:30.009476500 +0100
@@ -308,7 +308,7 @@
 
 int console_get_userpass_input(prompts_t *p, unsigned char *in, int inlen)
 {
-    HANDLE hin, hout;
+    HANDLE hin = NULL, hout = NULL;
     size_t curr_prompt;
 
     /*
diff -aur -xterminal.c '-x*.orig' '-x*.rej' putty-0.67.orig/windows/winctrls.c putty-0.67/windows/winctrls.c
--- putty-0.67.orig/windows/winctrls.c	2016-02-29 21:02:33.000000000 +0100
+++ putty-0.67/windows/winctrls.c	2016-03-19 21:12:30.009476500 +0100
@@ -76,7 +76,7 @@
     if (cp->hwnd) {
 	ctl = CreateWindowEx(exstyle, wclass, wtext, wstyle,
 			     r.left, r.top, r.right, r.bottom,
-			     cp->hwnd, (HMENU) wid, hinst, NULL);
+			     cp->hwnd, (HMENU)(intptr_t)wid, hinst, NULL);
 	SendMessage(ctl, WM_SETFONT, cp->font, MAKELPARAM(TRUE, 0));
 
 	if (!strcmp(wclass, "LISTBOX")) {
@@ -249,12 +249,12 @@
  * (you might want this not to equal the number of buttons if you
  * needed to line up some 2s and some 3s to look good in the same
  * panel).
- * 
+ *
  * There's a bit of a hack in here to ensure that if nacross
  * exceeds the actual number of buttons, the rightmost button
  * really does get all the space right to the edge of the line, so
  * you can do things like
- * 
+ *
  * (*) Button1  (*) Button2  (*) ButtonWithReallyLongTitle
  */
 void radioline(struct ctlpos *cp, char *text, int id, int nacross, ...)
@@ -267,10 +267,9 @@
     nbuttons = 0;
     while (1) {
 	char *btext = va_arg(ap, char *);
-	int bid;
 	if (!btext)
 	    break;
-	bid = va_arg(ap, int);
+	va_arg(ap, int);
 	nbuttons++;
     }
     va_end(ap);
@@ -299,10 +298,9 @@
     nbuttons = 0;
     while (1) {
 	char *btext = va_arg(ap, char *);
-	int bid;
 	if (!btext)
 	    break;
-	bid = va_arg(ap, int);
+	va_arg(ap, int);
     }
     va_end(ap);
     buttons = snewn(nbuttons, struct radio);
@@ -330,10 +328,9 @@
     nbuttons = 0;
     while (1) {
 	char *btext = va_arg(ap, char *);
-	int bid;
 	if (!btext)
 	    break;
-	bid = va_arg(ap, int);
+	va_arg(ap, int);
     }
     va_end(ap);
     buttons = snewn(nbuttons, struct radio);
@@ -372,7 +369,7 @@
 char *staticwrap(struct ctlpos *cp, HWND hwnd, char *text, int *lines)
 {
     HDC hdc = GetDC(hwnd);
-    int lpx = GetDeviceCaps(hdc, LOGPIXELSX);
+    GetDeviceCaps(hdc, LOGPIXELSX);
     int width, nlines, j;
     INT *pwidths, nfit;
     SIZE size;
@@ -1021,7 +1018,7 @@
 
 /*
  * Handler for prefslist above.
- * 
+ *
  * Return value has bit 0 set if the dialog box procedure needs to
  * return TRUE from handling this message; it has bit 1 set if a
  * change may have been made in the contents of the list.
@@ -1159,7 +1156,7 @@
  * places a single (unescaped) ampersand in front of the first
  * occurrence of the given shortcut character (which may be
  * NO_SHORTCUT).
- * 
+ *
  * Return value is a malloc'ed copy of the processed version of the
  * string.
  */
diff -aur -xterminal.c '-x*.orig' '-x*.rej' putty-0.67.orig/windows/windlg.c putty-0.67/windows/windlg.c
--- putty-0.67.orig/windows/windlg.c	2016-02-29 21:02:33.000000000 +0100
+++ putty-0.67/windows/windlg.c	2016-03-19 21:12:30.009476500 +0100
@@ -217,7 +217,7 @@
 	  case IDA_LICENCE:
 	    EnableWindow(hwnd, 0);
 	    DialogBox(hinst, MAKEINTRESOURCE(IDD_LICENCEBOX),
-		      hwnd, LicenceProc);
+		      hwnd, (DLGPROC)LicenceProc);
 	    EnableWindow(hwnd, 1);
 	    SetActiveWindow(hwnd);
 	    return 0;
@@ -647,7 +647,7 @@
 void modal_about_box(HWND hwnd)
 {
     EnableWindow(hwnd, 0);
-    DialogBox(hinst, MAKEINTRESOURCE(IDD_ABOUTBOX), hwnd, AboutProc);
+    DialogBox(hinst, MAKEINTRESOURCE(IDD_ABOUTBOX), hwnd, (DLGPROC)AboutProc);
     EnableWindow(hwnd, 1);
     SetActiveWindow(hwnd);
 }
@@ -667,7 +667,7 @@
     {
 	HWND hwnd;
 	hwnd = CreateDialog(hinst, MAKEINTRESOURCE(IDD_ABOUTBOX),
-			    NULL, NullDlgProc);
+			    NULL, (DLGPROC)NullDlgProc);
 	ShowWindow(hwnd, SW_HIDE);
 	SetActiveWindow(hwnd);
 	DestroyWindow(hwnd);
@@ -694,7 +694,7 @@
 
     ret =
 	SaneDialogBox(hinst, MAKEINTRESOURCE(IDD_MAINBOX), NULL,
-		  GenericMainDlgProc);
+		  (DLGPROC)GenericMainDlgProc);
 
     ctrl_free_box(ctrlbox);
     winctrl_cleanup(&ctrls_panel);
@@ -727,7 +727,7 @@
     dp.shortcuts['g'] = TRUE;	       /* the treeview: `Cate&gory' */
 
     ret = SaneDialogBox(hinst, MAKEINTRESOURCE(IDD_MAINBOX), NULL,
-		  GenericMainDlgProc);
+		  (DLGPROC)GenericMainDlgProc);
 
     ctrl_free_box(ctrlbox);
     winctrl_cleanup(&ctrls_base);
@@ -774,7 +774,7 @@
 {
     if (!logbox) {
 	logbox = CreateDialog(hinst, MAKEINTRESOURCE(IDD_LOGBOX),
-			      hwnd, LogProc);
+			      hwnd, (DLGPROC)LogProc);
 	ShowWindow(logbox, SW_SHOWNORMAL);
     }
     SetActiveWindow(logbox);
@@ -782,7 +782,7 @@
 
 void showabout(HWND hwnd)
 {
-    DialogBox(hinst, MAKEINTRESOURCE(IDD_ABOUTBOX), hwnd, AboutProc);
+  DialogBox(hinst, MAKEINTRESOURCE(IDD_ABOUTBOX), hwnd, (DLGPROC)AboutProc);
 }
 
 int verify_ssh_host_key(void *frontend, char *host, int port, char *keytype,
diff -aur -xterminal.c '-x*.orig' '-x*.rej' putty-0.67.orig/windows/window.c putty-0.67/windows/window.c
--- putty-0.67.orig/windows/window.c	2016-02-29 21:02:33.000000000 +0100
+++ putty-0.67/windows/window.c	2016-03-19 21:12:30.009476500 +0100
@@ -827,7 +827,7 @@
 	    AppendMenu(m, MF_SEPARATOR, 0, 0);
 	    AppendMenu(m, MF_ENABLED, IDM_NEWSESS, "Ne&w Session...");
 	    AppendMenu(m, MF_ENABLED, IDM_DUPSESS, "&Duplicate Session");
-	    AppendMenu(m, MF_POPUP | MF_ENABLED, (UINT) savedsess_menu,
+	    AppendMenu(m, MF_POPUP | MF_ENABLED, (UINT_PTR)savedsess_menu,
 		       "Sa&ved Sessions");
 	    AppendMenu(m, MF_ENABLED, IDM_RECONF, "Chan&ge Settings...");
 	    AppendMenu(m, MF_SEPARATOR, 0, 0);
@@ -1054,7 +1054,7 @@
 		saved_menu = new_menu; /* XXX lame stacking */
 		new_menu = CreatePopupMenu();
 		AppendMenu(saved_menu, MF_POPUP | MF_ENABLED,
-			   (UINT) new_menu, specials[i].name);
+			   (UINT_PTR)new_menu, specials[i].name);
 		break;
 	      case TS_EXITMENU:
 		nesting--;
@@ -1079,13 +1079,13 @@
     for (j = 0; j < lenof(popup_menus); j++) {
 	if (specials_menu) {
 	    /* XXX does this free up all submenus? */
-	    DeleteMenu(popup_menus[j].menu, (UINT)specials_menu, MF_BYCOMMAND);
+	    DeleteMenu(popup_menus[j].menu, (uintptr_t)specials_menu, MF_BYCOMMAND);
 	    DeleteMenu(popup_menus[j].menu, IDM_SPECIALSEP, MF_BYCOMMAND);
 	}
 	if (new_menu) {
 	    InsertMenu(popup_menus[j].menu, IDM_SHOWLOG,
 		       MF_BYCOMMAND | MF_POPUP | MF_ENABLED,
-		       (UINT) new_menu, "S&pecial Command");
+		       (UINT_PTR)new_menu, "S&pecial Command");
 	    InsertMenu(popup_menus[j].menu, IDM_SHOWLOG,
 		       MF_BYCOMMAND | MF_SEPARATOR, IDM_SPECIALSEP, 0);
 	}
@@ -1115,6 +1115,7 @@
 	break;
       default:
 	assert(0);
+        return;
     }
     {
 	HCURSOR cursor = LoadCursor(NULL, curstype);
@@ -1532,7 +1533,7 @@
 	if (cset == OEM_CHARSET)
 	    ucsdata.font_codepage = GetOEMCP();
 	else
-	    if (TranslateCharsetInfo ((DWORD *) cset, &info, TCI_SRCCHARSET))
+	    if (TranslateCharsetInfo ((DWORD *)(uintptr_t) cset, &info, TCI_SRCCHARSET))
 		ucsdata.font_codepage = info.ciACP;
 	else
 	    ucsdata.font_codepage = -1;
@@ -3133,7 +3134,7 @@
 		     */
 		    term_seen_key_event(term);
 		    if (ldisc)
-			ldisc_send(ldisc, buf, len, 1);
+			ldisc_send(ldisc, (char *) buf, len, 1);
 		    show_mouseptr(0);
 		}
 	    }
@@ -3207,7 +3208,7 @@
 	    buf[0] = wParam >> 8;
 	    term_seen_key_event(term);
 	    if (ldisc)
-		lpage_send(ldisc, kbd_codepage, buf, 2, 1);
+		lpage_send(ldisc, kbd_codepage, (char *) buf, 2, 1);
 	} else {
 	    char c = (unsigned char) wParam;
 	    term_seen_key_event(term);
@@ -4606,7 +4607,7 @@
 		break;
 	    }
 	    if (xkey) {
-		p += format_arrow_key(p, term, xkey, shift_state);
+		p += format_arrow_key((char *) p, term, xkey, shift_state);
 		return p - output;
 	    }
 	}
diff -aur -xterminal.c '-x*.orig' '-x*.rej' putty-0.67.orig/windows/wingss.c putty-0.67/windows/wingss.c
--- putty-0.67.orig/windows/wingss.c	2016-02-29 21:02:33.000000000 +0100
+++ putty-0.67/windows/wingss.c	2016-03-19 21:12:30.025113400 +0100
@@ -91,7 +91,7 @@
 	if (ret == ERROR_SUCCESS && type == REG_SZ) {
 	    buffer = snewn(size + 20, char);
 	    ret = RegQueryValueEx(regkey, "InstallDir", NULL,
-				  &type, buffer, &size);
+				  &type, (LPBYTE)buffer, &size);
 	    if (ret == ERROR_SUCCESS && type == REG_SZ) {
 		strcat(buffer, "\\bin\\gssapi32.dll");
 		module = LoadLibrary(buffer);
diff -aur -xterminal.c '-x*.orig' '-x*.rej' putty-0.67.orig/windows/winhandl.c putty-0.67/windows/winhandl.c
--- putty-0.67.orig/windows/winhandl.c	2016-02-29 21:02:33.000000000 +0100
+++ putty-0.67/windows/winhandl.c	2016-03-19 21:12:30.025113400 +0100
@@ -9,14 +9,14 @@
  * data, the subthread sets an event object which is picked up by
  * the main thread, and the main thread then sets an event in
  * return to instruct the subthread to resume reading.
- * 
+ *
  * Output works precisely the other way round, in a second
  * subthread. The output subthread should not be attempting to
  * write all the time, because it hasn't always got data _to_
  * write; so the output thread waits for an event object notifying
  * it to _attempt_ a write, and then it sets an event in return
  * when one completes.
- * 
+ *
  * (It's terribly annoying having to spawn a subthread for each
  * direction of each handle. Technically it isn't necessary for
  * serial ports, since we could use overlapped I/O within the main
@@ -47,7 +47,7 @@
     /*
      * Initial fields common to both handle_input and handle_output
      * structures.
-     * 
+     *
      * The three HANDLEs are set up at initialisation time and are
      * thereafter read-only to both main thread and subthread.
      * `moribund' is only used by the main thread; `done' is
@@ -411,9 +411,9 @@
     struct handle *a = (struct handle *)av;
     struct handle *b = (struct handle *)bv;
 
-    if ((unsigned)a->u.g.ev_to_main < (unsigned)b->u.g.ev_to_main)
+    if ((uintptr_t)a->u.g.ev_to_main < (uintptr_t)b->u.g.ev_to_main)
 	return -1;
-    else if ((unsigned)a->u.g.ev_to_main > (unsigned)b->u.g.ev_to_main)
+    else if ((uintptr_t)a->u.g.ev_to_main > (uintptr_t)b->u.g.ev_to_main)
 	return +1;
     else
 	return 0;
@@ -424,9 +424,9 @@
     HANDLE *a = (HANDLE *)av;
     struct handle *b = (struct handle *)bv;
 
-    if ((unsigned)*a < (unsigned)b->u.g.ev_to_main)
+    if ((uintptr_t)*a < (uintptr_t)b->u.g.ev_to_main)
 	return -1;
-    else if ((unsigned)*a > (unsigned)b->u.g.ev_to_main)
+    else if ((uintptr_t)*a > (uintptr_t)b->u.g.ev_to_main)
 	return +1;
     else
 	return 0;
diff -aur -xterminal.c '-x*.orig' '-x*.rej' putty-0.67.orig/windows/winhelp.c putty-0.67/windows/winhelp.c
--- putty-0.67.orig/windows/winhelp.c	2016-02-29 21:02:33.000000000 +0100
+++ putty-0.67/windows/winhelp.c	2016-03-19 21:12:30.025113400 +0100
@@ -105,7 +105,7 @@
 #endif /* NO_HTMLHELP */
 	if (help_path) {
 	    char *cmd = dupprintf("JI(`',`%.*s')", colonpos, topic);
-	    WinHelp(hwnd, help_path, HELP_COMMAND, (DWORD)cmd);
+	    WinHelp(hwnd, help_path, HELP_COMMAND, (ULONG_PTR)cmd);
 	    sfree(cmd);
 	}
     } else {
diff -aur -xterminal.c '-x*.orig' '-x*.rej' putty-0.67.orig/windows/winjump.c putty-0.67/windows/winjump.c
--- putty-0.67.orig/windows/winjump.c	2016-02-29 21:02:33.000000000 +0100
+++ putty-0.67/windows/winjump.c	2016-03-19 21:12:30.025113400 +0100
@@ -445,7 +445,7 @@
                              sessionname, "'", NULL);
     } else {
         assert(appname);
-        desc_string = dupprintf("Run %.*s", strcspn(appname, "."), appname);
+        desc_string = dupprintf("Run %.*s", (int)strcspn(appname, "."), appname);
     }
     ret->lpVtbl->SetDescription(ret, desc_string);
     sfree(desc_string);
@@ -461,7 +461,7 @@
             pv.pszVal = dupstr(sessionname);
         } else {
             assert(appname);
-            pv.pszVal = dupprintf("Run %.*s", strcspn(appname, "."), appname);
+            pv.pszVal = dupprintf("Run %.*s", (int)strcspn(appname, "."), appname);
         }
         pPS->lpVtbl->SetValue(pPS, &PKEY_Title, &pv);
         sfree(pv.pszVal);
diff -aur -xterminal.c '-x*.orig' '-x*.rej' putty-0.67.orig/windows/winmisc.c putty-0.67/windows/winmisc.c
--- putty-0.67.orig/windows/winmisc.c	2016-02-29 21:02:33.000000000 +0100
+++ putty-0.67/windows/winmisc.c	2016-03-19 21:12:30.025113400 +0100
@@ -227,7 +227,7 @@
                            MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),
                            msgtext, lenof(msgtext)-1, NULL)) {
             sprintf(msgtext,
-                    "(unable to format: FormatMessage returned %d)",
+                    "(unable to format: FormatMessage returned %lu)",
                     GetLastError());
         } else {
             int len = strlen(msgtext);
@@ -277,15 +277,15 @@
 
 /*
  * Design:
- * 
+ *
  * We start by reserving as much virtual address space as Windows
  * will sensibly (or not sensibly) let us have. We flag it all as
  * invalid memory.
- * 
+ *
  * Any allocation attempt is satisfied by committing one or more
  * pages, with an uncommitted page on either side. The returned
  * memory region is jammed up against the _end_ of the pages.
- * 
+ *
  * Freeing anything causes instantaneous decommitment of the pages
  * involved, so stale pointers are caught as soon as possible.
  */
diff -aur -xterminal.c '-x*.orig' '-x*.rej' putty-0.67.orig/windows/winnet.c putty-0.67/windows/winnet.c
--- putty-0.67.orig/windows/winnet.c	2016-02-29 21:02:33.000000000 +0100
+++ putty-0.67/windows/winnet.c	2016-03-19 21:12:30.025113400 +0100
@@ -123,7 +123,7 @@
 static int cmpfortree(void *av, void *bv)
 {
     Actual_Socket a = (Actual_Socket) av, b = (Actual_Socket) bv;
-    unsigned long as = (unsigned long) a->s, bs = (unsigned long) b->s;
+    uintptr_t as = (uintptr_t) a->s, bs = (uintptr_t) b->s;
     if (as < bs)
 	return -1;
     if (as > bs)
@@ -138,7 +138,7 @@
 static int cmpforsearch(void *av, void *bv)
 {
     Actual_Socket b = (Actual_Socket) bv;
-    unsigned long as = (unsigned long) av, bs = (unsigned long) b->s;
+    uintptr_t as = (uintptr_t) av, bs = (uintptr_t) b->s;
     if (as < bs)
 	return -1;
     if (as > bs)
@@ -478,7 +478,7 @@
                            MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),
                            es->text + bufused, bufsize - bufused, NULL)) {
             sprintf(es->text + bufused,
-                    "Windows error code %d (and FormatMessage returned %d)", 
+                    "Windows error code %d (and FormatMessage returned %lu)",
                     error, GetLastError());
         } else {
             int len = strlen(es->text);
@@ -1440,7 +1440,7 @@
 	    if ((err < WSABASEERR && nsent < 0) || err == WSAEWOULDBLOCK) {
 		/*
 		 * Perfectly normal: we've sent all we can for the moment.
-		 * 
+		 *
 		 * (Some WinSock send() implementations can return
 		 * <0 but leave no sensible error indication -
 		 * WSAGetLastError() is called but returns zero or
diff -aur -xterminal.c '-x*.orig' '-x*.rej' putty-0.67.orig/windows/winpgen.c putty-0.67/windows/winpgen.c
--- putty-0.67.orig/windows/winpgen.c	2016-02-29 21:02:33.000000000 +0100
+++ putty-0.67/windows/winpgen.c	2016-03-19 21:13:35.799063600 +0100
@@ -311,7 +311,7 @@
 	    return 0;
 	  case 101:
 	    EnableWindow(hwnd, 0);
-	    DialogBox(hinst, MAKEINTRESOURCE(214), hwnd, LicenceProc);
+	    DialogBox(hinst, MAKEINTRESOURCE(214), hwnd, (DLGPROC)LicenceProc);
 	    EnableWindow(hwnd, 1);
 	    SetActiveWindow(hwnd);
 	    return 0;
@@ -502,7 +502,7 @@
     }
     if (column > 0)
 	fputc('\n', fp);
-    
+
     fprintf(fp, "---- END SSH2 PUBLIC KEY ----\n");
     fclose(fp);
     sfree(pub_blob);
@@ -687,7 +687,7 @@
             pps.comment = comment;
 	    dlgret = DialogBoxParam(hinst,
 				    MAKEINTRESOURCE(210),
-				    NULL, PassphraseProc,
+				    NULL, (DLGPROC)PassphraseProc,
 				    (LPARAM) &pps);
 	    if (!dlgret) {
 		ret = -2;
@@ -855,7 +855,7 @@
 	    AppendMenu(menu1, MF_ENABLED, IDC_SAVE, "&Save private key");
 	    AppendMenu(menu1, MF_SEPARATOR, 0, 0);
 	    AppendMenu(menu1, MF_ENABLED, IDC_QUIT, "E&xit");
-	    AppendMenu(menu, MF_POPUP | MF_ENABLED, (UINT) menu1, "&File");
+	    AppendMenu(menu, MF_POPUP | MF_ENABLED, (UINT_PTR) menu1, "&File");
 	    state->filemenu = menu1;
 
 	    menu1 = CreateMenu();
@@ -864,7 +864,7 @@
 	    AppendMenu(menu1, MF_ENABLED, IDC_KEYSSH1, "SSH-&1 key (RSA)");
 	    AppendMenu(menu1, MF_ENABLED, IDC_KEYSSH2RSA, "SSH-2 &RSA key");
 	    AppendMenu(menu1, MF_ENABLED, IDC_KEYSSH2DSA, "SSH-2 &DSA key");
-	    AppendMenu(menu, MF_POPUP | MF_ENABLED, (UINT) menu1, "&Key");
+	    AppendMenu(menu, MF_POPUP | MF_ENABLED, (UINT_PTR) menu1, "&Key");
 	    state->keymenu = menu1;
 
 	    menu1 = CreateMenu();
@@ -874,7 +874,7 @@
 		       "Export &OpenSSH key");
 	    AppendMenu(menu1, MF_ENABLED, IDC_EXPORT_SSHCOM,
 		       "Export &ssh.com key");
-	    AppendMenu(menu, MF_POPUP | MF_ENABLED, (UINT) menu1,
+	    AppendMenu(menu, MF_POPUP | MF_ENABLED, (UINT_PTR) menu1,
 		       "Con&versions");
 	    state->cvtmenu = menu1;
 
@@ -882,7 +882,7 @@
 	    AppendMenu(menu1, MF_ENABLED, IDC_ABOUT, "&About");
 	    if (has_help())
 		AppendMenu(menu1, MF_ENABLED, IDC_GIVEHELP, "&Help");
-	    AppendMenu(menu, MF_POPUP | MF_ENABLED, (UINT) menu1, "&Help");
+	    AppendMenu(menu, MF_POPUP | MF_ENABLED, (UINT_PTR) menu1, "&Help");
 
 	    SetMenu(hwnd, menu);
 	}
@@ -1056,7 +1056,7 @@
 	    break;
 	  case IDC_ABOUT:
 	    EnableWindow(hwnd, 0);
-	    DialogBox(hinst, MAKEINTRESOURCE(213), hwnd, AboutProc);
+	    DialogBox(hinst, MAKEINTRESOURCE(213), hwnd, (DLGPROC)AboutProc);
 	    EnableWindow(hwnd, 1);
 	    SetActiveWindow(hwnd);
 	    return 0;
@@ -1461,7 +1461,7 @@
     }
 
     random_ref();
-    ret = DialogBox(hinst, MAKEINTRESOURCE(201), NULL, MainDlgProc) != IDOK;
+    ret = DialogBox(hinst, MAKEINTRESOURCE(201), NULL, (DLGPROC)MainDlgProc) != IDOK;
 
     cleanup_exit(ret);
     return ret;			       /* just in case optimiser complains */
diff -aur -xterminal.c '-x*.orig' '-x*.rej' putty-0.67.orig/windows/winpgnt.c putty-0.67/windows/winpgnt.c
--- putty-0.67.orig/windows/winpgnt.c	2016-02-29 21:02:33.000000000 +0100
+++ putty-0.67/windows/winpgnt.c	2016-03-19 21:12:30.040727700 +0100
@@ -162,7 +162,7 @@
 
 static tree234 *passphrases = NULL;
 
-/* 
+/*
  * After processing a list of filenames, we want to forget the
  * passphrases.
  */
@@ -227,7 +227,7 @@
 	    return 0;
 	  case 101:
 	    EnableWindow(hwnd, 0);
-	    DialogBox(hinst, MAKEINTRESOURCE(214), hwnd, LicenceProc);
+	    DialogBox(hinst, MAKEINTRESOURCE(214), hwnd, (DLGPROC)LicenceProc);
 	    EnableWindow(hwnd, 1);
 	    SetActiveWindow(hwnd);
 	    return 0;
@@ -246,7 +246,7 @@
 /*
  * Dialog-box function for the passphrase box.
  */
-static int CALLBACK PassphraseProc(HWND hwnd, UINT msg,
+static INT_PTR CALLBACK PassphraseProc(HWND hwnd, UINT msg,
 				   WPARAM wParam, LPARAM lParam)
 {
     static char **passphrase = NULL;
@@ -398,7 +398,7 @@
     const char *error = NULL;
     int type;
     int original_pass;
-	
+
     type = key_type(filename);
     if (type != SSH_KEYTYPE_SSH1 && type != SSH_KEYTYPE_SSH2) {
 	char *msg = dupprintf("Couldn't load this key (%s)",
@@ -1031,7 +1031,7 @@
 	    key = find234(ssh2keys, &b, cmpkeys_ssh2_asymm);
 	    if (!key)
 		goto failure;
-	    signature = key->alg->sign(key->data, data, datalen, &siglen);
+	    signature = key->alg->sign(key->data, (char *)data, datalen, &siglen);
 	    len = 5 + 4 + siglen;
 	    PUT_32BIT(ret, len - 4);
 	    ret[4] = SSH2_AGENT_SIGN_RESPONSE;
@@ -1130,7 +1130,8 @@
 	 */
 	{
 	    struct ssh2_userkey *key;
-	    char *comment, *alg;
+	    char *comment;
+	    unsigned char *alg;
 	    int alglen, commlen;
 	    int bloblen;
 
@@ -1436,7 +1437,7 @@
 {
     OPENFILENAME of;
     char *filelist = snewn(8192, char);
-	
+
     if (!keypath) keypath = filereq_new();
     memset(&of, 0, sizeof(of));
     of.hwndOwner = hwnd;
@@ -1548,14 +1549,14 @@
 		int i;
 		int rCount, sCount;
 		int *selectedArray;
-		
+
 		/* our counter within the array of selected items */
 		int itemNum;
-		
+
 		/* get the number of items selected in the list */
-		int numSelected = 
+		int numSelected =
 			SendDlgItemMessage(hwnd, 100, LB_GETSELCOUNT, 0, 0);
-		
+
 		/* none selected? that was silly */
 		if (numSelected == 0) {
 		    MessageBeep(0);
@@ -1566,27 +1567,27 @@
 		selectedArray = snewn(numSelected, int);
 		SendDlgItemMessage(hwnd, 100, LB_GETSELITEMS,
 				numSelected, (WPARAM)selectedArray);
-		
+
 		itemNum = numSelected - 1;
 		rCount = count234(rsakeys);
 		sCount = count234(ssh2keys);
-		
-		/* go through the non-rsakeys until we've covered them all, 
+
+		/* go through the non-rsakeys until we've covered them all,
 		 * and/or we're out of selected items to check. note that
 		 * we go *backwards*, to avoid complications from deleting
 		 * things hence altering the offset of subsequent items
 		 */
 	    for (i = sCount - 1; (itemNum >= 0) && (i >= 0); i--) {
 			skey = index234(ssh2keys, i);
-			
+
 			if (selectedArray[itemNum] == rCount + i) {
 				del234(ssh2keys, skey);
 				skey->alg->freekey(skey->data);
 				sfree(skey);
-			   	itemNum--; 
+			   	itemNum--;
 			}
 		}
-		
+
 		/* do the same for the rsa keys */
 		for (i = rCount - 1; (itemNum >= 0) && (i >= 0); i--) {
 			rkey = index234(rsakeys, i);
@@ -1599,7 +1600,7 @@
 			}
 		}
 
-		sfree(selectedArray); 
+		sfree(selectedArray);
 		keylist_update();
 	    }
 	    return 0;
@@ -1658,7 +1659,7 @@
     res = Shell_NotifyIcon(NIM_ADD, &tnid);
 
     if (hicon) DestroyIcon(hicon);
-    
+
     return res;
 }
 
@@ -1765,7 +1766,6 @@
 static LRESULT CALLBACK WndProc(HWND hwnd, UINT message,
 				WPARAM wParam, LPARAM lParam)
 {
-    int ret;
     static int menuinprogress;
     static UINT msgTaskbarCreated = 0;
 
@@ -1782,7 +1782,7 @@
 	    AddTrayIcon(hwnd);
         }
         break;
-        
+
       case WM_SYSTRAY:
 	if (lParam == WM_RBUTTONUP) {
 	    POINT cursorpos;
@@ -1800,7 +1800,7 @@
 	    menuinprogress = 1;
 	    update_sessions();
 	    SetForegroundWindow(hwnd);
-	    ret = TrackPopupMenu(systray_menu,
+	    TrackPopupMenu(systray_menu,
 				 TPM_RIGHTALIGN | TPM_BOTTOMALIGN |
 				 TPM_RIGHTBUTTON,
 				 wParam, lParam, 0, hwnd, NULL);
@@ -1811,7 +1811,7 @@
       case WM_SYSCOMMAND:
 	switch (wParam & ~0xF) {       /* low 4 bits reserved to Windows */
 	  case IDM_PUTTY:
-	    if((int)ShellExecute(hwnd, NULL, putty_path, _T(""), _T(""),
+	    if((intptr_t)ShellExecute(hwnd, NULL, putty_path, _T(""), _T(""),
 				 SW_SHOW) <= 32) {
 		MessageBox(NULL, "Unable to execute PuTTY!",
 			   "Error", MB_OK | MB_ICONERROR);
@@ -1825,10 +1825,10 @@
 	  case IDM_VIEWKEYS:
 	    if (!keylist) {
 		keylist = CreateDialog(hinst, MAKEINTRESOURCE(211),
-				       NULL, KeyListProc);
+				       NULL, (DLGPROC)KeyListProc);
 		ShowWindow(keylist, SW_SHOWNORMAL);
 	    }
-	    /* 
+	    /*
 	     * Sometimes the window comes up minimised / hidden for
 	     * no obvious reason. Prevent this. This also brings it
 	     * to the front if it's already present (the user
@@ -1850,9 +1850,9 @@
 	  case IDM_ABOUT:
 	    if (!aboutbox) {
 		aboutbox = CreateDialog(hinst, MAKEINTRESOURCE(213),
-					NULL, AboutProc);
+					NULL, (DLGPROC)AboutProc);
 		ShowWindow(aboutbox, SW_SHOWNORMAL);
-		/* 
+		/*
 		 * Sometimes the window comes up minimised / hidden
 		 * for no obvious reason. Prevent this.
 		 */
@@ -1878,7 +1878,7 @@
 		    GetMenuItemInfo(session_menu, wParam, FALSE, &mii);
 		    strcpy(param, "@");
 		    strcat(param, mii.dwTypeData);
-		    if((int)ShellExecute(hwnd, NULL, putty_path, param,
+		    if((intptr_t)ShellExecute(hwnd, NULL, putty_path, param,
 					 _T(""), SW_SHOW) <= 32) {
 			MessageBox(NULL, "Unable to execute PuTTY!", "Error",
 				   MB_OK | MB_ICONERROR);
@@ -2215,7 +2215,7 @@
 	session_menu = CreateMenu();
 	AppendMenu(systray_menu, MF_ENABLED, IDM_PUTTY, "&New Session");
 	AppendMenu(systray_menu, MF_POPUP | MF_ENABLED,
-		   (UINT) session_menu, "&Saved Sessions");
+		   (UINT_PTR)session_menu, "&Saved Sessions");
 	AppendMenu(systray_menu, MF_SEPARATOR, 0, 0);
     }
     AppendMenu(systray_menu, MF_ENABLED, IDM_VIEWKEYS,
diff -aur -xterminal.c '-x*.orig' '-x*.rej' putty-0.67.orig/windows/winprint.c putty-0.67/windows/winprint.c
--- putty-0.67.orig/windows/winprint.c	2016-02-29 21:02:33.000000000 +0100
+++ putty-0.67/windows/winprint.c	2016-03-19 21:12:30.040727700 +0100
@@ -30,7 +30,7 @@
      * we'll need for the output. Discard the return value since it
      * will almost certainly be a failure due to lack of space.
      */
-    EnumPrinters(param, NULL, level, (*buffer)+offset, 512,
+    EnumPrinters(param, NULL, level, (LPBYTE)((*buffer)+offset), 512,
 		 &needed, &nprinters);
 
     if (needed < 512)
@@ -38,7 +38,7 @@
 
     *buffer = sresize(*buffer, offset+needed, char);
 
-    if (EnumPrinters(param, NULL, level, (*buffer)+offset,
+    if (EnumPrinters(param, NULL, level, (LPBYTE)((*buffer)+offset),
                      needed, &needed, &nprinters) == 0)
         return FALSE;
 
@@ -139,7 +139,7 @@
     docinfo.pOutputFile = NULL;
     docinfo.pDatatype = "RAW";
 
-    if (!StartDocPrinter(ret->hprinter, 1, (LPSTR)&docinfo))
+    if (!StartDocPrinter(ret->hprinter, 1, (LPBYTE)&docinfo))
 	goto error;
     jobstarted = 1;
 
diff -aur -xterminal.c '-x*.orig' '-x*.rej' putty-0.67.orig/windows/winsecur.c putty-0.67/windows/winsecur.c
--- putty-0.67.orig/windows/winsecur.c	2016-02-29 21:02:33.000000000 +0100
+++ putty-0.67/windows/winsecur.c	2016-03-19 21:12:30.040727700 +0100
@@ -94,8 +94,8 @@
 
 int getsids(char *error)
 {
-    SID_IDENTIFIER_AUTHORITY world_auth = SECURITY_WORLD_SID_AUTHORITY;
-    SID_IDENTIFIER_AUTHORITY nt_auth = SECURITY_NT_AUTHORITY;
+    SID_IDENTIFIER_AUTHORITY world_auth = {SECURITY_WORLD_SID_AUTHORITY};
+    SID_IDENTIFIER_AUTHORITY nt_auth = {SECURITY_NT_AUTHORITY};
     int ret;
 
     error=NULL;
@@ -231,7 +231,7 @@
     int ret=FALSE;
     PACL acl = NULL;
 
-    static const nastyace=WRITE_DAC | WRITE_OWNER |
+    static const int nastyace=WRITE_DAC | WRITE_OWNER |
 	PROCESS_CREATE_PROCESS | PROCESS_CREATE_THREAD |
 	PROCESS_DUP_HANDLE | PROCESS_QUERY_INFORMATION |
 	PROCESS_SET_QUOTA | PROCESS_SET_INFORMATION |
diff -aur -xterminal.c '-x*.orig' '-x*.rej' putty-0.67.orig/windows/winser.c putty-0.67/windows/winser.c
--- putty-0.67.orig/windows/winser.c	2016-02-29 21:02:33.000000000 +0100
+++ putty-0.67/windows/winser.c	2016-03-19 21:12:30.040727700 +0100
@@ -122,7 +122,7 @@
 	 * Configurable parameters.
 	 */
 	dcb.BaudRate = conf_get_int(conf, CONF_serspeed);
-	msg = dupprintf("Configuring baud rate %d", dcb.BaudRate);
+	msg = dupprintf("Configuring baud rate %lu", dcb.BaudRate);
 	logevent(serial->frontend, msg);
 	sfree(msg);
 
@@ -297,6 +297,7 @@
     /*
      * FIXME: what should we do if err returns something?
      */
+    (void)err;
 }
 
 /*
diff -aur -xterminal.c '-x*.orig' '-x*.rej' putty-0.67.orig/windows/winsftp.c putty-0.67/windows/winsftp.c
--- putty-0.67.orig/windows/winsftp.c	2016-02-29 21:02:33.000000000 +0100
+++ putty-0.67/windows/winsftp.c	2016-03-19 21:12:30.040727700 +0100
@@ -221,7 +221,7 @@
 	return -1;
     }
 
-    SetFilePointer(f->h, offset.lo, &(offset.hi), movemethod);
+    SetFilePointer(f->h, offset.lo, (PLONG)&(offset.hi), movemethod);
     
     if (GetLastError() != NO_ERROR)
 	return -1;
@@ -234,7 +234,7 @@
     uint64 ret;
 
     ret.hi = 0L;
-    ret.lo = SetFilePointer(f->h, 0L, &(ret.hi), FILE_CURRENT);
+    ret.lo = SetFilePointer(f->h, 0L, (PLONG)&(ret.hi), FILE_CURRENT);
 
     return ret;
 }
diff -aur -xterminal.c '-x*.orig' '-x*.rej' putty-0.67.orig/windows/winshare.c putty-0.67/windows/winshare.c
--- putty-0.67.orig/windows/winshare.c	2016-02-29 21:02:33.000000000 +0100
+++ putty-0.67/windows/winshare.c	2016-03-19 21:12:30.040727700 +0100
@@ -15,6 +15,7 @@
 #include "ssh.h"
 
 #include "wincapi.h"
+#include "winsecur.h"
 
 #ifdef COVERITY
 /*
diff -aur -xterminal.c '-x*.orig' '-x*.rej' putty-0.67.orig/windows/winstore.c putty-0.67/windows/winstore.c
--- putty-0.67.orig/windows/winstore.c	2016-02-29 21:02:33.000000000 +0100
+++ putty-0.67/windows/winstore.c	2016-03-19 21:12:30.040727700 +0100
@@ -110,7 +110,7 @@
 void write_setting_s(void *handle, const char *key, const char *value)
 {
     if (handle)
-	RegSetValueEx((HKEY) handle, key, 0, REG_SZ, value,
+      RegSetValueEx((HKEY) handle, key, 0, REG_SZ, (LPBYTE)value,
 		      1 + strlen(value));
 }
 
@@ -168,7 +168,7 @@
     allocsize = size+1;         /* allow for an extra NUL if needed */
     ret = snewn(allocsize, char);
     if (RegQueryValueEx((HKEY) handle, key, 0,
-			&type, ret, &size) != ERROR_SUCCESS ||
+			&type, (LPBYTE)ret, &size) != ERROR_SUCCESS ||
 	type != REG_SZ) {
         sfree(ret);
         return NULL;
@@ -372,7 +372,7 @@
 
     readlen = len;
     otherstr = snewn(len, char);
-    ret = RegQueryValueEx(rkey, regname, NULL, &type, otherstr, &readlen);
+    ret = RegQueryValueEx(rkey, regname, NULL, &type, (LPBYTE)otherstr, &readlen);
 
     if (ret != ERROR_SUCCESS && ret != ERROR_MORE_DATA &&
 	!strcmp(keytype, "rsa")) {
@@ -385,7 +385,7 @@
 	char *oldstyle = snewn(len + 10, char);	/* safety margin */
 	readlen = len;
 	ret = RegQueryValueEx(rkey, justhost, NULL, &type,
-			      oldstyle, &readlen);
+			      (LPBYTE)oldstyle, &readlen);
 
 	if (ret == ERROR_SUCCESS && type == REG_SZ) {
 	    /*
@@ -431,7 +431,7 @@
 	     * wrong, and hyper-cautiously do nothing.
 	     */
 	    if (!strcmp(otherstr, key))
-		RegSetValueEx(rkey, regname, 0, REG_SZ, otherstr,
+	      RegSetValueEx(rkey, regname, 0, REG_SZ, (LPBYTE)otherstr,
 			      strlen(otherstr) + 1);
 	}
 
@@ -466,7 +466,7 @@
 
     if (RegCreateKey(HKEY_CURRENT_USER, PUTTY_REG_POS "\\SshHostKeys",
 		     &rkey) == ERROR_SUCCESS) {
-	RegSetValueEx(rkey, regname, 0, REG_SZ, key, strlen(key) + 1);
+      RegSetValueEx(rkey, regname, 0, REG_SZ, (LPBYTE)key, strlen(key) + 1);
 	RegCloseKey(rkey);
     } /* else key does not exist in registry */
 
@@ -526,7 +526,7 @@
     if (RegOpenKey(HKEY_CURRENT_USER, PUTTY_REG_POS, &rkey) ==
 	ERROR_SUCCESS) {
 	int ret = RegQueryValueEx(rkey, "RandSeedFile",
-				  0, &type, seedpath, &size);
+				  0, &type, (LPBYTE)seedpath, (LPDWORD)&size);
 	if (ret != ERROR_SUCCESS || type != REG_SZ)
 	    seedpath[0] = '\0';
 	RegCloseKey(rkey);
@@ -662,7 +662,7 @@
     value_length = 200;
     old_value = snewn(value_length, char);
     ret = RegQueryValueEx(pjumplist_key, reg_jumplist_value, NULL, &type,
-                          old_value, &value_length);
+                          (LPBYTE)old_value, (LPDWORD)&value_length);
     /* When the passed buffer is too small, ERROR_MORE_DATA is
      * returned and the required size is returned in the length
      * argument. */
@@ -670,7 +670,7 @@
         sfree(old_value);
         old_value = snewn(value_length, char);
         ret = RegQueryValueEx(pjumplist_key, reg_jumplist_value, NULL, &type,
-                              old_value, &value_length);
+                              (LPBYTE)old_value, (LPDWORD)&value_length);
     }
 
     if (ret == ERROR_FILE_NOT_FOUND) {
@@ -744,7 +744,7 @@
 
         /* Save the new list to the registry. */
         ret = RegSetValueEx(pjumplist_key, reg_jumplist_value, 0, REG_MULTI_SZ,
-                            new_value, piterator_new - new_value);
+                            (LPBYTE)new_value, piterator_new - new_value);
 
         sfree(old_value);
         old_value = new_value;
