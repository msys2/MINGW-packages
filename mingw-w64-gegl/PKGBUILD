# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>

_realname=gegl
pkgbase="mingw-w64-${_realname}"
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}"
         "${MINGW_PACKAGE_PREFIX}-${_realname}-docs")
pkgver=0.4.48
pkgrel=3
pkgdesc="Generic Graphics Library (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clangarm64')
url="https://gegl.org/"
msys2_repository_url="https://gitlab.gnome.org/GNOME/gegl"
msys2_references=(
  'archlinux: gegl'
  "cpe: cpe:/a:gegl:gegl"
)
license=('spdx:GPL-3.0-or-later AND LGPL-3.0-or-later')
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-meson"
             "${MINGW_PACKAGE_PREFIX}-pkgconf"
             "${MINGW_PACKAGE_PREFIX}-asciidoc"
             "${MINGW_PACKAGE_PREFIX}-gobject-introspection"
             "${MINGW_PACKAGE_PREFIX}-gi-docgen"
             "${MINGW_PACKAGE_PREFIX}-gettext-tools"
             $([[ ${MSYSTEM_CARCH} == aarch64 ]] || echo "${MINGW_PACKAGE_PREFIX}-luajit")
             "${MINGW_PACKAGE_PREFIX}-vala")
depends=("${MINGW_PACKAGE_PREFIX}-babl"
         "${MINGW_PACKAGE_PREFIX}-cairo"
         "${MINGW_PACKAGE_PREFIX}-ffmpeg"
         "${MINGW_PACKAGE_PREFIX}-gexiv2"
         "${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-gdk-pixbuf2"
         "${MINGW_PACKAGE_PREFIX}-gettext-runtime"
         "${MINGW_PACKAGE_PREFIX}-glib2"
         "${MINGW_PACKAGE_PREFIX}-jasper"
         "${MINGW_PACKAGE_PREFIX}-json-glib"
         "${MINGW_PACKAGE_PREFIX}-libjpeg"
         "${MINGW_PACKAGE_PREFIX}-libpng"
         "${MINGW_PACKAGE_PREFIX}-libraw"
         "${MINGW_PACKAGE_PREFIX}-librsvg"
         "${MINGW_PACKAGE_PREFIX}-libspiro"
         "${MINGW_PACKAGE_PREFIX}-libtiff"
         "${MINGW_PACKAGE_PREFIX}-libwebp"
         "${MINGW_PACKAGE_PREFIX}-lcms2"
         "${MINGW_PACKAGE_PREFIX}-lensfun"
         "${MINGW_PACKAGE_PREFIX}-maxflow"
         "${MINGW_PACKAGE_PREFIX}-omp"
         "${MINGW_PACKAGE_PREFIX}-openexr"
         "${MINGW_PACKAGE_PREFIX}-pango"
         "${MINGW_PACKAGE_PREFIX}-poppler"
         "${MINGW_PACKAGE_PREFIX}-SDL2"
         "${MINGW_PACKAGE_PREFIX}-suitesparse")
noextract=("${_realname}-${pkgver}.tar.xz")
source=(https://download.gimp.org/pub/gegl/${pkgver%.*}/${_realname}-${pkgver}.tar.xz
        "https://gitlab.gnome.org/GNOME/gegl/-/commit/66de8124f496617eee8e6b5c68138a00343882db.patch"
        "https://gitlab.gnome.org/GNOME/gegl/-/commit/298b6a2afb87b4b5b15c6e715967b57534cd0af0.patch"
        "https://gitlab.gnome.org/GNOME/gegl/-/commit/b009ef056fb031fcb5dc7f94f7a0c733d542d64d.patch")
sha256sums=('418c26d94be8805d7d98f6de0c6825ca26bd74fcacb6c188da47533d9ee28247'
            'd558ee613e17a9174a34346610b50206e86a53b008021ee4b2f35fcc191d1d60'
            'bc65623e3895131b469e2861f71d1bc575733febd139b877abf5f96475308151'
            '5d40fa7df6cf2751251ed8fda797f735d0a3bc2a9324b173453c89b2aeaccbc9')

prepare() {
  tar -xf "${_realname}-${pkgver}.tar.xz" || true
  tar -xf "${_realname}-${pkgver}.tar.xz" || true
  cd "${_realname}-${pkgver}"

  ## ffmpeg v7 backports
  patch -Np1 -i ../66de8124f496617eee8e6b5c68138a00343882db.patch
  patch -Np1 -i ../298b6a2afb87b4b5b15c6e715967b57534cd0af0.patch

  # mingw32 build fix
  patch -Np1 -i ../b009ef056fb031fcb5dc7f94f7a0c733d542d64d.patch
}

build() {
  mkdir -p build-${MSYSTEM} && cd build-${MSYSTEM}

  MSYS2_ARG_CONV_EXCL="--prefix=" \
  ${MINGW_PREFIX}/bin/meson.exe setup \
    --prefix="${MINGW_PREFIX}" \
    --wrap-mode=nodownload \
    --buildtype=plain \
    --auto-features=enabled \
    -Dlibv4l=disabled \
    -Dlibv4l2=disabled \
    -Dmrg=disabled \
    -Dpygobject=disabled \
    -Dsdl1=disabled \
    -Dintrospection=true \
    -Ddocs=false \
    $([[ ${MSYSTEM_CARCH} == aarch64 ]] && echo "-Dlua=disabled") \
    ../${_realname}-${pkgver}

  ${MINGW_PREFIX}/bin/meson.exe compile
}

package_gegl() {
  ${MINGW_PREFIX}/bin/meson.exe install -C build-${MSYSTEM} --destdir "${pkgdir}"

  rm "${pkgdir}${MINGW_PREFIX}"/lib/gegl-*/*.dll.a

  # split docs
  mkdir -p dest${MINGW_PREFIX}/share
  mv "${pkgdir}${MINGW_PREFIX}"/share/doc dest${MINGW_PREFIX}/share/doc
}

package_gegl-docs() {
  pkgdesc+=" (documentation)"
  depends=()

  mv dest/* "${pkgdir}"
}

# template start; name=mingw-w64-splitpkg-wrappers; version=1.0;
# vim: set ft=bash :

# generate wrappers
for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
# template end;
