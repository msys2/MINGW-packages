diff --git a/deps/v8/third_party/abseil-cpp/BUILD.gn b/deps/v8/third_party/abseil-cpp/BUILD.gn
index 7dc29908..0ec6b719 100644
--- a/deps/v8/third_party/abseil-cpp/BUILD.gn
+++ b/deps/v8/third_party/abseil-cpp/BUILD.gn
@@ -220,7 +220,7 @@ config("absl_public_cflags_cc") {
 
 config("absl_test_cflags_cc") {
   cflags_cc = []
-  if (is_clang || !is_win) {
+  if (is_clang || !is_msvc) {
     cflags_cc += [
       "-Wno-conversion-null",
       "-Wno-missing-declarations",
@@ -229,7 +229,7 @@ config("absl_test_cflags_cc") {
       "-Wno-unused-private-field",
     ]
   }
-  if (is_win) {
+  if (is_msvc) {
     cflags_cc += [
       "/wd4101",  # unreferenced local variable
     ]
@@ -238,7 +238,7 @@ config("absl_test_cflags_cc") {
 
 config("absl_test_config") {
   cflags_cc = []
-  if (is_win && !is_clang) {
+  if (is_msvc && !is_clang) {
     cflags_cc += [ "/wd4996" ]
   }
   if (is_clang) {
diff --git a/deps/v8/third_party/abseil-cpp/absl/debugging/BUILD.gn b/deps/v8/third_party/abseil-cpp/absl/debugging/BUILD.gn
index 0f7a1f3e..0158e52c 100644
--- a/deps/v8/third_party/abseil-cpp/absl/debugging/BUILD.gn
+++ b/deps/v8/third_party/abseil-cpp/absl/debugging/BUILD.gn
@@ -66,6 +66,10 @@ absl_source_set("symbolize") {
   # TODO(mbonadei): The bazel file has:
   #   -DEFAULTLIB:dbghelp.lib
   # evaluate if this needs to be added here as well.
+
+  if (is_mingw) {
+    libs = [ "dbghelp" ]
+  }
 }
 
 absl_source_set("examine_stack") {
diff --git a/deps/v8/third_party/abseil-cpp/absl/random/internal/BUILD.gn b/deps/v8/third_party/abseil-cpp/absl/random/internal/BUILD.gn
index 54754f77..0e74fb56 100644
--- a/deps/v8/third_party/abseil-cpp/absl/random/internal/BUILD.gn
+++ b/deps/v8/third_party/abseil-cpp/absl/random/internal/BUILD.gn
@@ -39,7 +39,7 @@ absl_source_set("seed_material") {
   sources = [ "seed_material.cc" ]
   if (is_win) {
     # TODO(mbonadei): In the bazel file this is -DEFAULTLIB:bcrypt.lib.
-    libs = [ "bcrypt.lib" ]
+    libs = [ "bcrypt" ]
   }
   deps = [
     ":fast_uniform_bits",
diff --git a/deps/v8/third_party/googletest/BUILD.gn b/deps/v8/third_party/googletest/BUILD.gn
index 1cf84b3d..be157107 100644
--- a/deps/v8/third_party/googletest/BUILD.gn
+++ b/deps/v8/third_party/googletest/BUILD.gn
@@ -32,7 +32,7 @@ config("gtest_config") {
     "src/googletest/include",
   ]
 
-  if (is_win) {
+  if (is_msvc) {
     cflags = [ "/wd4800" ]  # Unused variable warning.
   }
 }
diff --git a/deps/v8/third_party/jsoncpp/BUILD.gn b/deps/v8/third_party/jsoncpp/BUILD.gn
index 6324be01..f352cf43 100644
--- a/deps/v8/third_party/jsoncpp/BUILD.gn
+++ b/deps/v8/third_party/jsoncpp/BUILD.gn
@@ -12,7 +12,7 @@ config("jsoncpp_config") {
   # declaration flag.
   # This temporary flag allowing clients to update to the new version, and then
   # update to the new StreamWriter and CharReader classes.
-  if (!is_win || is_clang) {
+  if (!is_msvc || is_clang) {
     cflags_cc = [ "-Wno-deprecated-declarations" ]
   }
 }
@@ -42,7 +42,7 @@ source_set("jsoncpp") {
 
   include_dirs = [ "source/src/lib_json" ]
 
-  if (!is_win || is_clang) {
+  if (!is_msvc || is_clang) {
     cflags_cc = [ "-Wno-implicit-fallthrough" ]
   }
 }
diff --git a/deps/v8/third_party/zlib/BUILD.gn b/deps/v8/third_party/zlib/BUILD.gn
index 7fff5762..93408778 100644
--- a/deps/v8/third_party/zlib/BUILD.gn
+++ b/deps/v8/third_party/zlib/BUILD.gn
@@ -39,7 +39,7 @@ config("zlib_internal_config") {
     defines += [ "ZLIB_DEBUG" ]
   }
 
-  if (is_win && !is_clang) {
+  if (is_msvc && !is_clang) {
     # V8 supports building with msvc, these silence some warnings that
     # causes compilation to fail (https://crbug.com/1255096).
     cflags = [
@@ -104,7 +104,7 @@ source_set("zlib_adler32_simd") {
       "adler32_simd.h",
     ]
 
-    if (!is_win || is_clang) {
+    if (!is_msvc || is_clang) {
       cflags = [ "-mssse3" ]
     }
   }
@@ -228,7 +228,7 @@ source_set("zlib_crc32_simd") {
       "crc_folding.c",
     ]
 
-    if (!is_win || is_clang) {
+    if (!is_msvc || is_clang) {
       cflags = [
         "-msse4.2",
         "-mpclmul",
@@ -272,7 +272,7 @@ source_set("zlib_slide_hash_simd") {
 }
 
 config("zlib_warnings") {
-  if (is_clang) {
+  if (is_clang || is_mingw) {
     cflags = [
       "-Wno-incompatible-pointer-types",
       "-Wunused-variable",
