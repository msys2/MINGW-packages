From d0fee4e3178b5ee7d92346359b50635aad5a10e2 Mon Sep 17 00:00:00 2001
From: mati865 <mati865@gmail.com>
Date: Sun, 4 Sep 2016 18:17:15 +0200
Subject: [PATCH 07/13] MinGW-w64 add platform wintoolset as msvc or mingw-w64
 for node-gyp

---
 deps/npm/node_modules/node-gyp/lib/build.js     | 22 +++++++++++-----------
 deps/npm/node_modules/node-gyp/lib/configure.js | 10 +++++-----
 src/node.cc                                     | 11 +++++++++++
 3 files changed, 27 insertions(+), 16 deletions(-)

diff --git a/deps/npm/node_modules/node-gyp/lib/build.js b/deps/npm/node_modules/node-gyp/lib/build.js
index 3a3edcc..fed5042 100644
--- a/deps/npm/node_modules/node-gyp/lib/build.js
+++ b/deps/npm/node_modules/node-gyp/lib/build.js
@@ -14,9 +14,9 @@ var fs = require('graceful-fs')
   , mkdirp = require('mkdirp')
   , exec = require('child_process').exec
   , processRelease = require('./process-release')
-  , win = process.platform == 'win32'
+  , winMsvc = process.platform == 'win32' && process.wintoolchain == 'msvc'
 
-exports.usage = 'Invokes `' + (win ? 'msbuild' : 'make') + '` and builds the module'
+exports.usage = 'Invokes `' + (winMsvc ? 'msbuild' : 'make') + '` and builds the module'
 
 function build (gyp, argv, callback) {
   var platformMake = 'make'
@@ -28,7 +28,7 @@ function build (gyp, argv, callback) {
 
   var release = processRelease(argv, gyp, process.version, process.release)
     , makeCommand = gyp.opts.make || process.env.MAKE || platformMake
-    , command = win ? 'msbuild' : makeCommand
+    , command = winMsvc ? 'msbuild' : makeCommand
     , buildDir = path.resolve('build')
     , configPath = path.resolve(buildDir, 'config.gypi')
     , jobs = gyp.opts.jobs || process.env.JOBS
@@ -73,7 +73,7 @@ function build (gyp, argv, callback) {
       log.verbose('architecture', arch)
       log.verbose('node dev dir', nodeDir)
 
-      if (win) {
+      if (winMsvc) {
         findSolutionFile()
       } else {
         doWhich()
@@ -105,7 +105,7 @@ function build (gyp, argv, callback) {
     // First make sure we have the build command in the PATH
     which(command, function (err, execPath) {
       if (err) {
-        if (win && /not found/.test(err.message)) {
+        if (winMsvc && /not found/.test(err.message)) {
           // On windows and no 'msbuild' found. Let's guess where it is
           findMsbuild()
         } else {
@@ -185,7 +185,7 @@ function build (gyp, argv, callback) {
    */
 
   function copyNodeLib () {
-    if (!win || !copyDevLib) return doBuild()
+    if (!winMsvc || !copyDevLib) return doBuild()
 
     var buildDir = path.resolve(nodeDir, buildType)
       , archNodeLibPath = path.resolve(nodeDir, arch, release.name + '.lib')
@@ -212,20 +212,20 @@ function build (gyp, argv, callback) {
 
     // Enable Verbose build
     var verbose = log.levels[log.level] <= log.levels.verbose
-    if (!win && verbose) {
+    if (!winMsvc && verbose) {
       argv.push('V=1')
     }
-    if (win && !verbose) {
+    if (winMsvc && !verbose) {
       argv.push('/clp:Verbosity=minimal')
     }
 
-    if (win) {
+    if (winMsvc) {
       // Turn off the Microsoft logo on Windows
       argv.push('/nologo')
     }
 
     // Specify the build type, Release by default
-    if (win) {
+    if (winMsvc) {
       var p = arch === 'x64' ? 'x64' : 'Win32'
       argv.push('/p:Configuration=' + buildType + ';Platform=' + p)
       if (jobs) {
@@ -253,7 +253,7 @@ function build (gyp, argv, callback) {
       }
     }
 
-    if (win) {
+    if (winMsvc) {
       // did the user specify their own .sln file?
       var hasSln = argv.some(function (arg) {
         return path.extname(arg) == '.sln'
diff --git a/deps/npm/node_modules/node-gyp/lib/configure.js b/deps/npm/node_modules/node-gyp/lib/configure.js
index 73eb0bd..d21f555 100644
--- a/deps/npm/node_modules/node-gyp/lib/configure.js
+++ b/deps/npm/node_modules/node-gyp/lib/configure.js
@@ -19,10 +19,10 @@ var fs = require('graceful-fs')
   , processRelease = require('./process-release')
   , spawn = cp.spawn
   , execFile = cp.execFile
-  , win = process.platform == 'win32'
+  , winMsvc = process.platform == 'win32' && process.wintoolchain == 'msvc'
   , findNodeDirectory = require('./find-node-directory')
 
-exports.usage = 'Generates ' + (win ? 'MSVC project files' : 'a Makefile') + ' for the current module'
+exports.usage = 'Generates ' + (winMsvc ? 'MSVC project files' : 'a Makefile') + ' for the current module'
 
 function configure (gyp, argv, callback) {
 
@@ -188,7 +188,7 @@ function configure (gyp, argv, callback) {
     if (err) return callback(err)
 
     if (!~argv.indexOf('-f') && !~argv.indexOf('--format')) {
-      if (win) {
+      if (winMsvc) {
         log.verbose('gyp', 'gyp format was not specified; forcing "msvs"')
         // force the 'make' target for non-Windows
         argv.push('-f', 'msvs')
@@ -205,7 +205,7 @@ function configure (gyp, argv, callback) {
       })
     }
 
-    if (win && !hasMsvsVersion()) {
+    if (winMsvc && !hasMsvsVersion()) {
       if ('msvs_version' in gyp.opts) {
         argv.push('-G', 'msvs_version=' + gyp.opts.msvs_version)
       } else {
@@ -255,7 +255,7 @@ function configure (gyp, argv, callback) {
         common_gypi = path.resolve(nodeDir, 'common.gypi')
 
       var output_dir = 'build'
-      if (win) {
+      if (winMsvc) {
         // Windows expects an absolute path
         output_dir = buildDir
       }
diff --git a/src/node.cc b/src/node.cc
index b5181c3..1e4a5e2 100644
--- a/src/node.cc
+++ b/src/node.cc
@@ -3193,6 +3193,17 @@ void SetupProcessObject(Environment* env,
 #  endif
 #endif
 
+#if defined(_WIN32)
+  // distinguish between msvc and mingw-w64 for node-gyp
+  #if defined(_MSC_VER)
+    process->Set(String::NewFromUtf8(env->isolate(), "wintoolchain"), String::NewFromUtf8(env->isolate(), "msvc"));
+  #elif defined(__MINGW32__)
+    process->Set(String::NewFromUtf8(env->isolate(), "wintoolchain"), String::NewFromUtf8(env->isolate(), "mingw-w64"));
+  #else
+    #error "Cannot determine wintoolchain"
+  #endif
+#endif
+
   // process.argv
   Local<Array> arguments = Array::New(env->isolate(), argc);
   for (int i = 0; i < argc; ++i) {
-- 
2.9.1

