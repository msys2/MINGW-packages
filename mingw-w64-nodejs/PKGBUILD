# Maintainer: Martell Malone <martellmalone@gmail.com>
# Maintainer: Ray Donnelly <mingw.android@gmail.com>
# Contributor: David Macek <david.macek.0@gmail.com>
# Contributor: Mateusz Miku≈Ça <mati865@gmail.com>

_realname=nodejs
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=6.5.0
pkgrel=1
pkgdesc="Evented I/O for V8 javascript (mingw-w64)"
arch=('any')
url="https://nodejs.org/"
license=("MIT")
makedepends=("python2" "make" "gyp")
# If can switch to shared dependencies instead of
# static, bundled then here is the full list. For
# for now, reluctantly the only shared dependency
# is OpenSSL.
# depends=("${MINGW_PACKAGE_PREFIX}-c-ares"
#          "${MINGW_PACKAGE_PREFIX}-http-parser"
#          "${MINGW_PACKAGE_PREFIX}-v8"
#          "${MINGW_PACKAGE_PREFIX}-libuv"
#          "${MINGW_PACKAGE_PREFIX}-openssl"
#          "${MINGW_PACKAGE_PREFIX}-zlib")
depends=("${MINGW_PACKAGE_PREFIX}-c-ares"
         "${MINGW_PACKAGE_PREFIX}-http-parser"
         "${MINGW_PACKAGE_PREFIX}-icu"
         "${MINGW_PACKAGE_PREFIX}-libuv"
         "${MINGW_PACKAGE_PREFIX}-openssl"
         "${MINGW_PACKAGE_PREFIX}-zlib"
         "winpty")
options=('!emptydirs' '!strip') # 'debug')

source=("https://nodejs.org/dist/v${pkgver}/node-v${pkgver}.tar.gz"
        "0001-fix-python-2-shebang.patch"
        "0002-Mat_Sutcliffe-node_mingw64-without-MSYS-path-convers.patch"
        "0003-include-win32-headers.h-for-v8.patch"
        "0004-mingw-w64-defines-localtime_s.patch"
        "0005-skip-unneeded-includes.patch"
        "0006-fix-winnt-version.patch"
        "0007-MinGW-w64-add-platform-wintoolset-as-msvc-or-mingw-w.patch"
        "0008-Use-shell-wrapper-script-for-npm-on-MSYS2-MinGW-w64.patch"
        "0009-Revert-to-FHS-installation-paths-on-Windows-tests-no.patch"
        "0010-cygpath-conversion-in-npm-shell-wrapper.patch"
        "0011-fix-building-with-with-intl-system-icu.patch"
        "0012-fixes-for-node-gyp-and-linking-to-node.patch"
        "0013-use-windmc-instead-of-mc.patch"
        "0100-Use-system-gyp.patch"
        'node-gyp'
        'node-gyp.cmd')

sha256sums=('d7742558bb3331e41510d6e6f1f7b13c0527aecc00a63c3e05fcfd44427ff778'
            '986d95dac203286a9b0c758154de05347eed2c08f948f72a1c0578325047c0a3'
            '54968785923aa427962addc62e34c2ea54c743f201606d9b29a6139f759469df'
            '31f2153edc8eb2ab15d95beba510de0832be0a343e56e53d7fba7c64957908e6'
            'e3a8f597e50f70bef54b2c4c371bcd31db9555776b3e33fe8cf1dcb0f577c371'
            'fa4eb521bd9ba54da31e163eb6e50d0af141072405ce05a4b4247cd11b174f09'
            '47eea3ca00d0ea3fe2bdf947eaa172caf86fd6107fd4976ad26e2941dbedd8fd'
            '9293ad3f4c86ae401904cdd92fc79391f39037c10db67affe7ff43b3e6927def'
            '50a27c004f7cc6bc4c18d1b83b264f05af57248eea908214948350046713e516'
            '8d8341f12f57a7f4869e873dce97b2023fffb49dceec711ac54b911be16bdea2'
            '6c485c5a915222e5d826cf1d8f3eb18d7082258731f9a04f498b053df411ded0'
            '56f3d4ef11ff6deebf7a381fb652d06a8bf5909f7da28efa9b1f6f64b220a66e'
            '1a3a385f2a2ae79854f314b5a3a276a51b28982ae1b30b02dbb362a4045baa49'
            '40dc46d438c319f2fe2c5cad76c2b0b4237572efa8cdb8e91c5d4565ecae79cb'
            'da4d21c363fbb5f2ae4bf8d948024a37b143f453885fb262c013d87b677510c9'
            '8f00d54bc60c62cfc6c63657fca0a522ee485ab2f30de721bd09a0f868e81257'
            '55294eca72a62b2730470a4586b5caab2ec3a43d5412566770541c9fc59e4135')

prepare() {
  cd ${srcdir}/node-v${pkgver}

  # git init

  # Using perfctrs makes Vista the minimum OS. MinGW-w64's perflib.h is missing lots
  # of stuff too, so the patches aren't enough.
  patch -p1 -i "${srcdir}"/0001-fix-python-2-shebang.patch
  patch -p1 -i "${srcdir}"/0002-Mat_Sutcliffe-node_mingw64-without-MSYS-path-convers.patch
  patch -p1 -i "${srcdir}"/0003-include-win32-headers.h-for-v8.patch
  patch -p1 -i "${srcdir}"/0004-mingw-w64-defines-localtime_s.patch
  patch -p1 -i "${srcdir}"/0005-skip-unneeded-includes.patch
  patch -p1 -i "${srcdir}"/0006-fix-winnt-version.patch
  patch -p1 -i "${srcdir}"/0007-MinGW-w64-add-platform-wintoolset-as-msvc-or-mingw-w.patch
  patch -p1 -i "${srcdir}"/0008-Use-shell-wrapper-script-for-npm-on-MSYS2-MinGW-w64.patch
  patch -p1 -i "${srcdir}"/0009-Revert-to-FHS-installation-paths-on-Windows-tests-no.patch
  patch -p1 -i "${srcdir}"/0010-cygpath-conversion-in-npm-shell-wrapper.patch
  patch -p1 -i "${srcdir}"/0011-fix-building-with-with-intl-system-icu.patch
  patch -p1 -i "${srcdir}"/0012-fixes-for-node-gyp-and-linking-to-node.patch
  patch -p1 -i "${srcdir}"/0013-use-windmc-instead-of-mc.patch
  patch -p1 -i "${srcdir}"/0100-Use-system-gyp.patch

  # taken form Arch with small improvement, can be used for recreating python patch
  # msg 'Fixing for python2 name'
  # find -type f ! \( -name "*.dat" -o -name "*.png" -o -name "*.gz" \
    # -o -name "*.tgz" -o -name "*.pdf" -o -name "*.md" -o -name "*.bat" \) -exec sed \
      # -e 's_^#!/usr/bin/env python$_&2_' \
      # -e 's_^\(#!/usr/bin/python2\).[45]$_\1_' \
      # -e 's_^#!/usr/bin/python$_&2_' \
      # -e 's_^\( *exec \+\)python\( \+.*\)$_\1python2\2_'\
      # -e 's_^\(.*\)python\( \+-c \+.*\)$_\1python2\2_'\
      # -e "s_'python'_'python2'_" -i {} \;
  # find test/ -type f -exec sed 's_python _python2 _' -i {} \;
  # sed "s_/usr/bin/env python2_/usr/bin/python2_" -i {configure,tools/gyp_node.py}
}

build() {

  local -a extra_config

  cd ${srcdir}
  sleep 5

  [[ -d ${CARCH} ]] && rm -rf ${CARCH}
  mv node-v${pkgver} ${CARCH}
  pushd ${CARCH}

# node.js uses a patched version of v8 5.1.281.81. If/when they upgrade
# we might be able to use this:
#    --shared-v8 \
#    --shared-v8-includes=$(pkgconf --variable=includedir v8) \
#    --shared-v8-libpath=$(pkgconf --variable=libdir v8) \
#    --shared-v8-libname=v8.$(pkgconf --modversion v8) \

# --output-dir= and 0004-Add-output-dir-option-to-configure-node_gyp-py.patch
# attempts to allow using the bundled (hence static) OpenSSL. The problem is
# that the link command line ends up being ~76k characters. This patch helps
# but it gets us down to ~45k. To further reduce this, the build folders of
# "Release/out.target" would be the next target.
#  OUTDIR=$(cd ../../..; echo $PWD)
#      --output-dir=/e/m2/t \
#
# --without-perfctr because MinGW-w64's perflib.h is missing a needed define
# (PERF_COUNTERSET_MULTI_AGGREGATE) and the win32 perfcnt stuff uses __out,
# __in, and __in_opt arg decorators.

  export CC=gcc
  export CXX=g++
  export LINK=g++

  if check_option "debug" "y"; then
    extra_config+=( --debug )
  fi

# TODO: fix etw and remove --without-etw
  ./configure \
    --prefix=${MINGW_PREFIX} \
    --dest-os=win \
    --shared-openssl \
    --shared-zlib \
    --shared-libuv \
    --shared-cares \
    --with-intl=system-icu \
    --shared-http-parser \
    --without-perfctr \
    --without-etw \
    "${extra_config[@]}"

  make
}

check() {
  cd ${CARCH}
  make check -k || true
}

package() {
  cd "${srcdir}/${CARCH}"
  make DESTDIR="${pkgdir}" install

  install -d "${pkgdir}"/${MINGW_PREFIX}/share/doc/nodejs
  cp -r doc/api/{*.html,assets} \
    "${pkgdir}"/${MINGW_PREFIX}/share/doc/nodejs

  install -D -m644 LICENSE \
    "${pkgdir}"/${MINGW_PREFIX}/share/licenses/nodejs/LICENSE

  install -m755 "${srcdir}/node-gyp" "${pkgdir}"${MINGW_PREFIX}/bin/node-gyp
  install -m755 "${srcdir}/node-gyp.cmd" "${pkgdir}"${MINGW_PREFIX}/bin/node-gyp.cmd
  install -m755 "${pkgdir}${MINGW_PREFIX}/lib/node_modules/npm/bin/npm.cmd" "${pkgdir}${MINGW_PREFIX}/bin/npm.cmd"

  install -m755 "${srcdir}/${CARCH}/out/node.dll.a" "${pkgdir}${MINGW_PREFIX}/lib/node.dll.a"

  # Use winpty to wrap the exe when executed from bash. Please don't move this into a patch as hopefully one day we won't need this hack.
  local _exename="node"
  mv "${pkgdir}"${MINGW_PREFIX}/bin/${_exename} "${pkgdir}"${MINGW_PREFIX}/bin/${_exename}_exe
  echo "#!/usr/bin/env bash" > "${pkgdir}${MINGW_PREFIX}/bin/${_exename}"
  echo '/usr/bin/winpty "$( dirname ${BASH_SOURCE[0]} )/'${_exename}'.exe" "$@"' >> "${pkgdir}${MINGW_PREFIX}/bin/${_exename}"
  mv "${pkgdir}"${MINGW_PREFIX}/bin/${_exename}_exe "${pkgdir}"${MINGW_PREFIX}/bin/${_exename}.exe

  # copy missing manpages
  cp -r "${pkgdir}${MINGW_PREFIX}/lib/node_modules/npm/man" "${pkgdir}${MINGW_PREFIX}/share"

  # /mingw64/lib/node_modules/npm/lib/npm.js is ridden with tests for win32, so that should probably be changed someday.
}
