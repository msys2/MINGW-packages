# Maintainer: Shiwei Wang <wsw0108@qq.com>

_realname=tree-sitter
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=0.22.6
pkgrel=1
pkgdesc="An incremental parsing system for programming tools (mingw-w64)"
arch=('any')
mingw_arch=('mingw64' 'ucrt64' 'clang64' 'clangarm64')
url="https://tree-sitter.github.io/"
msys2_repository_url="https://github.com/tree-sitter/tree-sitter"
msys2_references=(
  'archlinux: tree-sitter'
  'purl: pkg:cargo/tree-sitter'
)
license=('spdx:MIT')
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-rust"
             "${MINGW_PACKAGE_PREFIX}-pkgconf"
             "${MINGW_PACKAGE_PREFIX}-openssl"
             "${MINGW_PACKAGE_PREFIX}-libgit2"
             "${MINGW_PACKAGE_PREFIX}-libssh2")
checkdepends=('git')
source=("https://github.com/tree-sitter/tree-sitter/archive/v${pkgver}/${_realname}-${pkgver}.tar.gz"
        "001-mingw-build.patch")
sha256sums=('e2b687f74358ab6404730b7fb1a1ced7ddb3780202d37595ecd7b20a8f41861f'
            '04baf5f5aa9e5dbce70c71e7c6a894f2a37865d40f738e43f6ca84e757752d48')
noextract=("${_realname}-${pkgver}.tar.gz")

_env() {
  export LIBZ_SYS_STATIC=0
  export LIBGIT2_NO_VENDOR=1
  export OPENSSL_NO_VENDOR=1
  export PKG_CONFIG_ALL_DYNAMIC=1
  export LIBSSH2_SYS_USE_PKG_CONFIG=1
}

prepare() {
  tar -xzf "${_realname}-${pkgver}.tar.gz" || true
  cd "${srcdir}/${_realname}-${pkgver}"
  patch -p1 -i "${srcdir}/001-mingw-build.patch"

  cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
}

build() {
  cd "${srcdir}/${_realname}-${pkgver}"
  make

  cd "${srcdir}/${_realname}-${pkgver}"

  _env
  cargo build --frozen --profile optimize
}

check() {
  cd "${srcdir}/${_realname}-${pkgver}"

  _env
  make test
}

package() {
  cd "${srcdir}/${_realname}-${pkgver}"
  make PREFIX="${MINGW_PREFIX}" DESTDIR="${pkgdir}" install

  install -m755 target/optimize/tree-sitter.exe "${pkgdir}${MINGW_PREFIX}/bin/tree-sitter.exe"

  install -Dm644 LICENSE "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE"
}
