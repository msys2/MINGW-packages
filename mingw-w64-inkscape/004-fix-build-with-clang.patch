--- a/src/object/object-set.cpp
+++ b/src/object/object-set.cpp
@@ -255,7 +255,7 @@ Inkscape::XML::Node *ObjectSet::topRepr() const
         return nullptr;
     }
 
-#ifdef __APPLE__
+#ifdef __clang__
     // workaround for
     // static_assert(__is_cpp17_forward_iterator<_ForwardIterator>::value
     auto const n = std::vector<Inkscape::XML::Node *>(nodes.begin(), nodes.end());
--- a/src/auto-save.cpp
+++ b/src/auto-save.cpp
@@ -27,6 +27,7 @@
 #include "xml/repr.h"
 
 #ifdef _WIN32
+#include <process.h>
 typedef int uid_t;
 #define getuid() 0
 #endif
--- a/CMakeScripts/DefineDependsandFlags.cmake
+++ b/CMakeScripts/DefineDependsandFlags.cmake
@@ -94,10 +94,16 @@
     list(APPEND INKSCAPE_LIBS "-lmscms")
 
     list(APPEND INKSCAPE_CXX_FLAGS "-mms-bitfields")
-    list(APPEND INKSCAPE_CXX_FLAGS "-mwindows")
-    list(APPEND INKSCAPE_CXX_FLAGS "-mthreads")
+    if( ${CMAKE_CXX_COMPILER_ID} STREQUAL "GCC" )
+      list(APPEND INKSCAPE_CXX_FLAGS "-mwindows")
+      list(APPEND INKSCAPE_CXX_FLAGS "-mthreads")
+    endif()
 
-    list(APPEND INKSCAPE_LIBS "-lgomp")
+    if( ${CMAKE_CXX_COMPILER_ID} STREQUAL "GCC" )
+      list(APPEND INKSCAPE_LIBS "-lgomp")
+    elseif( ${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang" )
+      list(APPEND INKSCAPE_LIBS "-lomp")
+    endif()
     list(APPEND INKSCAPE_LIBS "-lwinpthread")
 
     if(HAVE_MINGW64)
