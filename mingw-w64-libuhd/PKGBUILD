# Maintainer: Chris Gorman <chrisjohgorman@gmail.com>

_realname=libuhd
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=4.7.0.0
pkgrel=2
pkgdesc="Universal Software Radio Peripheral (USRP) userspace driver (mingw-w64)"
arch=('any')
mingw_arch=('mingw64' 'ucrt64' 'clang64' 'clangarm64')
url='https://files.ettus.com/manual/'
license=('GPL')
depends=("${MINGW_PACKAGE_PREFIX}-boost"
	     "${MINGW_PACKAGE_PREFIX}-orc"
	     "${MINGW_PACKAGE_PREFIX}-libusb"
	     "${MINGW_PACKAGE_PREFIX}-python")
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-python-setuptools"
             "${MINGW_PACKAGE_PREFIX}-python-mako"
             "${MINGW_PACKAGE_PREFIX}-python-numpy")
source=("libuhd-$pkgver.tar.gz::https://github.com/EttusResearch/uhd/archive/v$pkgver.tar.gz"
	0001-libraries_headers_and_no_pthread_setname_np.patch)
sha256sums=('afe56842587ce72d6a57535a2b15c061905f0a039abcc9d79f0106f072a00d10'
            'e97e1c6a3f1d29d658eb554fe4f206cec0ccddb4459585f221b151118e5f5cfa')

prepare() {
  cd "${srcdir}"/uhd-${pkgver}

  patch -Np1 -i "${srcdir}"/0001-libraries_headers_and_no_pthread_setname_np.patch
}

build() {
  local _pyver=$(${MINGW_PREFIX}/bin/python -c "import sys;sys.stdout.write('.'.join(map(str, sys.version_info[:2])))")

  declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    "${MINGW_PREFIX}"/bin/cmake.exe \
      -GNinja \
      -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}" \
      -DPYTHON_EXECUTABLE="${MINGW_PREFIX}"/bin/python \
      -DENABLE_EXAMPLES=ON \
      -DENABLE_PYTHON_API=ON \
      -DUHD_PYTHON_DIR="lib/python${_pyver}/site-packages" \
      -DENABLE_UTILS=ON \
      -DENABLE_TESTS=OFF \
      -DENABLE_E100=ON \
      -DENABLE_E300=ON \
      "${extra_config[@]}" \
      -S "uhd-${pkgver}/host" \
      -B "build-${MSYSTEM}"

  "${MINGW_PREFIX}"/bin/cmake.exe --build "build-${MSYSTEM}"
}

check() {
  "${MINGW_PREFIX}"/bin/cmake.exe --build "build-${MSYSTEM}" --target test || warning "Tests failed"
}

package() {
  DESTDIR="${pkgdir}" "${MINGW_PREFIX}"/bin/cmake.exe --install "build-${MSYSTEM}"

}
