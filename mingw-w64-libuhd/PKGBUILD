# Based on archlinux PKGBUILD
# Maintainer: Kyle Keen <keenerd@gmail.com>
# Contributor: Dominik Heidler <dheidler@gmail.com>

_realname=libuhd
pkgbase="mingw-w64-${_realname}"
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=3.13.0.1
pkgrel=1
pkgdesc="Universal Software Radio Peripheral (USRP) userspace driver (mingw-w64)"
arch=('any')
url="http://www.ettus.com/kb/category/software-documentation/uhd-manual"
license=('GPL')
depends=(
    "${MINGW_PACKAGE_PREFIX}-boost"
    "${MINGW_PACKAGE_PREFIX}-orc"
    "${MINGW_PACKAGE_PREFIX}-libusb"
    "${MINGW_PACKAGE_PREFIX}-python2-requests"
)
optdepends=(
    "${MINGW_PACKAGE_PREFIX}-python2: usrp utils"
)
makedepends=(
    "${MINGW_PACKAGE_PREFIX}-cmake"
    "${MINGW_PACKAGE_PREFIX}-boost"
    "${MINGW_PACKAGE_PREFIX}-python2-mako"
)

source=("libuhd-$pkgver.tar.gz::https://github.com/EttusResearch/uhd/archive/v$pkgver.tar.gz"
        'boost-1.67.patch')
sha256sums=('ee5475e7ffbb14441b323cc2fc73950cde2326fd00772dab62efa677f27a97bf'
            '7131dd6d0de95a83d6fa6ceac5eefe1ba4daaec9507008793597932ef1c96356')

prepare() {
  cd "$srcdir/uhd-$pkgver"
  
  # ugly workarounds
  sed -i '1s;^;#include <winsock2.h>\n;' host/lib/deps/rpclib/lib/rpc/client.cc
  sed -i '1s;^;#include <winsock2.h>\n;' host/lib/deps/rpclib/lib/rpc/server.cc
  sed -i '1s;^;#include <winsock2.h>\n;' host/lib/usrp/mpmd/mpmd_find.cpp
  sed -i '1s;^;#include <winsock2.h>\n;' host/lib/usrp/mpmd/mpmd_impl.cpp
  sed -i -e "s|thread_win32|thread|" host/CMakeLists.txt
  sed -i -e "s|IF(CYGWIN)|IF(CYGWIN OR WIN32)|" host/lib/utils/CMakeLists.txt
  sed -i -e "s|TARGET_LINK_LIBRARIES(uhd |TARGET_LINK_LIBRARIES(uhd wsock32 |" host/lib/CMakeLists.txt
  sed -i '1s;^;INCLUDE_DIRECTORIES("${CMAKE_INSTALL_PREFIX}/include/ncurses")\n;' host/utils/latency/CMakeLists.txt

  sed -i -e "s/#ifdef BOOST_MSVC/#if defined(BOOST_MSVC) || defined(__MINGW32__)/" host/lib/utils/pathslib.cpp
  
  patch -Np1 -i ../boost-1.67.patch
}

build() {
  cd "$srcdir/uhd-$pkgver/host"
  # fix for py2
  find -name "*.py" -or -name '*.py.in' | xargs sed -i "s|#!/usr/bin/env python$|#!/usr/bin/env python2|"

  mkdir -p build
  cd build
  "${MINGW_PREFIX}/bin/cmake.exe" .. \
           -G"MSYS Makefiles" \
           -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}" \
           -DPYTHON_EXECUTABLE="${MINGW_PREFIX}/bin/python2" \
           -DENABLE_EXAMPLES=OFF \
           -DENABLE_UTILS=ON \
           -DENABLE_TESTS=OFF \
           -DENABLE_E100=ON \
           -DENABLE_E300=ON
  make
}

check() {
  cd "$srcdir/uhd-$pkgver/host/build"
  make test
}

package() {
  cd "$srcdir/uhd-$pkgver/host/build"
  make DESTDIR="$pkgdir" install
  #install -Dm644 "../utils/uhd-usrp.rules" "$pkgdir/usr/lib/udev/rules.d/10-uhd-usrp.rules"
} 
