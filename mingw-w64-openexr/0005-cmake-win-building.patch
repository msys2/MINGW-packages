From 24ab7da230f297fd18e103add8350690aa7cf639 Mon Sep 17 00:00:00 2001
From: Ashley Whetter <ashley.whetter@aardman.com>
Date: Tue, 13 Oct 2015 11:46:51 +0100
Subject: [PATCH] Fixed building on Windows

Added FindIlmBase and FindOpenExr CMake modules.
Started using FindIlmBase in OpenEXR build to allow for
building static libraries and out of source builds.
Remove ILMBASE_PACKAGE_PREFIX in favour of FindIlmBase's IlmBase_ROOT,
as per CMake module convention.
---
 CMakeLists.txt                |     6 +-
 IlmImf/CMakeLists.txt         |    13 +-
 IlmImfExamples/CMakeLists.txt |     5 +-
 IlmImfFuzzTest/CMakeLists.txt |     5 +-
 IlmImfTest/CMakeLists.txt     |     7 +-
 IlmImfUtil/CMakeLists.txt     |     5 +-
 IlmImfUtilTest/CMakeLists.txt |     7 +-
 exrenvmap/CMakeLists.txt      |     4 +-
 exrheader/CMakeLists.txt      |     4 +-
 exrmakepreview/CMakeLists.txt |     4 +-
 exrmaketiled/CMakeLists.txt   |     4 +-
 exrmultipart/CMakeLists.txt   |     4 +-
 exrmultiview/CMakeLists.txt   |     5 +-
 exrstdattr/CMakeLists.txt     |     4 +-
 lib/FindIlmBase.cmake         |    39 +
 lib/FindOpenEXR.cmake         |    46 +
 lib/IlmMacros.cmake           |    52 +
 22 files changed, 16559 insertions(+), 65 deletions(-)
 create mode 100644 lib/FindIlmBase.cmake
 create mode 100644 lib/FindOpenEXR.cmake
 create mode 100644 lib/IlmMacros.cmake

diff --git a/CMakeLists.txt b/CMakeLists.txt
index d3e3365..bc9f093 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -57,9 +57,9 @@ IF (NOT WIN32)
   SET ( PTHREAD_LIB pthread )
 ENDIF()
 
-INCLUDE_DIRECTORIES ( ${ILMBASE_PACKAGE_PREFIX}/include/OpenEXR )
-LINK_DIRECTORIES ( ${ILMBASE_PACKAGE_PREFIX}/lib )
-MESSAGE ( "ILMBASE_PACKAGE_PREFIX = " ${ILMBASE_PACKAGE_PREFIX})
+LIST(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR}/lib)
+FIND_PACKAGE(IlmBase REQUIRED)
+INCLUDE_DIRECTORIES ( ${IlmBase_INCLUDE_DIRS} )
 
 SET (LIB_TYPE STATIC)
 IF (BUILD_SHARED_LIBS)
diff --git a/IlmImf/CMakeLists.txt b/IlmImf/CMakeLists.txt
index 18d90ed..c0d437a 100644
--- a/IlmImf/CMakeLists.txt
+++ b/IlmImf/CMakeLists.txt
@@ -7,9 +7,7 @@ ADD_EXECUTABLE ( b44ExpLogTable
 )
 
 TARGET_LINK_LIBRARIES ( b44ExpLogTable
-  Half
-  Iex${ILMBASE_LIBSUFFIX}
-  IlmThread${ILMBASE_LIBSUFFIX}
+  ${IlmBase_LIBRARIES}
   ${PTHREAD_LIB}
 )
 
@@ -24,9 +22,7 @@ ADD_EXECUTABLE ( dwaLookups
 )
 
 TARGET_LINK_LIBRARIES ( dwaLookups
-  Half
-  Iex${ILMBASE_LIBSUFFIX}
-  IlmThread${ILMBASE_LIBSUFFIX}
+  ${IlmBase_LIBRARIES}
   ${PTHREAD_LIB}
 )
 
@@ -137,10 +133,7 @@ ADD_LIBRARY ( IlmImf ${LIB_TYPE}
 )
 
 TARGET_LINK_LIBRARIES ( IlmImf 
-  Half 
-  Iex${ILMBASE_LIBSUFFIX}
-  Imath${ILMBASE_LIBSUFFIX}
-  IlmThread${ILMBASE_LIBSUFFIX}
+  ${IlmBase_LIBRARIES}
   ${PTHREAD_LIB} ${ZLIB_LIBRARIES}
 )
 
diff --git a/IlmImfExamples/CMakeLists.txt b/IlmImfExamples/CMakeLists.txt
index 03061cb..6d299a1 100644
--- a/IlmImfExamples/CMakeLists.txt
+++ b/IlmImfExamples/CMakeLists.txt
@@ -14,10 +14,7 @@ ADD_EXECUTABLE ( IlmImfExamples
 
 TARGET_LINK_LIBRARIES ( IlmImfExamples 
         IlmImf
-        Half 
-        Iex${ILMBASE_LIBSUFFIX}
-        Imath${ILMBASE_LIBSUFFIX}
-        IlmThread${ILMBASE_LIBSUFFIX}
+        ${IlmBase_LIBRARIES}
         ${PTHREAD_LIB} ${ZLIB_LIBRARIES}
         )
   
diff --git a/IlmImfFuzzTest/CMakeLists.txt b/IlmImfFuzzTest/CMakeLists.txt
index 12fe072..ec603b0 100644
--- a/IlmImfFuzzTest/CMakeLists.txt
+++ b/IlmImfFuzzTest/CMakeLists.txt
@@ -11,10 +11,7 @@ ADD_EXECUTABLE ( IlmImfFuzzTest
 
 TARGET_LINK_LIBRARIES ( IlmImfFuzzTest 
         IlmImf
-        Half
-        Iex${ILMBASE_LIBSUFFIX}
-        Imath${ILMBASE_LIBSUFFIX}
-        IlmThread${ILMBASE_LIBSUFFIX}
+        ${IlmBase_LIBRARIES}
         ${PTHREAD_LIB} ${ZLIB_LIBRARIES})
 
 ADD_TEST ( TestIlmImfFuzz IlmImfFuzzTest )
diff --git a/IlmImfTest/CMakeLists.txt b/IlmImfTest/CMakeLists.txt
index c07d9f2..3dd99c6 100644
--- a/IlmImfTest/CMakeLists.txt
+++ b/IlmImfTest/CMakeLists.txt
@@ -64,11 +64,8 @@ ADD_EXECUTABLE ( IlmImfTest
 
 ADD_TEST ( TestIlmImf IlmImfTest )
 TARGET_LINK_LIBRARIES ( IlmImfTest 
-        IlmImf  
-        Half 
-        Iex${ILMBASE_LIBSUFFIX}
-        Imath${ILMBASE_LIBSUFFIX}
-        IlmThread${ILMBASE_LIBSUFFIX}
+        IlmImf
+        ${IlmBase_LIBRARIES}
         ${PTHREAD_LIB} ${ZLIB_LIBRARIES}
         )
 
diff --git a/IlmImfUtil/CMakeLists.txt b/IlmImfUtil/CMakeLists.txt
index 3eca4bc..aa1317c 100644
--- a/IlmImfUtil/CMakeLists.txt
+++ b/IlmImfUtil/CMakeLists.txt
@@ -27,11 +27,8 @@ ADD_LIBRARY ( IlmImfUtil ${LIB_TYPE}
 )
 
 TARGET_LINK_LIBRARIES ( IlmImfUtil 
-  Half 
-  Iex${ILMBASE_LIBSUFFIX}
-  Imath${ILMBASE_LIBSUFFIX}
-  IlmThread${ILMBASE_LIBSUFFIX}
   IlmImf
+  ${IlmBase_LIBRARIES}
   ${PTHREAD_LIB} ${ZLIB_LIBRARIES}
 )
 
diff --git a/IlmImfUtilTest/CMakeLists.txt b/IlmImfUtilTest/CMakeLists.txt
index 3663dc0..8a05950 100644
--- a/IlmImfUtilTest/CMakeLists.txt
+++ b/IlmImfUtilTest/CMakeLists.txt
@@ -15,11 +15,8 @@ ADD_EXECUTABLE ( IlmImfUtilTest
 ADD_TEST ( TestIlmImfUtil IlmImfUtilTest )
 TARGET_LINK_LIBRARIES ( IlmImfUtilTest 
         IlmImfUtil
-        IlmImf  
-        Half 
-        Iex${ILMBASE_LIBSUFFIX}
-        Imath${ILMBASE_LIBSUFFIX}
-        IlmThread${ILMBASE_LIBSUFFIX}
+        IlmImf
+        ${IlmBase_LIBRARIES}
         ${PTHREAD_LIB} ${ZLIB_LIBRARIES}
         )
 
diff --git a/README.cmake.txt b/README.cmake.txt
index 17776e5..2dacf93 100644
--- a/README.cmake.txt
+++ b/README.cmake.txt
@@ -26,7 +26,7 @@ CMakeLists.txt, and type command:
 	del /f CMakeCache.txt
 	cmake 
       -DZLIB_ROOT=<zlib location>
-      -DILMBASE_PACKAGE_PREFIX=<where you installed the ilmbase builds>
+      -DIlmBase_ROOT=<where you installed the ilmbase builds>
       -DCMAKE_INSTALL_PREFIX=<where you want to instal the openexr builds>
       -G "Visual Studio 10 Win64" ^
       ..\openexr
@@ -42,7 +42,7 @@ you set up at the previous step.
 -- OpenEXR --
 -------------
 initial bootstraping:
-    cmake -DILMBASE_PACKAGE_PREFIX=<location of installed IlmBase files> -DCMAKE_INSTALL_PREFIX=<install location> <source location of OpenEXR>
+    cmake -DIlmBase_ROOT=<location of installed IlmBase files> -DCMAKE_INSTALL_PREFIX=<install location> <source location of OpenEXR>
 
 build the actual code base:
     make -j 4
diff --git a/exrenvmap/CMakeLists.txt b/exrenvmap/CMakeLists.txt
index 70ebd83..e1389ff 100644
--- a/exrenvmap/CMakeLists.txt
+++ b/exrenvmap/CMakeLists.txt
@@ -12,9 +12,7 @@ ADD_EXECUTABLE ( exrenvmap
 
 TARGET_LINK_LIBRARIES ( exrenvmap
   IlmImf
-  IlmThread${ILMBASE_LIBSUFFIX}
-  Iex${ILMBASE_LIBSUFFIX}
-  Half
+  ${IlmBase_LIBRARIES}
   ${PTHREAD_LIB}
   ${ZLIB_LIBRARIES}
 )
diff --git a/exrheader/CMakeLists.txt b/exrheader/CMakeLists.txt
index 1953836..59b9889 100644
--- a/exrheader/CMakeLists.txt
+++ b/exrheader/CMakeLists.txt
@@ -6,9 +6,7 @@ ADD_EXECUTABLE ( exrheader
 
 TARGET_LINK_LIBRARIES ( exrheader
   IlmImf
-  Iex${ILMBASE_LIBSUFFIX}
-  IlmThread${ILMBASE_LIBSUFFIX}
-  Half
+  ${IlmBase_LIBRARIES}
   ${PTHREAD_LIB}
   ${ZLIB_LIBRARIES}
 )
diff --git a/exrmakepreview/CMakeLists.txt b/exrmakepreview/CMakeLists.txt
index 78b9278..5055b0d 100644
--- a/exrmakepreview/CMakeLists.txt
+++ b/exrmakepreview/CMakeLists.txt
@@ -7,9 +7,7 @@ ADD_EXECUTABLE ( exrmakepreview
 
 TARGET_LINK_LIBRARIES ( exrmakepreview
   IlmImf
-  IlmThread${ILMBASE_LIBSUFFIX}
-  Iex${ILMBASE_LIBSUFFIX}
-  Half
+  ${IlmBase_LIBRARIES}
   ${PTHREAD_LIB}
   ${ZLIB_LIBRARIES}
 )
diff --git a/exrmaketiled/CMakeLists.txt b/exrmaketiled/CMakeLists.txt
index 1e8f00d..456f27c 100644
--- a/exrmaketiled/CMakeLists.txt
+++ b/exrmaketiled/CMakeLists.txt
@@ -8,9 +8,7 @@ ADD_EXECUTABLE ( exrmaketiled
 
 TARGET_LINK_LIBRARIES ( exrmaketiled
   IlmImf
-  IlmThread${ILMBASE_LIBSUFFIX}
-  Iex${ILMBASE_LIBSUFFIX}
-  Half
+  ${IlmBase_LIBRARIES}
   ${PTHREAD_LIB}
   ${ZLIB_LIBRARIES}
 )
diff --git a/exrmultipart/CMakeLists.txt b/exrmultipart/CMakeLists.txt
index 4f013cd..0c3168c 100644
--- a/exrmultipart/CMakeLists.txt
+++ b/exrmultipart/CMakeLists.txt
@@ -6,9 +6,7 @@ ADD_EXECUTABLE ( exrmultipart
 
 TARGET_LINK_LIBRARIES ( exrmultipart
   IlmImf
-  IlmThread${ILMBASE_LIBSUFFIX}
-  Iex${ILMBASE_LIBSUFFIX}
-  Half
+  ${IlmBase_LIBRARIES}
   ${PTHREAD_LIB}
   ${ZLIB_LIBRARIES}
 )
diff --git a/exrmultiview/CMakeLists.txt b/exrmultiview/CMakeLists.txt
index 4c71437..5db3afa 100644
--- a/exrmultiview/CMakeLists.txt
+++ b/exrmultiview/CMakeLists.txt
@@ -8,10 +8,7 @@ ADD_EXECUTABLE ( exrmultiview
 
 TARGET_LINK_LIBRARIES ( exrmultiview
   IlmImf
-  Half
-  Imath${ILMBASE_LIBSUFFIX}
-  Iex${ILMBASE_LIBSUFFIX}
-  IlmThread${ILMBASE_LIBSUFFIX}
+  ${IlmBase_LIBRARIES}
   ${PTHREAD_LIB}
   ${ZLIB_LIBRARIES}
 )
diff --git a/exrstdattr/CMakeLists.txt b/exrstdattr/CMakeLists.txt
index f8904dd..7679f07 100644
--- a/exrstdattr/CMakeLists.txt
+++ b/exrstdattr/CMakeLists.txt
@@ -6,9 +6,7 @@ ADD_EXECUTABLE ( exrstdattr
 
 TARGET_LINK_LIBRARIES ( exrstdattr
   IlmImf
-  IlmThread${ILMBASE_LIBSUFFIX}
-  Iex${ILMBASE_LIBSUFFIX}
-  Half
+  ${IlmBase_LIBRARIES}
   ${PTHREAD_LIB}
   ${ZLIB_LIBRARIES}
 )
diff --git a/lib/FindIlmBase.cmake b/lib/FindIlmBase.cmake
new file mode 100644
index 0000000..63a478e
--- /dev/null
+++ b/lib/FindIlmBase.cmake
@@ -0,0 +1,39 @@
+#
+# Find IlmBase include dirs and libraries
+#
+# Input variables:
+#  IlmBase_ROOT
+#  IlmBase_USE_STATIC_LIBS
+#
+# Output variables:
+#  IlmBase_FOUND
+#  IlmBase_INCLUDE_DIRS
+#  IlmBase_LIBRARIES
+#
+
+include(IlmMacros)
+
+_ILM_FIND_INCLUDE_DIR(IlmBase IlmBaseConfig.h)
+if(IlmBase_INCLUDE_DIR)
+	set(IlmBase_INCLUDE_DIRS ${IlmBase_INCLUDE_DIR})
+endif()
+
+# These components have inter-dependencies
+# so we don't allow the user to select individual components
+set(_ilmbase_COMPONENTS Half Iex IexMath IlmThread Imath)
+_ILM_FIND_LIBRARIES(IlmBase _ilmbase_COMPONENTS)
+
+# Output results
+include(FindPackageHandleStandardArgs)
+FIND_PACKAGE_HANDLE_STANDARD_ARGS(IlmBase
+	REQUIRED_VARS
+	IlmBase_INCLUDE_DIR
+	IlmBase_INCLUDE_DIRS
+	${_ilmbase_LIB_VARS}
+	IlmBase_LIBRARIES
+	)
+
+mark_as_advanced(
+	IlmBase_INCLUDE_DIRS
+	IlmBase_LIBRARIES
+	)
diff --git a/lib/FindOpenEXR.cmake b/lib/FindOpenEXR.cmake
new file mode 100644
index 0000000..3a18316
--- /dev/null
+++ b/lib/FindOpenEXR.cmake
@@ -0,0 +1,46 @@
+#
+# Find OpenEXR include dirs and libraries
+#
+# Input variables:
+#  OpenEXR_ROOT
+#  OpenEXR_USE_STATIC_LIBS
+#
+# Output variables:
+#  OpenEXR_FOUND
+#  OpenEXR_INCLUDE_PATHS
+#  OpenEXR_LIBRARIES
+#
+
+include(IlmMacros)
+
+if(OpenEXR_FIND_QUIETLY)
+	set(_FIND_PKG_ARG QUIET)
+endif()
+find_package(IlmBase ${_FIND_PKG_ARG})
+find_package(ZLIB ${_FIND_PKG_ARG})
+
+if(IlmBASE_FOUND AND ZLIB_FOUND)
+	_ILM_FIND_INCLUDE_DIR(OpenEXR ImfRgbaFile.h)
+	if(OpenEXR_INCLUDE_DIR)
+		set(OpenEXR_INCLUDE_DIRS ${OpenEXR_INCLUDE_DIR} ${IlmBase_INCLUDE_DIRS} ${ZLIB_INCLUDE_DIRS})
+	endif()
+
+	set(_openexr_COMPONENTS IlmImf IlmImfUtil)
+	_ILM_FIND_LIBRARIES(OpenEXR _openexr_COMPONENTS)
+	set(OpenEXR_LIBRARIES ${OpenEXR_LIBRARIES} ${IlmBase_LIBRARIES} ${ZLIB_LIBRARIES})
+endif()
+
+# Output results
+include(FindPackageHandleStandardArgs)
+FIND_PACKAGE_HANDLE_STANDARD_ARGS(OpenEXR
+	REQUIRED_VARS
+	OpenEXR_INCLUDE_DIR
+	OpenEXR_INCLUDE_DIRS
+	${_openexr_LIB_VARS}
+	OpenEXR_LIBRARIES
+	)
+
+mark_as_advanced(
+	OpenEXR_INCLUDE_DIRS
+	OpenEXR_LIBRARIES
+	)
diff --git a/lib/IlmMacros.cmake b/lib/IlmMacros.cmake
new file mode 100644
index 0000000..c0e3b64
--- /dev/null
+++ b/lib/IlmMacros.cmake
@@ -0,0 +1,52 @@
+# Means we don't need to set the openexr directory everywhere
+# Uses ${Package}_ROOT
+# Sets ${Package}_INCLUDE_DIR
+macro(_ILM_FIND_INCLUDE_DIR package header)
+	FIND_PATH(${package}_INCLUDE_DIR
+		NAMES ${header}
+		PATH_SUFFIXES include/OpenEXR
+		PATHS ${${package}_ROOT} $ENV{PROGRAMFILES}/openexr
+		)
+	mark_as_advanced(${package}_INCLUDE_DIR)
+endmacro()
+
+# Finds each specified library
+# Uses ${Package}_ROOT, ${Package}_USE_STATIC_LIBS
+# Sets ${Package}_LIBRARIES
+macro(_ILM_FIND_LIBRARIES package components)
+	string(TOLOWER ${package} lowerpackage)
+
+	# Adapted from FindBoost.cmake
+	# Support preference of static libs by looking for static libs first
+	if(${package}_USE_STATIC_LIBS)
+		set(_${lowerpackage}_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES})
+		if(WIN32)
+			set(CMAKE_FIND_LIBRARY_SUFFIXES .lib .a ${CMAKE_FIND_LIBRARY_SUFFIXES})
+		else()
+			set(CMAKE_FIND_LIBRARY_SUFFIXES .a)
+		endif()
+	endif()
+
+	set(_${lowerpackage}_LIB_VARS)
+	set(${package}_LIBRARIES)
+	foreach(COMPONENT ${_${lowerpackage}_COMPONENTS})
+		string(TOUPPER ${COMPONENT} UPPERCOMPONENT)
+
+		find_library(${package}_${UPPERCOMPONENT}_LIBRARY
+			NAMES ${COMPONENT}
+			PATHS ${${package}_ROOT}/lib $ENV{PROGRAMFILES}/lib
+			)
+		list(APPEND _${lowerpackage}_LIB_VARS ${package}_${UPPERCOMPONENT}_LIBRARY)
+		list(APPEND ${package}_LIBRARIES ${${package}_${UPPERCOMPONENT}_LIBRARY})
+		mark_as_advanced(${package}_${UPPERCOMPONENT}_LIBRARY)
+	endforeach()
+
+	# Revert CMAKE_FIND_LIBRARY_SUFFIXES if changed
+	if(${package}_USE_STATIC_LIBS)
+		set(CMAKE_FIND_LIBRARY_SUFFIXES ${_${lowerpackage}_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES})
+	endif()
+
+	mark_as_advanced(
+		${package}_LIBRARIES
+		)
+endmacro()
