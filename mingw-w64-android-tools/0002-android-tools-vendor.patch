--- a/vendor/boringssl/include/openssl/base.h
+++ b/vendor/boringssl/include/openssl/base.h
@@ -136,8 +136,13 @@
 #endif
 #endif
 
+// Unfortunate workaround to avoid symbol conflict with wincrypt.h
+// See https://github.com/openssl/openssl/issues/9981
 #if defined(_WIN32)
 #define OPENSSL_WINDOWS
+#undef PKCS7_SIGNER_INFO
+#undef X509_EXTENSIONS
+#undef X509_NAME
 #endif
 
 // Trusty isn't Linux but currently defines __linux__. As a workaround, we
--- a/vendor/libziparchive/zip_cd_entry_map.h
+++ b/vendor/libziparchive/zip_cd_entry_map.h
@@ -90,7 +90,7 @@
   static constexpr size_t offset_max = (1u << 20) - 1;
   static constexpr size_t length_max = (1u << 12) - 1;
   uint32_t name_offset : 20;
-  uint16_t name_length : 12;
+  uint32_t name_length : 12;
 };
 
 static_assert(sizeof(struct ZipStringOffset20) == 4);
