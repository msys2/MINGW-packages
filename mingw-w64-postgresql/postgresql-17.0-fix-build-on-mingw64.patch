--- a/src/backend/regex/regc_pg_locale.c
+++ b/src/backend/regex/regc_pg_locale.c
@@ -308,8 +308,10 @@
 			return (c <= (pg_wchar) UCHAR_MAX &&
 					isdigit((unsigned char) c));
 		case PG_REGEX_LOCALE_WIDE_L:
+#if !defined(__MSVCRT_VERSION__) || (defined(__MSVCRT_VERSION__) && __MSVCRT_VERSION__ >= 0x800)
 			if (sizeof(wchar_t) >= 4 || c <= (pg_wchar) 0xFFFF)
 				return iswdigit_l((wint_t) c, pg_regex_locale->info.lt);
+#endif
 			/* FALL THRU */
 		case PG_REGEX_LOCALE_1BYTE_L:
 			return (c <= (pg_wchar) UCHAR_MAX &&
@@ -342,8 +344,10 @@
 			return (c <= (pg_wchar) UCHAR_MAX &&
 					isalpha((unsigned char) c));
 		case PG_REGEX_LOCALE_WIDE_L:
+#if !defined(__MSVCRT_VERSION__) || (defined(__MSVCRT_VERSION__) && __MSVCRT_VERSION__ >= 0x800)
 			if (sizeof(wchar_t) >= 4 || c <= (pg_wchar) 0xFFFF)
 				return iswalpha_l((wint_t) c, pg_regex_locale->info.lt);
+#endif
 			/* FALL THRU */
 		case PG_REGEX_LOCALE_1BYTE_L:
 			return (c <= (pg_wchar) UCHAR_MAX &&
@@ -376,8 +380,10 @@
 			return (c <= (pg_wchar) UCHAR_MAX &&
 					isalnum((unsigned char) c));
 		case PG_REGEX_LOCALE_WIDE_L:
+#if !defined(__MSVCRT_VERSION__) || (defined(__MSVCRT_VERSION__) && __MSVCRT_VERSION__ >= 0x800)
 			if (sizeof(wchar_t) >= 4 || c <= (pg_wchar) 0xFFFF)
 				return iswalnum_l((wint_t) c, pg_regex_locale->info.lt);
+#endif
 			/* FALL THRU */
 		case PG_REGEX_LOCALE_1BYTE_L:
 			return (c <= (pg_wchar) UCHAR_MAX &&
@@ -419,8 +425,10 @@
 			return (c <= (pg_wchar) UCHAR_MAX &&
 					isupper((unsigned char) c));
 		case PG_REGEX_LOCALE_WIDE_L:
+#if !defined(__MSVCRT_VERSION__) || (defined(__MSVCRT_VERSION__) && __MSVCRT_VERSION__ >= 0x800)
 			if (sizeof(wchar_t) >= 4 || c <= (pg_wchar) 0xFFFF)
 				return iswupper_l((wint_t) c, pg_regex_locale->info.lt);
+#endif
 			/* FALL THRU */
 		case PG_REGEX_LOCALE_1BYTE_L:
 			return (c <= (pg_wchar) UCHAR_MAX &&
@@ -453,8 +461,10 @@
 			return (c <= (pg_wchar) UCHAR_MAX &&
 					islower((unsigned char) c));
 		case PG_REGEX_LOCALE_WIDE_L:
+#if !defined(__MSVCRT_VERSION__) || (defined(__MSVCRT_VERSION__) && __MSVCRT_VERSION__ >= 0x800)
 			if (sizeof(wchar_t) >= 4 || c <= (pg_wchar) 0xFFFF)
 				return iswlower_l((wint_t) c, pg_regex_locale->info.lt);
+#endif
 			/* FALL THRU */
 		case PG_REGEX_LOCALE_1BYTE_L:
 			return (c <= (pg_wchar) UCHAR_MAX &&
@@ -487,8 +497,10 @@
 			return (c <= (pg_wchar) UCHAR_MAX &&
 					isgraph((unsigned char) c));
 		case PG_REGEX_LOCALE_WIDE_L:
+#if !defined(__MSVCRT_VERSION__) || (defined(__MSVCRT_VERSION__) && __MSVCRT_VERSION__ >= 0x800)
 			if (sizeof(wchar_t) >= 4 || c <= (pg_wchar) 0xFFFF)
 				return iswgraph_l((wint_t) c, pg_regex_locale->info.lt);
+#endif
 			/* FALL THRU */
 		case PG_REGEX_LOCALE_1BYTE_L:
 			return (c <= (pg_wchar) UCHAR_MAX &&
@@ -521,8 +533,10 @@
 			return (c <= (pg_wchar) UCHAR_MAX &&
 					isprint((unsigned char) c));
 		case PG_REGEX_LOCALE_WIDE_L:
+#if !defined(__MSVCRT_VERSION__) || (defined(__MSVCRT_VERSION__) && __MSVCRT_VERSION__ >= 0x800)
 			if (sizeof(wchar_t) >= 4 || c <= (pg_wchar) 0xFFFF)
 				return iswprint_l((wint_t) c, pg_regex_locale->info.lt);
+#endif
 			/* FALL THRU */
 		case PG_REGEX_LOCALE_1BYTE_L:
 			return (c <= (pg_wchar) UCHAR_MAX &&
@@ -555,8 +569,10 @@
 			return (c <= (pg_wchar) UCHAR_MAX &&
 					ispunct((unsigned char) c));
 		case PG_REGEX_LOCALE_WIDE_L:
+#if !defined(__MSVCRT_VERSION__) || (defined(__MSVCRT_VERSION__) && __MSVCRT_VERSION__ >= 0x800)
 			if (sizeof(wchar_t) >= 4 || c <= (pg_wchar) 0xFFFF)
 				return iswpunct_l((wint_t) c, pg_regex_locale->info.lt);
+#endif
 			/* FALL THRU */
 		case PG_REGEX_LOCALE_1BYTE_L:
 			return (c <= (pg_wchar) UCHAR_MAX &&
@@ -589,8 +605,10 @@
 			return (c <= (pg_wchar) UCHAR_MAX &&
 					isspace((unsigned char) c));
 		case PG_REGEX_LOCALE_WIDE_L:
+#if !defined(__MSVCRT_VERSION__) || (defined(__MSVCRT_VERSION__) && __MSVCRT_VERSION__ >= 0x800)
 			if (sizeof(wchar_t) >= 4 || c <= (pg_wchar) 0xFFFF)
 				return iswspace_l((wint_t) c, pg_regex_locale->info.lt);
+#endif
 			/* FALL THRU */
 		case PG_REGEX_LOCALE_1BYTE_L:
 			return (c <= (pg_wchar) UCHAR_MAX &&
@@ -631,8 +649,10 @@
 				return toupper((unsigned char) c);
 			return c;
 		case PG_REGEX_LOCALE_WIDE_L:
+#if !defined(__MSVCRT_VERSION__) || (defined(__MSVCRT_VERSION__) && __MSVCRT_VERSION__ >= 0x800)
 			if (sizeof(wchar_t) >= 4 || c <= (pg_wchar) 0xFFFF)
 				return towupper_l((wint_t) c, pg_regex_locale->info.lt);
+#endif
 			/* FALL THRU */
 		case PG_REGEX_LOCALE_1BYTE_L:
 			if (c <= (pg_wchar) UCHAR_MAX)
@@ -673,8 +693,10 @@
 				return tolower((unsigned char) c);
 			return c;
 		case PG_REGEX_LOCALE_WIDE_L:
+#if !defined(__MSVCRT_VERSION__) || (defined(__MSVCRT_VERSION__) && __MSVCRT_VERSION__ >= 0x800)
 			if (sizeof(wchar_t) >= 4 || c <= (pg_wchar) 0xFFFF)
 				return towlower_l((wint_t) c, pg_regex_locale->info.lt);
+#endif
 			/* FALL THRU */
 		case PG_REGEX_LOCALE_1BYTE_L:
 			if (c <= (pg_wchar) UCHAR_MAX)
--- a/src/backend/utils/adt/formatting.c
+++ b/src/backend/utils/adt/formatting.c
@@ -1731,9 +1731,11 @@
 
 				for (curr_char = 0; workspace[curr_char] != 0; curr_char++)
 				{
+#if !defined(__MSVCRT_VERSION__) || (defined(__MSVCRT_VERSION__) && __MSVCRT_VERSION__ >= 0x800)
 					if (mylocale)
 						workspace[curr_char] = towlower_l(workspace[curr_char], mylocale->info.lt);
 					else
+#endif
 						workspace[curr_char] = towlower(workspace[curr_char]);
 				}
 
@@ -1879,9 +1881,11 @@
 
 				for (curr_char = 0; workspace[curr_char] != 0; curr_char++)
 				{
+#if !defined(__MSVCRT_VERSION__) || (defined(__MSVCRT_VERSION__) && __MSVCRT_VERSION__ >= 0x800)
 					if (mylocale)
 						workspace[curr_char] = towupper_l(workspace[curr_char], mylocale->info.lt);
 					else
+#endif
 						workspace[curr_char] = towupper(workspace[curr_char]);
 				}
 
@@ -2081,6 +2085,7 @@
 
 				for (curr_char = 0; workspace[curr_char] != 0; curr_char++)
 				{
+#if !defined(__MSVCRT_VERSION__) || (defined(__MSVCRT_VERSION__) && __MSVCRT_VERSION__ >= 0x800)
 					if (mylocale)
 					{
 						if (wasalnum)
@@ -2090,6 +2095,7 @@
 						wasalnum = iswalnum_l(workspace[curr_char], mylocale->info.lt);
 					}
 					else
+#endif
 					{
 						if (wasalnum)
 							workspace[curr_char] = towlower(workspace[curr_char]);
