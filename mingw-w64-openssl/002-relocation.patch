--- a/crypto/defaults.c
+++ b/crypto/defaults.c
@@ -12,6 +12,7 @@
 #include "internal/thread_once.h"
 #include "internal/cryptlib.h"
 #include "internal/e_os.h"
+#include "pathtools.h"
 
 #if defined(_WIN32) && defined(OSSL_WINCTX)
 
@@ -152,6 +153,12 @@
     if (!RUN_ONCE(&defaults_setup_init, do_defaults_setup))
         return NULL;
     return (const char *)openssldirptr;
+#elif defined(__MINGW32__)
+    static char * reloc = NULL;
+    if (reloc == NULL) {
+        reloc = single_path_relocation_lib(OPENSSLBIN, OPENSSLDIR);
+    }
+    return reloc;
 # else
     return OPENSSLDIR;
 #endif
@@ -168,6 +175,12 @@
     if (!RUN_ONCE(&defaults_setup_init, do_defaults_setup))
         return NULL;
     return (const char *)enginesdirptr;
+#elif defined(__MINGW32__)
+    static char * reloc = NULL;
+    if (reloc == NULL) {
+        reloc = single_path_relocation_lib(OPENSSLBIN, ENGINESDIR);
+    }
+    return reloc;
 #else
     return ENGINESDIR;
 #endif
@@ -184,6 +197,12 @@
     if (!RUN_ONCE(&defaults_setup_init, do_defaults_setup))
         return NULL;
     return (const char *)modulesdirptr;
+#elif defined(__MINGW32__)
+    static char * reloc = NULL;
+    if (reloc == NULL) {
+        reloc = single_path_relocation_lib(OPENSSLBIN, MODULESDIR);
+    }
+    return reloc;
 #else
     return MODULESDIR;
 #endif
--- a/crypto/build.info
+++ b/crypto/build.info
@@ -107,7 +107,7 @@
         comp_methods.c cversion.c info.c cpt_err.c ebcdic.c uid.c o_time.c \
         o_dir.c o_fopen.c getenv.c o_init.c init.c trace.c provider.c \
         provider_child.c punycode.c passphrase.c sleep.c deterministic_nonce.c \
-        quic_vlint.c time.c defaults.c ssl_err.c
+        quic_vlint.c time.c defaults.c ssl_err.c pathtools.c
 SOURCE[../providers/libfips.a]=$UTIL_COMMON
 
 SOURCE[../libcrypto]=$UPLINKSRC
