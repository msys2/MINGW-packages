# Maintainer: J. Peter Mugaas <jpmugaas@suddenlink.net>

_realname=pyperclip
pkgbase=mingw-w64-python-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-python2-${_realname}"  "${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
pkgver=1.6.4
_commit=16b1f5b7ece36a08adc5ddec1ef6b1b0aa9de77f
pkgrel=1
pkgdesc="A cross-platform clipboard module for Python (mingw-w64)"
arch=('any')
url='https://github.com/asweigart/pyperclip'
license=('BSD')
makedepends=("${MINGW_PACKAGE_PREFIX}-python2"
             "${MINGW_PACKAGE_PREFIX}-python3"
             "${MINGW_PACKAGE_PREFIX}-python3-setuptools"
             "${MINGW_PACKAGE_PREFIX}-python2-setuptools")
checkdepends=("${MINGW_PACKAGE_PREFIX}-python3-pytest"
              "${MINGW_PACKAGE_PREFIX}-python2-pytest")
source=("${_realname}-${pkgver}.tar.gz"::"https://github.com/asweigart/pyperclip/archive/$_commit.tar.gz")
sha512sums=('2e8213503d83e9e4e676eefd2336cfa2d92b8c7e28c4d0100361ae9814d1378f70c2b6e9112fb29ed68aa7af95b7fc0784f2c927304bde175b21cbfdc94f8bd6')

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying $_patch"
    patch -Nbp1 -i "${srcdir}/$_patch"
  done
}

del_file_exists() {
  for _fname in "$@"
  do
    if [ -f $_fname ]; then
      rm -rf $_fname
    fi
  done
}
# =========================================== #

prepare() {
  cd "${srcdir}"
  for builddir in python{2,3}-build-${CARCH}; do
    rm -rf ${builddir} | true
    cp -r "${_realname}-${_commit}" "${builddir}"
  done
  # Set version for setuptools_scm
  export SETUPTOOLS_SCM_PRETEND_VERSION=$pkgver
  export PBR_VERSION=$pkgver
}

# Note that build() is sometimes skipped because it's done in 
# the packages setup.py install for simplicity if you can do so.
# but sometimes, you want to do a check before install which would
# also trigger the build.
build() {
  for pver in {2,3}; do  
    msg "Python ${pver} build for ${CARCH}"  
    cd "${srcdir}/python${pver}-build-${CARCH}"
    ${MINGW_PREFIX}/bin/python${pver} setup.py build
  done  
}

check() {
  msg "Python 3 test for ${CARCH}"
  cd "${srcdir}/python3-build-${CARCH}"
  PYTHONPATH="$PWD/build/lib;$PYTHONPATH" py.test

  msg "Python ${pver} test for ${CARCH}"
  cd "${srcdir}/python2-build-${CARCH}"
  PYTHONPATH="$PWD/build/lib;$PYTHONPATH" py.test2 || warning "https://github.com/asweigart/pyperclip/issues/129"
}

package_python3-pyperclip() {
  depends=("${MINGW_PACKAGE_PREFIX}-python3")

  cd "${srcdir}/python3-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python3 setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build

  install -Dm644 LICENSE.txt "${pkgdir}${MINGW_PREFIX}/share/licenses/python3-${_realname}/LICENSE.txt"
}

package_python2-pyperclip() {
  depends=("${MINGW_PACKAGE_PREFIX}-python2")

  cd "${srcdir}/python2-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python2 setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build

  install -Dm644 LICENSE.txt "${pkgdir}${MINGW_PREFIX}/share/licenses/python2-${_realname}/LICENSE.txt"
}

package_mingw-w64-i686-python2-pyperclip() {
  package_python2-pyperclip
}

package_mingw-w64-i686-python3-pyperclip() {
  package_python3-pyperclip
}

package_mingw-w64-x86_64-python2-pyperclip() {
  package_python2-pyperclip
}

package_mingw-w64-x86_64-python3-pyperclip() {
  package_python3-pyperclip
}
