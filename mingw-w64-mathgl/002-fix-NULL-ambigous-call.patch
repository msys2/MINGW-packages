diff --git a/mgllab/dialogs.cpp b/mgllab/dialogs.cpp
index 3170d53..c851994 100644
--- a/mgllab/dialogs.cpp
+++ b/mgllab/dialogs.cpp
@@ -79,7 +79,7 @@ public:
 	Fl_Input *ext;
 	OptionDlg() : GeneralDlg()
 	{
-		e=NULL;	ext=NULL;
+		e=nullptr;	ext=nullptr;
 		Fl_Button *o;
 		w = new Fl_Double_Window(640, 185, _("Add command option(s)"));
 		x1 = new Fl_Input(95, 5, 85, 25, _("X-range"));
@@ -144,10 +144,10 @@ public:
 } option_dlg;
 //-----------------------------------------------------------------------------
 void option_dlg_cb(Fl_Widget *, void *v)
-{	option_dlg.ext=NULL;	option_dlg.e=(ScriptWindow *)v;	option_dlg.show();	}
+{	option_dlg.ext=nullptr;	option_dlg.e=(ScriptWindow *)v;	option_dlg.show();	}
 //-----------------------------------------------------------------------------
 void option_in_cb(Fl_Widget *, void *v)
-{	option_dlg.ext=(Fl_Input*)v;	option_dlg.e=NULL;	option_dlg.show();	}
+{	option_dlg.ext=(Fl_Input*)v;	option_dlg.e=nullptr;	option_dlg.show();	}
 //-----------------------------------------------------------------------------
 class DirSelDlg : public GeneralDlg
 {
@@ -177,10 +177,10 @@ public:
 } dirsel_dlg;
 //-----------------------------------------------------------------------------
 void dirsel_dlg_cb(Fl_Widget *, void *v)
-{	dirsel_dlg.ext=NULL;	dirsel_dlg.e=(ScriptWindow *)v;	dirsel_dlg.show();	}
+{	dirsel_dlg.ext=nullptr;	dirsel_dlg.e=(ScriptWindow *)v;	dirsel_dlg.show();	}
 //-----------------------------------------------------------------------------
 // void dirsel_in_cb(Fl_Widget *, void *v)
-// {	dirsel_dlg.ext=(Fl_Input*)v;	dirsel_dlg.e=NULL;	dirsel_dlg.show();	}
+// {	dirsel_dlg.ext=(Fl_Input*)v;	dirsel_dlg.e=nullptr;	dirsel_dlg.show();	}
 //-----------------------------------------------------------------------------
 //const char *arr = "_AKVITSDOX";
 Fl_Menu_Item arrows[] = {
@@ -253,7 +253,7 @@ std::string get_color(Fl_Choice *c, Fl_Spinner *s, Fl_Input *p)
 	const char *ps = p->value();
 	int cv = c->value(), sv = s->value();
 	int pv = ps?10*atof(ps):-1;
-	if(pv<0 || pv>9)	ps = NULL;
+	if(pv<0 || pv>9)	ps = nullptr;
 	if(cv>0 && cv<long(strlen(cols)))
 	{
 		if(ps)
@@ -419,7 +419,7 @@ public:
 		const char *ss = sch->text();
 		if(!ss || *ss==0)	return;
 		for(int i=0;i<8;i++)
-		{	p[i]->value(NULL);	s[i]->value(5);	c[i]->value(0);	}
+		{	p[i]->value(nullptr);	s[i]->value(5);	c[i]->value(0);	}
 		for(int i=0;i<8;i++)
 		{
 			if(ss[i]==0)	break;
@@ -542,10 +542,10 @@ void cb_style_upd(Fl_Widget *, void *)	{	style_dlg.update();	}
 void cb_style_sch(Fl_Widget *, void *)	{	style_dlg.set_scheme();	}
 //-----------------------------------------------------------------------------
 void style_dlg_cb(Fl_Widget *, void *v)
-{	style_dlg.ext=NULL;	style_dlg.e=(ScriptWindow *)v;	style_dlg.show();	}
+{	style_dlg.ext=nullptr;	style_dlg.e=(ScriptWindow *)v;	style_dlg.show();	}
 //-----------------------------------------------------------------------------
 //void style_in_cb(Fl_Widget *, void *v)
-//{	style_dlg.ext=(Fl_Input*)v;	style_dlg.e=NULL;	style_dlg.show();	}
+//{	style_dlg.ext=(Fl_Input*)v;	style_dlg.e=nullptr;	style_dlg.show();	}
 //-----------------------------------------------------------------------------
 void cb_datsel_upd(Fl_Widget *, void *);
 void cb_datsel_act(Fl_Widget *, void *);
@@ -669,10 +669,10 @@ void cb_datsel_upd(Fl_Widget *, void *)	{	datsel_dlg.update();	}
 void cb_datsel_act(Fl_Widget *, void *)	{	datsel_dlg.activate();	}
 //-----------------------------------------------------------------------------
 void datsel_dlg_cb(Fl_Widget *, void *v)
-{	datsel_dlg.ext=NULL;	datsel_dlg.e=(ScriptWindow *)v;	datsel_dlg.show();	}
+{	datsel_dlg.ext=nullptr;	datsel_dlg.e=(ScriptWindow *)v;	datsel_dlg.show();	}
 //-----------------------------------------------------------------------------
 // void datsel_in_cb(Fl_Widget *, void *v)
-// {	datsel_dlg.ext=(Fl_Input*)v;	datsel_dlg.e=NULL;	datsel_dlg.show();	}
+// {	datsel_dlg.ext=(Fl_Input*)v;	datsel_dlg.e=nullptr;	datsel_dlg.show();	}
 //-----------------------------------------------------------------------------
 std::string with_arg(std::string ss, std::vector<std::string> prev)
 {
