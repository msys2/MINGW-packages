# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: JÃ¼rgen Pfeifer <juergen@familiepfeifer.de>

_realname=OpenBLAS
pkgbase=mingw-w64-openblas
pkgname="${MINGW_PACKAGE_PREFIX}-openblas"
pkgver=0.3.18
pkgrel=1
pkgdesc="An optimized BLAS library based on GotoBLAS2 1.13 BSD, providing optimized blas, lapack, and cblas (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32')
url="https://www.openblas.net/"
license=('BSD')
provides=("${MINGW_PACKAGE_PREFIX}-${_realname}")
conflicts=("${MINGW_PACKAGE_PREFIX}-openblas-git")
replaces=("${MINGW_PACKAGE_PREFIX}-${_realname}"
          "${MINGW_PACKAGE_PREFIX}-${_realname}-git")
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-libwinpthread"
         $([[ ${MINGW_PACKAGE_PREFIX} == *-clang-* ]] || echo "${MINGW_PACKAGE_PREFIX}-gcc-libgfortran")
         )
makedepends=("perl"
             #"${MINGW_PACKAGE_PREFIX}-cmake"
             $([[ ${MINGW_PACKAGE_PREFIX} == *-clang-* ]] || echo "${MINGW_PACKAGE_PREFIX}-gcc-fortran")
             )
options=('!buildflags')
source=(${_realname}-${pkgver}.tar.gz::https://github.com/xianyi/OpenBLAS/archive/v${pkgver}.tar.gz
        001-defaultlib-not-for-gcc.patch
        002-lgfortran-requires-lquadmath.patch
        004-fix-generate-cmake-config.patch
        005-fix-clang32-compile-flags.patch)
install=${_realname}.install
sha256sums=('1632c1e8cca62d8bed064b37747e331a1796fc46f688626337362bf0d16aeadb'
            '6a73ee677d8d37509cd08f380b0359ee7fac2595fd64695dd054e838380a6a33'
            'bad670a1a7b6482c9c4264c4457e34307b084e7e1a1dabb9ddbfcf49346bc705'
            'cdef4aa30254b23a682ae90fd6db1e03f77c8f073fc00892371745d07ffc79a2'
            '7c7910039746b505ae182ef5f0e6f18c7ffdfc47e9d11f529840cda25fefc367')

prepare() {
  cd ${srcdir}/${_realname}-${pkgver}
  patch -p1 -i ${srcdir}/001-defaultlib-not-for-gcc.patch
  patch -p1 -i ${srcdir}/002-lgfortran-requires-lquadmath.patch
  patch -p1 -i ${srcdir}/004-fix-generate-cmake-config.patch
  patch -p1 -i ${srcdir}/005-fix-clang32-compile-flags.patch
}

build() {
  cp -rf "${srcdir}"/${_realname}-${pkgver} "${srcdir}"/build-${MSYSTEM}
  cd "${srcdir}"/build-${MSYSTEM}

  unset CFLAGS
  unset CXXFLAGS

  local -a _no_lapack
  local -a _c_compiler
  if [[ ${MINGW_PACKAGE_PREFIX} != *-clang-* ]]; then
    _no_lapack=0
    _c_compiler=gcc
    export FC=${MINGW_PREFIX}/bin/gfortran
  else
    _no_lapack=1
    _c_compiler=clang
  fi

  make LIBNAME=libopenblasp.a NO_LAPACK=${_no_lapack} DYNAMIC_ARCH=1   \
       CC=${MINGW_PREFIX}/bin/${_c_compiler}                           \
       OPENBLAS_INCLUDE_DIR=${MINGW_PREFIX}/include/${_realname}       \
       USE_THREAD=1 NUM_THREADS=64 TARGET=CORE2

  # [[ -d build-${MSYSTEM} ]] && rm -rf build-${MSYSTEM}
  # mkdir -p build-${MSYSTEM} && cd build-${MSYSTEM}

  # MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  # ${MINGW_PREFIX}/bin/cmake \
    # -G"MSYS Makefiles" \
    # -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    # -DDYNAMIC_ARCH=ON \
    # -DCMAKE_BUILD_TYPE=Release \
    # ../${_realname}-${pkgver}
  # make
}

package() {
  cd "${srcdir}"/build-${MSYSTEM}
  #make DESTDIR=${pkgdir} install

  if [ -f libopenblas.dll ]; then
    if [ -f exports/libopenblas.def ]; then
      dlltool -D libopenblas.dll -d exports/libopenblas.def -l libopenblas.dll.a
    else
      echo "Cannot build export library" >&2
      exit 1
    fi
  else
    echo "DLL not found" >&2
    exit 1
  fi
  mkdir -p "${pkgdir}${MINGW_PREFIX}/bin"
  mkdir -p "${pkgdir}${MINGW_PREFIX}/lib"

  make LIBNAME=libopenblasp.a \
       DESTDIR="${pkgdir}" PREFIX="${MINGW_PREFIX}"  \
       OPENBLAS_INCLUDE_DIR=${MINGW_PREFIX}/include/${_realname} \
       install

  if [ -f libopenblas.dll ]; then
    cp -f libopenblas.dll "${pkgdir}${MINGW_PREFIX}/bin/"
  else
    echo "DLL not found" >&2
    exit 1
  fi

  if [ -f libopenblas.dll.a ]; then
    cp -f libopenblas.dll.a "${pkgdir}${MINGW_PREFIX}/lib/"
  else
    echo "Export library not found" >&2
    exit 1
  fi

  if [ -f libopenblasp.a ]; then
    rm -f "${pkgdir}${MINGW_PREFIX}/lib/libopenblasp.a"
    rm -f "${pkgdir}${MINGW_PREFIX}/lib/libopenblas.a"
    cp -f libopenblasp.a "${pkgdir}${MINGW_PREFIX}/lib/libopenblas.a"
  else
    echo "Static library not found" >&2
    exit 1
  fi

  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  for _f in "${pkgdir}${MINGW_PREFIX}"/lib/cmake/openblas/*.cmake; do
    sed -e "s|${PREFIX_WIN}|\$\{_IMPORT_PREFIX\}|g" -i ${_f}
    sed -e "s|${MINGW_PREFIX}|\$\{_IMPORT_PREFIX\}|g" -i ${_f}
  done

  # Install License
  install -Dm0644 ${srcdir}/${_realname}-${pkgver}/LICENSE ${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE
  install -Dm0644 ${srcdir}/${_realname}-${pkgver}/lapack-netlib/LICENSE ${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE-lapack
}
