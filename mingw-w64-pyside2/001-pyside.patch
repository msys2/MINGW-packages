--- a/sources/pyside2/cmake/Macros/PySideModules.cmake
+++ b/sources/pyside2/cmake/Macros/PySideModules.cmake
@@ -126,9 +126,9 @@
                         BYPRODUCTS ${${module_SOURCES}}
                         COMMAND Shiboken2::shiboken2 ${GENERATOR_EXTRA_FLAGS}
                         "${pyside2_BINARY_DIR}/${module_NAME}_global.h"
-                        --include-paths=${shiboken_include_dirs}
+                        --include-paths="${shiboken_include_dirs}"
                         ${shiboken_framework_include_dirs_option}
-                        --typesystem-paths=${pyside_binary_dir}${PATH_SEP}${pyside2_SOURCE_DIR}${PATH_SEP}${${module_TYPESYSTEM_PATH}}
+                        --typesystem-paths="${pyside_binary_dir}${PATH_SEP}${pyside2_SOURCE_DIR}${PATH_SEP}${${module_typesystem_path}}"
                         --output-directory=${CMAKE_CURRENT_BINARY_DIR}
                         --license-file=${CMAKE_CURRENT_SOURCE_DIR}/../licensecomment.txt
                         ${typesystem_path}
@@ -203,12 +206,14 @@
         list(APPEND generate_pyi_options "--quiet")
     endif()
 
+    if(NOT MINGW)
     # Add target to generate pyi file, which depends on the module target.
     add_custom_target("${module_NAME}_pyi" ALL
                       COMMAND ${CMAKE_COMMAND} -E env ${ld_prefix}
                       "${SHIBOKEN_PYTHON_INTERPRETER}"
                       "${CMAKE_CURRENT_SOURCE_DIR}/../support/generate_pyi.py" ${generate_pyi_options})
     add_dependencies("${module_NAME}_pyi" ${module_NAME})
+    endif()
 
     # install
     install(TARGETS ${module_NAME} LIBRARY DESTINATION "${PYTHON_SITE_PACKAGES}/PySide2")
--- a/sources/pyside2/CMakeLists.txt
+++ b/sources/pyside2/CMakeLists.txt
@@ -243,7 +243,7 @@
 use_protected_as_public_hack()
 
 # Build with Address sanitizer enabled if requested. This may break things, so use at your own risk.
-if (SANITIZE_ADDRESS AND NOT MSVC)
+if (SANITIZE_ADDRESS AND NOT WIN32)
     setup_sanitize_address()
 endif()
 
--- a/sources/pyside2/PySide2/QtNetwork/typesystem_network.xml
+++ b/sources/pyside2/PySide2/QtNetwork/typesystem_network.xml
@@ -272,6 +272,13 @@
         <enum-type name="Capability" flags="Capabilities" since="4.7"/>
     </object-type>
     <object-type name="QNetworkSession" since="4.7">
+        <modify-function signature="interface()const">
+        <inject-code class="target" position="beginning">
+            #undef interface
+            %RETURN_TYPE %0 = %CPPSELF->%FUNCTION_NAME();
+            %PYARG_0 = %CONVERTTOPYTHON[%RETURN_TYPE](%0);
+        </inject-code>
+        </modify-function>
         <enum-type name="SessionError" since="4.7"/>
         <enum-type name="State" since="4.7"/>
         <enum-type name="UsagePolicy" flags="UsagePolicies"/>
--- a/sources/pyside2/tests/pysidetest/CMakeLists.txt
+++ b/sources/pyside2/tests/pysidetest/CMakeLists.txt
@@ -86,9 +86,9 @@
         BYPRODUCTS ${testbinding_SRC}
         COMMAND Shiboken2::shiboken2 ${GENERATOR_EXTRA_FLAGS}
         ${CMAKE_CURRENT_SOURCE_DIR}/pysidetest_global.h
-        --include-paths=${testbinding_include_dirs}
+        --include-paths="${testbinding_include_dirs}"
         ${shiboken_framework_include_dirs_option}
-        --typesystem-paths=${testbinding_typesystem_path}
+        --typesystem-paths="${testbinding_typesystem_path}"
         --output-directory=${CMAKE_CURRENT_BINARY_DIR}
         ${CMAKE_CURRENT_SOURCE_DIR}/typesystem_pysidetest.xml
         --api-version=${SUPPORTED_QT_VERSION}
