diff --git a/src/cli/main.cpp b/src/cli/main.cpp
index 2d9ca92..9779cae 100644
--- a/src/cli/main.cpp
+++ b/src/cli/main.cpp
@@ -343,7 +343,7 @@ int HLCmdLineApp::run ( const int argc, const char*argv[] )
     CmdLineOptions options ( argc, argv );
 
     // set data directory path, where /langDefs and /themes reside
-    string dataDirPath = ( options.getDataDir().empty() ) ?  Platform::getAppPath() :options.getDataDir();
+    string dataDirPath = options.getDataDir();
 
     if ( options.printVersion() ) {
         printVersionInfo(options.quietMode());
diff --git a/src/core/datadir.cpp b/src/core/datadir.cpp
index 558b66f..a316b6f 100644
--- a/src/core/datadir.cpp
+++ b/src/core/datadir.cpp
@@ -52,21 +52,19 @@ void DataDir::initSearchDirectories ( const string &userDefinedDir )
         possibleDirs.push_back ( hlEnvPath );
     }
 
-#ifndef _WIN32
-
 #ifdef HL_DATA_DIR
     possibleDirs.push_back ( HL_DATA_DIR );
-#else
+#elif !defined(_WIN32)
     possibleDirs.push_back ( LSB_DATA_DIR );
 #endif
 
 #ifdef HL_CONFIG_DIR
     possibleDirs.push_back ( HL_CONFIG_DIR);
-#else
+#elif !defined(_WIN32)
     possibleDirs.push_back ( LSB_CFG_DIR);
 #endif
 
-#else
+#if defined(_WIN32) && !defined(HL_DATA_DIR) && !defined(HL_CONFIG_DIR)
     possibleDirs.push_back(Platform::getAppPath()); //not needed because of fallback in searchFile
 #endif
 }
@@ -132,12 +130,10 @@ const string DataDir::getPluginPath ( )
 
 const string DataDir::getSystemDataPath ( )
 {
-#ifndef _WIN32
 #ifdef HL_DATA_DIR
     return HL_DATA_DIR;
-#else
+#elif !defined(_WIN32)
     return LSB_DATA_DIR;
-#endif
 #else
     return Platform::getAppPath();
 #endif
diff --git a/src/core/platform_fs.cpp b/src/core/platform_fs.cpp
index f2abf35..68b0835 100644
--- a/src/core/platform_fs.cpp
+++ b/src/core/platform_fs.cpp
@@ -368,7 +368,9 @@ int wildcmp ( const char *wild, const char *data )
 bool fileExists(const string &fName)
 {
     struct stat fileInfo;
-    return !stat(fName.c_str(),&fileInfo);
+    const string path = (fName.back() != pathSeparator) ?
+        fName : fName.substr(0, fName.size() - 1);
+    return stat(path.c_str(), &fileInfo) == 0;
 }
 
 //-D_FILE_OFFSET_BITS=64
@@ -376,7 +378,9 @@ bool fileExists(const string &fName)
 
 off_t fileSize(const string& fName) {
     struct stat fileInfo;
-    if(stat(fName.c_str(), &fileInfo) != 0) {
+    const string path = (fName.back() != pathSeparator) ?
+      fName : fName.substr(0, fName.size() - 1);
+    if (stat(path.c_str(), &fileInfo) != 0) {
         return 0;
     }
     return fileInfo.st_size;
