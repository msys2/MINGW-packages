# Maintainer: J. Peter Mugaas <jpmugaas@suddenlink.net>

_realname=alembic
pkgbase=mingw-w64-python-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-python2-${_realname}"  "${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
pkgver=1.0.5
pkgrel=1
pkgdesc="Lightweight database migration tool for usage with SQLAlchemy (mingw-w64)"
arch=('any')
url='https://bitbucket.org/zzzeek/alembic'
license=('MIT')
makedepends=("${MINGW_PACKAGE_PREFIX}-python3-setuptools"
             "${MINGW_PACKAGE_PREFIX}-python3-mako"
             "${MINGW_PACKAGE_PREFIX}-python3-sqlalchemy"
             "${MINGW_PACKAGE_PREFIX}-python3-editor"
             "${MINGW_PACKAGE_PREFIX}-python3-dateutil"
             "${MINGW_PACKAGE_PREFIX}-python2-setuptools"
             "${MINGW_PACKAGE_PREFIX}-python2-mako"
             "${MINGW_PACKAGE_PREFIX}-python2-sqlalchemy"
             "${MINGW_PACKAGE_PREFIX}-python2-editor"
             "${MINGW_PACKAGE_PREFIX}-python2-dateutil")
checkdepends=("${MINGW_PACKAGE_PREFIX}-python3-pytest"
              "${MINGW_PACKAGE_PREFIX}-python3-mock" 
              "${MINGW_PACKAGE_PREFIX}-python2-pytest" 
              "${MINGW_PACKAGE_PREFIX}-python2-mock")
options=('staticlibs' 'strip' '!debug')
source=(https://pypi.org/packages/source/a/alembic/alembic-${pkgver}.tar.gz{,.asc})
sha512sums=('cfede823394d17aba94276ad5e759b35ff9e56ee908fce8fef54442c3fad871d0fa0e3f3f0121db98820ee085cf08e86d893e24b92086de894acc46f09450961'
            'SKIP')
validpgpkeys=('83AF7ACE251C13E6BB7DEFBD330239C1C4DAFEE1') # Michael Bayer <classic@zzzcomputing.com>

prepare() {
  cd "${srcdir}"
  for builddir in python{2,3}-build-${CARCH}; do
    rm -rf ${builddir} | true
    cp -r "${_realname}-${pkgver}" "${builddir}"
  done
  # Set version for setuptools_scm
  export SETUPTOOLS_SCM_PRETEND_VERSION=$pkgver
}

build() {
  for pver in {2,3}; do  
    msg "Python ${pver} build for ${CARCH}"  
    cd "${srcdir}/python${pver}-build-${CARCH}"
    ${MINGW_PREFIX}/bin/python${pver} setup.py build
  done  
}

check() {
  msg "Python 2 test for ${CARCH}"
  cd "${srcdir}/python${pver}-build-${CARCH}"
  ${MINGW_PREFIX}/bin/py.test2 || warning "Test failed"

  msg "Python 3 test for ${CARCH}"
  cd "${srcdir}/python${pver}-build-${CARCH}"
  ${MINGW_PREFIX}/bin/py.test || warning "Test failed"
}

package_python3-alembic() {
  depends=("${MINGW_PACKAGE_PREFIX}-python3"
           "${MINGW_PACKAGE_PREFIX}-python3-mako"
           "${MINGW_PACKAGE_PREFIX}-python3-sqlalchemy"
           "${MINGW_PACKAGE_PREFIX}-python3-editor"
           "${MINGW_PACKAGE_PREFIX}-python3-dateutil")
  install=${_realname}3-${CARCH}.install

  cd "${srcdir}/python3-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python3 setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build

  install -Dm644 LICENSE "${pkgdir}${MINGW_PREFIX}/share/licenses/python3-${_realname}/LICENSE"

# This entire section should be removed if the package does NOT install
# anything in the /mingw*/bin directory.
### begin section ###
  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  # fix python command in files
  for _f in "${pkgdir}${MINGW_PREFIX}"/bin/*.py; do
    sed -e "s|/usr/bin/env |${MINGW_PREFIX}|g" \
        -e "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" -i ${_f}
  done
#### end section ####
}

package_python2-alembic() {
  depends=("${MINGW_PACKAGE_PREFIX}-python2"
           "${MINGW_PACKAGE_PREFIX}-python2-mako"
           "${MINGW_PACKAGE_PREFIX}-python2-sqlalchemy"
           "${MINGW_PACKAGE_PREFIX}-python2-editor"
           "${MINGW_PACKAGE_PREFIX}-python2-dateutil")
  install=${_realname}2-${CARCH}.install

  cd "${srcdir}/python2-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python2 setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build

  install -Dm644 LICENSE "${pkgdir}${MINGW_PREFIX}/share/licenses/python2-${_realname}/LICENSE"

# This entire section should be removed if the package does NOT install
# anything in the /mingw*/bin directory. 
### begin section ###
  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  # fix python command in files
  for _f in "${pkgdir}${MINGW_PREFIX}"/bin/*.py; do
    sed -e "s|/usr/bin/env |${MINGW_PREFIX}|g" \
        -e "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" -i ${_f}
  done

# for Python2 packages, you want to rename some stuff from the bin directory 
# with the 2 suffix like in the mingw-w64-python-pygments package to avoid
# conflicts when installing both the Python2 and Python3 packages
  for f in alembic; do
    mv "${pkgdir}${MINGW_PREFIX}"/bin/${f}{,2}.exe
    if [ -f "${pkgdir}${MINGW_PREFIX}"/bin/${f}.exe.manifest ]; then
      mv "${pkgdir}${MINGW_PREFIX}"/bin/${f}{,2}.exe.manifest
      sed -e "s|${f}|${f}2|g" -i "${pkgdir}${MINGW_PREFIX}"/bin/${f}2.exe.manifest
    fi
    mv "${pkgdir}${MINGW_PREFIX}"/bin/${f}{,2}-script.py
  done
#### end section ####
}

package_mingw-w64-i686-python2-alembic() {
  package_python2-alembic
}

package_mingw-w64-i686-python3-alembic() {
  package_python3-alembic
}

package_mingw-w64-x86_64-python2-alembic() {
  package_python2-alembic
}

package_mingw-w64-x86_64-python3-alembic() {
  package_python3-alembic
}
