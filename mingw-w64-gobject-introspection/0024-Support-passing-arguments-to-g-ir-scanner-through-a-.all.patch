From 0901fd14718189b9679e7669d59ba31be7e4440f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=A0=D1=83=D1=81=D0=BB=D0=B0=D0=BD=20=D0=98=D0=B6=D0=B1?=
 =?UTF-8?q?=D1=83=D0=BB=D0=B0=D1=82=D0=BE=D0=B2?= <lrn1986@gmail.com>
Date: Sat, 28 Mar 2015 12:23:32 +0000
Subject: [PATCH] Support passing arguments to g-ir-scanner through a file

to avoid hitting the commandline length limit on W32.

To ensure that no unnecessary mangling
takes place, only the .gir rule prerequisites (presumably - only filenames)
are affected, other arguments (various flags and options) go as-is.

Makefile.introspection is modified to dump the filenames into a file
$(1).files (i.e. Glib-2.0.gir.files) and to give the name of that file
as an argument --argfile=$(1).files.

The scanner_main() function is modified to feed its arguments to a utility
function that pre-processes the arguments, looking for the "--argfile"
argument, and inserts in its place an argument list from the tempfile,
which is parsed by shlex.split() and is mangled by a special mangling
function.

There is another _get_option_parser() invocation elswhere in scannermain.py,
it remains unaltered.

Looking for "--argfile", parsing the file and mangling the arguments is
only done for W32 platforms. For non-W32 platforms it's a no-op.
Makefile.introspection (renamed to Makefile.introspection.in) is processed
by autoconf, which comments out the part that is not applicable to
the platform. This way $(1).files is only generated on W32,
and --argfile=$(1).files is only given on W32.

Files must not have spaces in their names, as Makefile.introspection can't
do any processing on them.

https://bugzilla.gnome.org/show_bug.cgi?id=620566
---
 Makefile.am               |   2 +-
 Makefile.introspection    | 162 ----------------------------------------
 Makefile.introspection.in | 183 ++++++++++++++++++++++++++++++++++++++++++++++
 configure.ac              |   7 ++
 giscanner/scannermain.py  |   3 +-
 giscanner/utils.py        |  54 +++++++++++++
 tests/offsets/Makefile.am |   2 +-
 tests/scanner/Makefile.am |   2 +-
 8 files changed, 253 insertions(+), 170 deletions(-)
 delete mode 100644 Makefile.introspection
 create mode 100644 Makefile.introspection.in
--- a/Makefile.am	
+++ a/Makefile.am	
@@ -15,7 +15,7 @@ EXTRA_PROGRAMS =
 TESTS =
 
 include common.mk
-include Makefile.introspection
+include Makefile.introspection.in
 
 include Makefile-cmph.am
 include Makefile-girepository.am
--- a/Makefile.introspection	
+++ a/Makefile.introspection	
@ -1,168 +0,0 @@
-# -*- Mode: make -*-
-# Copyright 2009-2010 Johan Dahlin
-#
-# This file is free software; the author(s) gives unlimited
-# permission to copy and/or distribute it, with or without
-# modifications, as long as this notice is preserved.
-#
-# * Input variables:
-#
-#   INTROSPECTION_GIRS - List of GIRS that should be generated
-#   INTROSPECTION_SCANNER - Command to invoke scanner, normally set by
-#      GOBJECT_INTROSPECTION_REQUIRE/CHECK() in introspection.m4
-#   INTROSPECTION_SCANNER_ARGS - Additional args to pass in to the scanner
-#   INTROSPECTION_SCANNER_ENV - Environment variables to set before running
-#      the scanner
-#   INTROSPECTION_COMPILER - Command to invoke compiler, normally set by
-#      GOBJECT_INTROSPECTION_REQUIRE/CHECK() in introspection.m4
-#   INTROSPECTION_COMPILER_ARGS - Additional args to pass in to the compiler
-#
-# * Simple tutorial
-#
-# Add this to configure.ac:
-#   -Wno-portability to AM_INIT_AUTOMAKE
-#   GOBJECT_INTROSPECTION_CHECK([0.6.7])
-#
-# Add this to Makefile.am where your library/program is built:
-#   include $(INTROSPECTION_MAKEFILE)
-#   INTROSPECTION_GIRS = YourLib-1.0.gir
-#   YourLib-1.0.gir: libyourlib.la
-#   YourLib_1_0_gir_NAMESPACE = YourLib
-#   YourLib_1_0_gir_VERSION = 1.0
-#   YourLib_1_0_gir_LIBS = libyourlib.la
-#   YourLib_1_0_gir_FILES = $(libyourlib_1_0_SOURCES)
-#   girdir = $(datadir)/gir-1.0
-#   dist_gir_DATA = YourLib-1.0.gir
-#   typelibdir = $(libdir)/girepository-1.0
-#   typelib_DATA = YourLib-1.0.typelib
-#   CLEANFILES = $(dist_gir_DATA) $(typelib_DATA)
-#
-
-# Make sure the required variables are set, these should under normal
-# circumstances come from introspection.m4
-$(if $(INTROSPECTION_SCANNER),,$(error Need to define INTROSPECTION_SCANNER))
-$(if $(INTROSPECTION_COMPILER),,$(error Need to define INTROSPECTION_COMPILER))
-
-# Private functions
-
-## Transform the gir filename to something which can reference through a variable
-## without automake/make complaining, eg Gtk-2.0.gir -> Gtk_2_0_gir
-_gir_name = $(subst /,_,$(subst -,_,$(subst .,_,$(1))))
-
-# Namespace and Version is either fetched from the gir filename
-# or the _NAMESPACE/_VERSION variable combo
-_gir_namespace = $(or $($(_gir_name)_NAMESPACE),$(firstword $(subst -, ,$(notdir $(1)))))
-_gir_version = $(or $($(_gir_name)_VERSION),$(lastword $(subst -, ,$(1:.gir=))))
-
-# _PROGRAM is an optional variable which needs it's own --program argument
-_gir_program = $(if $($(_gir_name)_PROGRAM),--program=$($(_gir_name)_PROGRAM))
-
-# Variables which provides a list of things
-_gir_libraries = $(foreach lib,$($(_gir_name)_LIBS),--library=$(lib))
-_gir_packages = $(foreach pkg,$($(_gir_name)_PACKAGES),--pkg=$(pkg))
-_gir_includes = $(foreach include,$($(_gir_name)_INCLUDES),--include=$(include))
-_gir_export_packages = $(foreach pkg,$($(_gir_name)_EXPORT_PACKAGES),--pkg-export=$(pkg))
-
-# Reuse the LIBTOOL variable from automake if it's set
-_gir_libtool = $(if $(LIBTOOL),--libtool="$(LIBTOOL)")
-
-# Macros for AM_SILENT_RULES prettiness
-_gir_verbosity = $(if $(AM_DEFAULT_VERBOSITY),$(AM_DEFAULT_VERBOSITY),1)
-
-_gir_silent_scanner_prefix = $(_gir_silent_scanner_prefix_$(V))
-_gir_silent_scanner_prefix_ = $(_gir_silent_scanner_prefix_$(_gir_verbosity))
-_gir_silent_scanner_prefix_0 = @echo "  GISCAN   $(1)";
-_gir_silent_scanner_opts = $(_gir_silent_scanner_opts_$(V))
-_gir_silent_scanner_opts_ = $(_gir_silent_scanner_opts_$(_gir_verbosity))
-_gir_silent_scanner_opts_0 = --quiet
-
-_gir_silent_compiler = $(_gir_silent_compiler_$(V))
-_gir_silent_compiler_ = $(_gir_silent_compiler_$(_gir_verbosity))
-_gir_silent_compiler_0 = @echo "  GICOMP   $(1)";
-
-_gir_default_scanner_env = CPPFLAGS="$(CPPFLAGS)" CFLAGS="$(CFLAGS)" LDFLAGS="$(LDFLAGS)" CC="$(CC)"
-
-#
-# Creates a GIR by scanning C headers/sources
-# $(1) - Name of the gir file (output)
-#
-# If output is Gtk-2.0.gir then you should name the variables like
-# Gtk_2_0_gir_NAMESPACE, Gtk_2_0_gir_VERSION etc.
-# Required variables:
-# FILES - C sources and headers which should be scanned
-#
-# One of these variables are required:
-# LIBS - Library where the symbol represented in the gir can be found
-# PROGRAM - Program where the symbol represented in the gir can be found
-#
-# Optional variables
-# NAMESPACE - Namespace of the gir, first letter capital,
-#   rest should be lower case, for instance: 'Gtk', 'Clutter', 'ClutterGtk'.
-#   If not present the namespace will be fetched from the gir filename,
-#   the part before the first dash. For 'Gtk-2.0', namespace will be 'Gtk'.
-# VERSION - Version of the gir, if not present, will be fetched from gir
-# filename, the part after the first dash. For 'Gtk-2.0', version will be '2.0'.
-# LIBTOOL - Command to invoke libtool, usually set by automake
-# SCANNERFLAGS - Flags to pass in to the scanner, see g-ir-scanner(1) for a list
-# CFLAGS - Flags to pass in to the parser when scanning headers
-# LDFLAGS - Linker flags used by the scanner
-# PACKAGES - list of pkg-config names which cflags are required to parse
-#   the headers of this gir
-# INCLUDES - Gir files to include without the .gir suffix, for instance
-#   GLib-2.0, Gtk-2.0. This is needed for all libraries which you depend on that
-#   provides introspection information.
-# EXPORT_PACKAGES - list of pkg-config names that are provided by this gir.
-#   By default the names in the PACKAGES variable will be used.
-#
-
-define introspection-scanner
-
-# Basic sanity check, to make sure required variables are set
-$(if $($(_gir_name)_FILES),,$(error Need to define $(_gir_name)_FILES))
-$(if $(or $(findstring --header-only,$($(_gir_name)_SCANNERFLAGS)),
-          $($(_gir_name)_LIBS),
-          $($(_gir_name)_PROGRAM)),,
-    $(error Need to define $(_gir_name)_LIBS or $(_gir_name)_PROGRAM))
-
-# Only dependencies we know are actually filenames goes into _FILES, make
-# sure these are built before running the scanner. Libraries and programs
-# needs to be added manually.
-$(1): $$($(_gir_name)_FILES)
-	@ $(MKDIR_P) $(dir $(1))
-	$(_gir_silent_scanner_prefix) $(_gir_default_scanner_env) $(INTROSPECTION_SCANNER_ENV) $(INTROSPECTION_SCANNER) $(_gir_silent_scanner_opts) \
-	$(INTROSPECTION_SCANNER_ARGS) \
-	  --namespace=$(_gir_namespace) \
-	  --nsversion=$(_gir_version) \
-	  $(_gir_libtool) \
-	  $(_gir_packages) \
-	  $(_gir_includes) \
-	  $(_gir_export_packages) \
-	  $(_gir_program) \
-	  $(_gir_libraries) \
-	  $($(_gir_name)_SCANNERFLAGS) \
-	  --cflags-begin \
-	  $($(_gir_name)_CFLAGS) \
-	  --cflags-end \
-	  $($(_gir_name)_LDFLAGS) \
-	  $$^ \
-	  --output $(1)
-endef
-
-$(foreach gir,$(INTROSPECTION_GIRS),$(eval $(call introspection-scanner,$(gir))))
-
-#
-# Compiles a gir into a typelib
-# $(1): gir filename (input)
-# $(2): typelib filename (output)
-#
-define introspection-compiler
-$(_gir_silent_compiler) $(INTROSPECTION_COMPILER) $(INTROSPECTION_COMPILER_ARGS) --includedir=. $(1) -o $(2)
-endef
-
-# Simple rule to compile a typelib.
-%.typelib: %.gir
-	$(call introspection-compiler,$<,$@)
--- a/Makefile.introspection.in	
+++ a/Makefile.introspection.in	
@@ -0,0 +1,185 @@
+# -*- Mode: make -*-
+# Copyright 2009-2010 Johan Dahlin
+#
+# This file is free software; the author(s) gives unlimited
+# permission to copy and/or distribute it, with or without
+# modifications, as long as this notice is preserved.
+#
+# * Input variables:
+#
+#   INTROSPECTION_GIRS - List of GIRS that should be generated
+#   INTROSPECTION_SCANNER - Command to invoke scanner, normally set by
+#      GOBJECT_INTROSPECTION_REQUIRE/CHECK() in introspection.m4
+#   INTROSPECTION_SCANNER_ARGS - Additional args to pass in to the scanner
+#   INTROSPECTION_SCANNER_ENV - Environment variables to set before running
+#      the scanner
+#   INTROSPECTION_COMPILER - Command to invoke compiler, normally set by
+#      GOBJECT_INTROSPECTION_REQUIRE/CHECK() in introspection.m4
+#   INTROSPECTION_COMPILER_ARGS - Additional args to pass in to the compiler
+#
+# * Simple tutorial
+#
+# Add this to configure.ac:
+#   -Wno-portability to AM_INIT_AUTOMAKE
+#   GOBJECT_INTROSPECTION_CHECK([0.6.7])
+#
+# Add this to Makefile.am where your library/program is built:
+#   include $(INTROSPECTION_MAKEFILE)
+#   INTROSPECTION_GIRS = YourLib-1.0.gir
+#   YourLib-1.0.gir: libyourlib.la
+#   YourLib_1_0_gir_NAMESPACE = YourLib
+#   YourLib_1_0_gir_VERSION = 1.0
+#   YourLib_1_0_gir_LIBS = libyourlib.la
+#   YourLib_1_0_gir_FILES = $(libyourlib_1_0_SOURCES)
+#   girdir = $(datadir)/gir-1.0
+#   dist_gir_DATA = YourLib-1.0.gir
+#   typelibdir = $(libdir)/girepository-1.0
+#   typelib_DATA = YourLib-1.0.typelib
+#   CLEANFILES = $(dist_gir_DATA) $(typelib_DATA)
+#
+
+# Make sure the required variables are set, these should under normal
+# circumstances come from introspection.m4
+$(if $(INTROSPECTION_SCANNER),,$(error Need to define INTROSPECTION_SCANNER))
+$(if $(INTROSPECTION_COMPILER),,$(error Need to define INTROSPECTION_COMPILER))
+
+# Private functions
+
+## Transform the gir filename to something which can reference through a variable
+## without automake/make complaining, eg Gtk-2.0.gir -> Gtk_2_0_gir
+_gir_name = $(subst /,_,$(subst -,_,$(subst .,_,$(1))))
+
+# Namespace and Version is either fetched from the gir filename
+# or the _NAMESPACE/_VERSION variable combo
+_gir_namespace = $(or $($(_gir_name)_NAMESPACE),$(firstword $(subst -, ,$(notdir $(1)))))
+_gir_version = $(or $($(_gir_name)_VERSION),$(lastword $(subst -, ,$(1:.gir=))))
+
+# _PROGRAM is an optional variable which needs it's own --program argument
+_gir_program = $(if $($(_gir_name)_PROGRAM),--program=$($(_gir_name)_PROGRAM))
+
+# Variables which provides a list of things
+_gir_libraries = $(foreach lib,$($(_gir_name)_LIBS),--library=$(lib))
+_gir_packages = $(foreach pkg,$($(_gir_name)_PACKAGES),--pkg=$(pkg))
+_gir_includes = $(foreach include,$($(_gir_name)_INCLUDES),--include=$(include))
+_gir_export_packages = $(foreach pkg,$($(_gir_name)_EXPORT_PACKAGES),--pkg-export=$(pkg))
+
+# Reuse the LIBTOOL variable from automake if it's set
+_gir_libtool = $(if $(LIBTOOL),--libtool="$(LIBTOOL)")
+
+# Macros for AM_SILENT_RULES prettiness
+_gir_verbosity = $(if $(AM_DEFAULT_VERBOSITY),$(AM_DEFAULT_VERBOSITY),1)
+
+_gir_silent_scanner_prefix = $(_gir_silent_scanner_prefix_$(V))
+_gir_silent_scanner_prefix_ = $(_gir_silent_scanner_prefix_$(_gir_verbosity))
+_gir_silent_scanner_prefix_0 = @echo "  GISCAN   $(1)";
+_gir_silent_scanner_opts = $(_gir_silent_scanner_opts_$(V))
+_gir_silent_scanner_opts_ = $(_gir_silent_scanner_opts_$(_gir_verbosity))
+_gir_silent_scanner_opts_0 = --quiet
+
+_gir_silent_compiler = $(_gir_silent_compiler_$(V))
+_gir_silent_compiler_ = $(_gir_silent_compiler_$(_gir_verbosity))
+_gir_silent_compiler_0 = @echo "  GICOMP   $(1)";
+
+_gir_default_scanner_env = CPPFLAGS="$(CPPFLAGS)" CFLAGS="$(CFLAGS)" LDFLAGS="$(LDFLAGS)" CC="$(CC)"
+
+#
+# Creates a GIR by scanning C headers/sources
+# $(1) - Name of the gir file (output)
+#
+# If output is Gtk-2.0.gir then you should name the variables like
+# Gtk_2_0_gir_NAMESPACE, Gtk_2_0_gir_VERSION etc.
+# Required variables:
+# FILES - C sources and headers which should be scanned
+#
+# One of these variables are required:
+# LIBS - Library where the symbol represented in the gir can be found
+# PROGRAM - Program where the symbol represented in the gir can be found
+#
+# Optional variables
+# NAMESPACE - Namespace of the gir, first letter capital,
+#   rest should be lower case, for instance: 'Gtk', 'Clutter', 'ClutterGtk'.
+#   If not present the namespace will be fetched from the gir filename,
+#   the part before the first dash. For 'Gtk-2.0', namespace will be 'Gtk'.
+# VERSION - Version of the gir, if not present, will be fetched from gir
+# filename, the part after the first dash. For 'Gtk-2.0', version will be '2.0'.
+# LIBTOOL - Command to invoke libtool, usually set by automake
+# SCANNERFLAGS - Flags to pass in to the scanner, see g-ir-scanner(1) for a list
+# CFLAGS - Flags to pass in to the parser when scanning headers
+# LDFLAGS - Linker flags used by the scanner
+# PACKAGES - list of pkg-config names which cflags are required to parse
+#   the headers of this gir
+# INCLUDES - Gir files to include without the .gir suffix, for instance
+#   GLib-2.0, Gtk-2.0. This is needed for all libraries which you depend on that
+#   provides introspection information.
+# EXPORT_PACKAGES - list of pkg-config names that are provided by this gir.
+#   By default the names in the PACKAGES variable will be used.
+#
+
+define introspection-scanner
+
+# Basic sanity check, to make sure required variables are set
+$(if $($(_gir_name)_FILES),,$(error Need to define $(_gir_name)_FILES))
+$(if $(or $(findstring --header-only,$($(_gir_name)_SCANNERFLAGS)),
+          $($(_gir_name)_LIBS),
+          $($(_gir_name)_PROGRAM)),,
+    $(error Need to define $(_gir_name)_LIBS or $(_gir_name)_PROGRAM))
+
+# Only dependencies we know are actually filenames goes into _FILES, make
+# sure these are built before running the scanner. Libraries and programs
+# needs to be added manually.
+@COMMENT_ON_W32@$(1): $$($(_gir_name)_FILES)
+@COMMENT_ON_W32@	@ $(MKDIR_P) $(dir $(1))
+@COMMENT_ON_W32@	$(_gir_silent_scanner_prefix) $(_gir_default_scanner_env) $(INTROSPECTION_SCANNER_ENV) $(INTROSPECTION_SCANNER) $(_gir_silent_scanner_opts) \
+@COMMENT_ON_W32@	$(INTROSPECTION_SCANNER_ARGS) \
+@COMMENT_ON_W32@	  --namespace=$(_gir_namespace) \
+@COMMENT_ON_W32@	  --nsversion=$(_gir_version) \
+@COMMENT_ON_W32@	  $(_gir_libtool) \
+@COMMENT_ON_W32@	  $(_gir_packages) \
+@COMMENT_ON_W32@	  $(_gir_includes) \
+@COMMENT_ON_W32@	  $(_gir_export_packages) \
+@COMMENT_ON_W32@	  $(_gir_program) \
+@COMMENT_ON_W32@	  $(_gir_libraries) \
+@COMMENT_ON_W32@	  $($(_gir_name)_SCANNERFLAGS) \
+@COMMENT_ON_W32@	  --cflags-begin \
+@COMMENT_ON_W32@	  $($(_gir_name)_CFLAGS) \
+@COMMENT_ON_W32@	  --cflags-end \
+@COMMENT_ON_W32@	  $($(_gir_name)_LDFLAGS) \
+@COMMENT_ON_W32@	  $$^ \
+@COMMENT_ON_W32@	  --output $(1)
+
+@COMMENT_ON_NONW32@$(1): $$($(_gir_name)_FILES)
+@COMMENT_ON_NONW32@	@ $(MKDIR_P) $(dir $(1))
+@COMMENT_ON_NONW32@	@ echo $$^ > $(1).files
+@COMMENT_ON_NONW32@	$(_gir_silent_scanner_prefix) $(_gir_default_scanner_env) $(INTROSPECTION_SCANNER_ENV) $(INTROSPECTION_SCANNER) $(_gir_silent_scanner_opts) \
+@COMMENT_ON_NONW32@	$(INTROSPECTION_SCANNER_ARGS) \
+@COMMENT_ON_NONW32@	  --namespace=$(_gir_namespace) \
+@COMMENT_ON_NONW32@	  --nsversion=$(_gir_version) \
+@COMMENT_ON_NONW32@	  $(_gir_libtool) \
+@COMMENT_ON_NONW32@	  $(_gir_packages) \
+@COMMENT_ON_NONW32@	  $(_gir_includes) \
+@COMMENT_ON_NONW32@	  $(_gir_export_packages) \
+@COMMENT_ON_NONW32@	  $(_gir_program) \
+@COMMENT_ON_NONW32@	  $(_gir_libraries) \
+@COMMENT_ON_NONW32@	  $($(_gir_name)_SCANNERFLAGS) \
+@COMMENT_ON_NONW32@	  --cflags-begin \
+@COMMENT_ON_NONW32@	  $($(_gir_name)_CFLAGS) \
+@COMMENT_ON_NONW32@	  --cflags-end \
+@COMMENT_ON_NONW32@	  $($(_gir_name)_LDFLAGS) \
+@COMMENT_ON_NONW32@	  --argfile=$(1).files \
+@COMMENT_ON_NONW32@	  --output $(1)
+endef
+
+$(foreach gir,$(INTROSPECTION_GIRS),$(eval $(call introspection-scanner,$(gir))))
+
+#
+# Compiles a gir into a typelib
+# $(1): gir filename (input)
+# $(2): typelib filename (output)
+#
+define introspection-compiler
+$(_gir_silent_compiler) $(INTROSPECTION_COMPILER) $(INTROSPECTION_COMPILER_ARGS) --includedir=. $(1) -o $(2)
+endef
+
+# Simple rule to compile a typelib.
+%.typelib: %.gir
+	$(call introspection-compiler,$<,$@)
--- gobject-introspection-1.58.0/configure.ac.orig	2018-08-31 18:32:24.000000000 +0200
+++ gobject-introspection-1.58.0/configure.ac	2018-08-31 20:58:54.731260300 +0200
@@ -31,12 +31,18 @@
 case "$host" in
 *-*-mingw*)
 	os_win32=yes
+	COMMENT_ON_W32='#'
+	COMMENT_ON_NONW32=
 	;;
 *)
 	os_win32=no
+	COMMENT_ON_W32=
+	COMMENT_ON_NONW32='#'
 	;;
 esac
 AM_CONDITIONAL(OS_WIN32, [test "x$os_win32" = "xyes"])
+AC_SUBST(COMMENT_ON_W32)
+AC_SUBST(COMMENT_ON_NONW32)
 
 # Checks for programs.
 AC_PROG_CC
@@ -379,6 +385,7 @@
 docs/reference/Makefile
 docs/reference/version.xml
 giscanner/_version.py
+Makefile.introspection
 gobject-introspection-1.0.pc
 gobject-introspection-no-export-1.0.pc])
 AC_OUTPUT
--- a/giscanner/scannermain.py	
+++ a/giscanner/scannermain.py	
@@ -470,8 +470,9 @@ def write_output(data, options):
 
 
 def scanner_main(args):
+    loaded_args = utils.maybe_load_args_from_file(args)
     parser = _get_option_parser()
-    (options, args) = parser.parse_args(args)
+    (options, args) = parser.parse_args(loaded_args)
 
     if options.passthrough_gir:
         passthrough_gir(options.passthrough_gir, sys.stdout)
--- gobject-introspection-1.58.1/giscanner/utils.py.orig	2018-11-05 19:58:03.000000000 +0100
+++ gobject-introspection-1.58.1/giscanner/utils.py	2018-11-18 12:24:53.599570100 +0100
@@ -29,6 +29,7 @@
 import platform
 import shutil
 import time
+import shlex
 
 
 _debugflags = None
@@ -83,6 +84,59 @@
     return name
 
 
+def cygmsys_mangle(arg):
+    shell = which(os.environ.get('SHELL', 'sh.exe'))
+    p = subprocess.Popen([shell, '-c', 'cmd //C echo ' + arg], stdout=subprocess.PIPE)
+    result, _ = p.communicate()
+    return result.decode('utf-8').rstrip('\n').rstrip('\r') if p.returncode == 0 else None
+
+
+def load_args_from_file(filename):
+    with open(filename, 'rb') as source:
+        contents = source.read().decode('UTF-8')
+        result = shlex.split(contents)
+    if os.name == 'nt':
+        args = []
+        for arg in result:
+            mangled = cygmsys_mangle(arg)
+            if mangled is not None:
+                args.append(mangled)
+        result = args
+    return result
+
+
+def maybe_load_args_from_file(args):
+    if os.name != 'nt':
+        return args
+
+    processed_args = []
+    skip = False
+    is_input_file = False
+    argfilelen = len('--argfile=')
+    for argn, arg in enumerate(args):
+        if skip:
+            processed_args.append(arg)
+            continue
+        elif arg == '--':
+            skip = True
+            processed_args.append(arg)
+            continue
+
+        if is_input_file:
+            processed_args.extend(load_args_from_file(arg))
+            is_input_file = False
+            continue
+
+        if arg == '--argfile' and argn + 1 < len(args):
+            is_input_file = True
+            continue
+        elif arg.startswith('--argfile=') and len(arg) > argfilelen:
+            processed_args.extend(load_args_from_file(arg[argfilelen:]))
+            continue
+        processed_args.append(arg)
+    return processed_args
+
+
 _libtool_pat = re.compile("dlname='([A-z0-9\\.\\-\\+]+)'\n")
 
 
--- a/tests/offsets/Makefile.am	
+++ a/tests/offsets/Makefile.am	
@@ -1,5 +1,5 @@ 
 include $(top_srcdir)/common.mk
-include $(top_srcdir)/Makefile.introspection
+include $(top_srcdir)/Makefile.introspection.in
 
 BUILT_SOURCES =
 CLEANFILES =
--- a/tests/scanner/Makefile.am	
+++ a/tests/scanner/Makefile.am	
@@ -1,7 +1,7 @@ 
 NULL ?=
 
 include $(top_srcdir)/common.mk
-include $(top_srcdir)/Makefile.introspection
+include $(top_srcdir)/Makefile.introspection.in
 
 SUBDIRS = . annotationparser
 
