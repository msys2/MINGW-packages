# Maintainer: Martell Malone <martellmalone@gmail.com>
# Maintainer: Ray Donnelly <mingw.android@gmail.com>

_realname=git
# Marat Radchenko is trying to upstream mingw-w64 patches
# and Johannes Schindelin made a branch of msysgit for it
# Set _based_on_dscho_w64_msysgit to yes to build that.
# Patches that required re-basing for this repository are
# infixed with "-w64-msysgit".
_based_on_dscho_w64_msysgit=no
if [ "${_based_on_dscho_w64_msysgit}" = "yes" ]; then
  SRC_DIR=${_realname}-dscho
  GIT_URL="${SRC_DIR}::git+http://github.com/dscho/git.git#branch=w64-msysgit"
else
  SRC_DIR=${_realname}
  GIT_URL="${SRC_DIR}::git+http://github.com/msysgit/git.git"
fi

pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}-git"
provides=("${MINGW_PACKAGE_PREFIX}-${_realname}")
conflicts=("${MINGW_PACKAGE_PREFIX}-${_realname}")
_ver_base=2.0.0
pkgver=2.0.0.47118.8768113
pkgrel=1
pkgdesc="The fast distributed version control system (mingw-w64)"
arch=('any')
url="http://git-scm.com/"
license=('GPL2')

depends=("${MINGW_PACKAGE_PREFIX}-libiconv")

options=(!libtool strip staticlibs)

source=(${GIT_URL}
        "0000-Add-SEARCH_LIBS-to-GIT_CHECK_FUNC.patch"
        "0001-Don-t-redefine-_ReadWriteBarrier-in-malloc.c.h.patch"
        "0002-Undefine-FORCEINLINE-on-MinGW-w64-in-malloc.c.h.patch"
        "0003-Fix-BASIC_LDFLAGS-and-COMPAT_CFLAGS-for-64bit-MinGW-.patch"
        "0004-Also-look-in-winsock2.h-for-sockaddr_storage-and-loo.patch"
        "0005-Don-t-redefine-some-things-MinGW-w64-provides.patch"
        "0006-Include-ntdef.h-on-MinGW-w64-for-REPARSE_DATA_BUFFER.patch"
        "0007-Include-winsock2.h-and-not-netdb.h-on-MinGW-w64.patch"
        "0008-fix-mingw64-compat-wide-char.patch"
        "0009-Change-inline-definition-of-fork-for-mingw64.patch"
        "0010-Use-GIT_CHECK_FUNC-for-socket-and-basename.patch"
        "0010-w64-msysgit-Use-GIT_CHECK_FUNC-for-socket-and-basename.patch"
        "0011-Use-GIT_CHECK_FUNC-for-regcomp-regex.patch"
        "0011-w64-msysgit-Use-GIT_CHECK_FUNC-for-regcomp-regex.patch"
        "0012-Use-system-dirent.h-on-MinGW-w64.patch"
        "0013-Make-pthread-wrapper-only-for-mingw.patch"
        "0014-Do-not-compile-dirent-on-mingw64.patch"
        "0015-Alter-fscache-for-mingw64.patch"
        "0016-Use-time.h-versions-of-gmtime-localtime-_r.patch")

md5sums=('SKIP'
         '42b49294979328c5c77a0a5be75d8fe7'
         '935115ccc81149587d476ac2856e84c8'
         '4abd3f4440937544dde9a82feb1df73e'
         '8c9433879cae5efc4c17c83011e2033f'
         'fdab5aafeaf78185017918783796f8d6'
         'bb72be60632272314be2ef8985e60783'
         '9eb74690d5b718b0f7a8859a6848890b'
         'fceb0b5804e916de2568e5740eaec316'
         '668368e7b1f1993280315d9b390a9c66'
         '465210c5a264d13ea0e5f5bb1fd484ff'
         '7eb3d700b4b8f6fa44f2afae3db99222'
         '69af98595eeabd892289de06d0cd009f'
         'c078ad47d7f3c561223d55315509a7e1'
         '6e59f1619c2a9d8575c53ca8a8ab7f6b'
         '81a5bf8fc2a1a23e3f8dab8dbf12d626'
         '15cfd7061e919b6e947c3a6ccbb91917'
         '4fad79b5951f69e0520bdd5a24f1714a'
         '890fb66794ad458e424098b376ad0f94'
         'ba18be3d01bacbf170d2e79a8891ed18')

pkgver() {
  cd "${srcdir}"/${SRC_DIR}
  printf "%s.%s.%s" "$_ver_base" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
  export PYTHON_PATH=/usr/bin/python2
  cd "${srcdir}"/${SRC_DIR}

  git am "${srcdir}"/0000-Add-SEARCH_LIBS-to-GIT_CHECK_FUNC.patch
  if [ "${_based_on_dscho_w64_msysgit}" = "no" ]; then
    git am "${srcdir}"/0001-Don-t-redefine-_ReadWriteBarrier-in-malloc.c.h.patch
    git am "${srcdir}"/0002-Undefine-FORCEINLINE-on-MinGW-w64-in-malloc.c.h.patch
    git am "${srcdir}"/0003-Fix-BASIC_LDFLAGS-and-COMPAT_CFLAGS-for-64bit-MinGW-.patch
  fi
  git am "${srcdir}"/0004-Also-look-in-winsock2.h-for-sockaddr_storage-and-loo.patch
  if [ "${_based_on_dscho_w64_msysgit}" = "no" ]; then
    git am "${srcdir}"/0005-Don-t-redefine-some-things-MinGW-w64-provides.patch
    git am "${srcdir}"/0006-Include-ntdef.h-on-MinGW-w64-for-REPARSE_DATA_BUFFER.patch
  fi
  git am "${srcdir}"/0007-Include-winsock2.h-and-not-netdb.h-on-MinGW-w64.patch
  if [ "${_based_on_dscho_w64_msysgit}" = "no" ]; then
    git am "${srcdir}"/0008-fix-mingw64-compat-wide-char.patch
    git am "${srcdir}"/0009-Change-inline-definition-of-fork-for-mingw64.patch
  fi
  if [ "${_based_on_dscho_w64_msysgit}" = "no" ]; then
    git am "${srcdir}"/0010-Use-GIT_CHECK_FUNC-for-socket-and-basename.patch
    git am "${srcdir}"/0011-Use-GIT_CHECK_FUNC-for-regcomp-regex.patch
  else
    git am "${srcdir}"/0010-w64-msysgit-Use-GIT_CHECK_FUNC-for-socket-and-basename.patch
    git am "${srcdir}"/0011-w64-msysgit-Use-GIT_CHECK_FUNC-for-regcomp-regex.patch
  fi
  if [ "${_based_on_dscho_w64_msysgit}" = "no" ]; then
    git am "${srcdir}"/0012-Use-system-dirent.h-on-MinGW-w64.patch
    git am "${srcdir}"/0013-Make-pthread-wrapper-only-for-mingw.patch
    git am "${srcdir}"/0014-Do-not-compile-dirent-on-mingw64.patch
    git am "${srcdir}"/0015-Alter-fscache-for-mingw64.patch
  fi
  git am "${srcdir}"/0016-Use-time.h-versions-of-gmtime-localtime-_r.patch
  autoreconf -fi
}

build() {

  export PYTHON_PATH=/usr/bin/python2
  cd "$srcdir"

  [ -d build-${CARCH} ] && rm -rf build-${CARCH}
  cp -rf ${SRC_DIR} build-${CARCH}
  cd build-${CARCH}

  ./configure \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --prefix=${MINGW_PREFIX} \
    --libexecdir=${MINGW_PREFIX}/lib \
    --with-editor=vim \
    --htmldir=${MINGW_PREFIX}/share/doc/git/html \
    --mandir=${MINGW_PREFIX}/share/man \
    --with-curl=${MINGW_PREFIX}

  make INSTALLDIRS=vendor -j1 all V=1
  make -C contrib/subtree prefix=/usr all V=1
}

package() {
  export PYTHON_PATH=/usr/bin/python2
  cd "$srcdir"/build-${CARCH}
  make INSTALLDIRS=vendor DESTDIR="$pkgdir" install
}
