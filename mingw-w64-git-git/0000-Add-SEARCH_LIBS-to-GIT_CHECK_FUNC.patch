From 92d28470606977c4e3957e7812e11c3d93a893af Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Sun, 26 Oct 2014 21:30:08 +0000
Subject: [PATCH 00/16] Add SEARCH_LIBS to GIT_CHECK_FUNC

---
 configure.ac | 30 +++++++++++++++---------------
 1 file changed, 15 insertions(+), 15 deletions(-)

diff --git a/configure.ac b/configure.ac
index 890ef61..3270740 100644
--- a/configure.ac
+++ b/configure.ac
@@ -103,16 +103,16 @@ AC_DEFUN([GIT_PARSE_WITH_SET_MAKE_VAR],
  fi)])# GIT_PARSE_WITH_SET_MAKE_VAR
 
 #
-# GIT_CHECK_FUNC(FUNCTION, IFTRUE, IFFALSE)
-# -----------------------------------------
+# GIT_CHECK_FUNC(FUNCTION, SEARCH_LIBS, IFTRUE, IFFALSE)
+# ------------------------------------------------------
 # Similar to AC_CHECK_FUNC, but on systems that do not generate
 # warnings for missing prototypes (e.g. FreeBSD when compiling without
 # -Wall), it does not work.  By looking for function definition in
 # libraries, this problem can be worked around.
 AC_DEFUN([GIT_CHECK_FUNC],[AC_CHECK_FUNC([$1],[
-  AC_SEARCH_LIBS([$1],,
-  [$2],[$3])
-],[$3])])
+  AC_SEARCH_LIBS([$1],[$2],
+  [$3],[$4])
+],[$4])])
 
 #
 # GIT_STASH_FLAGS(BASEPATH_VAR)
@@ -792,7 +792,7 @@ GIT_CONF_SUBST([NO_SOCKADDR_STORAGE])
 #
 # Define NO_IPV6 if you lack IPv6 support and getaddrinfo().
 AC_CHECK_TYPE([struct addrinfo],[
- GIT_CHECK_FUNC([getaddrinfo],
+ GIT_CHECK_FUNC([getaddrinfo],,
   [NO_IPV6=],
   [NO_IPV6=YesPlease])
 ],[NO_IPV6=YesPlease],[
@@ -915,19 +915,19 @@ AC_CHECK_LIB([iconv], [locale_charset],
 GIT_CONF_SUBST([CHARSET_LIB])
 #
 # Define NO_STRCASESTR if you don't have strcasestr.
-GIT_CHECK_FUNC(strcasestr,
+GIT_CHECK_FUNC(strcasestr,,
 [NO_STRCASESTR=],
 [NO_STRCASESTR=YesPlease])
 GIT_CONF_SUBST([NO_STRCASESTR])
 #
 # Define NO_MEMMEM if you don't have memmem.
-GIT_CHECK_FUNC(memmem,
+GIT_CHECK_FUNC(memmem,,
 [NO_MEMMEM=],
 [NO_MEMMEM=YesPlease])
 GIT_CONF_SUBST([NO_MEMMEM])
 #
 # Define NO_STRLCPY if you don't have strlcpy.
-GIT_CHECK_FUNC(strlcpy,
+GIT_CHECK_FUNC(strlcpy,,
 [NO_STRLCPY=],
 [NO_STRLCPY=YesPlease])
 GIT_CONF_SUBST([NO_STRLCPY])
@@ -941,37 +941,37 @@ AC_CHECK_TYPE(uintmax_t,
 GIT_CONF_SUBST([NO_UINTMAX_T])
 #
 # Define NO_STRTOUMAX if you don't have strtoumax in the C library.
-GIT_CHECK_FUNC(strtoumax,
+GIT_CHECK_FUNC(strtoumax,,
 [NO_STRTOUMAX=],
 [NO_STRTOUMAX=YesPlease])
 GIT_CONF_SUBST([NO_STRTOUMAX])
 #
 # Define NO_SETENV if you don't have setenv in the C library.
-GIT_CHECK_FUNC(setenv,
+GIT_CHECK_FUNC(setenv,,
 [NO_SETENV=],
 [NO_SETENV=YesPlease])
 GIT_CONF_SUBST([NO_SETENV])
 #
 # Define NO_UNSETENV if you don't have unsetenv in the C library.
-GIT_CHECK_FUNC(unsetenv,
+GIT_CHECK_FUNC(unsetenv,,
 [NO_UNSETENV=],
 [NO_UNSETENV=YesPlease])
 GIT_CONF_SUBST([NO_UNSETENV])
 #
 # Define NO_MKDTEMP if you don't have mkdtemp in the C library.
-GIT_CHECK_FUNC(mkdtemp,
+GIT_CHECK_FUNC(mkdtemp,,
 [NO_MKDTEMP=],
 [NO_MKDTEMP=YesPlease])
 GIT_CONF_SUBST([NO_MKDTEMP])
 #
 # Define NO_MKSTEMPS if you don't have mkstemps in the C library.
-GIT_CHECK_FUNC(mkstemps,
+GIT_CHECK_FUNC(mkstemps,,
 [NO_MKSTEMPS=],
 [NO_MKSTEMPS=YesPlease])
 GIT_CONF_SUBST([NO_MKSTEMPS])
 #
 # Define NO_INITGROUPS if you don't have initgroups in the C library.
-GIT_CHECK_FUNC(initgroups,
+GIT_CHECK_FUNC(initgroups,,
 [NO_INITGROUPS=],
 [NO_INITGROUPS=YesPlease])
 GIT_CONF_SUBST([NO_INITGROUPS])
-- 
2.1.2

