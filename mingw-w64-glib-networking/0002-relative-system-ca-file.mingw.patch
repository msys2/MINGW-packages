--- glib-networking-2.41.4/tls/gnutls/gtlsbackend-gnutls.c.orig	2014-02-01 14:46:53.000000000 +0000
+++ glib-networking-2.41.4/tls/gnutls/gtlsbackend-gnutls.c	2014-08-01 15:33:08.627929900 +0000
@@ -31,6 +31,10 @@
 #include "gtlsfiledatabase-gnutls.h"
 #include "gtlsserverconnection-gnutls.h"
 
+#if defined(G_OS_WIN32)
+#include <windows.h>
+#endif
+
 typedef struct
 {
   GMutex mutex;
@@ -37,6 +37,30 @@
   GTlsDatabase *default_database;
 };
 
+#if defined(G_OS_WIN32)
+static HMODULE backend_dll = NULL;
+
+BOOL WINAPI DllMain (HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpReserved);
+
+BOOL WINAPI
+DllMain (HINSTANCE hinstDLL,
+         DWORD     fdwReason,
+         LPVOID    lpReserved)
+{
+  switch (fdwReason)
+    {
+    case DLL_PROCESS_ATTACH:
+      backend_dll = (HMODULE) hinstDLL;
+      break;
+    case DLL_THREAD_ATTACH:
+    case DLL_THREAD_DETACH:
+    case DLL_PROCESS_DETACH:
+      break;
+    }
+  return TRUE;
+}
+#endif
+
 static void g_tls_backend_gnutls_interface_init (GTlsBackendInterface *iface);
 
 G_DEFINE_DYNAMIC_TYPE_EXTENDED (GTlsBackendGnutls, g_tls_backend_gnutls, G_TYPE_OBJECT, 0,
@@ -102,7 +124,32 @@
 {
   const gchar *anchor_file = NULL;
 #ifdef GTLS_SYSTEM_CA_FILE
-  anchor_file = GTLS_SYSTEM_CA_FILE;
+  if (!g_path_is_absolute (GTLS_SYSTEM_CA_FILE)
+#ifdef G_OS_WIN32
+      || strlen (GTLS_SYSTEM_CA_FILE) < 3
+      || (GTLS_SYSTEM_CA_FILE)[1] != ':')
+#endif
+    {
+      gchar *root;
+      gchar *anchor;
+      GTlsDatabase *tls_database;
+
+      root = g_win32_get_package_installation_directory_of_module (backend_dll);
+
+      if (root)
+        {
+          anchor = g_build_path ("/", root, GTLS_SYSTEM_CA_FILE, NULL);
+          g_free (root);
+        }
+      else
+        anchor = NULL;
+
+      tls_database = g_tls_file_database_new (anchor, error);
+      g_free (anchor);
+      return tls_database;
+    }
+  else
+    anchor_file = GTLS_SYSTEM_CA_FILE;
 #endif
   return g_tls_file_database_new (anchor_file, error);
 }
--- ./meson.build
+++ ./meson.build
@@ -65,9 +65,7 @@
 gnutls_dep = dependency('gnutls', version: '>= 3.3.5', required: true)
 
 msg = 'location of system Certificate Authority list: '
-res = run_command(join_paths(meson.source_root(), 'find-ca-certificates'), get_option('ca_certificates_path'))
-assert(res.returncode() == 0, msg + ' could not find any CA certificate store. Use -Dca_certificates_path=PATH to set')
-ca_certificates_path = res.stdout().strip()
+ca_certificates_path = get_option('ca_certificates_path')
 message(msg + ca_certificates_path)
 config_h.set_quoted('GTLS_SYSTEM_CA_FILE', ca_certificates_path, description: 'The system CA list')
 
