--- a/external/pdal_wrench/tile/tile.cpp
+++ b/external/pdal_wrench/tile/tile.cpp
@@ -51,7 +51,7 @@ std::vector<std::string> directoryList(const std::string& dir)
         fs::directory_iterator end;
         while (it != end)
         {
-            files.push_back(untwine::fromNative(it->path()));
+            files.push_back(untwine::fromNative(it->path().string()));
             it++;
         }
     }
--- a/external/untwine/untwine/Common.cpp
+++ b/external/untwine/untwine/Common.cpp
@@ -55,7 +55,11 @@ MapContext mapFile(const std::string& filename, bool readOnly, size_t pos, size_
 #ifndef _WIN32
     ctx.m_fd = ::open(filename.data(), readOnly ? O_RDONLY : O_RDWR);
 #else
+#ifdef _MSC_VER
     ctx.m_fd = ::_wopen(toNative(filename).data(), readOnly ? _O_RDONLY : _O_RDWR);
+#else
+    ctx.m_fd = ::_open(toNative(filename).data(), readOnly ? _O_RDONLY : _O_RDWR);
+#endif
 #endif
 
     if (ctx.m_fd == -1)
@@ -129,7 +133,7 @@ std::vector<std::string> directoryList(const std::string& dir)
         fs::directory_iterator end;
         while (it != end)
         {
-            files.push_back(untwine::fromNative(it->path()));
+            files.push_back(untwine::fromNative(it->path().string()));
             it++;
         }
     }
--- a/external/untwine/untwine/Untwine.cpp
+++ b/external/untwine/untwine/Untwine.cpp
@@ -122,7 +122,7 @@ void cleanup(const std::string& dir, bool rmdir)
 
 } // namespace untwine
 
-#ifdef _WIN32
+#ifdef _MSC_VER
 int wmain( int argc, wchar_t *argv[ ], wchar_t *envp[ ] )
 #else
 int main(int argc, char *argv[])
