# Maintainer: J. Peter Mugaas <jpmugaas@suddenlink.net>

_realname=testrepository
pkgbase=mingw-w64-python-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-python2-${_realname}"  "${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
pkgver=0.0.20
pkgrel=1
pkgdesc="A repository of test results. (mingw-w64)"
arch=('any')
license=('Apache' 'BSD')
url="https://launchpad.net/testrepository"
makedepends=("${MINGW_PACKAGE_PREFIX}-python2"
             "${MINGW_PACKAGE_PREFIX}-python3"
             "${MINGW_PACKAGE_PREFIX}-python3-fixtures"
             "${MINGW_PACKAGE_PREFIX}-python2-fixtures"
             "${MINGW_PACKAGE_PREFIX}-python3-setuptools"
             "${MINGW_PACKAGE_PREFIX}-python2-setuptools"
             "${MINGW_PACKAGE_PREFIX}-python3-subunit" 
             "${MINGW_PACKAGE_PREFIX}-python2-subunit"
             "${MINGW_PACKAGE_PREFIX}-python3-testtools" 
             "${MINGW_PACKAGE_PREFIX}-python2-testtools")
checkdepends=("${MINGW_PACKAGE_PREFIX}-python3-testresources"
              "${MINGW_PACKAGE_PREFIX}-python2-testresources"
              "${MINGW_PACKAGE_PREFIX}-python3-pytz"
              "${MINGW_PACKAGE_PREFIX}-python2-pytz"
              "${MINGW_PACKAGE_PREFIX}-python3-testscenarios"
              "${MINGW_PACKAGE_PREFIX}-python2-testscenarios")
options=('staticlibs' 'strip' '!debug')
source=("https://pypi.python.org/packages/source/t/testrepository/testrepository-$pkgver.tar.gz")
sha512sums=('df14500e2b27b6f39d9d4c4f42961efd63dfe25186e561eb1678952a8ab9311f17c36b78819fea33e0ac879c47a33d45c31ff58be017609c8a6157905ee712d6')


# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying $_patch"
    patch -Nbp1 -i "${srcdir}/$_patch"
  done
}

del_file_exists() {
  for _fname in "$@"
  do
    if [ -f $_fname ]; then
      rm -rf $_fname
    fi
  done
}
# =========================================== #

prepare() {
  cd "${srcdir}"
#  apply_patch_with_msg 0001-A-really-important-fix.patch \
#    0002-A-less-important-fix.patch
  for builddir in python{2,3}-build-${CARCH}; do
    rm -rf ${builddir} | true
    cp -r "${_realname}-${pkgver}" "${builddir}"
  done
  # Set version for setuptools_scm
  export SETUPTOOLS_SCM_PRETEND_VERSION=$pkgver
}

# Note that build() is sometimes skipped because it's done in 
# the packages setup.py install for simplicity if you can do so.
# but sometimes, you want to do a check before install which would
# also trigger the build.
build() {
  for pver in {2,3}; do  
    msg "Python ${pver} build for ${CARCH}"  
    cd "${srcdir}/python${pver}-build-${CARCH}"
    ${MINGW_PREFIX}/bin/python${pver} setup.py build
  done  
}

check() {
  for pver in {2,3}; do
    msg "Python ${pver} test for ${CARCH}"
    cd "${srcdir}/python${pver}-build-${CARCH}"

    msg "  init - Python ${pver} test for ${CARCH}"
    PYTHON=python${pver} ${MINGW_PREFIX}/bin/python${pver} ./testr init
    msg "  run - Python ${pver} test for ${CARCH}"
    PYTHON=python${pver} ${MINGW_PREFIX}/bin/python${pver} ./testr --parallel || warning "Tests failed"
  done
}

package_python3-testrepository() {
  depends=("${MINGW_PACKAGE_PREFIX}-python3")
  install=${_realname}2-${CARCH}.install

  cd "${srcdir}/python3-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python3 setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build

#  install -Dm644 LICENSE "${pkgdir}${MINGW_PREFIX}/share/licenses/python3-${_realname}/COPYING"

# This entire section should be removed if the package does NOT install
# anything in the /mingw*/bin directory.
### begin section ###
  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  for _f in "${pkgdir}${MINGW_PREFIX}"/bin/*; do
    sed -e "s|/usr/bin/env |${MINGW_PREFIX}|g" \
        -e "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" -i ${_f}
  done
#### end section ####
}

package_python2-testrepository() {
  depends=("${MINGW_PACKAGE_PREFIX}-python2")
  install=${_realname}2-${CARCH}.install

  cd "${srcdir}/python2-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python2 setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build

 # install -Dm644 LICENSE "${pkgdir}${MINGW_PREFIX}/share/licenses/python2-${_realname}/COPYING"

# This entire section should be removed if the package does NOT install
# anything in the /mingw*/bin directory.
### begin section ###
  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  for _f in "${pkgdir}${MINGW_PREFIX}"/bin/*; do
    sed -e "s|/usr/bin/env |${MINGW_PREFIX}|g" \
        -e "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" -i ${_f}
  done

# for Python2 packages, you want to rename some stuff from the bin directory 
# with the 2 suffix like in the mingw-w64-python-pygments package to avoid
# conflicts when installing both the Python2 and Python3 packages
  for f in testr; do
    mv "${pkgdir}${MINGW_PREFIX}"/bin/${f}{,2}
  done
#### end section ####
}

package_mingw-w64-i686-python2-testrepository() {
  package_python2-testrepository
}

package_mingw-w64-i686-python3-testrepository() {
  package_python3-testrepository
}

package_mingw-w64-x86_64-python2-testrepository() {
  package_python2-testrepository
}

package_mingw-w64-x86_64-python3-testrepository() {
  package_python3-testrepository
}
