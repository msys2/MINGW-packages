# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: JÃ¼rgen Pfeifer <juergen@familiepfeifer.de>

_realname=OpenBLAS
pkgbase=mingw-w64-openblas
pkgname=("${MINGW_PACKAGE_PREFIX}-openblas"
         $([[ "${CARCH}" == "i686" ]] || echo "${MINGW_PACKAGE_PREFIX}-openblas64"))
pkgver=0.3.24
pkgrel=2
pkgdesc="An optimized BLAS library based on GotoBLAS2 1.13 BSD, providing optimized blas, lapack, and cblas (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32' 'clangarm64')
url="https://www.openblas.net/"
license=('spdx:BSD-3-Clause')
provides=("${MINGW_PACKAGE_PREFIX}-${_realname}")
conflicts=("${MINGW_PACKAGE_PREFIX}-openblas-git")
replaces=("${MINGW_PACKAGE_PREFIX}-${_realname}"
          "${MINGW_PACKAGE_PREFIX}-${_realname}-git")
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-libwinpthread"
         $([[ ${MINGW_PACKAGE_PREFIX} == *-clang-* ]] || echo "${MINGW_PACKAGE_PREFIX}-gcc-libgfortran")
         "${MINGW_PACKAGE_PREFIX}-omp")
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             $([[ ${MSYSTEM} == CLANG32 ]] || echo "${MINGW_PACKAGE_PREFIX}-fc")
             "dos2unix")
options=('!buildflags')
source=(https://github.com/xianyi/OpenBLAS/releases/download/v${pkgver}/${_realname}-${pkgver}.tar.gz
        002-lgfortran-requires-lquadmath.patch
        004-aarch64-detection.patch
        005-fix-pkgconfig-files.patch)
sha256sums=('ceadc5065da97bd92404cac7254da66cc6eb192679cf1002098688978d4d5132'
            'c147ec053bdf0387d499372472365aa829db0d8200b6828b0ebce5209e8603fd'
            '70ce007ff4f6c2a127f9835ce9cd85081707cf3bcccddcfaa06817b06f69c941'
            'bb36b75624fe9768d3d16e9d824e79d4dea5b0f0056601ca4ce37bc93e46f4b5')

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying $_patch"
    patch -Np1 -i "${srcdir}/$_patch"
  done
}

prepare() {
  cd "${srcdir}"/${_realname}-${pkgver}

  apply_patch_with_msg \
    002-lgfortran-requires-lquadmath.patch \
    004-aarch64-detection.patch \
    005-fix-pkgconfig-files.patch
}

_build_openblas() {
  _idx_opt=$1

  declare -a _extra_config
  if check_option "debug" "n"; then
    _extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    _extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  if [[ ${MSYSTEM} == CLANG32 ]]; then
    _extra_config+=("-DC_LAPACK=ON")
  fi

  if [[ ${CARCH} == aarch64 ]]; then
    _extra_config+=("-DTARGET=CORTEXA53")
    # clang wasn't able to compile all the kernels inside the arm64 folder,
    # so disable for now
    _extra_config+=("-DDYNAMIC_ARCH=OFF")
  else
    _extra_config+=("-DTARGET=CORE2")
    _extra_config+=("-DDYNAMIC_ARCH=ON")
  fi

  unset CFLAGS
  unset CXXFLAGS
  if [[ ${MINGW_PACKAGE_PREFIX} != *-clang-* ]]; then
    export CFLAGS=" -Wno-maybe-uninitialized"
  else
    export CFLAGS=" -Wno-unused-function -Wno-unused-variable"
  fi

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake \
    -G"Ninja" \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DCMAKE_BUILD_TYPE=${_build_type} \
    -DBUILD_SHARED_LIBS=ON \
    -DBUILD_STATIC_LIBS=ON \
    -DUSE_THREAD=ON \
    -DNUM_THREADS=64 \
    -DUSE_OPENMP=ON \
    "${_extra_config[@]}" \
    ${_idx_opt} \
    ../${_realname}-${pkgver}

  ${MINGW_PREFIX}/bin/cmake --build .
}

build() {
  mkdir -p "${srcdir}/build-${MSYSTEM}-32" && cd "${srcdir}/build-${MSYSTEM}-32"

  msg2 "Build OpenBLAS with 32-bit indexing"
  _build_openblas ""

  if [ "${CARCH}" != "i686" ]; then
    mkdir -p "${srcdir}/build-${MSYSTEM}-64" && cd "${srcdir}/build-${MSYSTEM}-64"

    msg2 "Build OpenBLAS with 64-bit indexing"
    _build_openblas "-DBINARY=64 -DINTERFACE64=1"
  fi
}

check() {
  cd "${srcdir}"/build-${MSYSTEM}-32
  ctest

  if [ "${CARCH}" != "i686" ]; then
    cd "${srcdir}/build-${MSYSTEM}-64"
    ctest
  fi
}

package_openblas() {
  pkgdesc="An optimized BLAS library based on GotoBLAS2 1.13 BSD, providing optimized blas, lapack, and cblas (mingw-w64)"

  cd "${srcdir}"/build-${MSYSTEM}-32

  DESTDIR=${pkgdir} ${MINGW_PREFIX}/bin/cmake --install .

  # Install License
  install -Dm0644 ${srcdir}/${_realname}-${pkgver}/LICENSE ${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE
  install -Dm0644 ${srcdir}/${_realname}-${pkgver}/lapack-netlib/LICENSE ${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE-lapack
}

package_openblas64() {
  pkgdesc="An optimized BLAS library based on GotoBLAS2 1.13 BSD, providing optimized blas, lapack, and cblas with 64-bit indexing (mingw-w64)"
  provides=()
  conflicts=()
  replaces=()

  cd "${srcdir}"/build-${MSYSTEM}-64

  DESTDIR=${pkgdir} ${MINGW_PREFIX}/bin/cmake --install .

  # Install License
  install -Dm0644 ${srcdir}/${_realname}-${pkgver}/LICENSE ${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}64/LICENSE
  install -Dm0644 ${srcdir}/${_realname}-${pkgver}/lapack-netlib/LICENSE ${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}64/LICENSE-lapack
}

# template start; name=mingw-w64-splitpkg-wrappers; version=1.0;
# vim: set ft=bash :

# generate wrappers
for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
# template end;
