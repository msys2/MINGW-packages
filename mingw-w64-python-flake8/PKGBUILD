# $Id$
# Maintainer: J. Peter Mugaas <jpmugaas@suddenlink.net>

_realname=flake8
pkgbase=mingw-w64-python-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-python2-${_realname}" "${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
pkgver=3.5.0
pkgrel=4
epoch=1
pkgdesc="The modular source code checker: pep8, pyflakes and co"
arch=('any')
url="http://flake8.pycqa.org"
license=('MIT')
makedepends=("${MINGW_PACKAGE_PREFIX}-python3-setuptools" 
             "${MINGW_PACKAGE_PREFIX}-python2-setuptools"
             "${MINGW_PACKAGE_PREFIX}-python3-pyflakes" 
             "${MINGW_PACKAGE_PREFIX}-python2-pyflakes"
             "${MINGW_PACKAGE_PREFIX}-python3-pycodestyle" 
             "${MINGW_PACKAGE_PREFIX}-python2-pycodestyle" 
             "${MINGW_PACKAGE_PREFIX}-python3-mccabe" 
             "${MINGW_PACKAGE_PREFIX}-python2-mccabe"
             "${MINGW_PACKAGE_PREFIX}-python2-enum34"
             "${MINGW_PACKAGE_PREFIX}-python2-configparser"
             "${MINGW_PACKAGE_PREFIX}-python3-pytest-runner"
             "${MINGW_PACKAGE_PREFIX}-python2-pytest-runner")
checkdepends=("${MINGW_PACKAGE_PREFIX}-python3-mock" "${MINGW_PACKAGE_PREFIX}-python2-mock")
source=("${_realname}-$pkgver.tar.gz"::"https://github.com/PyCQA/flake8/archive/$pkgver.tar.gz"
        "https://gitlab.com/pycqa/flake8/commit/4fcbcccf381ce0987faa297173e4008b0490918f.patch"
        "flake8-pycodestyle2.4-compat.patch::https://gitlab.com/pycqa/flake8/merge_requests/230.patch"
        "flake8-pycodestyle2.4-new-checks.patch::https://gitlab.com/pycqa/flake8/merge_requests/231.patch"
        "https://gitlab.com/pycqa/flake8/commit/527af5c214ef0eccfde3dd58d7ea15e09c483bd3.patch")
sha512sums=('36c6bd0166a0e8f9b8c99cfd7d92f21a4b8d761727185bbd0dff231001dbb495ed4128e2c60ab16bf3920a8a8394efb0127d9233962940333cfc346766736639'
            '97d49780cd297091e6f556fc0bdaa5d508cbd591debdc17916932a9548418c861df733e1f9ca9d19d8e09ab006cd7a430290569b67382b1ee20072a985799ca1'
            '6793f1ac9340d4866f162848fd0beec78796a1f9865fb9bb8051f3e52ed5528c30f7dd54ec7aea0e830cfa6baf6f5eab9b32e716ffe849611a7da048e68d602a'
            '912d29dad70000fb6f7b94c32956d69cb39c883df6100776b0c529fcef8f42ca8614497bd1b3f842b4f237e361c2483db1fb1c634930fd21e0cb1e583296afb5'
            '0b826ab9a3257a7acfc260e8762e40ba2855914c0009c223fce2076d4ef92cc32956222ad0b9ccb6f62b3fb3dfe78ceaad6c389525795d74484a79afa7c0bb92')

prepare() {
  # update versions to what the next patch expects
  patch -p1 -d flake8-$pkgver < 4fcbcccf381ce0987faa297173e4008b0490918f.patch
  # fix renamed checks in newer pycodestyle versions
  patch -p1 -d flake8-$pkgver < flake8-pycodestyle2.4-compat.patch
  # add new pycodestyle 2.4.0 checks
  patch -p1 -d flake8-$pkgver < flake8-pycodestyle2.4-new-checks.patch
  # fix pyflakes 2.0 compat
  patch -p1 -d flake8-$pkgver < 527af5c214ef0eccfde3dd58d7ea15e09c483bd3.patch
  # disable overly restrictive dependency pinning
  sed -i -e 's/, *< *[0-9=.]*//' flake8-$pkgver/setup.py
  for builddir in python{2,3}-build-${CARCH}; do
    rm -rf ${builddir} | true
    cp -r "${_realname}-${pkgver}" "${builddir}"
  done
  # Set version for setuptools_scm
  export SETUPTOOLS_SCM_PRETEND_VERSION=$pkgver
}

build() {
  for pver in {2,3}; do  
    msg "Python ${pver} build for ${CARCH}"  
    cd "${srcdir}/python${pver}-build-${CARCH}"
    ${MINGW_PREFIX}/bin/python${pver} setup.py build
  done  
}

check() {
  for pver in {2,3}; do
    msg "Python ${pver} test for ${CARCH}"
    cd "${srcdir}/python${pver}-build-${CARCH}"
    ${MINGW_PREFIX}/bin/python${pver} setup.py pytest
  done
}

package_python3-flake8() {
  depends=("${MINGW_PACKAGE_PREFIX}-python3-pyflakes"
   "${MINGW_PACKAGE_PREFIX}-python3-mccabe" 
   "${MINGW_PACKAGE_PREFIX}-python3-pycodestyle")
  install=${_realname}3-${CARCH}.install

  cd "${srcdir}/python3-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python3 setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build

  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
    ${MINGW_PREFIX}/bin/python3 setup.py install --root="$pkgdir" --prefix=${MINGW_PREFIX} --optimize=1
  install -D -m644 LICENSE "$pkgdir${MINGW_PREFIX}"/share/licenses/$pkgname/LICENSE

# This entire section should be removed if the package does NOT install
# anything in the /mingw*/bin directory.
### begin section ###
  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  # fix python command in files
  for _f in "${pkgdir}${MINGW_PREFIX}"/bin/*.py; do
    sed -e "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" -i ${_f}
  done
#### end section ####
}

package_python2-flake8() {
  depends=("${MINGW_PACKAGE_PREFIX}-python2-pyflakes"
           "${MINGW_PACKAGE_PREFIX}-python2-mccabe"
           "${MINGW_PACKAGE_PREFIX}-python2-pycodestyle"
           "${MINGW_PACKAGE_PREFIX}-python2-enum34"
           "${MINGW_PACKAGE_PREFIX}-python2-configparser")
  install=${_realname}2-${CARCH}.install

  cd "${srcdir}/python2-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
    ${MINGW_PREFIX}/bin/python2 setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build

  install -D -m644 LICENSE "$pkgdir${MINGW_PREFIX}"/share/licenses/$pkgname/LICENSE

# This entire section should be removed if the package does NOT install
# anything in the /mingw*/bin directory.
### begin section ###
  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  # fix python command in files
  for _f in "${pkgdir}${MINGW_PREFIX}"/bin/*.py; do
    sed -e "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" -i ${_f}
  done

# for Python2 packages, you want to rename some stuff from the bin directory 
# with the 2 suffix like in the mingw-w64-python-pygments package to avoid
# conflicts when installing both the Python2 and Python3 packages
  for f in flake8; do
    mv "${pkgdir}${MINGW_PREFIX}"/bin/${f}{,2}.exe
    if [ -f "${pkgdir}${MINGW_PREFIX}"/bin/${f}.exe.manifest ]; then
      mv "${pkgdir}${MINGW_PREFIX}"/bin/${f}{,2}.exe.manifest
      sed -e "s|${f}|${f}2|g" -i "${pkgdir}${MINGW_PREFIX}"/bin/${f}2.exe.manifest
    fi
    mv "${pkgdir}${MINGW_PREFIX}"/bin/${f}{,2}-script.py
  done
#### end section ####
}

package_mingw-w64-i686-python2-flake8() {
  package_python2-flake8
}

package_mingw-w64-i686-python3-flake8() {
  package_python3-flake8
}

package_mingw-w64-x86_64-python2-flake8() {
  package_python2-flake8
}

package_mingw-w64-x86_64-python3-flake8() {
  package_python3-flake8
}

