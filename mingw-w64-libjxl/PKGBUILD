# Maintainer: Biswapriyo Nath <nathbappai@gmail.com>

_realname=libjxl
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=0.6.1
pkgrel=1
pkgdesc='JPEG XL image format reference implementation (mingw-w64)'
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32')
url="https://jpeg.org/jpegxl/"
license=('BSD')
depends=("${MINGW_PACKAGE_PREFIX}-brotli"
         #"${MINGW_PACKAGE_PREFIX}-highway"
         "${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-giflib"
         "${MINGW_PACKAGE_PREFIX}-libjpeg-turbo"
         "${MINGW_PACKAGE_PREFIX}-libpng"
         "${MINGW_PACKAGE_PREFIX}-libwinpthread")
makedepends=("git"
             "${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja")
# There is no guarantee libjxl will follow stable highway release
# Also libjxl installs the bundled highway binaries
conflicts=("${MINGW_PACKAGE_PREFIX}-highway")
source=("git+https://github.com/libjxl/libjxl.git#tag=v${pkgver}"
        'git+https://github.com/lvandeve/lodepng.git'
        'git+https://github.com/webmproject/sjpeg.git'
        'git+https://skia.googlesource.com/skcms.git'
        'git+https://github.com/google/highway.git')
sha256sums=('SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP')

prepare() {
  cd "${_realname}"
  git submodule init
  git config --local submodule.third_party/lodepng.url "${srcdir}/lodepng"
  git config --local submodule.third_party/sjpeg.url "${srcdir}/sjpeg"
  git config --local submodule.third_party/skcms.url "${srcdir}/skcms"
  git config --local submodule.third_party/highway.url "${srcdir}/highway"

  git submodule update third_party/lodepng
  git submodule update third_party/sjpeg
  git submodule update third_party/skcms
  git submodule update third_party/highway

  git cherry-pick 4b7a944f65bea99139140c77ccd4568b9f04caae
  git cherry-pick 88fe3fff3dc70c72405f57c69feffd9823930034
  #git cherry-pick b5e9e0d1612c7d14f21ebca86b6ac05a35efca6e
}

build() {
  declare -a _extra_config
  if check_option "debug" "n"; then
    _extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    _extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  [[ -d "${srcdir}/build-${MSYSTEM}" ]] && rm -rf "${srcdir}/build-${MSYSTEM}"
  mkdir -p "${srcdir}/build-${MSYSTEM}" && cd "${srcdir}/build-${MSYSTEM}"

  # Workaround for AVX related crashes
  CFLAGS+=" -DHWY_COMPILE_ONLY_SCALAR" \
  CXXFLAGS+=" -DHWY_COMPILE_ONLY_SCALAR" \
  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake.exe \
    -G"Ninja" \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    "${_extra_config[@]}" \
    -DJPEGXL_ENABLE_PLUGINS=OFF \
    -DBUILD_TESTING=OFF \
    -DJPEGXL_WARNINGS_AS_ERRORS=OFF \
    -DJPEGXL_ENABLE_BENCHMARK=OFF \
    -DJPEGXL_ENABLE_EXAMPLES=OFF \
    -DJPEGXL_ENABLE_MANPAGES=OFF \
    -DJPEGXL_FORCE_SYSTEM_BROTLI=ON \
    -DJPEGXL_FORCE_SYSTEM_HWY=OFF \
    -DJPEGXL_ENABLE_JNI=OFF \
    -DJPEGXL_ENABLE_TCMALLOC=OFF \
    -DJPEGXL_ENABLE_OPENEXR=OFF \
    ../${_realname}

  ${MINGW_PREFIX}/bin/cmake.exe --build ./
}

check() {
  cd "${srcdir}/build-${MSYSTEM}"
  ${MINGW_PREFIX}/bin/ctest.exe ./ || true
}

package() {
  cd "${srcdir}/build-${MSYSTEM}"
  DESTDIR="${pkgdir}" ${MINGW_PREFIX}/bin/cmake.exe --install ./

  install -Dm644 "${srcdir}/${_realname}/LICENSE" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE"
}
