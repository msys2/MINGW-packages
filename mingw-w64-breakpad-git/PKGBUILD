# Maintainer: Jon Turney <jon.turney@dronecode.org.uk>
# Contributor: Renato Silva <br.renatosilva@gmail.com>
# Contributor: Alexey Pavlov <alexpux@gmail.com>

_realname=breakpad
pkgbase=mingw-w64-${_realname}-git
pkgname=(${MINGW_PACKAGE_PREFIX}-${_realname}-git)
provides=(${MINGW_PACKAGE_PREFIX}-${_realname})
conflicts=(${MINGW_PACKAGE_PREFIX}-${_realname})
replaces=(${MINGW_PACKAGE_PREFIX}-${_realname}-svn)
pkgver=r1449.f3d28e9
pkgrel=1
url='https://code.google.com/p/google-breakpad'
pkgdesc='An open-source multi-platform crash reporting system (mingw-w64)'
license=('BSD')
arch=('any')
depends=(${MINGW_PACKAGE_PREFIX}-gcc-libs)
makedepends=(${MINGW_PACKAGE_PREFIX}-curl rsync git gyp)
source=(${_realname}.git::"git+https://chromium.googlesource.com/breakpad/breakpad"
        0002-Remove-local-copy-of-curl-headers.patch
        0003-Link-minidump_upload-and-sym_upload-with-curl.patch
        0004-Build-minidump_upload-sym_upload-for-all-targets.patch
        0005-Add-support-for-DWARF-in-PECOFF-as-used-by-Cygwin-an.patch
        0006-Fix-building-minidump-processor-for-MinGW.patch
        0007-Build-PECOFF-DWARF-dump_syms-for-MinGW.patch
        0008-Fix-building-client-library-and-upload-tools-for-Min.patch
        0009-Fix-common.gypi-to-allow-gyp-to-generate-Makefiles-o.patch
        0010-Teach-gyp-generated-Makefile-to-build-crash_generati.patch
        0011-Default-debug_file-to-the-code_file-basename.patch
        0012-Fix-building-windows-client-unit-tests-with-gcc.patch
        0013-Add-symsrv_convert.patch
        0015-Use-a-default-debug-id-of-all-zeros-when-no-CV-recor.patch
        0016-Use-__USE_MINGW_ANSI_STDIO-for-MinGW-build.patch
        0017-Provide-a-working-strtok_r-for-MinGW.patch
        0018-Add-a-README.md.patch
        0019-Fallback-to-synthesizing-a-debug-id-from-version-and.patch
        0020-Fix-typo-in-the-name-of-the-info-entry-containing-up.patch
        0021-Fix-a-missing-r-in-crash_generation_app.patch
        Makefile
        README.sample)

pkgver() {
    cd "${srcdir}/${_realname}.git"
    printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
    msg2 "Creating patched-source directory"
    [[ -d "${srcdir}/${_realname}.patched" ]] && rm -rf "${srcdir}/${_realname}.patched"
    mkdir -p "${srcdir}/${_realname}.patched"
    cp -r "${srcdir}/${_realname}.git"/* "${srcdir}/${_realname}.patched"

    # Apply patches
    cd "${srcdir}/${_realname}.patched"
    for patch in "${srcdir}"/*.patch; do
        msg2 "Applying ${patch} ..."
        patch -p1 -i "${patch}"
    done

    msg2 "Running autoreconf"
    autoreconf -sif
}

build() {
    msg2 "Synchronizing build directory"
    rsync --recursive --times --links "${srcdir}/${_realname}.patched"/* "${srcdir}/${_realname}.build.${CARCH}"

    cd "${srcdir}/${_realname}.build.${CARCH}"
    ./configure \
      --prefix=${MINGW_PREFIX} \
      --build=${MINGW_CHOST} \
      --host=${MINGW_CHOST}

    # use the autotooled makefile to build the minidump processor library and tools
    make CXXFLAGS="-DUNICODE -D_UNICODE -g" AR=${MINGW_PREFIX}/bin/ar RC=${MINGW_PREFIX}/bin/windres

    # use gyp to generate a Makefile to build the Windows client library
    cd "${srcdir}/${_realname}.build.${CARCH}/src/"
    gyp --no-circular-check --depth=. -f make client/windows/breakpad_client.gyp
    make CXXFLAGS="-DUNICODE -D_UNICODE -D_POSIX_C_SOURCE -g" AR=${MINGW_PREFIX}/bin/ar RC=${MINGW_PREFIX}/bin/windres out/Debug/crash_generation_app out/Debug/obj.target/client/windows/sender/libcrash_report_sender.a
}

package() {
    cd "${srcdir}/${_realname}.build.${CARCH}"
    make CXXFLAGS="-DUNICODE -D_UNICODE -g" AR=${MINGW_PREFIX}/bin/ar RC=${MINGW_PREFIX}/bin/windres DESTDIR="${pkgdir}" install

    # Install headers
    mkdir -p "${pkgdir}${MINGW_PREFIX}/include/breakpad"
    cd "${pkgdir}${MINGW_PREFIX}/include/breakpad"

    mkdir -p "${pkgdir}${MINGW_PREFIX}/include/breakpad/common/"
    cp -v ${srcdir}/${_realname}.build.${CARCH}/src/google_breakpad/common/* common/
    cp -v ${srcdir}/${_realname}.build.${CARCH}/src/common/scoped_ptr.h common/

    mkdir -p "${pkgdir}${MINGW_PREFIX}/include/breakpad/common/windows"
    cp -v ${srcdir}/${_realname}.build.${CARCH}/src/common/windows/string_utils-inl.h common/windows/

    mkdir -p "${pkgdir}${MINGW_PREFIX}/include/breakpad/client/windows/crash_generation"
    cp -v ${srcdir}/${_realname}.build.${CARCH}/src/client/windows/crash_generation/client_info.h client/windows/crash_generation/
    cp -v ${srcdir}/${_realname}.build.${CARCH}/src/client/windows/crash_generation/crash_generation_client.h client/windows/crash_generation/
    cp -v ${srcdir}/${_realname}.build.${CARCH}/src/client/windows/crash_generation/crash_generation_server.h client/windows/crash_generation/
    cp -v ${srcdir}/${_realname}.build.${CARCH}/src/client/windows/crash_generation/minidump_generator.h client/windows/crash_generation/

    mkdir -p "${pkgdir}${MINGW_PREFIX}/include/breakpad/client/windows/common"
    cp -v ${srcdir}/${_realname}.build.${CARCH}/src/client/windows/common/ipc_protocol.h client/windows/common/

    mkdir -p "${pkgdir}${MINGW_PREFIX}/include/breakpad/client/windows/handler"
    cp -v ${srcdir}/${_realname}.build.${CARCH}/src/client/windows/handler/exception_handler.h client/windows/handler/

    mkdir -p "${pkgdir}${MINGW_PREFIX}/include/breakpad/client/windows/sender"
    cp -v ${srcdir}/${_realname}.build.${CARCH}/src/client/windows/sender/crash_report_sender.h client/windows/sender/

    # Headers aren't really designed to be installed, so we need to do some
    # rewriting to make them usefully included using "include <breakpad/somepath/someheader>"
    find ${pkgdir} -name *.h -exec sed -i -e's#client/windows/#breakpad/client/windows/#' {} \;
    find ${pkgdir} -name *.h -exec sed -i -e's#common/scoped_ptr#breakpad/common/scoped_ptr#' {} \;
    find ${pkgdir} -name *.h -exec sed -i -e's#common/windows/#breakpad/common/windows/#' {} \;
    find ${pkgdir} -name *.h -exec sed -i -e's#google_breakpad/common/#breakpad/common/#' {} \;

    # Install a single client library
    cd "${pkgdir}${MINGW_PREFIX}/lib"
    local _windir=$(cygpath -wm ${srcdir})
    ${MINGW_PREFIX}/bin/ar -M <<EOF
CREATE libbreakpad_client.a
ADDLIB ${_windir}/${_realname}.build.${CARCH}/src/out/Debug/obj.target/client/windows/crash_generation/libcrash_generation_client.a
ADDLIB ${_windir}/${_realname}.build.${CARCH}/src/out/Debug/obj.target/client/windows/crash_generation/libcrash_generation_server.a
ADDLIB ${_windir}/${_realname}.build.${CARCH}/src/out/Debug/obj.target/client/windows/handler/libexception_handler.a
ADDLIB ${_windir}/${_realname}.build.${CARCH}/src/out/Debug/obj.target/client/windows/libcommon.a
ADDLIB ${_windir}/${_realname}.build.${CARCH}/src/out/Debug/obj.target/client/windows/sender/libcrash_report_sender.a
SAVE
END
EOF

    # Install the pkgconfig file
    cp -v "${srcdir}/${_realname}.build.${CARCH}/breakpad-client.pc" pkgconfig

    # License
    cd "${pkgdir}${MINGW_PREFIX}/share"
    mkdir -p licenses/${_realname}
    mv doc/${_realname}-0.1 doc/${_realname}
    mv -v doc/${_realname}/LICENSE licenses/${_realname}/LICENSE

    # Install crash_generation_app sample source and instructions
    mkdir -p "${pkgdir}${MINGW_PREFIX}/share/doc/${_realname}/sample"
    cd "${pkgdir}${MINGW_PREFIX}/share/doc/${_realname}/sample"
    cp -v ${srcdir}/README.sample .
    cp -v ${srcdir}/Makefile .
    cp -v ${srcdir}/${_realname}.build.${CARCH}/src/client/windows/tests/crash_generation_app/abstract_class.cc .
    cp -v ${srcdir}/${_realname}.build.${CARCH}/src/client/windows/tests/crash_generation_app/abstract_class.h .
    cp -v ${srcdir}/${_realname}.build.${CARCH}/src/client/windows/tests/crash_generation_app/crash_generation_app.cc .
    cp -v ${srcdir}/${_realname}.build.${CARCH}/src/client/windows/tests/crash_generation_app/crash_generation_app.h .
    cp -v ${srcdir}/${_realname}.build.${CARCH}/src/client/windows/tests/crash_generation_app/crash_generation_app.ico .
    cp -v ${srcdir}/${_realname}.build.${CARCH}/src/client/windows/tests/crash_generation_app/resource.h .
    cp -v ${srcdir}/${_realname}.build.${CARCH}/src/client/windows/tests/crash_generation_app/resource.rc .
    cp -v ${srcdir}/${_realname}.build.${CARCH}/src/client/windows/tests/crash_generation_app/small.ico .

    # Rewrite includes in sample for the rewritten installed headers
    sed -i -e's#client/windows/tests/crash_generation_app/##' ${pkgdir}${MINGW_PREFIX}/share/doc/${_realname}/sample/*
    sed -i -e's#client/windows/#breakpad/client/windows/#' ${pkgdir}${MINGW_PREFIX}/share/doc/${_realname}/sample/*
}

sha256sums=('SKIP'
            'fdd337a70d54d69a794437f65be45fc4508e245996ea488c9f8a7a548081dd68'
            '999f7a2711ee43b77f9bc8636d6712292f98ed94b0ddd167ffa7e2afad57f4e6'
            'd42bb4c116857f5ca74fc91046b85af1d20224dac18e4659ce656ab7c56f5cbe'
            'e69ea849238a3d50f7b3037b49f08439d238c2e8711c66d97dbd914cc4ac55b0'
            '4d0b1c7087261bfb654d850aab13cc010bd855a2da532d7bfdce22ee2ffb498d'
            '28b4ab82261ce7ddc4df8541a507ae99c3cdd7d5a208ec08190f48f229cd4d26'
            '8d2a60d0d07b2675fdacacbfba06777749065602af09a83060489133f3aee75c'
            '1fc58a707f63f6d64f3d04c0f955aa2e8d85fe51d6bc5492dbaa856653934ac3'
            '28c3e5d8215d304f3768854b4f89ef73e638ff8f66bc3f838dd3c8b946b36cf1'
            '1c5682b80fc46ac831da9a0ebcfd55b6c7e575651d9a7b2e2ace461c79969870'
            '1df575e4a47bd62788e6f650f4fe15f792de92cbfe80fbdae9401498f6c9e329'
            '1e9b0a9becaa79b66912eb1d337648a12ecb40a2d247868c44cde33422a8456d'
            '424dcabca421f11efce1725b11a00abce751fe3bedaee57ee8cd65f214d55eb8'
            '5dc92b9897b502dde272680353808df485494bd63c37003857368eb260e272d1'
            '2e8e9f42cc525fdaa25a39411c42ea8b5ced144353f8fc28a6e7560df1af52f0'
            'd5167e24ee51e6f855007c084f4db15ca8ea9fb2e132748195e8a67afc34c5da'
            '21253d6cb12f7060fca0fa3886a74b07cd3de9972cf3f97063720583d94fc1dc'
            'a85df24fbed73e925b79214335006106e37867aa9c34586ccdb426bd356c709a'
            '45dcd600f10af451d58d9f95999a235637c7fba18a46e5878c4d0e8e9d0e4cb3'
            'b1a4025d888bcd1d752b3b6c93d6e6ae353eae050197b1ae2c54f9b90bfb1292'
            '0b1421202edef83db517a310824ee1f7680e0a80229f5a63aa60cc2ef6b93b19')
