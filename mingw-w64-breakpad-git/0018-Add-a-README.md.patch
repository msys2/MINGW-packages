From 9c9121225230d2216f3dcd27cd3920ea70c41938 Mon Sep 17 00:00:00 2001
From: Jon Turney <jon.turney@dronecode.org.uk>
Date: Wed, 5 Feb 2014 13:44:28 +0000
Subject: [PATCH 18/23] Add a README.md

Add a README.md with some notes on building and what is left to do.

v2:
Keep original README as well

Signed-off-by: Jon Turney <jon.turney@dronecode.org.uk>
---
 README.md       | 113 +++++++++++++++++++++++++++++++++++++-------------------
 README.original |  49 ++++++++++++++++++++++++
 2 files changed, 125 insertions(+), 37 deletions(-)
 create mode 100644 README.original

diff --git a/README.md b/README.md
index 3c370fc..71af252 100644
--- a/README.md
+++ b/README.md
@@ -1,49 +1,88 @@
-# Breakpad
+# Breakpad for Cygwin/MinGW
 
-Breakpad is a set of client and server components which implement a
-crash-reporting system.
+google-breakpad with support added for PE/COFF executables with DWARF debugging
+information, as used by Cygwin/MinGW
 
-* [Homepage](https://chromium.googlesource.com/breakpad/breakpad/)
-* [Documentation](https://chromium.googlesource.com/breakpad/breakpad/+/master/docs/)
-* [Bugs](https://bugs.chromium.org/p/google-breakpad/)
-* Discussion/Questions: [google-breakpad-discuss@googlegroups.com](https://groups.google.com/d/forum/google-breakpad-discuss)
-* Developer/Reviews: [google-breakpad-dev@googlegroups.com](https://groups.google.com/d/forum/google-breakpad-dev)
+## Compiling
 
-## Getting started in 32-bit mode (from trunk)
+### Preparation
 
-```sh
-# Configure
-CXXFLAGS=-m32 CFLAGS=-m32 CPPFLAGS=-m32 ./configure
-# Build
-make
-# Test
-make check
-# Install
-make install
-```
+Run autoreconf to generate ./configure
 
-If you need to reconfigure your build be sure to run `make distclean` first.
+````
+autoreconf -fvi
+````
 
-## To request change review:
+### Compiling
 
-1.  Get a copy of depot_tools repo.
-    http://dev.chromium.org/developers/how-tos/install-depot-tools
+See README
 
-2.  Create a new directory for checking out the source code.
-    mkdir breakpad && cd breakpad
+````
+./configure && make
+````
 
-3.  Run the `fetch` tool from depot_tools to download all the source repos.
-    `fetch breakpad`
+will produce `dump\_syms`, `minidump\_dump`, `minidump\_stackwalk`, `libbreakpad.a`
+and for MinGW `libcrash\_generation_client.a`, libcrash\_generation_server.a`, `crash\_generation_app.exe`
 
-4.  Make changes. Build and test your changes.
-    For core code like processor use methods above.
-    For linux/mac/windows, there are test targets in each project file.
+Note that since git-svn ignores svn externals, this repository is missing the
+gyp and gtest dependencies.
 
-5.  Commit your changes to your local repo and upload them to the server.
-    http://dev.chromium.org/developers/contributing-code
-    e.g. `git commit ... && git cl upload ...`
-    You will be prompted for credential and a description.
+## Using
 
-6.  At https://codereview.chromium.org/ you'll find your issue listed; click on
-    it, and select Publish+Mail, and enter in the code reviewer and CC
-    google-breakpad-dev@googlegroups.com
+See http://code.google.com/p/google-breakpad/wiki/GettingStartedWithBreakpad
+
+### Producing and installing symbols
+
+````
+dump_syms crash_generation_app.exe >crash_generation_app.sym
+FILE=`head -1 crash_generation_app.sym | cut -f5 -d' '`
+BUILDID=`head -1 crash_generation_app.sym | cut -f4 -d' '`
+SYMBOLPATH=/symbols/${FILE}/${BUILDID}/
+mkdir -p ${SYMBOLPATH}
+mv crash_generation_app.sym ${SYMBOLPATH}
+````
+
+### Generating a minidump file
+
+A small test application demonstrating out-of-process dumping called
+`crash\_generation\_app.exe` is built.
+
+- Run it once, selecting "Server->Start" from the menu
+- Run it again, selecting "Client->Deref zero"
+- Client should crash, and a .dmp is written to C:\Dumps\
+
+### Processing the minidump to produce a stack trace
+
+````
+minidump_stackwalk blah.dmp /symbols/
+````
+
+## Issues
+
+### Lack of build-id
+
+On Windows, the build-id takes the form of a CodeView record.
+This build-id is captured for all modules in the process by MiniDumpWriteDump(),
+and is used by the breakpad minidump processing tools to find the matching
+symbol file.
+
+See http://debuginfo.com/articles/debuginfomatch.html
+
+I have implemented 'ld --build-id' for PE/COFF executables (See
+https://sourceware.org/ml/binutils/2014-01/msg00296.html), but you must use a
+sufficently recent version of binutils (2.25 or later) and build with
+'-Wl,--build-id' (or a gcc configured with '--enable-linker-build-id', which
+turns that flag on by default) to enable that.
+
+A tool could be written to add a build-id to existing PE/COFF executables, but in
+practice this turns out to be quite tricky...
+
+### Symbols from a PDB or the Microsoft Symbol Server
+
+<a href="http://hg.mozilla.org/users/tmielczarek_mozilla.com/fetch-win32-symbols">
+symsrv_convert</a> and dump_syms for PDB cannot be currently built with MinGW,
+because (i) they require the MS DIA (Debug Interface Access) SDK (only in paid
+editions of Visual Studio 2013), and (ii) the DIA SDK uses ATL.
+
+An alternate PDB parser is available at https://github.com/luser/dump_syms, but
+that also needs some work before it can be built with MinGW.
diff --git a/README.original b/README.original
new file mode 100644
index 0000000..3c370fc
--- /dev/null
+++ b/README.original
@@ -0,0 +1,49 @@
+# Breakpad
+
+Breakpad is a set of client and server components which implement a
+crash-reporting system.
+
+* [Homepage](https://chromium.googlesource.com/breakpad/breakpad/)
+* [Documentation](https://chromium.googlesource.com/breakpad/breakpad/+/master/docs/)
+* [Bugs](https://bugs.chromium.org/p/google-breakpad/)
+* Discussion/Questions: [google-breakpad-discuss@googlegroups.com](https://groups.google.com/d/forum/google-breakpad-discuss)
+* Developer/Reviews: [google-breakpad-dev@googlegroups.com](https://groups.google.com/d/forum/google-breakpad-dev)
+
+## Getting started in 32-bit mode (from trunk)
+
+```sh
+# Configure
+CXXFLAGS=-m32 CFLAGS=-m32 CPPFLAGS=-m32 ./configure
+# Build
+make
+# Test
+make check
+# Install
+make install
+```
+
+If you need to reconfigure your build be sure to run `make distclean` first.
+
+## To request change review:
+
+1.  Get a copy of depot_tools repo.
+    http://dev.chromium.org/developers/how-tos/install-depot-tools
+
+2.  Create a new directory for checking out the source code.
+    mkdir breakpad && cd breakpad
+
+3.  Run the `fetch` tool from depot_tools to download all the source repos.
+    `fetch breakpad`
+
+4.  Make changes. Build and test your changes.
+    For core code like processor use methods above.
+    For linux/mac/windows, there are test targets in each project file.
+
+5.  Commit your changes to your local repo and upload them to the server.
+    http://dev.chromium.org/developers/contributing-code
+    e.g. `git commit ... && git cl upload ...`
+    You will be prompted for credential and a description.
+
+6.  At https://codereview.chromium.org/ you'll find your issue listed; click on
+    it, and select Publish+Mail, and enter in the code reviewer and CC
+    google-breakpad-dev@googlegroups.com
-- 
2.7.0

