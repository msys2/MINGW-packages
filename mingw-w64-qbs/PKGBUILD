# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Maintainer: Ray Donnelly <mingw.android@gmail.com>

# The patches for this package are developed inside the -git package.
# This is for three reasons:
# 1. Upstreaming is easier.
# 2. The Qt devs often forget to release Qbs at the same time as Qt Creator.
# 3. Commit messages are retained (though efforts are made for that via git init)

# TODO :: Patch this for clang support:
#         qbs setup-toolchains --type clang /mingw64/bin/clang.exe clang
#         .. will add a profile to %AppData%/QtProject/qbs.ini that contains:
#         qt-project\qbs\profiles\clang\qbs\toolchain=clang, llvm, gcc
#         .. but is missing:
#         qt-project\qbs\profiles\clang\qbs\targetOS=windows
#         then in share/qbs/modules/cpp/windows-mingw.qbs we need to change
#         condition: qbs.targetOS.contains("windows") && qbs.toolchain.contains("mingw")
#         .. to:
#         condition: qbs.targetOS.contains("windows") \
#               && (qbs.toolchain.contains("mingw") || qbs.toolchain.contains("gcc"))

_realname=qbs
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=1.8.1
pkgrel=1
_pkgfqn="${_realname}-src-${pkgver}"
pkgdesc="Qt Build Suite (mingw-w64)"
url='https://www.qt.io/'
arch=('any')
license=('LGPL')
depends=("${MINGW_PACKAGE_PREFIX}-qt5")
makedepends=("git")
options=('docs' 'staticlibs') # '!strip' 'debug')
source=("http://download.qt-project.org/official_releases/qbs/${pkgver}/${_pkgfqn}.tar.gz"
        #${_realname}-${pkgver}::"git://gitorious.org/qt-labs/qbs.git#tag=v${pkgver}"
        "manifest"
        "0003-add-generator-header-installs.1.4.patch"
        "0004-Use-.dll.a-instead-of-.a-for-mingw-import-librar.1.4.patch"
        "0005-setup-toolchains-Pretend-msys-is-mingw.1.4.patch"
        "0006-Add-some-missing-files.1.4.patch"
        "0008-add-many-files-to-installed-headers.1.4.patch"
        "0090-WIP-Xcode-generator.1.4.patch"
        "0091-Disable-WIP-Xcode-generator.1.4.patch")
sha256sums=('3e94460ecbd1ca43974d62a0ecf691d48866049787c465944866baf52d5b16fc'
            '838098b25a8044176b3139b4003594570c62a8d64f5470fbbd769f3bf44e0855'
            '18f1bfe2434ccf97e1366a96b83bdc41bbd4399185bb701d061710b292a5ad59'
            'a6f3316cd4756ba60404ac17f0a60aa573b99c08501f3f423f4f71052e149ebc'
            '1cd74c4dec1ecc996cdd783c33450633a100e82ab5a58169f65454668879b201'
            '40d53fca4e80ab63baa8649bae43882daf2c91de22412c71dec712ac59f4a39e'
            '52b65299d09185ed711a256f1e9e2257ccea1a265b23de81f54d88305c448164'
            '576d7a6875fc20f4360edea765f8134493ad64a5941afbd92732e841e055b854'
            'ef46ff74aac8aa267a8397d4c02a9481554c45f41748ef8b04ac7ef152d52f22')

prepare() {
  cd ${_pkgfqn}
  [[ -d src/plugins/generator ]] && rm -rf src/plugins/generator
  rm -rf src/lib/corelib/api/generator.*
  rm -rf src/lib/corelib/tools/generat*
  if [ -d .git ]; then
    git reset --hard $(git rev-list --max-parents=0 --abbrev-commit HEAD)
  else
    git init .
    git add -A
    git commit -m "Initial git import"
  fi

  git am "${srcdir}"/0003-add-generator-header-installs.1.4.patch
  git am "${srcdir}"/0004-Use-.dll.a-instead-of-.a-for-mingw-import-librar.1.4.patch
  git am "${srcdir}"/0005-setup-toolchains-Pretend-msys-is-mingw.1.4.patch
  git am "${srcdir}"/0006-Add-some-missing-files.1.4.patch
  git am "${srcdir}"/0008-add-many-files-to-installed-headers.1.4.patch
  #git am "${srcdir}"/0090-WIP-Xcode-generator.1.4.patch
  #git am "${srcdir}"/0091-Disable-WIP-Xcode-generator.1.4.patch
}

build() {
  local _config
  if check_option "debug" "n"; then
    _config="release"
  else
    _config="debug"
  fi
  cd ${srcdir}/${_pkgfqn}
  [[ -d build-${CARCH} ]] && rm -rf build-${CARCH}
  mkdir build-${CARCH}
  cd build-${CARCH}
  
  export MSYS2_ARG_CONV_EXCL="QBS_INSTALL_PREFIX="
  ${MINGW_PREFIX}/bin/qmake.exe \
    QBS_INSTALL_PREFIX="${MINGW_PREFIX}" \
    CONFIG+=${_config} \
    CONFIG+=qbs_enable_project_file_updates \
    ../qbs.pro
  
  # Because xcodeprojectgenerator has a build order problem.
  make
  make docs
}

package() {
  cd ${srcdir}/${_pkgfqn}/build-${CARCH}
  
  export MSYS2_ARG_CONV_EXCL="QBS_INSTALL_PREFIX="
  make INSTALL_ROOT=${pkgdir} install
  make INSTALL_ROOT=${pkgdir} install_docs

  rm -f ${pkgdir}${MINGW_PREFIX}/lib/*.dll

  for ff in qbs-setup-toolchains qbs-setup-qt; do
    cp ${srcdir}/manifest ${pkgdir}${MINGW_PREFIX}/bin/${ff}.exe.manifest
  done
}
