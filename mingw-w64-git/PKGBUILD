# Maintainer: Martell Malone <martellmalone@gmail.com>
# Maintainer: Ray Donnelly <mingw.android@gmail.com>

_realname=git

pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=1.9.4
pkgrel=1
pkgdesc="The fast distributed version control system (mingw-w64)"
arch=('any')
url="http://git-scm.com/"
license=('GPL2')

makedepends=('python2' 'less' 'openssh') # 'rsync')

depends=("${MINGW_PACKAGE_PREFIX}-curl"
         "${MINGW_PACKAGE_PREFIX}-expat>=2.0"
         "${MINGW_PACKAGE_PREFIX}-openssl" 
         "${MINGW_PACKAGE_PREFIX}-tcl"
         "perl-Error"
         "perl>=5.14.0"
         "perl-Authen-SASL"
         "perl-libwww"
         "perl-MIME-tools"
         "perl-Net-SMTP-SSL"
         "perl-TermReadKey"
         "winpty-git")

options=(!libtool strip staticlibs)

_sillyname=$pkgver.msysgit.1

source=("https://github.com/msysgit/git/archive/v$_sillyname.tar.gz"
        "0000-Add-SEARCH_LIBS-to-GIT_CHECK_FUNC.patch"
        "0001-Don-t-redefine-_ReadWriteBarrier-in-malloc.c.h.patch"
        "0002-Undefine-FORCEINLINE-on-MinGW-w64-in-malloc.c.h.patch"
        "0003-Fix-BASIC_LDFLAGS-and-COMPAT_CFLAGS-for-64bit-MinGW-.patch"
        "0004-Also-look-in-winsock2.h-for-sockaddr_storage-and-loo.patch"
        "0005-Don-t-redefine-some-things-MinGW-w64-provides.patch"
        "0006-Include-ntdef.h-on-MinGW-w64-for-REPARSE_DATA_BUFFER.patch"
        "0007-Include-winsock2.h-and-not-netdb.h-on-MinGW-w64.patch"
        "0008-fix-mingw64-compat-wide-char.patch"
        "0009-Change-inline-definition-of-fork-for-mingw64.patch"
        "0010-Use-GIT_CHECK_FUNC-for-socket-and-basename.patch"
        "0011-Use-GIT_CHECK_FUNC-for-regcomp-regex.patch"
        "0012-Use-system-dirent.h-on-MinGW-w64.patch"
        "0013-Make-pthread-wrapper-only-for-mingw.patch"
        "0014-Do-not-compile-dirent-on-mingw64.patch"
        "0015-Alter-fscache-for-mingw64.patch"
        "0016-Use-time.h-versions-of-gmtime-localtime-_r.patch")

md5sums=('0a434ed8b8285419d746ad202216f3b4'
         '2d8e78451abb82e4bd8376648e69eddd'
         '935115ccc81149587d476ac2856e84c8'
         '4abd3f4440937544dde9a82feb1df73e'
         '8c9433879cae5efc4c17c83011e2033f'
         'fdab5aafeaf78185017918783796f8d6'
         'bb72be60632272314be2ef8985e60783'
         '9eb74690d5b718b0f7a8859a6848890b'
         'fceb0b5804e916de2568e5740eaec316'
         '668368e7b1f1993280315d9b390a9c66'
         '465210c5a264d13ea0e5f5bb1fd484ff'
         '78e1b6c1dd2785b3cba58f236480391a'
         'c078ad47d7f3c561223d55315509a7e1'
         '1aacf732e02da4cb6604b4496ba24ff9'
         '15cfd7061e919b6e947c3a6ccbb91917'
         'c594da89c1d029abdc2d85eb61fc6bea'
         '185c2096bf376b056445d57d92dbe3a0'
         'ba18be3d01bacbf170d2e79a8891ed18')

prepare() {

  export PYTHON_PATH=/usr/bin/python2
  cd "$srcdir"/$_realname-$_sillyname

  [ -f compat/win32/dirent-mingw.h ]  && rm -f compat/win32/dirent-mingw.h
  [ -f compat/win32/pthread-mingw.h ] && rm -f compat/win32/pthread-mingw.h

  patch -p1 < "${srcdir}"/0000-Add-SEARCH_LIBS-to-GIT_CHECK_FUNC.patch
  patch -p1 < "${srcdir}"/0001-Don-t-redefine-_ReadWriteBarrier-in-malloc.c.h.patch
  patch -p1 < "${srcdir}"/0002-Undefine-FORCEINLINE-on-MinGW-w64-in-malloc.c.h.patch
  patch -p1 < "${srcdir}"/0003-Fix-BASIC_LDFLAGS-and-COMPAT_CFLAGS-for-64bit-MinGW-.patch
  patch -p1 < "${srcdir}"/0004-Also-look-in-winsock2.h-for-sockaddr_storage-and-loo.patch
  patch -p1 < "${srcdir}"/0005-Don-t-redefine-some-things-MinGW-w64-provides.patch
  patch -p1 < "${srcdir}"/0006-Include-ntdef.h-on-MinGW-w64-for-REPARSE_DATA_BUFFER.patch
  patch -p1 < "${srcdir}"/0007-Include-winsock2.h-and-not-netdb.h-on-MinGW-w64.patch
  patch -p1 < "${srcdir}"/0008-fix-mingw64-compat-wide-char.patch
  patch -p1 < "${srcdir}"/0009-Change-inline-definition-of-fork-for-mingw64.patch
  patch -p1 < "${srcdir}"/0010-Use-GIT_CHECK_FUNC-for-socket-and-basename.patch
  patch -p1 < "${srcdir}"/0011-Use-GIT_CHECK_FUNC-for-regcomp-regex.patch
  patch -p1 < "${srcdir}"/0012-Use-system-dirent.h-on-MinGW-w64.patch
  patch -p1 < "${srcdir}"/0013-Make-pthread-wrapper-only-for-mingw.patch
  patch -p1 < "${srcdir}"/0014-Do-not-compile-dirent-on-mingw64.patch
  patch -p1 < "${srcdir}"/0015-Alter-fscache-for-mingw64.patch
  patch -p1 < "${srcdir}"/0016-Use-time.h-versions-of-gmtime-localtime-_r.patch
  autoreconf -fi
}

build() {

  export PYTHON_PATH=/usr/bin/python2
  cd "$srcdir"

  [ -d build-${CARCH} ] && rm -rf build-${CARCH}
  cp -rf $_realname-$_sillyname build-${CARCH}
  cd build-${CARCH}
  
  ./configure \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --prefix=${MINGW_PREFIX} \
    --libexecdir=${MINGW_PREFIX} \
    --with-editor=vim \
    --with-shell=/usr/bin/sh \
    --with-perl=/usr/bin/perl \
    --htmldir=${MINGW_PREFIX}/share/doc/git/html \
    --mandir=${MINGW_PREFIX}/share/man \
    --with-curl \
    --with-openssl \
    --with-expat \
    --with-iconv

  make INSTALLDIRS=vendor -j1 all V=1
  make -C contrib/subtree prefix=/usr all V=1

}

package() {

  # winpty-git script to invoke console
  mkdir -p "${pkgdir}${MINGW_PREFIX}/bin"
  _exename="git"
  echo "#!/usr/bin/env bash" > "${pkgdir}${MINGW_PREFIX}/bin/${_exename}"
  echo '/usr/bin/winpty "$( dirname ${BASH_SOURCE[0]} )/'${_exename}'.exe" "$@"' >> "${pkgdir}${MINGW_PREFIX}/bin/${_exename}"

  export PYTHON_PATH=/usr/bin/python2
  cd "$srcdir"/build-${CARCH}
  make INSTALLDIRS=vendor DESTDIR="$pkgdir" install
}
