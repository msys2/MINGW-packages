--- a/Dependencies/pagedgeometry/include/ImpostorPage.h
+++ b/Dependencies/pagedgeometry/include/ImpostorPage.h
@@ -375,9 +375,10 @@
       {
          return prefix + Ogre::StringConverter::toString(++GUID);
       }
-
+#ifndef IMPOSTOR_FILE_SAVE
       //This will only be used when IMPOSTOR_FILE_SAVE is set to 0
       std::auto_ptr<ImpostorTextureResourceLoader> loader;
+#endif
    };
 
 
--- a/Dependencies/pagedgeometry/source/ImpostorPage.cpp
+++ b/Dependencies/pagedgeometry/source/ImpostorPage.cpp
@@ -378,8 +378,12 @@
 
 //Do not use this constructor yourself - instead, call getTexture()
 //to get/create an ImpostorTexture for an Entity.
+#ifdef IMPOSTOR_FILE_SAVE
+ImpostorTexture::ImpostorTexture(ImpostorPage *group, Entity *entity)
+#else
 ImpostorTexture::ImpostorTexture(ImpostorPage *group, Entity *entity) :
 loader(0)
+#endif
 {
 	//Store scene manager and entity
    ImpostorTexture::sceneMgr = group->getParentPagedGeometry()->getSceneManager();
@@ -497,8 +501,13 @@
    Ogre::uint textureSize = ImpostorPage::getImpostorResolution();
 	if (!renderTexture)
    {
+#ifdef IMPOSTOR_FILE_SAVE
+	renderTexture = TextureManager::getSingleton().createManual(getUniqueID("ImpostorTexture"), "Impostors",
+				TEX_TYPE_2D, textureSize * IMPOSTOR_YAW_ANGLES, textureSize * IMPOSTOR_PITCH_ANGLES, 0, PF_BYTE_RGBA, TU_RENDERTARGET);
+#else
 	renderTexture = TextureManager::getSingleton().createManual(getUniqueID("ImpostorTexture"), "Impostors",
 				TEX_TYPE_2D, textureSize * IMPOSTOR_YAW_ANGLES, textureSize * IMPOSTOR_PITCH_ANGLES, 0, PF_BYTE_RGBA, TU_RENDERTARGET, loader.get());
+#endif
 	}
 	renderTexture->setNumMipmaps(MIP_UNLIMITED);
 	
--- a/Plugins/OgAngelScript/AngelScriptInterpreter.cpp
+++ b/Plugins/OgAngelScript/AngelScriptInterpreter.cpp
@@ -476,7 +476,7 @@
         ctx = newdef.context;
     }
 
-    if( def->funcID < 0 )
+    if( def->funcID == NULL )
     {
         // The function couldn't be found. Instruct the script writer
         // to include the expected function in the script.
