diff --git a/src/cpu/aarch64/xbyak_aarch64/xbyak_aarch64/xbyak_aarch64.h b/src/cpu/aarch64/xbyak_aarch64/xbyak_aarch64/xbyak_aarch64.h
index b4f545bcf1d..ab1e8a538af 100644
--- a/src/cpu/aarch64/xbyak_aarch64/xbyak_aarch64/xbyak_aarch64.h
+++ b/src/cpu/aarch64/xbyak_aarch64/xbyak_aarch64/xbyak_aarch64.h
@@ -37,7 +37,7 @@
 #include <unordered_set>
 #include <vector>
 
-#if defined(__GNUC__) || defined(__APPLE__)
+#if (defined(__GNUC__) || defined(__APPLE__)) && !defined(_WIN32)
 #ifndef XBYAK_USE_MMAP_ALLOCATOR
 #define XBYAK_USE_MMAP_ALLOCATOR
 #endif
@@ -46,7 +46,7 @@
 #include <cmath>
 #include <functional>
 
-#if defined(__GNUC__)
+#if defined(__GNUC__) && !defined(_WIN32)
 #include <cassert>
 #include <stdlib.h>
 #include <sys/mman.h>
diff --git a/src/cpu/aarch64/xbyak_aarch64/xbyak_aarch64/xbyak_aarch64_code_array.h b/src/cpu/aarch64/xbyak_aarch64/xbyak_aarch64/xbyak_aarch64_code_array.h
index 8acaf8029c6..afb78509d1c 100644
--- a/src/cpu/aarch64/xbyak_aarch64/xbyak_aarch64/xbyak_aarch64_code_array.h
+++ b/src/cpu/aarch64/xbyak_aarch64/xbyak_aarch64/xbyak_aarch64_code_array.h
@@ -20,7 +20,7 @@
 static const size_t CSIZE = sizeof(uint32_t);
 
 inline void *AlignedMalloc(size_t size, size_t alignment) {
-#ifdef _MSC_VER
+#if defined(_WIN32)
   return _aligned_malloc(size, alignment);
 #else
   void *p;
@@ -30,7 +30,7 @@ inline void *AlignedMalloc(size_t size, size_t alignment) {
 }
 
 inline void AlignedFree(void *p) {
-#ifdef _MSC_VER
+#if defined(_WIN32)
   _aligned_free(p);
 #else
   free(p);
@@ -277,7 +277,7 @@ class CodeArray {
     default:
       return false;
     }
-#if defined(__GNUC__) || defined(__APPLE__)
+#if (defined(__GNUC__) || defined(__APPLE__)) && !defined(_WIN32)
     size_t pageSize = inner::getPageSize();
     size_t iaddr = reinterpret_cast<size_t>(addr);
     size_t roundAddr = iaddr & ~(pageSize - static_cast<size_t>(1));
diff --git a/src/cpu/aarch64/xbyak_aarch64/xbyak_aarch64/xbyak_aarch64_inner.h b/src/cpu/aarch64/xbyak_aarch64/xbyak_aarch64/xbyak_aarch64_inner.h
index d79d6d600db..5ecc1f3ecb4 100644
--- a/src/cpu/aarch64/xbyak_aarch64/xbyak_aarch64/xbyak_aarch64_inner.h
+++ b/src/cpu/aarch64/xbyak_aarch64/xbyak_aarch64/xbyak_aarch64_inner.h
@@ -20,7 +20,7 @@ enum { DEFAULT_MAX_CODE_SIZE = 4096 };
 namespace inner {
 
 inline size_t getPageSize() {
-#ifdef __GNUC__
+#if defined(__GNUC__) && !defined(_WIN32)
   static const size_t pageSize = sysconf(_SC_PAGESIZE);
 #else
   static const size_t pageSize = 4096;
diff --git a/tests/benchdnn/common.cpp b/tests/benchdnn/common.cpp
index 9d53ee30438..33641e7d2cb 100644
--- a/tests/benchdnn/common.cpp
+++ b/tests/benchdnn/common.cpp
@@ -328,7 +328,7 @@ bool skip_start(res_t *res, int idx) {
     return false;
 }
 
-#if defined(_WIN32) && !defined(__GNUC__)
+#if defined(_WIN32)
 #include <windows.h>
 #define PATH_MAX MAX_PATH
 static char *dirname(char *path) {
diff --git a/tests/benchdnn/dnnl_common.cpp b/tests/benchdnn/dnnl_common.cpp
index 8bd151d978d..deb9d58c07d 100644
--- a/tests/benchdnn/dnnl_common.cpp
+++ b/tests/benchdnn/dnnl_common.cpp
@@ -839,7 +839,7 @@ bool is_f64_supported(const dnnl_engine_t &engine) {
     return false;
 }
 
-#if defined(_WIN32) && !defined(__GNUC__)
+#if defined(_WIN32)
 #include "windows.h"
 
 static size_t get_cpu_ram_size() {
