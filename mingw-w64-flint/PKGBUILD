# Maintainer: Ben Orchard <thefirstmuffinman@gmail.com>

_realname=flint
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=3.1.3
pkgrel=2
pkgdesc="Fast Library for Number Theory (mingw-w64)"
arch=('any')
mingw_arch=('mingw64' 'ucrt64' 'clang64' 'clangarm64')
url="https://www.flintlib.org/"
msys2_repository_url="https://github.com/flintlib/flint"
msys2_references=(
  'archlinux: flint'
)
license=('spdx:LGPL-3.0-or-later')
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-mpfr"
         "${MINGW_PACKAGE_PREFIX}-gmp"
         "${MINGW_PACKAGE_PREFIX}-openblas"
         "${MINGW_PACKAGE_PREFIX}-libwinpthread-git")
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-python")
source=(https://github.com/flintlib/flint/releases/download/v${pkgver}/${_realname}-${pkgver}.tar.xz
        001-dont-define-strcpy.patch
        # https://github.com/flintlib/flint/commit/0e00381c
        002-Generate-and-Install-CMake-configuration-files.patch
        # https://github.com/flintlib/flint/commit/bce3501c
        003-Add-CMake-options-to-enable-march=arch-and-AVX-instructions.patch
        # https://github.com/flintlib/flint/commit/4fedda50
        004-Add-Findpackage.cmake-modules.patch)
sha256sums=('0a95fa9252de63aa913c4281b70a709983ead4e1e8bf0874c3ce2e0143ab12ea'
            'f1b25323e067f642c1e0ebbd4152b5af683782fa1f08e5e2b2faa2736dbd2a84'
            '87953079487eae7ba260a1416947c52df8694330fd0e11fd1a6abb24cb7c1a3f'
            '31422bd89012dcc8be8d9aa772e76b670007b5bc3fe03eea5d52727c324a5f81'
            '2263a134a812c1b11ce949a67e1a8279bc27d3d1fe50546729423b967a73f877')

apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying ${_patch}"
    patch -Nbp1 -i "${srcdir}/${_patch}"
  done
}

prepare() {
  cd ${_realname}-${pkgver}
  apply_patch_with_msg \
    001-dont-define-strcpy.patch \
    002-Generate-and-Install-CMake-configuration-files.patch \
    003-Add-CMake-options-to-enable-march=arch-and-AVX-instructions.patch \
    004-Add-Findpackage.cmake-modules.patch
}

build() {
  mkdir -p "${srcdir}/build-${MSYSTEM}" && cd "${srcdir}/build-${MSYSTEM}"

  declare -a _extra_config
  if check_option "debug" "n"; then
    _extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    _extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  if [[ ${MINGW_PACKAGE_PREFIX} != *-clang-* ]]; then
    _extra_config+=("-DCMAKE_INTERPROCEDURAL_OPTIMIZATION=OFF")
  fi

  if [[ ${CARCH} == x86_64 ]]; then
    _extra_config+=("-DENABLE_AVX2=ON")
  else
    _extra_config+=("-DENABLE_AVX2=OFF")
  fi

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake.exe \
    -G Ninja \
    -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}" \
    -DENABLE_ARCH=NO \
    "${_extra_config[@]}" \
    -DPython_EXECUTABLE=${MINGW_PREFIX}/bin/python \
    -DBUILD_TESTING=OFF \
    "../${_realname}-${pkgver}"

  ${MINGW_PREFIX}/bin/cmake.exe --build .
}

check() {
  cd "${srcdir}/build-${MSYSTEM}"
  ${MINGW_PREFIX}/bin/cmake ../${_realname}-${pkgver} -DBUILD_TESTING=ON
  ${MINGW_PREFIX}/bin/cmake --build .
  ${MINGW_PREFIX}/bin/ctest.exe . --output-on-failure || echo "Tests failed"
}

package() {
  cd "${srcdir}/build-${MSYSTEM}"
  DESTDIR="${pkgdir}" ${MINGW_PREFIX}/bin/cmake.exe --install .
  install -Dm0644 -t "${pkgdir}"${MINGW_PREFIX}/share/licenses/${_realname}/ "${srcdir}"/${_realname}-${pkgver}/COPYING*
}
