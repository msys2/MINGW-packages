# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>

_realname=python3
_mingw_suff=mingw-w64-${CARCH}
pkgname="${_mingw_suff}-${_realname}"
_pybasever=3.4
pkgver=${_pybasever}.0
pkgrel=3
pkgdesc="A high-level scripting language (mingw-w64)"
arch=('any')
license=('PSF')
url="http://www.python.org/"
depends=("${_mingw_suff}-gcc-libs" 
    "${_mingw_suff}-expat"
    "${_mingw_suff}-bzip2"
    "${_mingw_suff}-gdbm"
    "${_mingw_suff}-readline"
    "${_mingw_suff}-openssl"
    "${_mingw_suff}-libffi"
    "${_mingw_suff}-zlib"
    "${_mingw_suff}-xz"
    "${_mingw_suff}-tcl"
    "${_mingw_suff}-tk")
makedepends=("${_mingw_suff}-gcc" "${_mingw_suff}-pkg-config" "${_mingw_suff}-ncurses")
options=('!makeflags' 'staticlibs' 'strip')
source=("http://www.python.org/ftp/python/${pkgver%rc?}/Python-${pkgver}.tar.xz"
    0100-MINGW-BASE-use-NT-thread-model.patch
    0110-MINGW-translate-gcc-internal-defines-to-python-platf.patch
    0130-MINGW-configure-MACHDEP-and-platform-for-build.patch
    0140-MINGW-preset-configure-defaults.patch
    0150-MINGW-configure-largefile-support-for-windows-builds.patch
    0160-MINGW-add-wincrypt.h-in-Python-random.c.patch
    0170-MINGW-add-srcdir-PC-to-CPPFLAGS.patch
    0180-MINGW-init-system-calls.patch
    0190-MINGW-detect-REPARSE_DATA_BUFFER.patch
    0200-MINGW-build-in-windows-modules-winreg.patch
    0210-MINGW-determine-if-pwdmodule-should-be-used.patch
    0220-MINGW-default-sys.path-calculations-for-windows-plat.patch
    0230-MINGW-AC_LIBOBJ-replacement-of-fileblocks.patch
    0240-MINGW-use-main-to-start-execution.patch
    0250-MINGW-compiler-customize-mingw-cygwin-compilers.patch
    0260-MINGW-compiler-enable-new-dtags.patch
    0270-CYGWIN-issue13756-Python-make-fail-on-cygwin.patch
    0280-issue17219-add-current-dir-in-library-path-if-buildi.patch
    0290-issue6672-v2-Add-Mingw-recognition-to-pyport.h-to-al.patch
    0300-MINGW-configure-for-shared-build.patch
    0310-MINGW-dynamic-loading-support.patch
    0320-MINGW-implement-exec-prefix.patch
    0330-MINGW-ignore-main-program-for-frozen-scripts.patch
    0340-MINGW-setup-exclude-termios-module.patch
    0350-MINGW-setup-_multiprocessing-module.patch
    0360-MINGW-setup-select-module.patch
    0370-MINGW-setup-_ctypes-module-with-system-libffi.patch
    0380-MINGW-defect-winsock2-and-setup-_socket-module.patch
    0390-MINGW-exclude-unix-only-modules.patch
    0400-MINGW-setup-msvcrt-and-_winapi-modules.patch
    0410-MINGW-build-extensions-with-GCC.patch
    0420-MINGW-use-Mingw32CCompiler-as-default-compiler-for-m.patch
    0430-MINGW-find-import-library.patch
    0440-MINGW-setup-_ssl-module.patch
    0450-MINGW-export-_PyNode_SizeOf-as-PyAPI-for-parser-modu.patch
    0460-MINGW-generalization-of-posix-build-in-sysconfig.py.patch
    0462-MINGW-support-stdcall-without-underscore.patch
    0464-use-replace-instead-rename-to-avoid-failure-on-windo.patch
    0470-MINGW-avoid-circular-dependency-from-time-module-dur.patch
    0480-MINGW-generalization-of-posix-build-in-distutils-sys.patch
    0490-MINGW-customize-site.patch
    0500-add-python-config-sh.patch
    0510-cross-darwin-feature.patch
    0520-py3k-mingw-ntthreads-vs-pthreads.patch
    0530-mingw-system-libffi.patch
    0540-mingw-semicolon-DELIM.patch
    0550-mingw-regen-use-stddef_h.patch
    0560-mingw-use-posix-getpath.patch
    0565-mingw-add-ModuleFileName-dir-to-PATH.patch
    0570-mingw-add-BUILDIN_WIN32_MODULEs-time-msvcrt.patch
    0580-mingw32-test-REPARSE_DATA_BUFFER.patch
    0590-mingw-INSTALL_SHARED-LDLIBRARY-LIBPL.patch
    0600-msys-mingw-prefer-unix-sep-if-MSYSTEM.patch
    0610-msys-cygwin-semi-native-build-sysconfig.patch
    0620-mingw-sysconfig-like-posix.patch
    0630-mingw-_winapi_as_builtin_for_Popen_in_cygwinccompiler.patch
    0640-mingw-x86_64-size_t-format-specifier-pid_t.patch
    0650-cross-dont-add-multiarch-paths-if-cross-compiling.patch
    0660-mingw-use-backslashes-in-compileall-py.patch
    0670-msys-convert_path-fix-and-root-hack.patch
    0690-allow-static-tcltk.patch
    0700-CROSS-avoid-ncursesw-include-path-hack.patch
    0710-CROSS-properly-detect-WINDOW-_flags-for-different-nc.patch
    0720-mingw-pdcurses_ISPAD.patch
    0730-mingw-fix-ncurses-module.patch
    0740-grammar-fixes.patch
    0750-builddir-fixes.patch
    0760-msys-monkeypatch-os-system-via-sh-exe.patch
    0770-msys-replace-slashes-used-in-io-redirection.patch
    0790-mingw-add-_exec_prefix-for-tcltk-dlls.patch
    0800-mingw-install-layout-as-posix.patch
    0810-remove_path_max.default.patch
    0820-dont-link-with-gettext.patch
    0830-ctypes-python-dll.patch
    0840-gdbm-module-includes.patch
    0850-use-gnu_printf-in-format.patch
    0860-fix-_Py_CheckPython3-prototype.patch
    1000-fix-building-posixmodule.patch)

prepare() {
  cd "${srcdir}/Python-${pkgver}"

  # these are created by patches
  rm -f Misc/config_mingw Misc/cross_mingw32 Python/fileblocks.c

  plain "Apply Roumen Petrov's core patches (15)"
  patch -Np1 -i "${srcdir}"/0100-MINGW-BASE-use-NT-thread-model.patch
  patch -Np1 -i "${srcdir}"/0110-MINGW-translate-gcc-internal-defines-to-python-platf.patch
  patch -Np1 -i "${srcdir}"/0130-MINGW-configure-MACHDEP-and-platform-for-build.patch
  patch -Np1 -i "${srcdir}"/0140-MINGW-preset-configure-defaults.patch
  patch -Np1 -i "${srcdir}"/0150-MINGW-configure-largefile-support-for-windows-builds.patch
  patch -Np1 -i "${srcdir}"/0160-MINGW-add-wincrypt.h-in-Python-random.c.patch
  patch -Np1 -i "${srcdir}"/0170-MINGW-add-srcdir-PC-to-CPPFLAGS.patch
  patch -Np1 -i "${srcdir}"/0180-MINGW-init-system-calls.patch
  patch -Np1 -i "${srcdir}"/0190-MINGW-detect-REPARSE_DATA_BUFFER.patch
  patch -Np1 -i "${srcdir}"/0200-MINGW-build-in-windows-modules-winreg.patch
  patch -Np1 -i "${srcdir}"/0210-MINGW-determine-if-pwdmodule-should-be-used.patch
  patch -Np1 -i "${srcdir}"/0220-MINGW-default-sys.path-calculations-for-windows-plat.patch
  patch -Np1 -i "${srcdir}"/0230-MINGW-AC_LIBOBJ-replacement-of-fileblocks.patch
  patch -Np1 -i "${srcdir}"/0240-MINGW-use-main-to-start-execution.patch

  plain "Apply Roumen Petrov's compiler patch (2)"
  patch -Np1 -i "${srcdir}"/0250-MINGW-compiler-customize-mingw-cygwin-compilers.patch
  patch -Np1 -i "${srcdir}"/0260-MINGW-compiler-enable-new-dtags.patch

  plain "Apply Roumen Petrov's extensions patches (23)"
  patch -Np1 -i "${srcdir}"/0270-CYGWIN-issue13756-Python-make-fail-on-cygwin.patch
  patch -Np1 -i "${srcdir}"/0280-issue17219-add-current-dir-in-library-path-if-buildi.patch
  patch -Np1 -i "${srcdir}"/0290-issue6672-v2-Add-Mingw-recognition-to-pyport.h-to-al.patch
  patch -Np1 -i "${srcdir}"/0300-MINGW-configure-for-shared-build.patch
  patch -Np1 -i "${srcdir}"/0310-MINGW-dynamic-loading-support.patch
  patch -Np1 -i "${srcdir}"/0320-MINGW-implement-exec-prefix.patch
  patch -Np1 -i "${srcdir}"/0330-MINGW-ignore-main-program-for-frozen-scripts.patch
  patch -Np1 -i "${srcdir}"/0340-MINGW-setup-exclude-termios-module.patch
  patch -Np1 -i "${srcdir}"/0350-MINGW-setup-_multiprocessing-module.patch
  patch -Np1 -i "${srcdir}"/0360-MINGW-setup-select-module.patch
  patch -Np1 -i "${srcdir}"/0370-MINGW-setup-_ctypes-module-with-system-libffi.patch
  patch -Np1 -i "${srcdir}"/0380-MINGW-defect-winsock2-and-setup-_socket-module.patch
  patch -Np1 -i "${srcdir}"/0390-MINGW-exclude-unix-only-modules.patch
  patch -Np1 -i "${srcdir}"/0400-MINGW-setup-msvcrt-and-_winapi-modules.patch
  patch -Np1 -i "${srcdir}"/0410-MINGW-build-extensions-with-GCC.patch
  patch -Np1 -i "${srcdir}"/0420-MINGW-use-Mingw32CCompiler-as-default-compiler-for-m.patch
  patch -Np1 -i "${srcdir}"/0430-MINGW-find-import-library.patch
  patch -Np1 -i "${srcdir}"/0440-MINGW-setup-_ssl-module.patch
  patch -Np1 -i "${srcdir}"/0450-MINGW-export-_PyNode_SizeOf-as-PyAPI-for-parser-modu.patch
  patch -Np1 -i "${srcdir}"/0460-MINGW-generalization-of-posix-build-in-sysconfig.py.patch
  patch -Np1 -i "${srcdir}"/0462-MINGW-support-stdcall-without-underscore.patch
  patch -Np1 -i "${srcdir}"/0464-use-replace-instead-rename-to-avoid-failure-on-windo.patch
  patch -Np1 -i "${srcdir}"/0470-MINGW-avoid-circular-dependency-from-time-module-dur.patch
  patch -Np1 -i "${srcdir}"/0480-MINGW-generalization-of-posix-build-in-distutils-sys.patch
  patch -Np1 -i "${srcdir}"/0490-MINGW-customize-site.patch

  plain "Apply Ray Donnelly's general/cross patches (29)"
  patch -Np1 -i "${srcdir}"/0500-add-python-config-sh.patch
  patch -Np1 -i "${srcdir}"/0510-cross-darwin-feature.patch
  patch -Np1 -i "${srcdir}"/0520-py3k-mingw-ntthreads-vs-pthreads.patch
  patch -Np1 -i "${srcdir}"/0530-mingw-system-libffi.patch
  patch -Np1 -i "${srcdir}"/0540-mingw-semicolon-DELIM.patch
  patch -Np1 -i "${srcdir}"/0550-mingw-regen-use-stddef_h.patch
  patch -Np1 -i "${srcdir}"/0560-mingw-use-posix-getpath.patch
  patch -Np1 -i "${srcdir}"/0565-mingw-add-ModuleFileName-dir-to-PATH.patch
  patch -Np1 -i "${srcdir}"/0570-mingw-add-BUILDIN_WIN32_MODULEs-time-msvcrt.patch
  patch -Np1 -i "${srcdir}"/0580-mingw32-test-REPARSE_DATA_BUFFER.patch
  patch -Np1 -i "${srcdir}"/0590-mingw-INSTALL_SHARED-LDLIBRARY-LIBPL.patch
  patch -Np1 -i "${srcdir}"/0600-msys-mingw-prefer-unix-sep-if-MSYSTEM.patch
  patch -Np1 -i "${srcdir}"/0610-msys-cygwin-semi-native-build-sysconfig.patch
  patch -Np1 -i "${srcdir}"/0620-mingw-sysconfig-like-posix.patch
  patch -Np1 -i "${srcdir}"/0630-mingw-_winapi_as_builtin_for_Popen_in_cygwinccompiler.patch
  patch -Np1 -i "${srcdir}"/0640-mingw-x86_64-size_t-format-specifier-pid_t.patch
  patch -Np1 -i "${srcdir}"/0650-cross-dont-add-multiarch-paths-if-cross-compiling.patch
  patch -Np1 -i "${srcdir}"/0660-mingw-use-backslashes-in-compileall-py.patch
  patch -Np1 -i "${srcdir}"/0670-msys-convert_path-fix-and-root-hack.patch
  patch -Np1 -i "${srcdir}"/0690-allow-static-tcltk.patch
  patch -Np1 -i "${srcdir}"/0700-CROSS-avoid-ncursesw-include-path-hack.patch
  patch -Np1 -i "${srcdir}"/0710-CROSS-properly-detect-WINDOW-_flags-for-different-nc.patch
  patch -Np1 -i "${srcdir}"/0720-mingw-pdcurses_ISPAD.patch
  patch -Np1 -i "${srcdir}"/0730-mingw-fix-ncurses-module.patch
  patch -Np1 -i "${srcdir}"/0740-grammar-fixes.patch
  patch -Np1 -i "${srcdir}"/0750-builddir-fixes.patch
  patch -Np1 -i "${srcdir}"/0760-msys-monkeypatch-os-system-via-sh-exe.patch
  patch -Np1 -i "${srcdir}"/0770-msys-replace-slashes-used-in-io-redirection.patch
  patch -Np1 -i "${srcdir}"/0790-mingw-add-_exec_prefix-for-tcltk-dlls.patch
  patch -Np1 -i "${srcdir}"/0800-mingw-install-layout-as-posix.patch
  patch -Np1 -i "${srcdir}"/0810-remove_path_max.default.patch
  patch -Np1 -i "${srcdir}"/0820-dont-link-with-gettext.patch
  patch -Np1 -i "${srcdir}"/0830-ctypes-python-dll.patch
  patch -Np1 -i "${srcdir}"/0840-gdbm-module-includes.patch
  patch -Np1 -i "${srcdir}"/0850-use-gnu_printf-in-format.patch
  patch -Np1 -i "${srcdir}"/0860-fix-_Py_CheckPython3-prototype.patch

  patch -Np1 -i "${srcdir}"/1000-fix-building-posixmodule.patch

  autoreconf -vfi

  # Temporary workaround for FS#22322
  # See http://bugs.python.org/issue10835 for upstream report
  #sed -i "/progname =/s/python/python${_pybasever}/" Python/pythonrun.c

  touch Include/graminit.h
  touch Python/graminit.c
  touch Parser/Python.asdl
  touch Parser/asdl.py
  touch Parser/asdl_c.py
  touch Include/Python-ast.h
  touch Python/Python-ast.c
  echo \"\" > Parser/pgen.stamp
    
  # Ensure that we are using the system copy of various libraries (expat, zlib and libffi),
  # rather than copies shipped in the tarball
  rm -r Modules/expat
  rm -r Modules/zlib
  rm -r Modules/_ctypes/{darwin,libffi}*
}

check() {
  cd "${srcdir}/build-${CARCH}"
  make test
}

build() {
  pushd ${MINGW_PREFIX} > /dev/null
  export PREFIX_WIN=`pwd -W`
  popd > /dev/null

  CFLAGS+=" -fwrapv -D__USE_MINGW_ANSI_STDIO=1 -I$PREFIX_WIN/${MINGW_CHOST}/include "
  CXXFLAGS+=" -fwrapv -D__USE_MINGW_ANSI_STDIO=1 -I$PREFIX_WIN/include -I$PREFIX_WIN/include/ncursesw -I$MINGWHOME_WIN/$HOST/include "
  CPPFLAGS+=" -I$PREFIX_WIN/include -I$PREFIX_WIN/include/ncursesw -I$PREFIX_WIN/${MINGW_CHOST}/include "
  LDFLAGS+=" -L$PREFIX_WIN/${MINGW_CHOST}/lib -L$PREFIX_WIN/lib "
  if check_option "strip" "y"; then
    LDFLAGS+=" -s "
  fi
  if check_option "debug" "n"; then
    CFLAGS+=" -DNDEBUG "
    CXXFLAGS+=" -DNDEBUG "
  else
    plain " -DDEBUG -DPy_DEBUG -D_DEBUG does not work unfortunately .."
    #    CFLAGS+=" -DDEBUG -DPy_DEBUG -D_DEBUG "
    #    CXXFLAGS+=" -DDEBUG -DPy_DEBUG -D_DEBUG "
    CFLAGS+=" -O0 -ggdb"
    CXXFLAGS+=" -O0 -ggdb"
  fi

  LIBFFI_INC=`${MINGW_PREFIX}/bin/pkg-config libffi --cflags-only-I | sed "s|\-I||g"`
  pushd ${LIBFFI_INC} > /dev/null
  export LIBFFI_INCLUDEDIR=`pwd -W`
  popd > /dev/null

  # Workaround for conftest error on 64-bit builds
  export ac_cv_working_tzset=no

  mkdir -p "${srcdir}/build-${CARCH}" && cd "${srcdir}/build-${CARCH}"
  MSYSTEM=MINGW ../Python-${pkgver}/configure \
    --prefix=${MINGW_PREFIX} \
    --host=${MINGW_CHOST} \
    --build=${MINGW_CHOST} \
    --enable-shared \
    --with-threads \
    --with-system-expat \
    --with-system-ffi \
    --without-ensurepip
    OPT=""
    #--with-dbmliborder='gdbm:ndbm'
  make
}

package() {
  cd "${srcdir}/build-${CARCH}"
  MSYSTEM=MINGW \
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  make install DESTDIR="$pkgdir"

  rm "${pkgdir}${MINGW_PREFIX}"/bin/2to3
  cp -f "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${_pybasever}m/libpython${_pybasever}m.dll.a "${pkgdir}${MINGW_PREFIX}"/lib/libpython${_pybasever}m.dll.a
  cp -f "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${_pybasever}m/libpython${_pybasever}m.dll.a "${pkgdir}${MINGW_PREFIX}"/lib/libpython${_pybasever}.dll.a

  # some useful "stuff"
  install -dm755 "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/{i18n,scripts}
  install -m755 "${srcdir}/Python-${pkgver}"/Tools/i18n/{msgfmt,pygettext}.py "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/i18n/
  install -m755 "${srcdir}/Python-${pkgver}"/Tools/scripts/{README,*py} "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/scripts/

  # clean up #!s
  find "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/ -name '*.py' | \
    xargs sed -i "s|#[ ]*![ ]*/usr/bin/env python$|#!/usr/bin/env python3|"

  # clean-up reference to build directory
  sed -i "s#${srcdir}/Python-${pkgver}:##" "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${_pybasever}m/Makefile

  for fscripts in 2to3-${_pybasever} idle3 idle${_pybasever} pydoc3 pydoc${_pybasever} pyvenv pyvenv-${_pybasever}; do
    sed -e "s|${MINGW_PREFIX}/bin/python${_pybasever}.exe|/usr/bin/env python${_pybasever}.exe|g" -i "${pkgdir}${MINGW_PREFIX}"/bin/$fscripts
  done
  
  sed -i "s|#!${pkgdir}${MINGW_PREFIX}/bin/python${_pybasever}m.exe|#!/usr/bin/env python${_pybasever}.exe|" "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${_pybasever}m/python-config.py

  # fix permissons
  find ${pkgdir}${MINGW_PREFIX} -type f \( -name "*.dll" -o -name "*.exe" \) | xargs chmod 0755

  # Fix up two instances of MSYS2 paths in python-config.sh in-case the final consumer of the results are native executables.
  sed -e "s|${MINGW_PREFIX}|${PREFIX_WIN}|" \
    -i "${pkgdir}${MINGW_PREFIX}"/bin/python${_pybasever}m-config \
    -i "${pkgdir}${MINGW_PREFIX}"/bin/python${_pybasever}-config \
    -i "${pkgdir}${MINGW_PREFIX}"/bin/python3-config

  # replace paths in sysconfig
  sed -i "s|${pkgdir}${MINGW_PREFIX}|${MINGW_PREFIX}|g" \
    "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/_sysconfigdata.py \
    "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/smtpd.py

  # Create python executable with windows subsystem
  cp -f "${pkgdir}${MINGW_PREFIX}"/bin/python3.exe "${pkgdir}${MINGW_PREFIX}"/bin/python3w.exe
  ${MINGW_PREFIX}/bin/objcopy --subsystem windows "${pkgdir}${MINGW_PREFIX}"/bin/python3w.exe
}

md5sums=('77c22725e14af3d71022cbfdebff4903'
         'afeceada82f07c095583971aa182f4dc'
         '1f466d4a5e808e03aee20c4ea503a2c5'
         '0c2855a2553bda385e3af56d10a4bdbc'
         '45a2ae85946e89dcff28294421bd835e'
         'adc5da9a4c6230430bff0f159be0b1df'
         '19afe2a365972deea83e161d5cabf82f'
         'd67bf5ee1cee672e37e3a748abd25d63'
         '78cdeb0be781d970a44f0fa4d4298b57'
         '57e9f5cc675f6ffe9143265354e10f09'
         '9e1db87e15a3915103586ced026b1e26'
         'dbfe8cabd59acc7815d1090af42cddeb'
         '81b78cbaf281143f4c449cd954423708'
         'feda299d29f4c3a225fa1a64a1beb858'
         '7f4be85dcae12e886a3fbd0d6c215272'
         'e5548c111b0526f4ac812a600989af7e'
         '920ca216e6763a9bf3ca51362feeaa88'
         'ea20f42ceff205a0c595cc901ea8379f'
         '60756e30befe34ffa3e3a026f74b7ae1'
         '4cf83c8cc88fe444d5cd529210f76409'
         'd7ea6d4b4b38810f2f46fb667d766cec'
         'e7140d0c0290e18501959b3840af555c'
         '81fae7702784acae0984e89da2fd440a'
         '07207a460d33b4e975498008f0de03e7'
         '43947f7e65bc8b23a0b42efe55378e7e'
         '47001f122503529036277d41f6bd6bc2'
         '04f8be0413ff285e69410b6f69f5475e'
         '9c0c5bab9b7187b2a9b735115f0c6b61'
         '942880b8e3c3cd9f08aa2ce4f624572f'
         'a4d4a5d20b84944d945e2cb346f5b9a9'
         '099ea6ffc251760c424a6c74ca95b7bc'
         '7fbadccfad35dc5b6004b1bfe3f7e5c9'
         '983e02e36fcbc4d0a9f05399f63d8231'
         'c415b68e55dafb027989480790867423'
         '6de6a815d347f154b68902093ee7693e'
         'f423a04cb9f97c3f577f462e1e261764'
         'ad20fd6af60409b067afdb29c635535d'
         '4fe352d386c618a66a73ca5f080210e9'
         '2811c61e019006e9af041606a4f0df8c'
         '42599deb4b9d17dee0e7dd69825f1ee8'
         'a62230c7e33437293f66756470af0f84'
         '96a83a59e3303fcdd2c31e8e0145cb13'
         '9f1642aaea17a3db85601a516d562a55'
         '4c85b279c7a8533afea5ee3dc50b8b58'
         '00ba9836a283b90bc3d7d5c28de35285'
         '91f55b90a82f36adf35b1ce804bf3e61'
         '8dbb84429f375da30c082d73892f259c'
         'bcfe17ce171f41f4955e68a03e768dba'
         '7d4cea46a25f54bd9aca7a2637ba4c81'
         '56b381735a4d813146fded2a4fd99ddc'
         '66d8a93745e21232f1e66d7f8c1c4433'
         'eb41fc90da312fac19556d3f6682f102'
         '3bb6cf5cc49f0817911df42047f1f3f8'
         'fe6c0b1a832919c7288190149d3a8c01'
         'bc9073a42ca814fe886b86fd9ce64c41'
         'dc8264ae699c9fa9f5068bba5410e3fd'
         '1496ab83ac2924075dc0a5d31ed3fd3d'
         '478644357e9de77db8701dd64b31ccd0'
         '33afdfcacafacf2c061ca630d8fb7421'
         '8de5c7e34f3381783390b7f78ea5f434'
         '36c9772d1ac5026f9311bdf8bee6e669'
         '146492a38ca9ba1880cc3fed137657fe'
         'a84a0ceb87db6e1eec1724b0eb441724'
         '40ea3dc7ff045a9af5770d47cbbe90ce'
         '20930c0218366707bbde2f2cb6fa4b4b'
         'd1c491f8a76b2df286ef3a8f83b09b44'
         '27d4e81b66229a8863439392831ddfa0'
         'ec05e6ca1ab1c68692b371a7c3003172'
         'a17b2186b2a5b2418a18821af3807162'
         'cdd11b14619371818e54e540cb949d0b'
         'ab04834b5c79d1af99abf4925787d0fb'
         'f58f076d4d01a165a24268c95442e130'
         'fa0cb524efe8f0be2731b90d028d0805'
         '92177e4499711ae5fa157a12a3c9d0de'
         'ea6f2499cd51b967114bcea2b7df6a16'
         'f9655171e8142550787de600d537f668'
         '91ea48235765256c0ce5753e60f3c64f'
         '9447c2876a2b7196d7ee19f584e76461'
         '36819c72b80e9f773447b49a97337dcd')
