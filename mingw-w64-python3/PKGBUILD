# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Maintainer: Ray Donnelly <mingw.android@gmail.com>
# Contributor: Saul Ibarra Corretge <saghul@gmail.com>
# Contributor: Frode Solheim <frode@fs-uae.net>

# TODO :: subprocess.Popen .. specifically list2cmdline in subprocess.py
#         needs a fix so it can handle running MSYS2 executables better.
#         Arguments should not be quoted in the Windows fashion as-per:
#         http://www.daviddeley.com/autohotkey/parameters/parameters.htm
#         but instead how Cygwin expects them to be quoted. Checking for
#         {cygwin,msys-2.0}.dll in the executable is the only way that I
#         can think to do this at present.
#         Any double quoted string will cause problems, e.g.
#         -DGNOMELOCALEDIR=\"/mingw64/share/locale\"

_realname=python3
pkgbase="mingw-w64-${_realname}"
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
_pybasever=3.7
pkgver=${_pybasever}.0
pkgrel=2
pkgdesc="A high-level scripting language (mingw-w64)"
arch=('any')
license=('PSF')
url="https://www.python.org/"
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-expat"
         "${MINGW_PACKAGE_PREFIX}-bzip2"
         "${MINGW_PACKAGE_PREFIX}-libffi"
         "${MINGW_PACKAGE_PREFIX}-mpdecimal"
         "${MINGW_PACKAGE_PREFIX}-ncurses"
         "${MINGW_PACKAGE_PREFIX}-openssl"
         "${MINGW_PACKAGE_PREFIX}-tcl"
         "${MINGW_PACKAGE_PREFIX}-tk"
         "${MINGW_PACKAGE_PREFIX}-zlib"
         "${MINGW_PACKAGE_PREFIX}-xz"
         "${MINGW_PACKAGE_PREFIX}-sqlite3"
        )
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc" "${MINGW_PACKAGE_PREFIX}-pkg-config")
options=('makeflags') # 'debug' '!strip' )
source=("https://www.python.org/ftp/python/${pkgver%rc?}/Python-${pkgver}.tar.xz"
        0000-make-_sysconfigdata.py-relocatable.patch
        0001-fix-_nt_quote_args-using-subprocess-list2cmdline.patch
        0002-restore-setup-config.patch
        0100-MINGW-BASE-use-NT-thread-model.patch
        0110-MINGW-translate-gcc-internal-defines-to-python-platf.patch
        0130-MINGW-configure-MACHDEP-and-platform-for-build.patch
        0140-MINGW-preset-configure-defaults.patch
        0150-MINGW-configure-largefile-support-for-windows-builds.patch
        0170-MINGW-add-srcdir-PC-to-CPPFLAGS.patch
        0180-MINGW-init-system-calls.patch
        0200-MINGW-build-in-windows-modules-winreg.patch
        0210-MINGW-determine-if-pwdmodule-should-be-used.patch
        0230-MINGW-AC_LIBOBJ-replacement-of-fileblocks.patch
        0250-MINGW-compiler-customize-mingw-cygwin-compilers.patch
        0260-MINGW-compiler-enable-new-dtags.patch
        0290-issue6672-v2-Add-Mingw-recognition-to-pyport.h-to-al.patch
        0300-MINGW-configure-for-shared-build.patch
        0310-MINGW-dynamic-loading-support.patch
        0330-MINGW-ignore-main-program-for-frozen-scripts.patch
        0340-MINGW-setup-exclude-termios-module.patch
        0350-MINGW-setup-_multiprocessing-module.patch
        0360-MINGW-setup-select-module.patch
        0370-MINGW-setup-_ctypes-module-with-system-libffi.patch
        0380-MINGW-defect-winsock2-and-setup-_socket-module.patch
        0390-MINGW-exclude-unix-only-modules.patch
        0400-MINGW-setup-msvcrt-and-_winapi-modules.patch
        0410-MINGW-build-extensions-with-GCC.patch
        0420-MINGW-use-Mingw32CCompiler-as-default-compiler-for-m.patch
        0430-MINGW-find-import-library.patch
        0440-MINGW-setup-_ssl-module.patch
        0460-MINGW-generalization-of-posix-build-in-sysconfig.py.patch
        0462-MINGW-support-stdcall-without-underscore.patch
        0464-use-replace-instead-rename-to-avoid-failure-on-windo.patch
        0470-MINGW-avoid-circular-dependency-from-time-module-dur.patch
        0480-MINGW-generalization-of-posix-build-in-distutils-sys.patch
        0490-MINGW-customize-site.patch
        0500-add-python-config-sh.patch
        0510-cross-darwin-feature.patch
        0520-py3k-mingw-ntthreads-vs-pthreads.patch
        0530-mingw-system-libffi.patch
        0555-msys-mingw-prefer-unix-sep-if-MSYSTEM.patch
        0560-mingw-use-posix-getpath.patch
        0565-mingw-add-ModuleFileName-dir-to-PATH.patch
        0570-mingw-add-BUILDIN_WIN32_MODULEs-time-msvcrt.patch
        0610-msys-cygwin-semi-native-build-sysconfig.patch
        0620-mingw-sysconfig-like-posix.patch
        0630-mingw-_winapi_as_builtin_for_Popen_in_cygwinccompiler.patch
        0640-mingw-x86_64-size_t-format-specifier-pid_t.patch
        0650-cross-dont-add-multiarch-paths-if-cross-compiling.patch
        0660-mingw-use-backslashes-in-compileall-py.patch
        0670-msys-convert_path-fix-and-root-hack.patch
        0690-allow-static-tcltk.patch
        0720-mingw-pdcurses_ISPAD.patch
        0740-grammar-fixes.patch
        0750-builddir-fixes.patch
        0760-msys-monkeypatch-os-system-via-sh-exe.patch
        0770-msys-replace-slashes-used-in-io-redirection.patch
        0790-mingw-add-_exec_prefix-for-tcltk-dlls.patch
        0800-mingw-install-layout-as-posix.patch
        0810-remove_path_max.default.patch
        0820-dont-link-with-gettext.patch
        0830-ctypes-python-dll.patch
        0840-gdbm-module-includes.patch
        0845-3.7-_abs-mingw.patch
        0850-use-gnu_printf-in-format.patch
        0870-mingw-fix-ssl-dont-use-enum_certificates.patch
        0890-mingw-build-optimized-ext.patch
        0900-cygwinccompiler-dont-strip-modules-if-pydebug.patch
        0910-fix-using-dllhandle-and-winver-mingw.patch
        0920-mingw-add-LIBPL-to-library-dirs.patch
        0930-mingw-w64-build-overlapped-module.patch
        0940-mingw-w64-Also-define-_Py_BEGIN_END_SUPPRESS_IPH-when-Py_BUILD_CORE_MODULE.patch
        0970-Add-AMD64-to-sys-config-so-msvccompiler-get_build_version-works.patch
        0990-MINGW-link-with-additional-library.patch
        1010-install-msilib.patch
        1610-fix-have-wspawnv.patch
        1620-fix-signal-module-build.patch
        1630-build-winconsoleio.patch
        1650-expose-sem_unlink.patch
        1700-cygpty-isatty.patch
        1701-disable-broken-gdbm-module.patch
        1800-link-win-resource-files-and-build-pythonw.patch
        1810-3.7-mpdec-mingw.patch
        1830-mingw-implement-setenv-for-PY_COERCE_C_LOCALE.patch
        1840-fix-building-core-modules.patch
        1850-disable-readline.patch
        smoketests.py)

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying ${_patch}"
    patch -Nbp1 -i "${srcdir}/${_patch}"
  done
}

del_file_exists() {
  for _fname in "$@"
  do
    if [ -f ${_fname} ]; then
      rm -rf ${_fname}
    fi
  done
}
# =========================================== #

prepare() {
  cd "${srcdir}/Python-${pkgver}"

  # these are created by patches
  rm -f Misc/config_mingw \
        Misc/cross_mingw32 \
        Modules/Setup.config.in \
        Python/fileblocks.c

  plain "Apply Ray Donnelly's should-be-upstreamed patches"
  apply_patch_with_msg \
    0000-make-_sysconfigdata.py-relocatable.patch \
    0001-fix-_nt_quote_args-using-subprocess-list2cmdline.patch \
    0002-restore-setup-config.patch

  plain "Apply Roumen Petrov's core patches (10)"
  apply_patch_with_msg \
    0100-MINGW-BASE-use-NT-thread-model.patch \
    0110-MINGW-translate-gcc-internal-defines-to-python-platf.patch \
    0130-MINGW-configure-MACHDEP-and-platform-for-build.patch \
    0140-MINGW-preset-configure-defaults.patch \
    0150-MINGW-configure-largefile-support-for-windows-builds.patch \
    0170-MINGW-add-srcdir-PC-to-CPPFLAGS.patch \
    0180-MINGW-init-system-calls.patch \
    0200-MINGW-build-in-windows-modules-winreg.patch \
    0210-MINGW-determine-if-pwdmodule-should-be-used.patch \
    0230-MINGW-AC_LIBOBJ-replacement-of-fileblocks.patch

  plain "Apply Roumen Petrov's compiler patch (2)"
  apply_patch_with_msg \
    0250-MINGW-compiler-customize-mingw-cygwin-compilers.patch \
    0260-MINGW-compiler-enable-new-dtags.patch

  plain "Apply Roumen Petrov's extensions patches (21)"
  apply_patch_with_msg \
    0290-issue6672-v2-Add-Mingw-recognition-to-pyport.h-to-al.patch \
    0300-MINGW-configure-for-shared-build.patch \
    0310-MINGW-dynamic-loading-support.patch \
    0330-MINGW-ignore-main-program-for-frozen-scripts.patch \
    0340-MINGW-setup-exclude-termios-module.patch \
    0350-MINGW-setup-_multiprocessing-module.patch \
    0360-MINGW-setup-select-module.patch \
    0370-MINGW-setup-_ctypes-module-with-system-libffi.patch \
    0380-MINGW-defect-winsock2-and-setup-_socket-module.patch \
    0390-MINGW-exclude-unix-only-modules.patch \
    0400-MINGW-setup-msvcrt-and-_winapi-modules.patch \
    0410-MINGW-build-extensions-with-GCC.patch \
    0420-MINGW-use-Mingw32CCompiler-as-default-compiler-for-m.patch \
    0430-MINGW-find-import-library.patch \
    0440-MINGW-setup-_ssl-module.patch \
    0460-MINGW-generalization-of-posix-build-in-sysconfig.py.patch \
    0462-MINGW-support-stdcall-without-underscore.patch \
    0464-use-replace-instead-rename-to-avoid-failure-on-windo.patch \
    0470-MINGW-avoid-circular-dependency-from-time-module-dur.patch \
    0480-MINGW-generalization-of-posix-build-in-distutils-sys.patch \
    0490-MINGW-customize-site.patch

  plain "Apply Ray Donnelly's general/cross patches (42)"
  apply_patch_with_msg \
    0500-add-python-config-sh.patch \
    0510-cross-darwin-feature.patch \
    0520-py3k-mingw-ntthreads-vs-pthreads.patch \
    0530-mingw-system-libffi.patch \
    0555-msys-mingw-prefer-unix-sep-if-MSYSTEM.patch \
    0560-mingw-use-posix-getpath.patch \
    0565-mingw-add-ModuleFileName-dir-to-PATH.patch \
    0570-mingw-add-BUILDIN_WIN32_MODULEs-time-msvcrt.patch
  # 0610- changed to not using -DVPATH='"$(VPATH_b2h)"' anymore since VPATH is
  # relative, therefore getpath.c:355: joinpath(prefix, vpath) works naturally
  apply_patch_with_msg \
    0610-msys-cygwin-semi-native-build-sysconfig.patch \
    0620-mingw-sysconfig-like-posix.patch \
    0630-mingw-_winapi_as_builtin_for_Popen_in_cygwinccompiler.patch \
    0640-mingw-x86_64-size_t-format-specifier-pid_t.patch \
    0650-cross-dont-add-multiarch-paths-if-cross-compiling.patch \
    0660-mingw-use-backslashes-in-compileall-py.patch \
    0670-msys-convert_path-fix-and-root-hack.patch \
    0690-allow-static-tcltk.patch

  apply_patch_with_msg \
    0720-mingw-pdcurses_ISPAD.patch \
    0740-grammar-fixes.patch \
    0750-builddir-fixes.patch \
    0760-msys-monkeypatch-os-system-via-sh-exe.patch \
    0770-msys-replace-slashes-used-in-io-redirection.patch \
    0800-mingw-install-layout-as-posix.patch \
    0810-remove_path_max.default.patch \
    0820-dont-link-with-gettext.patch \
    0830-ctypes-python-dll.patch \
    0840-gdbm-module-includes.patch \
    0845-3.7-_abs-mingw.patch \
    0850-use-gnu_printf-in-format.patch \
    0870-mingw-fix-ssl-dont-use-enum_certificates.patch \
    0890-mingw-build-optimized-ext.patch \
    0900-cygwinccompiler-dont-strip-modules-if-pydebug.patch \
    0910-fix-using-dllhandle-and-winver-mingw.patch \
    0920-mingw-add-LIBPL-to-library-dirs.patch \
    0930-mingw-w64-build-overlapped-module.patch \
    0940-mingw-w64-Also-define-_Py_BEGIN_END_SUPPRESS_IPH-when-Py_BUILD_CORE_MODULE.patch \
    0970-Add-AMD64-to-sys-config-so-msvccompiler-get_build_version-works.patch \
    0990-MINGW-link-with-additional-library.patch \
    1010-install-msilib.patch
    
    #0790-mingw-add-_exec_prefix-for-tcltk-dlls.patch

  plain "New patches added for the update from 3.5.3 to 3.6.1"
  apply_patch_with_msg \
    1610-fix-have-wspawnv.patch \
    1620-fix-signal-module-build.patch \
    1630-build-winconsoleio.patch \
    1650-expose-sem_unlink.patch

  # Extend some isatty calls to check for mintty when checking for
  # a terminal output.
  # https://github.com/Alexpux/MINGW-packages/issues/2645
  # https://github.com/Alexpux/MINGW-packages/issues/2656
  apply_patch_with_msg \
    1700-cygpty-isatty.patch

  # gdbm is broken and as a result breaks dbm/shelve.
  # Don't include it so the dbm.dumb backend is used instead,
  # like with the official CPython build.
  apply_patch_with_msg \
    1701-disable-broken-gdbm-module.patch

  # https://github.com/Alexpux/MINGW-packages/issues/3139
  apply_patch_with_msg \
    1800-link-win-resource-files-and-build-pythonw.patch

  apply_patch_with_msg \
    1810-3.7-mpdec-mingw.patch \
    1830-mingw-implement-setenv-for-PY_COERCE_C_LOCALE.patch \
    1840-fix-building-core-modules.patch \
    1850-disable-readline.patch

  autoreconf -vfi

  # Temporary workaround for FS#22322
  # See https://bugs.python.org/issue10835 for upstream report
  #sed -i "/progname =/s/python/python${_pybasever}/" Python/pythonrun.c

  touch Include/graminit.h
  touch Python/graminit.c
  touch Parser/Python.asdl
  touch Parser/asdl.py
  touch Parser/asdl_c.py
  touch Include/Python-ast.h
  touch Python/Python-ast.c
  echo \"\" > Parser/pgen.stamp

  # Ensure that we are using the system copy of various libraries (expat, zlib and libffi),
  # rather than copies shipped in the tarball
  rm -r Modules/expat
  #rm -r Modules/zlib
  rm -r Modules/_ctypes/{darwin,libffi}*
}

check() {
  cd "${srcdir}/build-${CARCH}"

  # Some basic tests to ensure nothing major or MSYS2 specific features are
  # broken
  ./python.exe "${srcdir}/smoketests.py"
  MSYSTEM= ./python.exe "${srcdir}/smoketests.py"

  # make test EXTRATESTOPTS="-v"
}

build() {
  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})

  CFLAGS+=" -fwrapv -D__USE_MINGW_ANSI_STDIO=1 -D_WIN32_WINNT=0x0601"
  CXXFLAGS+=" -fwrapv -D__USE_MINGW_ANSI_STDIO=1 -D_WIN32_WINNT=0x0601"
  CPPFLAGS+=" -I${PREFIX_WIN}/include/ncursesw "

  declare -a _extra_config
  if check_option "strip" "y"; then
    LDFLAGS+=" -s "
  fi
  if check_option "debug" "n"; then
    CFLAGS+=" -DNDEBUG "
    CXXFLAGS+=" -DNDEBUG "
  else
    plain " -DDEBUG -DPy_DEBUG -D_DEBUG does not work unfortunately .."
    #    CFLAGS+=" -DDEBUG -DPy_DEBUG -D_DEBUG "
    #    CXXFLAGS+=" -DDEBUG -DPy_DEBUG -D_DEBUG "
    CFLAGS+=" -O0 -ggdb"
    CXXFLAGS+=" -O0 -ggdb"
    _extra_config+=("--with-pydebug")
  fi

  # Workaround for conftest error on 64-bit builds
  export ac_cv_working_tzset=no

  [[ -d "${srcdir}/build-${CARCH}" ]] && rm -rf "${srcdir}/build-${CARCH}"
  mkdir -p "${srcdir}/build-${CARCH}" && cd "${srcdir}/build-${CARCH}"

  MSYSTEM=MINGW ../Python-${pkgver}/configure \
    --prefix=${MINGW_PREFIX} \
    --host=${MINGW_CHOST} \
    --build=${MINGW_CHOST} \
    --enable-shared \
    --with-system-expat \
    --with-system-ffi \
    --with-system-libmpdec \
    --without-ensurepip \
    "${_extra_config[@]}" \
    OPT=""
    #--with-nt-threads

  make
}

package() {
  cd "${srcdir}/build-${CARCH}"

  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  MSYSTEM=MINGW \
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  make -j1 install DESTDIR="${pkgdir}"
  if check_option "debug" "n"; then
    VERABI=${_pybasever}m
  else
    VERABI=${_pybasever}dm
  fi

  # gdb pretty printers for debugging Python itself; to use:
  # python
  # sys.path.append('C:/msys64/mingw64/share/gdb/python3')
  # import python_gdb
  # reload(python_gdb)
  # end
  [[ -d "${pkgdir}${MINGW_PREFIX}"/share/gdb/python3/ ]] || mkdir -p "${pkgdir}${MINGW_PREFIX}"/share/gdb/python3/
  cp -f python.exe-gdb.py "${pkgdir}${MINGW_PREFIX}"/share/gdb/python3/python_gdb.py

  rm "${pkgdir}${MINGW_PREFIX}"/bin/2to3
  cp -f "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${VERABI}/libpython${VERABI}.dll.a "${pkgdir}${MINGW_PREFIX}"/lib/libpython${VERABI}.dll.a

  # Need for building boost python3 module
  cp -f "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${VERABI}/libpython${VERABI}.dll.a "${pkgdir}${MINGW_PREFIX}"/lib/libpython${_pybasever}.dll.a
  cp -f "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${VERABI}/libpython${VERABI}.dll.a "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${VERABI}/libpython${_pybasever}.dll.a

  # some useful "stuff"
  install -dm755 "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/{i18n,scripts}
  install -m755 "${srcdir}/Python-${pkgver}"/Tools/i18n/{msgfmt,pygettext}.py "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/i18n/
  install -m755 "${srcdir}/Python-${pkgver}"/Tools/scripts/{README,*py} "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/scripts/

  # clean up #!s
  find "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/ -name '*.py' | \
    xargs sed -i "s|#[ ]*![ ]*/usr/bin/env python$|#!/usr/bin/env python3|"

  # clean-up reference to build directory
  sed -i "s#${srcdir}/Python-${pkgver}:##" "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${VERABI}/Makefile

  for fscripts in 2to3-${_pybasever} idle3 idle${_pybasever} pydoc3 pydoc${_pybasever} pyvenv pyvenv-${_pybasever}; do
    sed -e "s|${PREFIX_WIN}/bin/python${_pybasever}.exe|/usr/bin/env python${_pybasever}.exe|g" -i "${pkgdir}${MINGW_PREFIX}"/bin/${fscripts}
  done

  sed -i "s|#!${pkgdir}${MINGW_PREFIX}/bin/python${VERABI}.exe|#!/usr/bin/env python${_pybasever}.exe|" "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${VERABI}/python-config.py

  # fix permissons
  find ${pkgdir}${MINGW_PREFIX} -type f \( -name "*.dll" -o -name "*.exe" \) | xargs chmod 0755

  # Fix up two instances of MSYS2 paths in python-config.sh in-case the final consumer of the results are native executables.
  sed -e "s|${MINGW_PREFIX}|${PREFIX_WIN}|" \
    -i "${pkgdir}${MINGW_PREFIX}"/bin/python${VERABI}-config \
    -i "${pkgdir}${MINGW_PREFIX}"/bin/python${_pybasever}-config \
    -i "${pkgdir}${MINGW_PREFIX}"/bin/python3-config

  # replace paths in sysconfig
  sed -i "s|${pkgdir}${MINGW_PREFIX}|${MINGW_PREFIX}|g" \
    "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/lib-dynload/_sysconfigdata*.py \
    "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/smtpd.py
}

sha256sums=('0382996d1ee6aafe59763426cf0139ffebe36984474d0ec4126dd1c40a8b3549'
            '5d9d0db2329c3b2ee57c47af99594d736ce0693c8eca6b60779ed9ccefd1149e'
            '2e773f19d425c355297a918986ff036fe11a6174f5c8dc55d208d8ceaf538571'
            '825c54ed62cb9a0e79fc1f60d1d4e8e7d83a5f41a53dc17fa5a2a63f0d728dfc'
            '8624b179fda5e2090d495a8ec77e33d3d390000d5cbdb778f719f56748d8535a'
            '1d2c95e6fc744a0a6a0d4927904a0f72c469282a2ed48b51074b7b81b8434cde'
            '6e1f3faead24a7b7abc5bdb9039eadb3a6816751eaa0b36fab7853d563ece2d1'
            'ed9308b9f2cfb43535dcd80673de6b4c15b63eef1a89a07bf7dc57aa28a78969'
            '8b38e6e7560c3d4eafca556b63fbf5403e43507457b18988c15386bde00f82bd'
            '937e203ffa3d06d1a0ee0a565d41a4410125c6a83a19bee6239a9a5fdccf25af'
            '9c6f71f5ef223632c34ffd4dbef1e69af6c49b5e19de21004dc25f1cf1367f4f'
            'cc017070cbce62dd14ca94a9cb281da376471c8b89b727b78223acedc48f0641'
            '75a1c81893b1d714b94f84a9630123af5b817abc5fb04d24a07edf0b3fd3fe6e'
            '30b69e40f26482b54c6dd55503ac3f774a0bf4b400c8db869948bc79dd4214f1'
            'b2b3c35f33d0c814a914044b8a1019614c50c29dbc212c563c02d8bf24e850a4'
            'a31acd0faed68401a0c929de14d97b21cda7e23adb10ee1742eef3c8b3d4e0d8'
            '7d9259136004f3e0cde7a9aeb7ef93d1b7db38aaf9b156b39ce4277a73938daa'
            'efec9fba5b63cd91b8c2c9cc9725cce7a57db07108158bfaf7214e5b91c31d05'
            'd139bb01d86f013c5038250d3a160485da000438fcb85a4e2ac75ec36653d8de'
            '1f11410b04263e4ad3aef3fd3794c6e9d72f38ee9777084aa77dfd61902d9097'
            '7660bfa1dffaddd4668c1e556deb728be0c91e3e45684d8682bd91726d2f8e07'
            '64dd1c8d0675c82abd3a270a7d810c51455e962f41689ae6b5986f61b3fb4a5a'
            '823ae704ef358880b024fa0cea87df8dfc55850f75d7ff8c78b3916cf02e3275'
            'bd0ce079e594f1312fe12591d951e31729da41e0c770293a2d13ae98466a5adc'
            '32c0ebcd8b4f558abbc05d5c7ca2c11bba71d57ed910489a3d636dd4795d2948'
            '6f2534578ebb2ffa36425c50465ee0ad196e27506d6ac7f3f5ffa5b9db8d7560'
            'affef168e5a8662c110c147ef76d1c7f1579114de6ce54f6643878dcda089706'
            '289ca1f7322a670ee89ac3a61defca829def425d5690e5eac2884c2899c85ff6'
            'dbc197219fe12f031c421d516c8445c8801245ed595c4fd32bc5a6af7e6d090f'
            '02c4b25f5de67b71220e49d6b9b45d5d6e6681a8c22e24e5a2f49c18f4348a9f'
            'e1ab5a8372c5aee2f2462ccf9137ff6f704b676922221f05aa6daa225f42d85b'
            '9a2c8bb95cf656c003f534b35b57f8cfedcb7380a7d5d396eeb63f3477800aa1'
            '39887ee7ac922fe26aa537aa14d3706616154ffe7cedd8aeb6ad104113f6e061'
            'ea3c24aed4f84087f9b475efccb45c4b0637906eb4b8841dfd12bf774bfb19cc'
            '4079b7e4f2eafb5c8b63c531153228a52cc411d9243a2f3e9e4d40b7cad16058'
            '6e785abec993d1ca031811f03e6fca63b414c96334bf95a8c55d8f22fe050549'
            '2b47bf9bd6e771481c7a3acaf8fc817ebcac89d9dfb9eafaeccc362b5d694b87'
            '96d9917f0fd66d3e2d2cbadee41fac4b5d059a95c8020caa7055313426f4a83f'
            '10701638d3cc24ee58351cfeb7fc51cf73876f1377344eb805172c55c7d6bbda'
            '63d75a9b2e70c209c24037b28365ee82da5b8895b68877443c551c08e565e035'
            '4675f4245861062b6b797173eb0351b60a9ef0fb616e72afa2c1577e231ca36b'
            '558b780999e9ae591ac665e44df49bae36778da8d61e3c7a38b52ead24b98d04'
            'fa0ace0f24e4458b720952edad41d6acb14b161ee7cf90c8e129288a97c338d2'
            'f31f8b180db2d3c6b2160cb127aa96f10162d8c88b67d5f31e0d838a9346218a'
            'd73760ff429ec8203933a17dc541c28f7798ee9696ab57148bf4bcb83934fbd8'
            '098f4f1dfbfb548a77f08bf226478527565a38fe56a45c7cae4fe52513f87620'
            '2b6b393db0275da2589f149c615028e458c22f7107f00e0752b1c16674e28a84'
            'e793efc0a7270b603a508c89c048b0b375dc32bf67f63829183ffbbdcbb68b28'
            '44be8a0861fc047efae9b5217d2717a8b8204cf315d5fc1fcab2a98cf6a0a3ba'
            '2ec7f8bda9a56d7db86bbac0bb730de0d8a835604874d12fb919aaed773dee5d'
            'c10184dcea5de5d9ffa98aa9c0cea2cbc6ed8277040bead6c69e0f6daf3c7592'
            '3745fd2e48083973a1adde5028f8f7d0fd4cb2335d310f737f8c0e1e8fdeb9b4'
            'd8eba4cc5e08190d968ac62571b1834e735a527ceb6cbb41bda006f0090fbea5'
            '507ed1bc3b5de5c5822555926a5d255af8c8f5d2e686773be4d17d44ad2b388f'
            '2a1d73a2d710969a3e2273712deb985351478d5c9d2b740c8c094ec7fafdc253'
            'e8435d6ba9f9890e5dcc9f59af26c9161c032b10cf1eca18a4d80f4e266a1157'
            '0e2eff65f646009edbc0630ecee34aeb5f937367bbe14d85b92fc429207f49c2'
            '177d34a5a6792eab873182212c074ff4e4ae8e1eddd180c03d2c0f507f45dd52'
            'b436a578bd9e8b6d8cdc247216f7c6bce4962cae67794b3ab8cca603f2890010'
            '20f178f1af127adc69d971966ee29c3c684c7d85f89171b4000bce6b45a04200'
            'dbaf97c870809a31ecd6b79cda29217f77ab342b3b8caac7af116e7fa6510047'
            'feb59f0474aad136b7631853c233335d5c5f941936ac7a32ea94eabafc2c662f'
            '75913daa9c4fb96145126a3830630587b575b6c83bb1bf8c64e598ad2417422c'
            '8852a1583b046ff3c0d439fa6ab151eaa4e807acf59e403dd037f77cc9e8ddf3'
            'a4542b674b90e139d33edd35baab358d9642ae3f241950b6c510ebafb1ca3641'
            '3239045870728f304e3aa45306c2e09504c130ec3b34d1954a28e46dc4b1e221'
            'ff2419439a9b8945cb7080343cd260421034c1c63d0af29ceede19e23b3d2a4b'
            'f0d486d1fdf6bd62340514f21d5becb0633239ab9534101bbbb3ac44c338c642'
            '00fd1882e3a23ea11fddfba106cbe4889d1e22a19804537ab3be236d5597db81'
            'ad965abba8140c1c5f367e544077e755cc65af3a1cc4b610dc0291d08dcb84eb'
            '74eb5ff5ce7505f51dc0d97f65440887f245d958f11028368ff4e2286ba30068'
            '6dcc10eb1cc000ff5ddf9bfdf3026a237321ccc2e26398b8f6dce75fe6da577b'
            'b1b05431ac86ed2e40c85a0c259e948406bc31e314fc18f67f86bb8af10c6754'
            'c2344e94c3a1a5b86368993b5ded2c4887b729b31864493e612acd8a42266733'
            '0818632dc43759afa70cee332822e5fb0e5a4f98d0b5e2f7ea1a52d0b990b81e'
            '7e0f533fb57e49e589568819f28da0ab4c475f5d59fcc2b594fdb16d9fb07cb3'
            '3759708ef8435ce77219695ed9ca28cb4b9d9a2c07455996f94189649c57765c'
            '2da38cde34a6e9084eee6e16ae5991a1ee230db0f2f68dbe82f3c855cd747e2c'
            'cd9e9b634e050ae04670d3d6e287261c123496ad3503134a513c62275d5e6b95'
            'ec23a0bf972ac8629d76ed6246c3ad291a6175751a7e303d7ac9fc4c4c28267c'
            'd4333e421289a43d324f8d46a323545bddbac640287b9a9a38e700c7221c5ece'
            '6bd29223634b2fc3e78ddff83d4c0e807da25fe280cddefd360984ab93edd7a3'
            'aa4f2f4aed732f1f10df665bb679be1371df732df4b91390fee2c3123261158d'
            '27c543d2d4a8830cf565cb1b5548108e00810e2bb924a02fcbe2b85bf141b94b'
            'bb33719ccf7cf3521ee1c965d0861067a3594eeb93ce7f5dcd22a10274d51b94'
            '8ede3ee5a9a7a1bc220d0fef0beed8b744201a8301a0affc986bcda14f2c31b5'
            '27628d4634ee274c93e204efd3af7514b466f30997260ec98f961a8785aaa865'
            'f4f5359b35741b703cbd22dc73438c181b8541e30b3f7614bd272f7cd2c59049')
