diff -Naur Python-3.5.2-orig/configure.ac Python-3.5.2/configure.ac
--- Python-3.5.2-orig/configure.ac	2016-07-12 14:21:50.147800700 +0300
+++ Python-3.5.2/configure.ac	2016-07-12 14:21:50.471800700 +0300
@@ -2021,7 +2021,7 @@
 AC_HEADER_STDC
 AC_CHECK_HEADERS(asm/types.h conio.h direct.h dlfcn.h errno.h \
 fcntl.h grp.h \
-ieeefp.h io.h langinfo.h libintl.h process.h pthread.h \
+ieeefp.h io.h langinfo.h libintl.h process.h \
 sched.h shadow.h signal.h stdint.h stropts.h termios.h \
 unistd.h utime.h \
 poll.h sys/devpoll.h sys/epoll.h sys/poll.h \
@@ -2734,9 +2734,11 @@
   :
 else
 if test "$with_threads" = "yes" -o -z "$with_threads"; then
-    AC_SEARCH_LIBS(sem_init, pthread rt posix4) # 'Real Time' functions on Solaris
-						# posix4 on Solaris 2.6
-						# pthread (first!) on Linux
+    if test "$ac_cv_ntthread" = "no" -o -z "$ac_cv_ntthread"; then
+        AC_SEARCH_LIBS(sem_init, pthread rt posix4) # 'Real Time' functions on Solaris
+							# posix4 on Solaris 2.6
+							# pthread (first!) on Linux
+    fi
 fi
 fi
 
@@ -5032,6 +5034,14 @@
 
 AC_CHECK_HEADERS(curses.h ncurses.h)
 
+# If using nt threads, don't look for pthread.h or thread.h
+if test "x$ac_cv_ntthread" = xno ; then
+AC_HEADER_STDC
+AC_CHECK_HEADERS(pthread.h thread.h)
+AC_HEADER_DIRENT
+AC_HEADER_MAJOR
+fi
+
 # On Solaris, term.h requires curses.h
 AC_CHECK_HEADERS(term.h,,,[
 #ifdef HAVE_CURSES_H
diff -Naur Python-3.5.2-orig/Python/condvar.h Python-3.5.2/Python/condvar.h
--- Python-3.5.2-orig/Python/condvar.h	2016-06-26 00:38:38.000000000 +0300
+++ Python-3.5.2/Python/condvar.h	2016-07-12 14:21:50.487300700 +0300
@@ -42,6 +42,12 @@
 
 #include "Python.h"
 
+#ifdef __MINGW32__
+# if !defined(HAVE_PTHREAD_H) || defined(NT_THREADS)
+#  undef _POSIX_THREADS
+# endif
+#endif
+
 #ifndef _POSIX_THREADS
 /* This means pthreads are not implemented in libc headers, hence the macro
    not present in unistd.h. But they still can be implemented as an external
diff -Naur Python-3.5.2-orig/Python/thread.c Python-3.5.2/Python/thread.c
--- Python-3.5.2-orig/Python/thread.c	2016-06-26 00:38:38.000000000 +0300
+++ Python-3.5.2/Python/thread.c	2016-07-12 14:21:50.495800700 +0300
@@ -7,6 +7,12 @@
 
 #include "Python.h"
 
+#ifdef __MINGW32__
+# if !defined(HAVE_PTHREAD_H) || defined(NT_THREADS)
+#  undef _POSIX_THREADS
+# endif
+#endif
+
 #ifndef _POSIX_THREADS
 /* This means pthreads are not implemented in libc headers, hence the macro
    not present in unistd.h. But they still can be implemented as an external
