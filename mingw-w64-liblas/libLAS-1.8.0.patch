diff -c -r libLAS-1.8.0.orig/cmake/CMakeLists.txt libLAS-1.8.0/cmake/CMakeLists.txt
*** libLAS-1.8.0.orig/cmake/CMakeLists.txt	2014-08-01 21:18:00.000000000 -0300
--- libLAS-1.8.0/cmake/CMakeLists.txt	2016-03-13 19:56:28.108228900 -0300
***************
*** 8,13 ****
--- 8,16 ----
  if (NOT WIN32)
    set(INSTALL_CMAKE_DIR "share/cmake/${PROJECT_NAME}-${VERSION}")
    set (PROJECT_ROOT_DIR "../../..")
+ elseif (MINGW)
+   set(INSTALL_CMAKE_DIR "lib/cmake/${PROJECT_NAME}")
+   set (PROJECT_ROOT_DIR "../../..")
  else ()
    set(INSTALL_CMAKE_DIR "cmake")
    set (PROJECT_ROOT_DIR "..")
diff -c -r libLAS-1.8.0.orig/cmake/modules/FindLASzip.cmake libLAS-1.8.0/cmake/modules/FindLASzip.cmake
*** libLAS-1.8.0.orig/cmake/modules/FindLASzip.cmake	2014-08-01 21:18:00.000000000 -0300
--- libLAS-1.8.0/cmake/modules/FindLASzip.cmake	2016-03-13 19:56:28.123857600 -0300
***************
*** 25,31 ****
    SET(LASZIP_FIND_QUIETLY TRUE)
  ENDIF()
  
! IF(WIN32)
    SET(OSGEO4W_IMPORT_LIBRARY laszip)
    IF(DEFINED ENV{OSGEO4W_ROOT})
      SET(OSGEO4W_ROOT_DIR $ENV{OSGEO4W_ROOT})
--- 25,31 ----
    SET(LASZIP_FIND_QUIETLY TRUE)
  ENDIF()
  
! IF(WIN32 AND NOT MINGW)
    SET(OSGEO4W_IMPORT_LIBRARY laszip)
    IF(DEFINED ENV{OSGEO4W_ROOT})
      SET(OSGEO4W_ROOT_DIR $ENV{OSGEO4W_ROOT})
***************
*** 36,59 ****
    ENDIF()
  ENDIF()
  
  
  FIND_PATH(LASZIP_INCLUDE_DIR
!   laszip.hpp
!   PATH_PREFIXES laszip
!   PATHS
!   /usr/include
!   /usr/local/include
!   ${OSGEO4W_ROOT_DIR}/include
!   NO_DEFAULT_PATH)
  
  SET(LASZIP_NAMES ${OSGEO4W_IMPORT_LIBRARY} laszip)
  
  FIND_LIBRARY(LASZIP_LIBRARY
!   NAMES ${LASZIP_NAMES}
!   PATHS
!   /usr/lib
!   /usr/local/lib
!   ${OSGEO4W_ROOT_DIR}/lib)
  
  IF(LASZIP_FOUND)
    SET(LASZIP_LIBRARIES ${LASZIP_LIBRARY})
--- 36,67 ----
    ENDIF()
  ENDIF()
  
+ SET(_laszip_SEARCH_DIRS
+   ${LASZIP_ROOT_DIR}
+   /usr/local
+   /sw # Fink
+   /opt/local # DarwinPorts
+   /opt/csw # Blastwave
+   /opt/lib/ceres
+ )
  
  FIND_PATH(LASZIP_INCLUDE_DIR
!   NAMES
!     laszip/laszip.hpp
!   HINTS
!     ${_laszip_SEARCH_DIRS}
!   PATH_SUFFIXES
!     include)
  
  SET(LASZIP_NAMES ${OSGEO4W_IMPORT_LIBRARY} laszip)
  
  FIND_LIBRARY(LASZIP_LIBRARY
!   NAMES
!     ${LASZIP_NAMES}
!   HINTS
!     ${_laszip_SEARCH_DIRS}
!   PATH_SUFFIXES
!     lib64 lib)
  
  IF(LASZIP_FOUND)
    SET(LASZIP_LIBRARIES ${LASZIP_LIBRARY})
diff -c -r libLAS-1.8.0.orig/CMakeLists.txt libLAS-1.8.0/CMakeLists.txt
*** libLAS-1.8.0.orig/CMakeLists.txt	2014-08-01 21:18:00.000000000 -0300
--- libLAS-1.8.0/CMakeLists.txt	2016-03-13 19:58:12.826196800 -0300
***************
*** 138,145 ****
  
    endif()
    
!   set(CMAKE_INCLUDE_PATH c:/osgeo4w64/include;$ENV{CMAKE_INCLUDE_PATH})
!   set(CMAKE_LIBRARY_PATH c:/osgeo4w64/lib;$ENV{CMAKE_LIBRARY_PATH})
  else()
  
    # Recommended C++ compilation flags
--- 138,147 ----
  
    endif()
    
!   if (NOT MINGW)
!     set(CMAKE_INCLUDE_PATH c:/osgeo4w64/include;$ENV{CMAKE_INCLUDE_PATH})
!     set(CMAKE_LIBRARY_PATH c:/osgeo4w64/lib;$ENV{CMAKE_LIBRARY_PATH})
!   endif()
  else()
  
    # Recommended C++ compilation flags
***************
*** 271,277 ****
  ###############################################################################
  # Installation settings
  
! if(WIN32)
    set(DEFAULT_LIB_SUBDIR lib)
    set(DEFAULT_DATA_SUBDIR .)
    set(DEFAULT_INCLUDE_SUBDIR include)
--- 273,279 ----
  ###############################################################################
  # Installation settings
  
! if(WIN32 AND NOT MINGW)
    set(DEFAULT_LIB_SUBDIR lib)
    set(DEFAULT_DATA_SUBDIR .)
    set(DEFAULT_INCLUDE_SUBDIR include)
***************
*** 397,402 ****
  
  add_custom_target(dist COMMAND ${CMAKE_MAKE_PROGRAM} package_source)
  
! if (WIN32)
      include(BuildOSGeo4W)
! endif(WIN32)
--- 399,404 ----
  
  add_custom_target(dist COMMAND ${CMAKE_MAKE_PROGRAM} package_source)
  
! if (WIN32 AND NOT MINGW)
      include(BuildOSGeo4W)
! endif(WIN32 AND NOT MINGW)
diff -c -r libLAS-1.8.0.orig/test/unit/spatialreference_test.cpp libLAS-1.8.0/test/unit/spatialreference_test.cpp
*** libLAS-1.8.0.orig/test/unit/spatialreference_test.cpp	2014-08-01 21:18:00.000000000 -0300
--- libLAS-1.8.0/test/unit/spatialreference_test.cpp	2016-03-13 19:56:28.123857600 -0300
***************
*** 110,116 ****
--- 110,120 ----
          liblas::Header const& header = reader.GetHeader();
          liblas::SpatialReference const& in_ref = header.GetSRS();
          
+ #ifdef _WIN64
          const char* utm15_wkt = "PROJCS[\"NAD83 / UTM zone 15N\",GEOGCS[\"NAD83\",DATUM[\"North_American_Datum_1983\",SPHEROID[\"GRS 1980\",6378137,298.2572221010002,AUTHORITY[\"EPSG\",\"7019\"]],AUTHORITY[\"EPSG\",\"6269\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433],AUTHORITY[\"EPSG\",\"4269\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-93],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AUTHORITY[\"EPSG\",\"26915\"]]";
+ #else
+         const char* utm15_wkt = "PROJCS[\"NAD83 / UTM zone 15N\",GEOGCS[\"NAD83\",DATUM[\"North_American_Datum_1983\",SPHEROID[\"GRS 1980\",6378137,298.2572221010042,AUTHORITY[\"EPSG\",\"7019\"]],AUTHORITY[\"EPSG\",\"6269\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433],AUTHORITY[\"EPSG\",\"4269\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-93],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AUTHORITY[\"EPSG\",\"26915\"]]";
+ #endif
          ensure_equals("Input WKT comparison", in_ref.GetWKT(), utm15_wkt);
  
          const char* epsg4326_wkt = "GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433],AUTHORITY[\"EPSG\",\"4326\"]]";
