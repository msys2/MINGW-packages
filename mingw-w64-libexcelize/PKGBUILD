# Contributor: https://github.com/taozuhong

_realname=excelize
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-lib${_realname}"
pkgver=2.9.0
pkgrel=1
pkgdesc='Library for reading and writing Microsoft Excelâ„¢ (XLAM / XLSM / XLSX / XLTM / XLTX) spreadsheets in Go. (mingw-w64)'
arch=('any')
mingw_arch=('mingw64' 'ucrt64' 'clang64' 'clangarm64')
url='https://github.com/qax-os/excelize'
license=('spdx:BSD-3-Clause')
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs")
makedepends=(${MINGW_PACKAGE_PREFIX}-cmake
             ${MINGW_PACKAGE_PREFIX}-go
             ${MINGW_PACKAGE_PREFIX}-cc
             ${MINGW_PACKAGE_PREFIX}-ninja
             git)
options=('!strip')
source=("main.go"
        "types_c.h"
        "go.mod"
        "go.sum"
        "excelize.pc.in")
sha256sums=('700d0d6b0efbcb178cb3cb94f2328992a3da0746a3d97073a538b892ec3272ae'
            'd1d3b0321d163b6472ee9ff13ffe561c5e5af64c4ff9d1ec56abb7d9819b6386'
            '46215080c349cf284be67c7a130ae5fbddbbcf0c54cbf2a552feb2fb22c05bf8'
            '9df08f4b1c40cfcb4034cd01ec0020e4408f09c2731a83aeb78c6d227c9db620'
            'de7d640685c501c0b93726b272d7589b07df00dd22169d77071ff20eb56256f8')

prepare() {
    cd "${srcdir}"
}

build() {
    cd "${srcdir}"
    [[ -d build-${MINGW_CHOST} ]] && rm -rf build-${MINGW_CHOST}
    mkdir -p build-${MINGW_CHOST}
    cp -f "${srcdir}/main.go" "${srcdir}/build-${MINGW_CHOST}"
    cp -f "${srcdir}/types_c.h" "${srcdir}/build-${MINGW_CHOST}"
    cp -f "${srcdir}/go.mod" "${srcdir}/build-${MINGW_CHOST}"
    cp -f "${srcdir}/go.sum" "${srcdir}/build-${MINGW_CHOST}"
    sed "s#MSYSTEM_PREFIX#$MSYSTEM_PREFIX#" "${srcdir}/excelize.pc.in" > "${srcdir}/build-${MINGW_CHOST}/excelize.pc"
    cd build-${MINGW_CHOST}

    export GOPROXY=direct 
    export GOOS=windows
    export GOROOT=${MINGW_PREFIX}/lib/go
    export CGO_CPPFLAGS="${CPPFLAGS}"
    export CGO_CFLAGS="${CFLAGS}"
    export CGO_CXXFLAGS="${CXXFLAGS}"
    export CGO_LDFLAGS="${LDFLAGS}"
    export GO_LDFLAGS="-s -w"
    # export GOFLAGS="-trimpath -mod=readonly -modcacherw -ldflags=-linkmode=external"
    
    go build -buildmode=c-archive -o excelize.a main.go
    go build -buildmode=c-shared -o excelize.dll main.go
}

package() {
    cd "build-${MINGW_CHOST}"
    install -Dm755 "excelize.dll" "${pkgdir}${MINGW_PREFIX}/bin/excelize.dll"
    install -Dm755 "excelize.a" "${pkgdir}${MINGW_PREFIX}/lib/excelize.a"
    install -Dm755 "excelize.pc" "${pkgdir}${MINGW_PREFIX}/lib/pkgconfig/excelize.pc"
    install -Dm755 "excelize.h" "${pkgdir}${MINGW_PREFIX}/include/excelize/excelize.h"
    install -Dm755 "types_c.h" "${pkgdir}${MINGW_PREFIX}/include/excelize/types_c.h"
}
