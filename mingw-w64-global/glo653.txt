diff -urp global-6.5.3/doc/global.info global-6.5-3/doc/global.info
--- global-6.5.3/doc/global.info	2016-03-18 17:04:47 +1000
+++ global-6.5-3/doc/global.info	2016-03-21 15:06:51 +1000
@@ -1,4 +1,4 @@
-This is global.info, produced by makeinfo version 6.1 from global.texi.
+This is global.info, produced by makeinfo version 6.0 from global.texi.
 
 INFO-DIR-SECTION Development
 START-INFO-DIR-ENTRY
@@ -2040,7 +2040,7 @@ The following options are available:
      Give a list of candidates of target files.  Files which are not on
      the list are ignored.  The argument file can be set to '-' to
      accept a list of files from the standard input.  File names must be
-     separated by newline.  You may use find
+     separated by newline.  You may use find(1).
 '--gtagsconf' file
      Set environment variable GTAGSCONF to file.
 '--gtagslabel' label
@@ -3145,7 +3145,7 @@ from the first one that exists and is re
    [sysconfdir] is '/usr/local/etc' by default; you can change it by the
 -sysconfdir option of configure script.
 
-   The format is almost same to termcap(5) except for some extensions
+   The format is similar to termcap(5) except for some extensions
 described later.  The file includes one or more records.  You should
 select a record using a label.  Default label is 'default'.  If
 GTAGSLABEL is set, its value is used.  Please be aware of the meaning of
@@ -3181,9 +3181,9 @@ Including another record
 Tc is a special variable; it read in definitions in another record.  It
 is similar to the tc of termcap(5).  Syntax is as follows:
 tc=label[@file]
-If only a label is given, tc read from a record specified by the label
-in the same file.  If @file is also given, tc read from a record
-specified by the label in the specified file.  File should be an
+If only a label is given, tc is read from a record specified by the
+label in the same file.  If @file is also given, tc is read from a
+record specified by the label in the specified file.  File should be an
 absolute path, and should not include variables.  Different from
 termcap(5), you can use tc anytime anywhere.
 
@@ -3774,14 +3774,14 @@ Node: Incremental updating51368
 Node: Reference52552
 Node: global53265
 Node: gtags65586
-Node: htags73147
-Node: htags-server82722
-Node: gozilla84603
-Node: gtags-cscope87599
-Node: globash99079
-Node: gtags.conf100294
-Node: Copying This Manual104054
-Node: GNU Free Documentation License104291
-Node: Index126682
+Node: htags73151
+Node: htags-server82726
+Node: gozilla84607
+Node: gtags-cscope87603
+Node: globash99083
+Node: gtags.conf100298
+Node: Copying This Manual104060
+Node: GNU Free Documentation License104297
+Node: Index126688
 
 End Tag Table
diff -urp global-6.5.3/doc/gtags.conf.ref global-6.5-3/doc/gtags.conf.ref
--- global-6.5.3/doc/gtags.conf.ref	2016-03-18 17:03:53 +1000
+++ global-6.5-3/doc/gtags.conf.ref	2016-03-22 09:54:24 +1000
@@ -22,14 +22,14 @@ and read from the first one that exists
 [sysconfdir] is @file{/usr/local/etc} by default; you can change it by the --sysconfdir
 option of configure script.
 
-The format is almost same to termcap(5) except for some extensions described
+The format is similar to termcap(5) except for some extensions described
 later.
 The file includes one or more records. You should select a record using a label.
 Default label is 'default'. If @var{GTAGSLABEL} is set, its value is used. Please be
-aware of the meaning of 'default' it is different from one of termcap(5).
+aware the meaning of 'default' is different to that of termcap(5).
 
 Lines starting with '#' are ignored.
-A record consists of one or more fields sepalated by ':' and ends with a newline.
+A record consists of one or more fields separated by ':' and ends with a newline.
 The first field must have a label name. Each field of the rest has a variable definition.
 There are three types in those variables.
 @table @asis
@@ -39,7 +39,7 @@ There are three types in those variables
 @end table
 Most variables are relevant to string type.
 
-If data includes ':' or newline, you need quote it by '\\'.
+If data includes ':' or newline, you need to quote it by '\\'.
 An empty field is permitted, but it doesn't make sense.
 
 When there is more than one definition, the previous one is adopted. 
@@ -47,18 +47,18 @@ Exceptionally, all values of skip, langm
 adopted and connected respectively.
 @unnumberedsubsec Variable substitution
 Variable substitution similar to sh(1) is available.
-You can refer any string variable using '$' prefix. For example, the following
+You can refer to any string variable using '$' prefix. For example, the following
 b has a value 'XYZ'.
 @example
 :a=Y:b=X$@{a@}Z:
 @end example
 @unnumberedsubsec Including another record
-Tc is a special variable; it read in definitions in another record.
+Tc is a special variable; it reads in definitions in another record.
 It is similar to the tc of termcap(5).
 Syntax is as follows:@*
 tc=label[@@file]@*
-If only a label is given, tc read from a record specified by the label
-in the same file. If @@file is also given, tc read from a record
+If only a label is given, tc is read from a record specified by the label
+in the same file. If @@file is also given, tc is read from a record
 specified by the label in the specified file.
 File should be an absolute path, and should not include variables.
 Different from termcap(5), you can use tc anytime anywhere.
diff -urp global-6.5.3/doc/gtags.ref global-6.5-3/doc/gtags.ref
--- global-6.5.3/doc/gtags.ref	2016-03-18 17:03:53 +1000
+++ global-6.5-3/doc/gtags.ref	2016-03-21 15:06:22 +1000
@@ -52,7 +52,7 @@ Files which are not on the list are igno
 The argument file can be set to @samp{-} to accept a list of
 files from the standard input.
 File names must be separated by newline.
-You may use find
+You may use find(1).
 @item @samp{--gtagsconf} file
 Set environment variable @var{GTAGSCONF} to file.
 @item @samp{--gtagslabel} label
diff -urp global-6.5.3/gtags/const.h global-6.5-3/gtags/const.h
--- global-6.5.3/gtags/const.h	2016-03-18 17:03:53 +1000
+++ global-6.5-3/gtags/const.h	2016-03-21 15:06:23 +1000
@@ -26,7 +26,7 @@ const char *help_const = "Options:\n\
        The argument file can be set to - to accept a list of\n\
        files from the standard input.\n\
        File names must be separated by newline.\n\
-       You may use find\n\
+       You may use find(1).\n\
 --gtagsconf file\n\
        Set environment variable GTAGSCONF to file.\n\
 --gtagslabel label\n\
diff -urp global-6.5.3/gtags/gtags.1 global-6.5-3/gtags/gtags.1
--- global-6.5.3/gtags/gtags.1	2016-03-18 17:03:53 +1000
+++ global-6.5-3/gtags/gtags.1	2016-03-21 15:06:23 +1000
@@ -57,7 +57,7 @@ Files which are not on the list are igno
 The argument \fIfile\fP can be set to \'-\' to accept a list of
 files from the standard input.
 File names must be separated by newline.
-You may use find
+You may use \fBfind\fP(1).
 .TP
 \fB--gtagsconf\fP \fIfile\fP
 Set environment variable \fBGTAGSCONF\fP to \fIfile\fP.
diff -urp global-6.5.3/gtags/manual.in global-6.5-3/gtags/manual.in
--- global-6.5.3/gtags/manual.in	2016-03-18 17:03:51 +1000
+++ global-6.5-3/gtags/manual.in	2016-03-21 12:22:37 +1000
@@ -68,7 +68,7 @@
 		The argument @arg{file} can be set to @val{-} to accept a list of
 		files from the standard input.
 		File names must be separated by newline.
-		You may use find
+		You may use @xref{find,1}.
 	@item{@option{--gtagsconf} @arg{file}}
 		Set environment variable @var{GTAGSCONF} to @arg{file}.
 	@item{@option{--gtagslabel} @arg{label}}
diff -urp global-6.5.3/gtags.conf global-6.5-3/gtags.conf
--- global-6.5.3/gtags.conf	2016-03-18 17:04:23 +1000
+++ global-6.5-3/gtags.conf	2016-03-22 10:46:47 +1000
@@ -69,9 +69,16 @@ user-custom|User custom plugin parser:\
 #
 exuberant-ctags|plugin-example|setting to use Exuberant Ctags plug-in parser:\
 	:tc=common:\
-	:ctagscom=/opt/local/bin/ctags:\
+	:ctagscom=ctags:\
 	:ctagslib=$libdir/gtags/exuberant-ctags.la:\
-	:tc=common-ctags-maps:
+	:tc=common-ctags-maps:\
+	:langmap=C++\:.c++.cc.cp.cpp.cxx.h.h++.hh.hp.hpp.hxx:\
+	:langmap=Fortran\:.f.for.ftn.f77.f90.f95:\
+	:langmap=OCaml\:.ml.mli:\
+	:langmap=Perl\:.pl.pm.plx.perl:\
+	:langmap=PHP\:.php.php3.phtml:\
+	:langmap=Sh\:.sh.SH.bsh.bash.ksh.zsh:\
+	:langmap=Vim\:.vim:
 #
 # A common map for both Exuberant Ctags and Universal Ctags.
 # Don't include definitions of ctagscom and ctagslib in this entry.
@@ -85,14 +92,12 @@ common-ctags-maps:\
 	:langmap=Basic\:.bas.bi.bb.pb:\
 	:langmap=BETA\:.bet:\
 	:langmap=C\:.c:\
-	:langmap=C++\:.c++.cc.cp.cpp.cxx.h.h++.hh.hp.hpp.hxx:\
 	:langmap=C#\:.cs:\
 	:langmap=Cobol\:.cbl.cob.CBL.COB:\
 	:langmap=DosBatch\:.bat.cmd:\
 	:langmap=Eiffel\:.e:\
-	:langmap=Erlang\: .erl.ERL.hrl.HRL:\
+	:langmap=Erlang\:.erl.ERL.hrl.HRL:\
 	:langmap=Flex\:.as.mxml:\
-	:langmap=Fortran\:.f.for.ftn.f77.f90.f95:\
 	:langmap=HTML\:.htm.html:\
 	:langmap=Java\:.java:\
 	:langmap=JavaScript\:.js:\
@@ -101,15 +106,11 @@ common-ctags-maps:\
 # Make	[Mm]akefile GNUmakefile			(out of support)
 	:langmap=Make\:.mak.mk:\
 	:langmap=MatLab\:.m:\
-	:langmap=OCaml\:.ml.mli:\
 	:langmap=Pascal\:.p.pas:\
-	:langmap=Perl\:.pl.pm.plx.perl:\
-	:langmap=PHP\:.php.php3.phtml:\
 	:langmap=Python\:.py.pyx.pxd.pxi.scons:\
 	:langmap=REXX\:.cmd.rexx.rx:\
 	:langmap=Ruby\:.rb.ruby:\
 	:langmap=Scheme\:.SCM.SM.sch.scheme.scm.sm:\
-	:langmap=Sh\:.sh.SH.bsh.bash.ksh.zsh:\
 	:langmap=SLang\:.sl:\
 	:langmap=SML\:.sml.sig:\
 	:langmap=SQL\:.sql:\
@@ -118,7 +119,6 @@ common-ctags-maps:\
 	:langmap=Vera\:.vr.vri.vrh:\
 	:langmap=Verilog\:.v:\
 	:langmap=VHDL\:.vhdl.vhd:\
-	:langmap=Vim\:.vim:\
 	:langmap=YACC\:.y:\
 	:gtags_parser=Asm\:$ctagslib:\
 	:gtags_parser=Asp\:$ctagslib:\
@@ -165,42 +165,42 @@ common-ctags-maps:\
 #
 universal-ctags|setting to use Universal Ctags plug-in parser:\
 	:tc=common:\
-	:ctagscom=/usr/local/bin/ctags:\
+	:ctagscom=ctags:\
 	:ctagslib=$libdir/gtags/universal-ctags.la:\
 	:tc=common-ctags-maps:\
 	:langmap=Ada\:.adb.ads.Ada:\
-	:langmap=Ant\:.ant.xml:\
+	:langmap=Ant\:.ant:\
 	:langmap=Clojure\:.clj:\
 	:langmap=CoffeeScript\:.coffee:\
-	:langmap=C++\:.inl:\
+	:langmap=C++\:.c++.cc.cp.cpp.cxx.h.h++.hh.hp.hpp.hxx.inl:\
 	:langmap=CSS\:.css:\
 	:langmap=ctags\:.ctags:\
 	:langmap=D\:.d.di:\
 	:langmap=Diff\:.diff.patch:\
 	:langmap=DTS\:.dts.dtsi:\
 	:langmap=Falcon\:.fal.ftd:\
-	:langmap=Fortran\:.f03.f08.f15:\
+	:langmap=Fortran\:.f.for.ftn.f77.f90.f95.f03.f08.f15:\
 # gdbinit .gdbinit				(out of support)
 	:langmap=gdbinit\:.gdb:\
 	:langmap=Go\:.go:\
 	:langmap=JSON\:.json:\
 	:langmap=m4\:.m4.spt:\
 	:langmap=ObjectiveC\:.mm.m.h:\
-	:langmap=OCaml\:.aug:\
-	:langmap=Perl\:.ph:\
+	:langmap=OCaml\:.ml.mli.aug:\
+	:langmap=Perl\:.pl.pm.plx.perl.ph:\
 	:langmap=Perl6\:.p6.pm6.pm.pl6:\
-	:langmap=PHP\:.php4.php5.php7:\
+	:langmap=PHP\:.php.php3.phtml.php4.php5.php7:\
 	:langmap=R\:.r.R.s.q:\
 	:langmap=reStructuredText\:.rest.reST.rst:\
 	:langmap=Rust\:.rs:\
-	:langmap=Sh\:.ash:\
+	:langmap=Sh\:.sh.SH.bsh.bash.ksh.zsh.ash:\
 	:langmap=SystemVerilog\:.sv.svh.svi:\
 # Vim	vimrc [._]vimrc gvimrc [._]gvimrc	(out of support)
-	:langmap=Vim\:.vba:\
+	:langmap=Vim\:.vim.vba:\
 	:langmap=WindRes\:.rc:\
 	:langmap=Zephir\:.zep:\
-	:langmap=DBusIntrospect\:.xml:\
-	:langmap=Glade\:.glade:\
+#	:langmap=DBusIntrospect\:.xml:\
+#	:langmap=Glade\:.glade:\
 	:gtags_parser=Ada\:$ctagslib:\
 	:gtags_parser=Ant\:$ctagslib:\
 	:gtags_parser=Clojure\:$ctagslib:\
@@ -222,14 +222,14 @@ universal-ctags|setting to use Universal
 	:gtags_parser=Rust\:$ctagslib:\
 	:gtags_parser=SystemVerilog\:$ctagslib:\
 	:gtags_parser=WindRes\:$ctagslib:\
-	:gtags_parser=Zephir\:$ctagslib:\
-	:gtags_parser=DBusIntrospect\:$ctagslib:\
-	:gtags_parser=Glade\:$ctagslib:
+	:gtags_parser=Zephir\:$ctagslib:
+#	:gtags_parser=DBusIntrospect\:$ctagslib:\
+#	:gtags_parser=Glade\:$ctagslib:
 #
 # Plug-in parser to use Pygments.
 #
 pygments-parser|Pygments plug-in parser:\
-	:ctagscom=/opt/local/bin/ctags:\
+	:ctagscom=ctags:\
 	:pygmentslib=$libdir/gtags/pygments-parser.la:\
 	:tc=common:\
 	:langmap=ABAP\:.abap:\
diff -urp global-6.5.3/gtags.conf.in global-6.5-3/gtags.conf.in
--- global-6.5.3/gtags.conf.in	2016-03-18 17:03:51 +1000
+++ global-6.5-3/gtags.conf.in	2016-03-22 10:46:46 +1000
@@ -71,7 +71,14 @@ exuberant-ctags|plugin-example|setting t
 	:tc=common:\
 	:ctagscom=@EXUBERANT_CTAGS@:\
 	:ctagslib=$libdir/gtags/exuberant-ctags.la:\
-	:tc=common-ctags-maps:
+	:tc=common-ctags-maps:\
+	:langmap=C++\:.c++.cc.cp.cpp.cxx.h.h++.hh.hp.hpp.hxx:\
+	:langmap=Fortran\:.f.for.ftn.f77.f90.f95:\
+	:langmap=OCaml\:.ml.mli:\
+	:langmap=Perl\:.pl.pm.plx.perl:\
+	:langmap=PHP\:.php.php3.phtml:\
+	:langmap=Sh\:.sh.SH.bsh.bash.ksh.zsh:\
+	:langmap=Vim\:.vim:
 #
 # A common map for both Exuberant Ctags and Universal Ctags.
 # Don't include definitions of ctagscom and ctagslib in this entry.
@@ -85,14 +92,12 @@ common-ctags-maps:\
 	:langmap=Basic\:.bas.bi.bb.pb:\
 	:langmap=BETA\:.bet:\
 	:langmap=C\:.c:\
-	:langmap=C++\:.c++.cc.cp.cpp.cxx.h.h++.hh.hp.hpp.hxx:\
 	:langmap=C#\:.cs:\
 	:langmap=Cobol\:.cbl.cob.CBL.COB:\
 	:langmap=DosBatch\:.bat.cmd:\
 	:langmap=Eiffel\:.e:\
-	:langmap=Erlang\: .erl.ERL.hrl.HRL:\
+	:langmap=Erlang\:.erl.ERL.hrl.HRL:\
 	:langmap=Flex\:.as.mxml:\
-	:langmap=Fortran\:.f.for.ftn.f77.f90.f95:\
 	:langmap=HTML\:.htm.html:\
 	:langmap=Java\:.java:\
 	:langmap=JavaScript\:.js:\
@@ -101,15 +106,11 @@ common-ctags-maps:\
 # Make	[Mm]akefile GNUmakefile			(out of support)
 	:langmap=Make\:.mak.mk:\
 	:langmap=MatLab\:.m:\
-	:langmap=OCaml\:.ml.mli:\
 	:langmap=Pascal\:.p.pas:\
-	:langmap=Perl\:.pl.pm.plx.perl:\
-	:langmap=PHP\:.php.php3.phtml:\
 	:langmap=Python\:.py.pyx.pxd.pxi.scons:\
 	:langmap=REXX\:.cmd.rexx.rx:\
 	:langmap=Ruby\:.rb.ruby:\
 	:langmap=Scheme\:.SCM.SM.sch.scheme.scm.sm:\
-	:langmap=Sh\:.sh.SH.bsh.bash.ksh.zsh:\
 	:langmap=SLang\:.sl:\
 	:langmap=SML\:.sml.sig:\
 	:langmap=SQL\:.sql:\
@@ -118,7 +119,6 @@ common-ctags-maps:\
 	:langmap=Vera\:.vr.vri.vrh:\
 	:langmap=Verilog\:.v:\
 	:langmap=VHDL\:.vhdl.vhd:\
-	:langmap=Vim\:.vim:\
 	:langmap=YACC\:.y:\
 	:gtags_parser=Asm\:$ctagslib:\
 	:gtags_parser=Asp\:$ctagslib:\
@@ -169,38 +169,38 @@ universal-ctags|setting to use Universal
 	:ctagslib=$libdir/gtags/universal-ctags.la:\
 	:tc=common-ctags-maps:\
 	:langmap=Ada\:.adb.ads.Ada:\
-	:langmap=Ant\:.ant.xml:\
+	:langmap=Ant\:.ant:\
 	:langmap=Clojure\:.clj:\
 	:langmap=CoffeeScript\:.coffee:\
-	:langmap=C++\:.inl:\
+	:langmap=C++\:.c++.cc.cp.cpp.cxx.h.h++.hh.hp.hpp.hxx.inl:\
 	:langmap=CSS\:.css:\
 	:langmap=ctags\:.ctags:\
 	:langmap=D\:.d.di:\
 	:langmap=Diff\:.diff.patch:\
 	:langmap=DTS\:.dts.dtsi:\
 	:langmap=Falcon\:.fal.ftd:\
-	:langmap=Fortran\:.f03.f08.f15:\
+	:langmap=Fortran\:.f.for.ftn.f77.f90.f95.f03.f08.f15:\
 # gdbinit .gdbinit				(out of support)
 	:langmap=gdbinit\:.gdb:\
 	:langmap=Go\:.go:\
 	:langmap=JSON\:.json:\
 	:langmap=m4\:.m4.spt:\
 	:langmap=ObjectiveC\:.mm.m.h:\
-	:langmap=OCaml\:.aug:\
-	:langmap=Perl\:.ph:\
+	:langmap=OCaml\:.ml.mli.aug:\
+	:langmap=Perl\:.pl.pm.plx.perl.ph:\
 	:langmap=Perl6\:.p6.pm6.pm.pl6:\
-	:langmap=PHP\:.php4.php5.php7:\
+	:langmap=PHP\:.php.php3.phtml.php4.php5.php7:\
 	:langmap=R\:.r.R.s.q:\
 	:langmap=reStructuredText\:.rest.reST.rst:\
 	:langmap=Rust\:.rs:\
-	:langmap=Sh\:.ash:\
+	:langmap=Sh\:.sh.SH.bsh.bash.ksh.zsh.ash:\
 	:langmap=SystemVerilog\:.sv.svh.svi:\
 # Vim	vimrc [._]vimrc gvimrc [._]gvimrc	(out of support)
-	:langmap=Vim\:.vba:\
+	:langmap=Vim\:.vim.vba:\
 	:langmap=WindRes\:.rc:\
 	:langmap=Zephir\:.zep:\
-	:langmap=DBusIntrospect\:.xml:\
-	:langmap=Glade\:.glade:\
+#	:langmap=DBusIntrospect\:.xml:\
+#	:langmap=Glade\:.glade:\
 	:gtags_parser=Ada\:$ctagslib:\
 	:gtags_parser=Ant\:$ctagslib:\
 	:gtags_parser=Clojure\:$ctagslib:\
@@ -222,9 +222,9 @@ universal-ctags|setting to use Universal
 	:gtags_parser=Rust\:$ctagslib:\
 	:gtags_parser=SystemVerilog\:$ctagslib:\
 	:gtags_parser=WindRes\:$ctagslib:\
-	:gtags_parser=Zephir\:$ctagslib:\
-	:gtags_parser=DBusIntrospect\:$ctagslib:\
-	:gtags_parser=Glade\:$ctagslib:
+	:gtags_parser=Zephir\:$ctagslib:
+#	:gtags_parser=DBusIntrospect\:$ctagslib:\
+#	:gtags_parser=Glade\:$ctagslib:
 #
 # Plug-in parser to use Pygments.
 #
diff -urp global-6.5.3/htags/completion.cgi global-6.5-3/htags/completion.cgi
--- global-6.5.3/htags/completion.cgi	2016-03-18 17:04:45 +1000
+++ global-6.5-3/htags/completion.cgi	2016-03-21 15:00:46 +1000
@@ -1,4 +1,4 @@
-#! /opt/local/bin/perl
+#! /bin/perl
 #
 # Copyright (c) 2010 Tama Communications Corporation
 #
@@ -11,7 +11,7 @@
 # implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 #
 $script_name = 'completion.cgi';
-$global_command = '/usr/local/bin/global';
+$global_command = 'c:/usr/bin/global';
 sub error_and_exit {
 	print STDERR "$script_name: " . $_[0];
 	exit 1;
@@ -66,15 +66,16 @@ if (-f "../GTAGSROOT" && open(GTAGSROOT,
 }
 chdir($gtagsroot);
 print "Content-Type: text/html\n\n";
-#
-# This code was commented out, because it may have a security hole in the future.
-# To use this code, please uncomment in your own responsibility.
-#
-#if ($^O eq 'MSWin32') {
-#	open(PIPE, $global_command . " -${flags}e $q |");
-#} else {
+if ($^O eq 'MSWin32') {
+	#
+	# This code was commented out, because it may have a security hole in the
+	# future.  To use this code, please uncomment in your own responsibility.
+	#
+	#open(PIPE, $global_command . " -${flags}e \"$q\" |");
+	error_and_exit("Feature not implemented.");
+} else {
 	open(PIPE, "-|") || exec $global_command, '-'.$flags.'e', $q;
-#}
+}
 if ($limit > 0) {
 	while (<PIPE>) {
 		print if ($limit-- > 0);
diff -urp global-6.5.3/htags/completion.cgi.in global-6.5-3/htags/completion.cgi.in
--- global-6.5.3/htags/completion.cgi.in	2016-03-18 17:03:51 +1000
+++ global-6.5-3/htags/completion.cgi.in	2016-03-21 10:51:52 +1000
@@ -66,15 +66,16 @@ if (-f "../GTAGSROOT" && open(GTAGSROOT,
 }
 chdir($gtagsroot);
 print "Content-Type: text/html\n\n";
-#
-# This code was commented out, because it may have a security hole in the future.
-# To use this code, please uncomment in your own responsibility.
-#
-#if ($^O eq 'MSWin32') {
-#	open(PIPE, $global_command . " -${flags}e $q |");
-#} else {
+if ($^O eq 'MSWin32') {
+	#
+	# This code was commented out, because it may have a security hole in the
+	# future.  To use this code, please uncomment in your own responsibility.
+	#
+	#open(PIPE, $global_command . " -${flags}e \"$q\" |");
+	error_and_exit("Feature not implemented.");
+} else {
 	open(PIPE, "-|") || exec $global_command, '-'.$flags.'e', $q;
-#}
+}
 if ($limit > 0) {
 	while (<PIPE>) {
 		print if ($limit-- > 0);
diff -urp global-6.5.3/htags/global.cgi global-6.5-3/htags/global.cgi
--- global-6.5.3/htags/global.cgi	2016-03-18 17:04:45 +1000
+++ global-6.5-3/htags/global.cgi	2016-03-21 15:00:46 +1000
@@ -1,4 +1,4 @@
-#! /opt/local/bin/perl
+#! /bin/perl
 #------------------------------------------------------------------
 # YOU ARE COMING TO THE DESTINATION ALMOST. PLEASE DO A LITTLE EFFORT.
 #
@@ -21,7 +21,7 @@
 # WITHOUT ANY WARRANTY, to the extent permitted by law; without even the
 # implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 #
-$global_command = '/usr/local/bin/global';
+$global_command = 'c:/usr/bin/global';
 sub header {
 	"Content-type: text/html\n\n" .
 	"<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN' 'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'>\
@@ -131,18 +131,19 @@ if ($?) {
 # of each line.
 #
 $flags = '-' . $flag . $iflag . $oflag . 'e';
-#
-# This code was commented out, because it may have a security hole in the future.
-# To use this code, please uncomment in your own responsibility.
-#
-#if ($^O eq 'MSWin32') {
-#	open(PIPE, "$global_command" . " --result=ctags-xid $flags $pattern |");
-#} else {
+if ($^O eq 'MSWin32') {
+	#
+	# This code was commented out, because it may have a security hole in the
+	# future.  To use this code, please uncomment in your own responsibility.
+	#
+	#open(PIPE, "$global_command" . " --result=ctags-xid $flags \"$pattern\" |");
+	error_and_exit("Feature not implemented.");
+} else {
 	open(PIPE, "-|") || exec "$global_command", '--result=ctags-xid', $flags, $pattern;
 	if ($?) {
 		error_and_exit("Cannot execute global.");
 	}
-#}
+}
 local(%ctab) = ('&', '&amp;', '<', '&lt;', '>', '&gt;');
 $pattern =~ s/([&<>])/$ctab{$1}/ge;
 local($tag, $lno, $filename);
diff -urp global-6.5.3/htags/global.cgi.in global-6.5-3/htags/global.cgi.in
--- global-6.5.3/htags/global.cgi.in	2016-03-18 17:03:51 +1000
+++ global-6.5-3/htags/global.cgi.in	2016-03-21 10:51:51 +1000
@@ -131,18 +131,19 @@ if ($?) {
 # of each line.
 #
 $flags = '-' . $flag . $iflag . $oflag . 'e';
-#
-# This code was commented out, because it may have a security hole in the future.
-# To use this code, please uncomment in your own responsibility.
-#
-#if ($^O eq 'MSWin32') {
-#	open(PIPE, "$global_command" . " --result=ctags-xid $flags $pattern |");
-#} else {
+if ($^O eq 'MSWin32') {
+	#
+	# This code was commented out, because it may have a security hole in the
+	# future.  To use this code, please uncomment in your own responsibility.
+	#
+	#open(PIPE, "$global_command" . " --result=ctags-xid $flags \"$pattern\" |");
+	error_and_exit("Feature not implemented.");
+} else {
 	open(PIPE, "-|") || exec "$global_command", '--result=ctags-xid', $flags, $pattern;
 	if ($?) {
 		error_and_exit("Cannot execute global.");
 	}
-#}
+}
 local(%ctab) = ('&', '&amp;', '<', '&lt;', '>', '&gt;');
 $pattern =~ s/([&<>])/$ctab{$1}/ge;
 local($tag, $lno, $filename);
diff -urp global-6.5.3/htags/htags.c global-6.5-3/htags/htags.c
--- global-6.5.3/htags/htags.c	2016-03-18 17:03:51 +1000
+++ global-6.5-3/htags/htags.c	2016-03-21 16:15:21 +1000
@@ -1658,14 +1658,8 @@ main(int argc, char **argv)
 	if (enable_xhtml) {
 		char src[MAXPATHLEN];
 		char dist[MAXPATHLEN];
-#ifdef __DJGPP__
-		const char *template = "";
 		snprintf(src, sizeof(src), "%s/gtags/style.css", datadir);
 		snprintf(dist, sizeof(dist), "%s/style.css", distpath);
-#else
-		snprintf(src, sizeof(src), "%s/gtags/style.css", datadir);
-		snprintf(dist, sizeof(dist), "%s/style.css", distpath);
-#endif
 		copyfile(src, dist);
 	}
 	if (auto_completion || tree_view) {
diff -urp global-6.5.3/libutil/conf.c global-6.5-3/libutil/conf.c
--- global-6.5.3/libutil/conf.c	2016-03-18 17:03:51 +1000
+++ global-6.5-3/libutil/conf.c	2016-03-21 16:18:34 +1000
@@ -470,10 +470,15 @@ getconfs(const char *name, STRBUF *resul
 				if (sb)
 					strbuf_puts(sb, DATADIR);
 			} else {
-				char path[MAX_PATH], *name;
+				char path[MAX_PATH], *name, *p;
 				GetModuleFileName(NULL, path, MAX_PATH);
-				name = strrchr(path, '\\');
-				strcpy(name+1, "..\\share");
+				for (p = name = path; *p; ++p) {
+					if (*p == '\\') {
+						*p = '/';
+						name = p+1;
+					}
+				}
+				strcpy(name, "../share");
 				if (sb)
 					strbuf_puts(sb, path);
 			}
diff -urp global-6.5.3/libutil/gtags.conf.5 global-6.5-3/libutil/gtags.conf.5
--- global-6.5.3/libutil/gtags.conf.5	2016-03-18 17:03:53 +1000
+++ global-6.5-3/libutil/gtags.conf.5	2016-03-22 09:54:45 +1000
@@ -27,14 +27,14 @@ and read from the first one that exists
 [sysconfdir] is \'/usr/local/etc\' by default; you can change it by the --sysconfdir
 option of configure script.
 .PP
-The format is almost same to \fBtermcap\fP(5) except for some extensions described
+The format is similar to \fBtermcap\fP(5) except for some extensions described
 later.
 The file includes one or more records. You should select a record using a label.
 Default label is 'default'. If \fBGTAGSLABEL\fP is set, its value is used. Please be
-aware of the meaning of 'default' it is different from one of \fBtermcap\fP(5).
+aware the meaning of 'default' is different to that of \fBtermcap\fP(5).
 .PP
 Lines starting with '#' are ignored.
-A record consists of one or more fields sepalated by ':' and ends with a newline.
+A record consists of one or more fields separated by ':' and ends with a newline.
 The first field must have a label name. Each field of the rest has a variable definition.
 There are three types in those variables.
 .TP
@@ -45,7 +45,7 @@ Number: This type has a number value aft
 String: This type has a string value after '='.
 Most variables are relevant to string type.
 .PP
-If data includes ':' or newline, you need quote it by '\\'.
+If data includes ':' or newline, you need to quote it by '\\'.
 An empty field is permitted, but it doesn't make sense.
 .PP
 When there is more than one definition, the previous one is adopted. 
@@ -53,20 +53,20 @@ Exceptionally, all values of \fBskip\fP,
 adopted and connected respectively.
 .SH "Variable substitution"
 Variable substitution similar to \fBsh\fP(1) is available.
-You can refer any string variable using '$' prefix. For example, the following
+You can refer to any string variable using '$' prefix. For example, the following
 \fBb\fP has a value 'XYZ'.
 .nf
 :a=Y:b=X${a}Z:
 .fi
 .SH "Including another record"
-\fBTc\fP is a special variable; it read in definitions in another record.
+\fBTc\fP is a special variable; it reads in definitions in another record.
 It is similar to the \fBtc\fP of \fBtermcap\fP(5).
 Syntax is as follows:
 .br
 \fBtc\fP=\fIlabel\fP[@\fIfile\fP]
 .br
-If only a \fIlabel\fP is given, \fBtc\fP read from a record specified by the \fIlabel\fP
-in the same file. If @\fIfile\fP is also given, \fBtc\fP read from a record
+If only a \fIlabel\fP is given, \fBtc\fP is read from a record specified by the \fIlabel\fP
+in the same file. If @\fIfile\fP is also given, \fBtc\fP is read from a record
 specified by the \fIlabel\fP in the specified \fIfile\fP.
 \fIFile\fP should be an absolute path, and should not include variables.
 Different from \fBtermcap\fP(5), you can use \fBtc\fP anytime anywhere.
diff -urp global-6.5.3/libutil/manual.in global-6.5-3/libutil/manual.in
--- global-6.5.3/libutil/manual.in	2016-03-18 17:03:51 +1000
+++ global-6.5-3/libutil/manual.in	2016-03-21 18:45:00 +1000
@@ -38,14 +38,14 @@
 	[sysconfdir] is @file{/usr/local/etc} by default; you can change it by the --sysconfdir
 	option of configure script.
 
-	The format is almost same to @xref{termcap,5} except for some extensions described
+	The format is similar to @xref{termcap,5} except for some extensions described
 	later.
 	The file includes one or more records. You should select a record using a label.
 	Default label is 'default'. If @var{GTAGSLABEL} is set, its value is used. Please be
-	aware of the meaning of 'default' it is different from one of @xref{termcap,5}.
+	aware the meaning of 'default' is different to that of @xref{termcap,5}.
 
 	Lines starting with '#' are ignored.
-	A record consists of one or more fields sepalated by ':' and ends with a newline.
+	A record consists of one or more fields separated by ':' and ends with a newline.
 	The first field must have a label name. Each field of the rest has a variable definition.
 	There are three types in those variables.
 	@begin_itemize
@@ -55,7 +55,7 @@
 	@end_itemize
 	Most variables are relevant to string type.
 
-	If data includes ':' or newline, you need quote it by '\\'.
+	If data includes ':' or newline, you need to quote it by '\\'.
 	An empty field is permitted, but it doesn't make sense.
 
 	When there is more than one definition, the previous one is adopted. 
@@ -63,18 +63,18 @@
 	adopted and connected respectively.
 @Variable substitution
 	Variable substitution similar to @xref{sh,1} is available.
-	You can refer any string variable using '$' prefix. For example, the following
+	You can refer to any string variable using '$' prefix. For example, the following
 	@name{b} has a value 'XYZ'.
 	@begin_verbatim
 	:a=Y:b=X${a}Z:
 	@end_verbatim
 @Including another record
-	@name{Tc} is a special variable; it read in definitions in another record.
+	@name{Tc} is a special variable; it reads in definitions in another record.
 	It is similar to the @name{tc} of @xref{termcap,5}.
 	Syntax is as follows:@br
 	@name{tc}=@arg{label}[@@@arg{file}]@br
-	If only a @arg{label} is given, @name{tc} read from a record specified by the @arg{label}
-	in the same file. If @@@arg{file} is also given, @name{tc} read from a record
+	If only a @arg{label} is given, @name{tc} is read from a record specified by the @arg{label}
+	in the same file. If @@@arg{file} is also given, @name{tc} is read from a record
 	specified by the @arg{label} in the specified @arg{file}.
 	@arg{File} should be an absolute path, and should not include variables.
 	Different from @xref{termcap,5}, you can use @name{tc} anytime anywhere.
@@ -104,10 +104,10 @@
 	By default, each of them has a directory path given by the configure
 	script.@br
 	@name{bindir}@br
-        @name{datadir}@br
-        @name{libdir}@br
-        @name{localstatedir}@br
-        @name{sysconfdir}@br
+	@name{datadir}@br
+	@name{libdir}@br
+	@name{localstatedir}@br
+	@name{sysconfdir}@br
 @ENVIRONMENT
 	The following environment variables affect the execution of the commands.
 
@@ -124,7 +124,7 @@
 	@xref{gtags,1},
 	@xref{htags,1}.
 
-        GNU GLOBAL source code tag system@br
-        (http://www.gnu.org/software/global/).
+	GNU GLOBAL source code tag system@br
+	(http://www.gnu.org/software/global/).
 @HISTORY
 	The @name{gtags.conf} file appeared in GLOBAL-3.0 (1998).
diff -urp global-6.5.3/plugin-factory/exuberant-ctags.c global-6.5-3/plugin-factory/exuberant-ctags.c
--- global-6.5.3/plugin-factory/exuberant-ctags.c	2016-03-18 17:03:51 +1000
+++ global-6.5-3/plugin-factory/exuberant-ctags.c	2016-03-21 17:41:55 +1000
@@ -97,7 +97,7 @@ copy_langmap_converting_cpp(char *dst, c
 #include <windows.h>
 #include <fcntl.h>
 static HANDLE pid;
-static char argv[] = "ctags "
+static char argv[] = "\" "
 #if defined(USE_EXTRA_FIELDS)
 	"\"--_xformat=%R %-16N %4n %-16F %C\" "
 	"--extra=+r "
@@ -117,12 +117,20 @@ start_ctags(const struct parser_param *p
 	STARTUPINFO si;
 	PROCESS_INFORMATION pi;
 	char* arg;
+	char *path = param->getconf("ctagscom");
 
-	arg = malloc(sizeof(argv) + strlen(param->langmap));
+	if (path && strlen(path) > 0 && strcmp(path, "no") != 0)
+		ctagscom = path;
+	if (!ctagscom || !strlen(ctagscom) || !strcmp(ctagscom, "no"))
+		param->die(ctagsnotfound);
+
+	arg = malloc(1 + strlen(ctagscom) + sizeof(argv) + strlen(param->langmap));
 	if (arg == NULL)
 		param->die("short of memory.");
-	strcpy(arg, argv);
-	copy_langmap_converting_cpp(arg + sizeof(argv) - 1, param->langmap);
+	*arg = '"';
+	strcpy(arg+1, ctagscom);
+	strcat(arg, argv);
+	copy_langmap_converting_cpp(arg + strlen(arg), param->langmap);
 
 	sa.nLength = sizeof(sa);
 	sa.bInheritHandle = TRUE;
@@ -138,7 +146,8 @@ start_ctags(const struct parser_param *p
 	si.hStdOutput = ipipe[1];
 	si.hStdError = GetStdHandle(STD_ERROR_HANDLE);
 	si.dwFlags = STARTF_USESTDHANDLES;
-	CreateProcess(NULL, arg, NULL, NULL, TRUE, 0, NULL, NULL, &si, &pi);
+	if (!CreateProcess(NULL, arg, NULL, NULL, TRUE, 0, NULL, NULL, &si, &pi))
+		param->die(ctagsnotfound);
 	CloseHandle(opipe[0]);
 	CloseHandle(ipipe[1]);
 	CloseHandle(pi.hThread);
diff -urp global-6.5.3/plugin-factory/PLUGIN_HOWTO.pygments global-6.5-3/plugin-factory/PLUGIN_HOWTO.pygments
--- global-6.5.3/plugin-factory/PLUGIN_HOWTO.pygments	2016-03-18 17:03:51 +1000
+++ global-6.5-3/plugin-factory/PLUGIN_HOWTO.pygments	2016-03-21 12:48:30 +1000
@@ -58,7 +58,7 @@ Please execute gtags(1) as usual.
 $ gtags
 
 If it is doubtful whether Pygments plug-in parser is used,
-please try --explaina option. It shows the libraries used by
+please try --explain option. It shows the libraries used by
 gtags.
 
 $ gtags --explain
diff -urp global-6.5.3/plugin-factory/pygments-parser.c global-6.5-3/plugin-factory/pygments-parser.c
--- global-6.5.3/plugin-factory/pygments-parser.c	2016-03-18 17:03:51 +1000
+++ global-6.5-3/plugin-factory/pygments-parser.c	2016-03-21 15:41:01 +1000
@@ -18,6 +18,9 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
+#ifdef __MINGW32__
+#define __USE_MINGW_ANSI_STDIO 0	/* no need for C99 sprintf here */
+#endif
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
@@ -102,10 +105,10 @@ start_process(const struct parser_param
 	GetModuleFileName(NULL, parser, MAX_PATH);
 	arg = strrchr(parser, '\\');
 	strcpy(arg+1, PYGMENTS_PARSER);
-	arg = malloc(sizeof(PYTHON) + strlen(parser) + sizeof(LANGMAP_OPTION) + strlen(param->langmap) + 1);
+	arg = malloc(sizeof(PYTHON) + strlen(parser) + sizeof(LANGMAP_OPTION) + strlen(param->langmap) + 2 + 1);
 	if (arg == NULL)
 		param->die("short of memory.");
-	len = sprintf(arg, "%s %s %s", PYTHON, parser, LANGMAP_OPTION);
+	len = sprintf(arg, "%s \"%s\" %s", PYTHON, parser, LANGMAP_OPTION);
 	copy_langmap_converting_cpp(arg + len, param->langmap);
 
 	sa.nLength = sizeof(sa);
diff -urp global-6.5.3/plugin-factory/pygments_parser.py global-6.5-3/plugin-factory/pygments_parser.py
--- global-6.5.3/plugin-factory/pygments_parser.py	2016-03-18 17:04:24 +1000
+++ global-6.5-3/plugin-factory/pygments_parser.py	2016-03-21 14:59:09 +1000
@@ -1,4 +1,4 @@
-#!/usr/local/bin/python
+#!/usr/bin/env python
 #
 # Copyright (c) 2014
 #	Yoshitaro Makise
@@ -27,7 +27,7 @@ import optparse
 import pygments.lexers
 from pygments.token import Token
 
-EXUBERANT_CTAGS = "/opt/local/bin/ctags"
+EXUBERANT_CTAGS = "ctags"
 
 # In most cases, lexers can be looked up with lowercase form of formal
 # language names. This dictionary defines exceptions.
