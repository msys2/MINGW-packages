From 4c5ec295ebdc63e183793d1727346bf71dbb96d5 Mon Sep 17 00:00:00 2001
From: albfan <albertofanjul@gmail.com>
Date: Thu, 25 Jul 2019 19:09:27 +0200
Subject: [PATCH] windows: Build pango_font_description_to_css on windows

---
 meson.build                            |   9 +-
 src/dazzle.h                           | 138 -------------------------
 src/files/dzl-recursive-file-monitor.c |  93 +++++++++++++++++
 src/meson.build                        |  19 ----
 src/util/meson.build                   |  29 ------
 tests/meson.build                      |   1 -
 6 files changed, 95 insertions(+), 194 deletions(-)

diff --git a/meson.build b/meson.build
index 2bf987a..643e9cc 100644
--- a/meson.build
+++ b/meson.build
@@ -86,6 +86,8 @@ test_c_args = [
   '-Wno-missing-field-initializers',
   '-Wno-sign-compare',
   '-Wno-unused-parameter',
+  '-Wno-unused-variable',
+  '-Wno-unused-value',
   '-Wold-style-definition',
   '-Wpointer-arith',
   '-Wredundant-decls',
@@ -94,12 +96,8 @@ test_c_args = [
   '-Wswitch-enum',
   '-Wundef',
   '-Wuninitialized',
-  '-Wunused',
   '-fno-strict-aliasing',
 ]
-if get_option('buildtype') != 'plain'
-  test_c_args += '-fstack-protector-strong'
-endif
 if get_option('enable_profiling')
   test_c_args += '-pg'
 endif
@@ -172,9 +170,6 @@ configure_file(
 gnome = import('gnome')
 
 subdir('src')
-subdir('tools')
-subdir('tests')
-subdir('examples/app')
 
 if get_option('enable_gtk_doc')
   subdir('doc')
diff --git a/src/dazzle.h b/src/dazzle.h
index b206337..e48d90c 100644
--- a/src/dazzle.h
+++ b/src/dazzle.h
@@ -34,145 +34,7 @@ G_BEGIN_DECLS
 #define DAZZLE_INSIDE
 #include "dzl-version.h"
 #include "dzl-enums.h"
-#include "actions/dzl-action-group.h"
-#include "actions/dzl-child-property-action.h"
-#include "actions/dzl-properties-group.h"
-#include "actions/dzl-settings-flag-action.h"
-#include "actions/dzl-widget-action-group.h"
-#include "animation/dzl-animation.h"
-#include "animation/dzl-box-theatric.h"
-#include "animation/dzl-frame-source.h"
-#include "app/dzl-application.h"
-#include "app/dzl-application-window.h"
-#include "bindings/dzl-binding-group.h"
-#include "bindings/dzl-signal-group.h"
-#include "cache/dzl-task-cache.h"
-#include "files/dzl-directory-model.h"
-#include "files/dzl-directory-reaper.h"
-#include "files/dzl-file-transfer.h"
-#include "files/dzl-recursive-file-monitor.h"
-#include "graphing/dzl-cpu-graph.h"
-#include "graphing/dzl-cpu-model.h"
-#include "graphing/dzl-graph-column.h"
-#include "graphing/dzl-graph-line-renderer.h"
-#include "graphing/dzl-graph-model.h"
-#include "graphing/dzl-graph-renderer.h"
-#include "graphing/dzl-graph-view.h"
-#include "menus/dzl-joined-menu.h"
-#include "menus/dzl-menu-button.h"
-#include "menus/dzl-menu-manager.h"
-#include "panel/dzl-dock-bin-edge.h"
-#include "panel/dzl-dock-bin.h"
-#include "panel/dzl-dock-item.h"
-#include "panel/dzl-dock-manager.h"
-#include "panel/dzl-dock-overlay-edge.h"
-#include "panel/dzl-dock-overlay.h"
-#include "panel/dzl-dock-paned.h"
-#include "panel/dzl-dock-revealer.h"
-#include "panel/dzl-dock-stack.h"
-#include "panel/dzl-dock-transient-grab.h"
-#include "panel/dzl-dock-types.h"
-#include "panel/dzl-dock-widget.h"
-#include "panel/dzl-dock-window.h"
-#include "panel/dzl-dock.h"
-#include "panel/dzl-tab-strip.h"
-#include "panel/dzl-tab.h"
-#include "pathbar/dzl-path.h"
-#include "pathbar/dzl-path-bar.h"
-#include "pathbar/dzl-path-element.h"
-#include "prefs/dzl-preferences-bin.h"
-#include "prefs/dzl-preferences-entry.h"
-#include "prefs/dzl-preferences-file-chooser-button.h"
-#include "prefs/dzl-preferences-flow-box.h"
-#include "prefs/dzl-preferences-font-button.h"
-#include "prefs/dzl-preferences-group.h"
-#include "prefs/dzl-preferences-page.h"
-#include "prefs/dzl-preferences-spin-button.h"
-#include "prefs/dzl-preferences-switch.h"
-#include "prefs/dzl-preferences-view.h"
-#include "prefs/dzl-preferences.h"
-#include "search/dzl-fuzzy-index.h"
-#include "search/dzl-fuzzy-index-builder.h"
-#include "search/dzl-fuzzy-index-cursor.h"
-#include "search/dzl-fuzzy-index-match.h"
-#include "search/dzl-fuzzy-mutable-index.h"
-#include "search/dzl-levenshtein.h"
-#include "search/dzl-pattern-spec.h"
-#include "search/dzl-trie.h"
-#include "settings/dzl-settings-sandwich.h"
-#include "shortcuts/dzl-shortcut-accel-dialog.h"
-#include "shortcuts/dzl-shortcut-chord.h"
-#include "shortcuts/dzl-shortcut-context.h"
-#include "shortcuts/dzl-shortcut-controller.h"
-#include "shortcuts/dzl-shortcut-label.h"
-#include "shortcuts/dzl-shortcut-manager.h"
-#include "shortcuts/dzl-shortcut-model.h"
-#include "shortcuts/dzl-shortcut-phase.h"
-#include "shortcuts/dzl-shortcut-simple-label.h"
-#include "shortcuts/dzl-shortcut-theme-editor.h"
-#include "shortcuts/dzl-shortcut-theme.h"
-#include "shortcuts/dzl-shortcut-tooltip.h"
-#include "shortcuts/dzl-shortcuts-group.h"
-#include "shortcuts/dzl-shortcuts-section.h"
-#include "shortcuts/dzl-shortcuts-shortcut.h"
-#include "shortcuts/dzl-shortcuts-window.h"
-#include "statemachine/dzl-state-machine-buildable.h"
-#include "statemachine/dzl-state-machine.h"
-#include "suggestions/dzl-suggestion-button.h"
-#include "suggestions/dzl-suggestion-entry-buffer.h"
-#include "suggestions/dzl-suggestion-entry.h"
-#include "suggestions/dzl-suggestion-popover.h"
-#include "suggestions/dzl-suggestion-row.h"
-#include "suggestions/dzl-suggestion.h"
-#include "theming/dzl-css-provider.h"
-#include "theming/dzl-theme-manager.h"
-#include "tree/dzl-list-store-adapter.h"
-#include "tree/dzl-tree.h"
-#include "tree/dzl-tree-builder.h"
-#include "tree/dzl-tree-node.h"
-#include "tree/dzl-tree-types.h"
-#include "util/dzl-cairo.h"
-#include "util/dzl-cancellable.h"
-#include "util/dzl-counter.h"
-#include "util/dzl-date-time.h"
-#include "util/dzl-dnd.h"
-#include "util/dzl-file-manager.h"
-#include "util/dzl-gdk.h"
-#include "util/dzl-gtk.h"
-#include "util/dzl-heap.h"
-#include "util/dzl-int-pair.h"
-#include "util/dzl-list-model-filter.h"
-#include "util/dzl-macros.h"
 #include "util/dzl-pango.h"
-#include "util/dzl-read-only-list-model.h"
-#include "util/dzl-rgba.h"
-#include "util/dzl-ring.h"
-#include "util/dzl-variant.h"
-#include "widgets/dzl-bin.h"
-#include "widgets/dzl-bolding-label.h"
-#include "widgets/dzl-box.h"
-#include "widgets/dzl-centering-bin.h"
-#include "widgets/dzl-column-layout.h"
-#include "widgets/dzl-counters-window.h"
-#include "widgets/dzl-elastic-bin.h"
-#include "widgets/dzl-empty-state.h"
-#include "widgets/dzl-entry-box.h"
-#include "widgets/dzl-file-chooser-entry.h"
-#include "widgets/dzl-list-box.h"
-#include "widgets/dzl-multi-paned.h"
-#include "widgets/dzl-pill-box.h"
-#include "widgets/dzl-priority-box.h"
-#include "widgets/dzl-progress-button.h"
-#include "widgets/dzl-progress-menu-button.h"
-#include "widgets/dzl-progress-icon.h"
-#include "widgets/dzl-radio-box.h"
-#include "widgets/dzl-scrolled-window.h"
-#include "widgets/dzl-search-bar.h"
-#include "widgets/dzl-simple-label.h"
-#include "widgets/dzl-simple-popover.h"
-#include "widgets/dzl-slider.h"
-#include "widgets/dzl-stack-list.h"
-#include "widgets/dzl-three-grid.h"
 #undef DAZZLE_INSIDE
 
 G_END_DECLS
diff --git a/src/files/dzl-recursive-file-monitor.c b/src/files/dzl-recursive-file-monitor.c
index 824fd83..6530fae 100644
--- a/src/files/dzl-recursive-file-monitor.c
+++ b/src/files/dzl-recursive-file-monitor.c
@@ -26,6 +26,99 @@
 #include "files/dzl-recursive-file-monitor.h"
 #include "util/dzl-macros.h"
 
+#include <io.h>
+#include <stdlib.h>
+#include <errno.h>
+
+
+/* realpath.c
+ * $Id$
+ *
+ * Provides an implementation of the "realpath" function, conforming
+ * approximately to SUSv3, and adapted for use on native Microsoft(R)
+ * Win32 platforms.
+ *
+ * Written by Keith Marshall <keithmarshall@users.sourceforge.net>
+ *
+ * This is free software.  You may redistribute and/or modify it as you
+ * see fit, without restriction of copyright.
+ *
+ * This software is provided "as is", in the hope that it may be useful,
+ * but WITHOUT WARRANTY OF ANY KIND, not even any implied warranty of
+ * MERCHANTABILITY, nor of FITNESS FOR ANY PARTICULAR PURPOSE.  At no
+ * time will the author accept any form of liability for any damages,
+ * however caused, resulting from the use of this software.
+ *
+ */
+
+_CRTIMP char __cdecl
+*realpath( const char *__restrict__ name, char *__restrict__ resolved )
+{
+  char *retname = NULL;  /* we will return this, if we fail */
+
+  /* SUSv3 says we must set `errno = EINVAL', and return NULL,
+   * if `name' is passed as a NULL pointer.
+   */
+
+  if( name == NULL )
+    errno = EINVAL;
+
+  /* Otherwise, `name' must refer to a readable filesystem object,
+   * if we are going to resolve its absolute path name.
+   */
+
+  else if( access( name, 4 ) == 0 )
+  {
+    /* If `name' didn't point to an existing entity,
+     * then we don't get to here; we simply fall past this block,
+     * returning NULL, with `errno' appropriately set by `access'.
+     *
+     * When we _do_ get to here, then we can use `_fullpath' to
+     * resolve the full path for `name' into `resolved', but first,
+     * check that we have a suitable buffer, in which to return it.
+     */
+
+    if( (retname = resolved) == NULL )
+    {
+      /* Caller didn't give us a buffer, so we'll exercise the
+       * option granted by SUSv3, and allocate one.
+       *
+       * `_fullpath' would do this for us, but it uses `malloc', and
+       * Microsoft's implementation doesn't set `errno' on failure.
+       * If we don't do this explicitly ourselves, then we will not
+       * know if `_fullpath' fails on `malloc' failure, or for some
+       * other reason, and we want to set `errno = ENOMEM' for the
+       * `malloc' failure case.
+       */
+
+      retname = malloc( _MAX_PATH );
+    }
+
+    /* By now, we should have a valid buffer.
+     * If we don't, then we know that `malloc' failed,
+     * so we can set `errno = ENOMEM' appropriately.
+     */
+
+    if( retname == NULL )
+      errno = ENOMEM;
+
+    /* Otherwise, when we do have a valid buffer,
+     * `_fullpath' should only fail if the path name is too long.
+     */
+
+    else if( (retname = _fullpath( retname, name, _MAX_PATH )) == NULL )
+      errno = ENAMETOOLONG;
+  }
+
+  /* By the time we get to here,
+   * `retname' either points to the required resolved path name,
+   * or it is NULL, with `errno' set appropriately, either of which
+   * is our required return condition.
+   */
+  
+  return retname;
+}
+
 #define MONITOR_FLAGS 0
 
 /**
diff --git a/src/meson.build b/src/meson.build
index d8c2afa..7a47cd9 100644
--- a/src/meson.build
+++ b/src/meson.build
@@ -44,26 +44,7 @@ libdazzle_public_headers = []
 libdazzle_public_sources = []
 libdazzle_private_sources = []
 
-subdir('actions')
-subdir('animation')
-subdir('app')
-subdir('bindings')
-subdir('cache')
-subdir('files')
-subdir('graphing')
-subdir('menus')
-subdir('panel')
-subdir('pathbar')
-subdir('prefs')
-subdir('search')
-subdir('settings')
-subdir('shortcuts')
-subdir('statemachine')
-subdir('suggestions')
-subdir('theming')
-subdir('tree')
 subdir('util')
-subdir('widgets')
 
 dzl_enums = gnome.mkenums('dzl-enums',
       h_template: 'dzl-enums.h.in',
diff --git a/src/util/meson.build b/src/util/meson.build
index 19cc951..95c73e2 100644
--- a/src/util/meson.build
+++ b/src/util/meson.build
@@ -1,38 +1,9 @@
 util_headers = [
-  'dzl-cairo.h',
-  'dzl-cancellable.h',
-  'dzl-date-time.h',
-  'dzl-dnd.h',
-  'dzl-file-manager.h',
-  'dzl-gdk.h',
-  'dzl-gtk.h',
-  'dzl-heap.h',
-  'dzl-int-pair.h',
-  'dzl-list-model-filter.h',
-  'dzl-macros.h',
   'dzl-pango.h',
-  'dzl-read-only-list-model.h',
-  'dzl-rgba.h',
-  'dzl-ring.h',
-  'dzl-variant.h',
 ]
 
 util_sources = [
-  'dzl-cairo.c',
-  'dzl-cancellable.c',
-  'dzl-date-time.c',
-  'dzl-dnd.c',
-  'dzl-file-manager.c',
-  'dzl-gdk.c',
-  'dzl-gtk.c',
-  'dzl-heap.c',
-  'dzl-list-model-filter.c',
   'dzl-pango.c',
-  'dzl-read-only-list-model.c',
-  'dzl-rgba.c',
-  'dzl-ring.c',
-  'dzl-util.c',
-  'dzl-variant.c',
 ]
 
 # No counters if building on win32 for now.
diff --git a/tests/meson.build b/tests/meson.build
index a202bbd..b63022b 100644
--- a/tests/meson.build
+++ b/tests/meson.build
@@ -318,7 +318,6 @@ test_directory_reaper = executable('test-directory-reaper', 'test-directory-reap
      link_args: test_link_args,
   dependencies: libdazzle_deps + [libdazzle_dep],
 )
-test('test-directory-reaper', test_directory_reaper, env: test_env)
 
 test_list_store_adapter = executable('test-list-store-adapter', 'test-list-store-adapter.c',
         c_args: test_cflags,
-- 
2.22.0

