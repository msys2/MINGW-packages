From 74be7adbbf0167a594c4dc20ba8605d58acc8ef4 Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Thu, 11 Oct 2018 11:32:28 +0100
Subject: [PATCH 1/6] clang-7.0 support: Update minimum clang version to 7

---
 configure    | 6 +++---
 configure.ac | 2 +-
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/configure b/configure
index 88873572..32267f14 100755
--- a/configure
+++ b/configure
@@ -15852,7 +15852,7 @@ fi
     as_fn_error $? "LLVM is required but program \`llvm-config' cannot be found in $with_llvm_path" "$LINENO" 5
   fi
 
-  if test -n "6.0"; then
+  if test -n "7.0"; then
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking for LLVM version" >&5
 $as_echo_n "checking for LLVM version... " >&6; }
     LLVM_VERSION=`$LLVM_CONFIG --version`
@@ -15877,7 +15877,7 @@ $as_echo "$LLVM_VERSION" >&6; }
                      -e 's/[^0-9]//g'`
 
 
-  ax_compare_version_B=`echo "6.0" | sed -e 's/\([0-9]*\)/Z\1Z/g' \
+  ax_compare_version_B=`echo "7.0" | sed -e 's/\([0-9]*\)/Z\1Z/g' \
                      -e 's/Z\([0-9]\)Z/Z0\1Z/g' \
                      -e 's/Z\([0-9][0-9]\)Z/Z0\1Z/g' \
                      -e 's/Z\([0-9][0-9][0-9]\)Z/Z0\1Z/g' \
@@ -15892,7 +15892,7 @@ x$ax_compare_version_B" | sed 's/^ *//' | sort -r | sed "s/x${ax_compare_version
     if test "$ax_compare_version" = "true" ; then
     :
     else
-        as_fn_error $? "LLVM version 6.0 or later is required" "$LINENO" 5
+        as_fn_error $? "LLVM version 7.0 or later is required" "$LINENO" 5
 
   fi
 
diff --git a/configure.ac b/configure.ac
index a2de73b1..e236ff94 100644
--- a/configure.ac
+++ b/configure.ac
@@ -37,7 +37,7 @@ AM_PROG_CC_C_O
 AC_PROG_CXX
 AC_PROG_LIBTOOL
 
-AX_LLVM([6.0],[engine])
+AX_LLVM([7.0],[engine])
 AX_CLANG
 
 # Handle configure-time choice of assertion-checking method.

From 2a9bbc334f71d3c6aa62de0f7a313a01e4c884e9 Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Wed, 10 Oct 2018 15:01:11 +0100
Subject: [PATCH 2/6] clang-7.0 support: Update for
 SrcManager::getExpansionRange() changes

---
 clang_delta/RemoveUnusedEnumMember.cpp | 10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

diff --git a/clang_delta/RemoveUnusedEnumMember.cpp b/clang_delta/RemoveUnusedEnumMember.cpp
index 8bf86735..fbce87a6 100644
--- a/clang_delta/RemoveUnusedEnumMember.cpp
+++ b/clang_delta/RemoveUnusedEnumMember.cpp
@@ -99,15 +99,13 @@ void RemoveUnusedEnumMember::removeEnumConstantDecl()
 {
   SourceLocation StartLoc = (*TheEnumIterator)->getLocStart();
   if (StartLoc.isMacroID()) {
-    std::pair<SourceLocation, SourceLocation> Locs =
-      SrcManager->getExpansionRange(StartLoc);
-    StartLoc = Locs.first;
+    CharSourceRange Range = SrcManager->getExpansionRange(StartLoc);
+    StartLoc = Range.getBegin();
   }
   SourceLocation EndLoc = (*TheEnumIterator)->getLocEnd();
   if (EndLoc.isMacroID()) {
-    std::pair<SourceLocation, SourceLocation> Locs =
-      SrcManager->getExpansionRange(EndLoc);
-    EndLoc = Locs.second;
+    CharSourceRange Range = SrcManager->getExpansionRange(EndLoc);
+    EndLoc = Range.getEnd();
   }
   SourceLocation CommaLoc = Lexer::findLocationAfterToken(
     EndLoc, tok::comma, *SrcManager, Context->getLangOpts(),

From 03179d9655c3579aa9ed9dd7fe55f2b9069dfa7f Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Wed, 10 Oct 2018 15:01:43 +0100
Subject: [PATCH 3/6] clang-7.0 support: Update for llvm::sys::fs::F_RW =>
 FA_Read | FA_Write

---
 clang_delta/TransformationManager.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/clang_delta/TransformationManager.cpp b/clang_delta/TransformationManager.cpp
index 89e9d720..1e56b907 100644
--- a/clang_delta/TransformationManager.cpp
+++ b/clang_delta/TransformationManager.cpp
@@ -223,7 +223,7 @@ llvm::raw_ostream *TransformationManager::getOutStream()
 
   std::error_code EC;
   llvm::raw_fd_ostream *Out = new llvm::raw_fd_ostream(
-      OutputFileName, EC, llvm::sys::fs::F_RW);
+      OutputFileName, EC, llvm::sys::fs::FA_Read | llvm::sys::fs::FA_Write);
   assert(!EC && "Cannot open output file!");
   return Out;
 }

From cfdb671f7df2ab3e58b2f2f56402d0425400449c Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Fri, 12 Oct 2018 10:50:49 +0100
Subject: [PATCH 6/6] Amend based on feedback regarding InclusionDirective

---
 clang_delta/ExpressionDetector.cpp | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/clang_delta/ExpressionDetector.cpp b/clang_delta/ExpressionDetector.cpp
index 1d0a59fc..f3cfd90e 100644
--- a/clang_delta/ExpressionDetector.cpp
+++ b/clang_delta/ExpressionDetector.cpp
@@ -64,7 +64,9 @@ class IncludesPPCallbacks : public PPCallbacks {
                           StringRef FileName, bool IsAngled,
                           CharSourceRange FilenameRange, const FileEntry *File,
                           StringRef SearchPath, StringRef RelativePath,
-                          const Module *Imported) override;
+                          const Module *Imported,
+                          SrcMgr::CharacteristicKind FileType) override;
+
 
 private:
   SourceManager &SrcManager;
@@ -84,7 +86,8 @@ void IncludesPPCallbacks::InclusionDirective(SourceLocation HashLoc,
                                             const FileEntry * /*File*/,
                                             StringRef /*SearchPath*/,
                                             StringRef /*RelativePath*/,
-                                            const Module * /*Imported*/)
+                                            const Module * /*Imported*/,
+                                            SrcMgr::CharacteristicKind /*FileType*/)
 {
   if (!SrcManager.isInMainFile(HashLoc))
     return;
