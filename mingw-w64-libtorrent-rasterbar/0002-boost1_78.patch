From 71d608fceca7e61c9d124f9ea83f71b06eda3b17 Mon Sep 17 00:00:00 2001
From: arvidn <arvid@libtorrent.org>
Date: Sun, 12 Dec 2021 21:52:15 +0100
Subject: [PATCH] update allocator sizes for boost-1.78

---
 include/libtorrent/aux_/allocating_handler.hpp | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/include/libtorrent/aux_/allocating_handler.hpp b/include/libtorrent/aux_/allocating_handler.hpp
index 726032e085..7096dfd2e6 100644
--- a/include/libtorrent/aux_/allocating_handler.hpp
+++ b/include/libtorrent/aux_/allocating_handler.hpp
@@ -77,11 +77,11 @@ namespace libtorrent { namespace aux {
 	constexpr std::size_t openssl_write_cost = 0;
 #endif
 
-	constexpr std::size_t read_handler_max_size = tracking + debug_read_iter + openssl_read_cost + 102 + 8 * sizeof(void*);
-	constexpr std::size_t write_handler_max_size = tracking + debug_write_iter + openssl_write_cost + 102 + 8 * sizeof(void*);
-	constexpr std::size_t udp_handler_max_size = tracking + debug_tick + 144 + 8 * sizeof(void*);
-	constexpr std::size_t utp_handler_max_size = tracking + debug_tick + 168 + 8 * sizeof(void*);
-	constexpr std::size_t tick_handler_max_size = tracking + debug_tick + 160;
+	constexpr std::size_t read_handler_max_size = tracking + debug_read_iter + openssl_read_cost + 102 + 9 * sizeof(void*);
+	constexpr std::size_t write_handler_max_size = tracking + debug_write_iter + openssl_write_cost + 102 + 9 * sizeof(void*);
+	constexpr std::size_t udp_handler_max_size = tracking + debug_tick + 144 + 9 * sizeof(void*);
+	constexpr std::size_t utp_handler_max_size = tracking + debug_tick + 168 + 9 * sizeof(void*);
+	constexpr std::size_t tick_handler_max_size = tracking + debug_tick + 168;
 	constexpr std::size_t abort_handler_max_size = tracking + debug_tick + 104;
 	constexpr std::size_t submit_handler_max_size = tracking + debug_tick + 104;
 	constexpr std::size_t deferred_handler_max_size = tracking + debug_tick + 112;
@@ -124,12 +124,12 @@ namespace libtorrent { namespace aux {
 #endif
 	constexpr std::size_t write_handler_max_size = tracking + debug_write_iter + openssl_write_cost + fuzzer_write_cost + 168;
 	constexpr std::size_t read_handler_max_size = tracking + debug_read_iter + openssl_read_cost + fuzzer_read_cost + 168;
-	constexpr std::size_t udp_handler_max_size = tracking + 160;
-	constexpr std::size_t utp_handler_max_size = tracking + 184;
+	constexpr std::size_t udp_handler_max_size = tracking + 168;
+	constexpr std::size_t utp_handler_max_size = tracking + 192;
 	constexpr std::size_t abort_handler_max_size = tracking + 72;
 	constexpr std::size_t submit_handler_max_size = tracking + 72;
 	constexpr std::size_t deferred_handler_max_size = tracking + 80;
-	constexpr std::size_t tick_handler_max_size = tracking + 128;
+	constexpr std::size_t tick_handler_max_size = tracking + 136;
 #endif
 
 	enum HandlerName
