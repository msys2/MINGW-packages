

pkgbase=mingw-w64-dxil-redist
pkgname=("${MINGW_PACKAGE_PREFIX}-dxil-redist")
pkgver=101.6.2112.13
pkgrel=1
pkgdesc='DXIL redistributable (mingw-w64)'
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32' 'clangarm64')
url="https://github.com/microsoft/DirectXShaderCompiler"
license=('spdx:custom')
depends=()
makedepends=("${MINGW_PACKAGE_PREFIX}-osslsigncode"
             "${MINGW_PACKAGE_PREFIX}-binutils")
options=('!strip')

case ${MSYSTEM} in
  MINGW32)
    _arch=x86
  ;;
  MINGW64)
    _arch=x64
  ;;
  UCRT64)
    _arch=x64
  ;;
  CLANG32)
    _arch=x86
  ;;
  CLANG64)
    _arch=x64
  ;;
  CLANGARM64)
    _arch=arm64
  ;;
esac

check() {
  # Binaries published on https://github.com/microsoft/DirectXShaderCompiler
  # depend on the Visual C++ runtime, while binaries distributed as part of
  # the Windows SDK depend on system libraries only.
  echo "Verifying dependency on VC runtime"
  [[ ! $(objdump -p "${srcdir}/../${_arch}/dxil.dll" | grep DLL | grep -Ei 'VCRUNTIME|MSVCP') ]]

  # Verify digital signature
  echo "Verifying digital signature"
  [[ $(osslsigncode verify -in "${srcdir}/../${_arch}/dxil.dll" | grep -Ei 'Subject|Issuer' | grep Microsoft) ]]

  # Verify version resource
  echo "Verifying version resource"
  [[ $(strings -d --encoding=l -n 12 "${srcdir}/../${_arch}/dxil.dll" | grep -F "${pkgver}") ]]

  case ${_arch} in
    arm64)
      _sha256sum=b6ac63dae07c3094234233c00c0f807f8b9a4f2f92221c6804821ca69e58bd46
    ;;
    x64)
      _sha256sum=35d7e11c93f4b21ca58daa28679d67163fc601adcf72435475f04eba9bdb7c1f
    ;;
    x86)
      _sha256sum=8b3d9d72399f8bf86f5fec58f157f09323c49a0190d7ae38949d53001f014daf
    ;;
  esac

  # Verify SHA-256 sum
  echo "Verifying sha256 checksum"
  [[ $(sha256sum -b "${srcdir}/../${_arch}/dxil.dll" | grep -F "${_sha256sum}") ]]
}

package() {
  install -Dm644 "${srcdir}/../${_arch}/dxil.dll" "${pkgdir}${MINGW_PREFIX}/bin/dxil.dll"
}
