# Maintainer: Konstantin Podsvirov <konstantin@podsvirov.pro>

_realname=texstudio
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=4.4.0
pkgrel=1
pkgdesc="Integrated writing environment for creating LaTeX documents (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32')
url="http://texstudio.sourceforge.net/"
license=('spdx: GPL-3.0-or-later')
depends=("${MINGW_PACKAGE_PREFIX}-poppler-qt6"
         "${MINGW_PACKAGE_PREFIX}-quazip-qt6"
         "${MINGW_PACKAGE_PREFIX}-hunspell"
         "${MINGW_PACKAGE_PREFIX}-qt6-svg"
         "${MINGW_PACKAGE_PREFIX}-qt6-declarative"
         "${MINGW_PACKAGE_PREFIX}-qt6-5compat")
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-qt6-tools")
optdepends=("${MINGW_PACKAGE_PREFIX}-evince: pdf reader")
source=("${_realname}-${pkgver}.tar.gz::https://github.com/texstudio-org/texstudio/archive/${pkgver}.tar.gz"
        '0001-texstudio-4.2.2-install-win32-as-unix.patch'
        '0002-texstudio-4.2.2-fallbackpaths-win32-as-unix.patch'
        '0003-texstudio-4.2.3-fix-cast-to-smaller-type.patch')
sha256sums=('f23e26cb6fa21cb1e434042faa3d6a7a76fa21e614ec6af133daf7af7cab1e56'
            'dd2a51b6a92b0ce0d6e650665a98ef6bb2a4d419c6d2ae3643891dba15d2fda4'
            '50695b93a29f9d0078d9a46e281a2366cae36d78d4ebd54e835151041fe7d359'
            '0fa4e827ac09d68921b6b647a10f12030edda85879bd14b68de7ecc427a0d131')

prepare() {
  cd ${srcdir}/${_realname}-${pkgver}

  patch -Np1 -i "${srcdir}"/0001-texstudio-4.2.2-install-win32-as-unix.patch
  patch -Np1 -i "${srcdir}"/0002-texstudio-4.2.2-fallbackpaths-win32-as-unix.patch
  patch -Np1 -i "${srcdir}"/0003-texstudio-4.2.3-fix-cast-to-smaller-type.patch
}

build() {
  cd "${srcdir}/${_realname}-${pkgver}"
  mkdir -p "${srcdir}/build-${MSYSTEM}" && cd "${srcdir}/build-${MSYSTEM}"

  declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    "${MINGW_PREFIX}"/bin/cmake.exe \
      -GNinja \
      -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}" \
      "${extra_config[@]}" \
      -DBUILD_{SHARED,STATIC}_LIBS=ON \
      ../${_realname}-${pkgver}

  "${MINGW_PREFIX}"/bin/cmake.exe --build .
}

package() {
  cd "${srcdir}/build-${MSYSTEM}"

  DESTDIR="${pkgdir}" "${MINGW_PREFIX}"/bin/cmake.exe --install .

  install -Dm644 "${srcdir}/${_realname}-${pkgver}/COPYING" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE"
}
