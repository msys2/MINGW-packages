--- a/openvdb/openvdb/io/Archive.cc
+++ b/openvdb/openvdb/io/Archive.cc
@@ -31,7 +31,7 @@
 
 #include <atomic>
 
-#ifdef _MSC_VER
+#ifdef _WIN32
 #include <boost/interprocess/detail/os_file_functions.hpp> // open_existing_file(), close_file()
 extern "C" __declspec(dllimport) bool __stdcall GetFileTime(
     void* fh, void* ctime, void* atime, void* mtime);
@@ -455,7 +455,7 @@
         mLastWriteTime = this->getLastWriteTime();
 
         if (mAutoDelete) {
-#ifndef _MSC_VER
+#ifndef _WIN32
             // On Unix systems, unlink the file so that it gets deleted once it is closed.
             ::unlink(mMap.get_name());
 #endif
@@ -485,7 +485,7 @@
         Index64 result = 0;
         const char* filename = mMap.get_name();
 
-#ifdef _MSC_VER
+#ifdef _WIN32
         // boost::interprocess::detail was renamed to boost::interprocess::ipcdetail in Boost 1.48.
         using namespace boost::interprocess::detail;
         using namespace boost::interprocess::ipcdetail;
--- a/openvdb/openvdb/io/Compression.h
+++ b/openvdb/openvdb/io/Compression.h
@@ -419,7 +419,7 @@
         writeData<HalfT>(os, reinterpret_cast<const HalfT*>(&halfData[0]), count, compression);
     }
 };
-#ifdef _MSC_VER
+#ifdef _WIN32
 /// Specialization to avoid double to float warnings in MSVC
 template<>
 struct HalfWriter</*IsReal=*/true, double> {
@@ -442,7 +442,7 @@
         writeData<HalfT>(os, reinterpret_cast<const HalfT*>(&halfData[0]), count, compression);
     }
 };
-#endif // _MSC_VER
+#endif // _WIN32
 
 
 ////////////////////////////////////////
--- a/openvdb/openvdb/io/File.cc
+++ b/openvdb/openvdb/io/File.cc
@@ -10,7 +10,7 @@
 #include <openvdb/util/logging.h>
 #include <cstdint>
 #include <boost/iostreams/copy.hpp>
-#ifndef _MSC_VER
+#ifndef _WIN32
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <unistd.h>
@@ -213,7 +213,7 @@
 
     std::string mesg = "could not get size of file " + filename();
 
-#ifdef _MSC_VER
+#ifdef _WIN32
     // Get the file size by seeking to the end of the file.
     std::ifstream fstrm(filename());
     if (fstrm) {
--- a/openvdb/openvdb/tools/ValueTransformer.h
+++ b/openvdb/openvdb/tools/ValueTransformer.h
@@ -139,7 +139,7 @@
     XformOp& op, bool threaded = true, bool shareOp = true,
     MergePolicy merge = MERGE_ACTIVE_STATES);
 
-#ifndef _MSC_VER
+#ifndef _WIN32
 template<typename InIterT, typename OutGridT, typename XformOp>
 inline void transformValues(const InIterT& inIter, OutGridT& outGrid,
     const XformOp& op, bool threaded = true, bool shareOp = true,
@@ -602,7 +602,7 @@
     }
 }
 
-#ifndef _MSC_VER
+#ifndef _WIN32
 template<typename InIterT, typename OutGridT, typename XformOp>
 inline void
 transformValues(const InIterT& inIter, OutGridT& outGrid, const XformOp& op,
--- a/openvdb/openvdb/tree/Tree.h
+++ b/openvdb/openvdb/tree/Tree.h
@@ -766,7 +766,7 @@
     /// @endcode
     template<typename CombineOp>
     void combine(Tree& other, CombineOp& op, bool prune = false);
-#ifndef _MSC_VER
+#ifndef _WIN32
     template<typename CombineOp>
     void combine(Tree& other, const CombineOp& op, bool prune = false);
 #endif
@@ -811,7 +811,7 @@
     /// @endcode
     template<typename ExtendedCombineOp>
     void combineExtended(Tree& other, ExtendedCombineOp& op, bool prune = false);
-#ifndef _MSC_VER
+#ifndef _WIN32
     template<typename ExtendedCombineOp>
     void combineExtended(Tree& other, const ExtendedCombineOp& op, bool prune = false);
 #endif
@@ -846,7 +846,7 @@
     /// @endcode
     template<typename CombineOp, typename OtherTreeType /*= Tree*/>
     void combine2(const Tree& a, const OtherTreeType& b, CombineOp& op, bool prune = false);
-#ifndef _MSC_VER
+#ifndef _WIN32
     template<typename CombineOp, typename OtherTreeType /*= Tree*/>
     void combine2(const Tree& a, const OtherTreeType& b, const CombineOp& op, bool prune = false);
 #endif
@@ -927,7 +927,7 @@
     template<typename ExtendedCombineOp, typename OtherTreeType /*= Tree*/>
     void combine2Extended(const Tree& a, const OtherTreeType& b, ExtendedCombineOp& op,
         bool prune = false);
-#ifndef _MSC_VER
+#ifndef _WIN32
     template<typename ExtendedCombineOp, typename OtherTreeType /*= Tree*/>
     void combine2Extended(const Tree& a, const OtherTreeType& b, const ExtendedCombineOp&,
         bool prune = false);
@@ -1759,7 +1759,7 @@
 
 /// @internal This overload is needed (for ICC and GCC, but not for VC) to disambiguate
 /// code like this: <tt>aTree.combine(bTree, MyCombineOp(...))</tt>.
-#ifndef _MSC_VER
+#ifndef _WIN32
 template<typename RootNodeType>
 template<typename CombineOp>
 inline void
@@ -1783,7 +1783,7 @@
 
 /// @internal This overload is needed (for ICC and GCC, but not for VC) to disambiguate
 /// code like this: <tt>aTree.combineExtended(bTree, MyCombineOp(...))</tt>.
-#ifndef _MSC_VER
+#ifndef _WIN32
 template<typename RootNodeType>
 template<typename ExtendedCombineOp>
 inline void
@@ -1807,7 +1807,7 @@
 
 /// @internal This overload is needed (for ICC and GCC, but not for VC) to disambiguate
 /// code like this: <tt>tree.combine2(aTree, bTree, MyCombineOp(...))</tt>.
-#ifndef _MSC_VER
+#ifndef _WIN32
 template<typename RootNodeType>
 template<typename CombineOp, typename OtherTreeType>
 inline void
@@ -1833,7 +1833,7 @@
 /// @internal This overload is needed (for ICC and GCC, but not for VC) to disambiguate
 /// code like the following, where the functor argument is a temporary:
 /// <tt>tree.combine2Extended(aTree, bTree, MyCombineOp(...))</tt>.
-#ifndef _MSC_VER
+#ifndef _WIN32
 template<typename RootNodeType>
 template<typename ExtendedCombineOp, typename OtherTreeType>
 inline void
--- a/openvdb/openvdb/unittest/TestAttributeArray.cc
+++ b/openvdb/openvdb/unittest/TestAttributeArray.cc
@@ -28,7 +28,7 @@
 #include <sstream>
 #include <iostream>
 
-#ifdef _MSC_VER
+#ifdef _WIN32
 #include <boost/interprocess/detail/os_file_functions.hpp> // open_existing_file(), close_file()
 // boost::interprocess::detail was renamed to boost::interprocess::ipcdetail in Boost 1.48.
 // Ensure that both namespaces exist.
@@ -1420,7 +1420,7 @@
 
     std::string tempDir;
     if (const char* dir = std::getenv("TMPDIR")) tempDir = dir;
-#ifdef _MSC_VER
+#ifdef _WIN32
     if (tempDir.empty()) {
         char tempDirBuffer[MAX_PATH+1];
         int tempDirLen = GetTempPath(MAX_PATH+1, tempDirBuffer);
--- a/openvdb/openvdb/unittest/TestPointDelete.cc
+++ b/openvdb/openvdb/unittest/TestPointDelete.cc
@@ -11,7 +11,7 @@
 #include <string>
 #include <vector>
 
-#ifdef _MSC_VER
+#ifdef _WIN32
 #include <windows.h>
 #endif
 
--- a/openvdb/openvdb/unittest/TestPointGroup.cc
+++ b/openvdb/openvdb/unittest/TestPointGroup.cc
@@ -13,7 +13,7 @@
 #include <string>
 #include <vector>
 
-#ifdef _MSC_VER
+#ifdef _WIN32
 #include <windows.h>
 #endif
 
@@ -482,7 +482,7 @@
 
         std::string tempDir;
         if (const char* dir = std::getenv("TMPDIR")) tempDir = dir;
-#ifdef _MSC_VER
+#ifdef _WIN32
         if (tempDir.empty()) {
             char tempDirBuffer[MAX_PATH+1];
             int tempDirLen = GetTempPath(MAX_PATH+1, tempDirBuffer);
--- a/openvdb/openvdb/unittest/TestStreamCompression.cc
+++ b/openvdb/openvdb/unittest/TestStreamCompression.cc
@@ -24,7 +24,7 @@
 #include <boost/uuid/uuid_io.hpp>
 #include <boost/version.hpp> // for BOOST_VERSION
 
-#ifdef _MSC_VER
+#ifdef _WIN32
 #include <boost/interprocess/detail/os_file_functions.hpp> // open_existing_file(), close_file()
 // boost::interprocess::detail was renamed to boost::interprocess::ipcdetail in Boost 1.48.
 // Ensure that both namespaces exist.
@@ -71,7 +71,7 @@
         {
             mLastWriteTime = 0;
             const char* regionFilename = mMap.get_name();
-#ifdef _MSC_VER
+#ifdef _WIN32
             using namespace boost::interprocess::detail;
             using namespace boost::interprocess::ipcdetail;
             using openvdb::Index64;
@@ -475,7 +475,7 @@
 
     std::string tempDir;
     if (const char* dir = std::getenv("TMPDIR")) tempDir = dir;
-#ifdef _MSC_VER
+#ifdef _WIN32
     if (tempDir.empty()) {
         char tempDirBuffer[MAX_PATH+1];
         int tempDirLen = GetTempPath(MAX_PATH+1, tempDirBuffer);
--- a/openvdb_houdini/openvdb_houdini/ParmFactory.h
+++ b/openvdb_houdini/openvdb_houdini/ParmFactory.h
@@ -231,7 +231,7 @@
 
 #if defined(GCC3)
     #define IS_DEPRECATED __attribute__ ((deprecated))
-#elif defined(_MSC_VER)
+#elif defined(_WIN32)
     #define IS_DEPRECATED __declspec(deprecated)
 #else
     #define IS_DEPRECATED
--- a/openvdb_houdini/openvdb_houdini/PointUtils.cc
+++ b/openvdb_houdini/openvdb_houdini/PointUtils.cc
@@ -1817,7 +1817,7 @@
 } // unnamed namespace
 
 
-#ifdef _MSC_VER
+#ifdef _WIN32
 
 OPENVDB_HOUDINI_API const PRM_ChoiceList
 VDBPointsGroupMenuInput1(PRM_CHOICELIST_TOGGLE, sopBuildVDBPointsGroupMenu);
