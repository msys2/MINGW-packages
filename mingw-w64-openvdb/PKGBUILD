# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=openvdb
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=9.0.0
pkgrel=1
pkgdesc="OpenVDB is an open source C++ library comprising a novel hierarchical data structure and a large suite of tools for the efficient storage and manipulation of sparse volumetric data discretized on three-dimensional grids (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32')
url="https://www.openvdb.org/"
license=("MPL 2.0")
depends=("${MINGW_PACKAGE_PREFIX}-blosc"
         "${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-intel-tbb"
         "${MINGW_PACKAGE_PREFIX}-ilmbase"
         "${MINGW_PACKAGE_PREFIX}-zlib")
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-boost"
             "${MINGW_PACKAGE_PREFIX}-python")
optdepends=("${MINGW_PACKAGE_PREFIX}-boost: Python bindings"
            "${MINGW_PACKAGE_PREFIX}-python: Python bindings")
checkdepends=("${MINGW_PACKAGE_PREFIX}-cppunit")
options=('!strip' 'buildflags' '!debug')
source=(${_realname}-${pkgver}.tar.gz::https://github.com/AcademySoftwareFoundation/openvdb/archive/v${pkgver}.tar.gz
        001-build-fixes.patch
        002-fix-find-cppunit.patch
        003-msvc-mingw.patch
        004-python-module-ext.patch
        005-fix-find-tbb.patch)
sha256sums=('ad3816e8f1931d1d6fdbddcec5a1acd30695d049dd10aa965096b2fb9972b468'
            'f1db73b0e41ade1fbfe4837c9f480186366cd7575102c44097613d6b387845b1'
            'e45ba2c3f28327fda7d6d25735dba247cab80f4794693a77b7842fb072db579b'
            '1063477bac8fa3e0671ed27b7bc0a1e916333ecc4c988404e834bf8e8572263e'
            '7872f17668f62d85f48cbae3004f8b3bde22c6694005b3940f52f24f9f249a0c'
            '30ba6db5afa34eeca0f893a34df41abc59fd70e9c808dc13b24837289f36029b')

prepare() {
  cd ${srcdir}/openvdb-${pkgver}
  patch -p1 -i ${srcdir}/001-build-fixes.patch
  patch -p1 -i ${srcdir}/002-fix-find-cppunit.patch
  patch -p1 -i ${srcdir}/003-msvc-mingw.patch

  patch -p1 -i ${srcdir}/004-python-module-ext.patch
  patch -p1 -i ${srcdir}/005-fix-find-tbb.patch
}

build() {
  [[ -d "${srcdir}"/build-${MSYSTEM} ]] && rm -rf "${srcdir}"/build-${MSYSTEM}
  mkdir -p "${srcdir}"/build-${MSYSTEM} && cd "${srcdir}"/build-${MSYSTEM}

  declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  CFLAGS+=" -D_USE_MATH_DEFINES"
  CXXFLAGS+=" -D_USE_MATH_DEFINES"

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake.exe \
    -G"Ninja" \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DUSE_BLOSC=ON \
    -DUSE_EXR=ON \
    -DUSE_EXPLICIT_INSTANTIATION=OFF \
    -DOPENVDB_CORE_SHARED=ON \
    -DOPENVDB_BUILD_PYTHON_MODULE=ON \
    -DPython_EXECUTABLE=${MINGW_PREFIX}/bin/python \
    -DPython_ROOT_DIR=${MINGW_PREFIX} \
    -DPython_FIND_REGISTRY=NEVER \
    ${extra_config} \
    ../openvdb-${pkgver}

  ${MINGW_PREFIX}/bin/cmake --build .
}

package() {
  cd "${srcdir}"/build-${MSYSTEM}
  DESTDIR=${pkgdir} ${MINGW_PREFIX}/bin/cmake --install .
  install -Dm644 ${srcdir}/openvdb-${pkgver}/LICENSE "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE"
}
