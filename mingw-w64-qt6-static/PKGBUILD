# Contributor: Mehdi Chinoune <mehdi.chinoune@hotmail.com>

_realname=qt6
pkgbase=mingw-w64-${_realname}-static
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}-static")
_qtver=6.2.0
pkgver=${_qtver/-/}
pkgrel=1
arch=(any)
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32')
url='https://www.qt.io'
license=(GPL3 LGPL3 FDL custom)
pkgdesc="A cross-platform application and UI framework (mingw-w64)"
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-vulkan-loader")
optdepends=("${MINGW_PACKAGE_PREFIX}-clang")
makedepends=("${MINGW_PACKAGE_PREFIX}-brotli"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-clang"
             "${MINGW_PACKAGE_PREFIX}-clang-tools-extra"
             "${MINGW_PACKAGE_PREFIX}-polly"
             "${MINGW_PACKAGE_PREFIX}-dbus"
             "${MINGW_PACKAGE_PREFIX}-openssl"
             "${MINGW_PACKAGE_PREFIX}-zlib"
             # "${MINGW_PACKAGE_PREFIX}-zstd"
             "${MINGW_PACKAGE_PREFIX}-pkgconf"
             "${MINGW_PACKAGE_PREFIX}-xmlstarlet"
             "${MINGW_PACKAGE_PREFIX}-vulkan-headers"
             "rsync")
options=('!strip')
_pkgfn="${_realname/6/}-everywhere-src-${_qtver}"
_install_prefix=${MINGW_PREFIX}/qt6-static
source=("https://download.qt.io/official_releases/qt/${pkgver%.*}/${_qtver}/single/${_pkgfn}.tar.xz"
        001-appending-qt6-to-remove-qt5-conflict.patch
        002-fix-qtdocs-helpers-cmake.patch
        003-qmng-fix-build.patch
        004-qt6-windeployqt-fixes.patch)
sha256sums=('60c2dc0ee86dd338e5c5194bd95922abfc097841e3e855693dfb4f5aaf0db4db'
            '4e15ba6335727e478af545294ab0aec16fa2eea90461c48c8b2fd7e3da54ac7c'
            '2b4d5302e59987ccf1e6958f7d02ecf4cb8aceb09a63748c1c304d07ade40ac5'
            '6d47d2e1874eaa23860e45385f471b2dbecf6e375bee5291260ad95a9e53cdd6'
            'abf3a39a0cf3173125b086f53f5d202e436194fdb897d928c813551db41df243')

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying ${_patch}"
    patch -Nbp1 -i "${srcdir}/${_patch}"
  done
}

prepare() {
  cd $srcdir/${_pkgfn}

  apply_patch_with_msg \
    001-appending-qt6-to-remove-qt5-conflict.patch \
    002-fix-qtdocs-helpers-cmake.patch \
    003-qmng-fix-build.patch \
    004-qt6-windeployqt-fixes.patch
}

build() {
  cd ${srcdir}
  [[ -d build-${MSYSTEM} ]] && rm -rf build-${MSYSTEM}
  mkdir -p build-${MSYSTEM}
  cd build-${MSYSTEM}

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=;-DCMAKE_CONFIGURATION_TYPES=" \
  cmake \
    -G "Ninja Multi-Config" \
    -DCMAKE_CONFIGURATION_TYPES="Release;Debug" \
    -DBUILD_SHARED_LIBS=OFF \
    -DCMAKE_INSTALL_PREFIX=${_install_prefix} \
    -DINSTALL_INCLUDEDIR=include/qt6 \
    -DINSTALL_ARCHDATADIR=share/qt6 \
    -DINSTALL_DATADIR=share/qt6 \
    -DINSTALL_MKSPECSDIR=share/qt6/mkspecs \
    -DINSTALL_DESCRIPTIONSDIR=share/qt6/modules \
    -DINPUT_openssl=linked \
    -DINPUT_dbus=linked \
    -DINPUT_libmd4c=qt \
    -DFEATURE_glib=OFF \
    -DFEATURE_system_assimp=OFF \
    -DFEATURE_system_doubleconversion=OFF \
    -DFEATURE_system_freetype=OFF \
    -DFEATURE_system_jpeg=OFF \
    -DFEATURE_system_pcre2=OFF \
    -DFEATURE_system_png=OFF \
    -DFEATURE_system_sqlite=OFF \
    -DFEATURE_system_tiff=OFF \
    -DFEATURE_system_webp=OFF \
    -DFEATURE_system_zlib=OFF \
    -DFEATURE_opengl=ON \
    -DFEATURE_opengl_desktop=ON \
    -DFEATURE_egl=OFF \
    -DFEATURE_gstreamer=OFF \
    -DFEATURE_icu=OFF \
    -DFEATURE_fontconfig=OFF \
    -DFEATURE_pkg_config=ON \
    -DFEATURE_vulkan=ON \
    -DFEATURE_sql_ibase=OFF \
    -DFEATURE_sql_psql=OFF \
    -DFEATURE_sql_mysql=OFF \
    -DFEATURE_sql_odbc=OFF \
    -DFEATURE_zstd=OFF \
    -DQT_BUILD_TESTS=OFF \
    -DQT_BUILD_EXAMPLES=OFF \
    -DBUILD_qttools=ON \
    -DBUILD_qtdoc=OFF \
    -DBUILD_qttranslations=ON \
    -DBUILD_qtwebengine=OFF \
    ../${_pkgfn}

  export PATH=$PWD/bin:$PATH

  cmake --build .
}

package() {
  DESTDIR=${pkgdir} cmake --install build-${MSYSTEM}

  install -d "${pkgdir}"${_install_prefix}/share/licenses/${_realname}
  install -Dm644 $_pkgfn/LICENSE* -t "${pkgdir}"${_install_prefix}/share/licenses/${_realname}

  # Restore qmake6 and qtpaths6
  ln -s ${pkgdir}${_install_prefix}/bin/qmake-qt6 ${pkgdir}${_install_prefix}/bin/qmake6.exe
  ln -s ${pkgdir}${_install_prefix}/bin/qtpaths-qt6 ${pkgdir}${_install_prefix}/bin/qtpaths6.exe

  # Fix *.pri, *.bat and *.cmake files
  local PREFIX_WIN=$(cygpath -m ${MINGW_PREFIX})
  find "${pkgdir}${MINGW_PREFIX}/qt6-static/share/qt6" -type f \( -name '*.pri' -o -name '*.bat' \) \
      -exec sed -i -e "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" {} \;
  find "${pkgdir}${MINGW_PREFIX}/qt6-static/bin" -type f \( -name '*.bat' \) \
      -exec sed -i -e "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" {} \;
  find "${pkgdir}${MINGW_PREFIX}/qt6-static/lib/cmake" -type f \( -name '*.cmake' \) \
      -exec sed -i -e "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" {} \;
}
