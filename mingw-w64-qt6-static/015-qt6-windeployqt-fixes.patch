--- a/qttools/src/windeployqt/main.cpp
+++ b/qttools/src/windeployqt/main.cpp
@@ -480,8 +480,5 @@
     options->quickImports = !parser->isSet(noQuickImportOption);
 
     // default to deployment of compiler runtime for windows desktop configurations
-    if (options->platform == WindowsDesktopMinGW || options->platform == WindowsDesktopMsvc
-            || parser->isSet(compilerRunTimeOption))
-        options->compilerRunTime = true;
     if (parser->isSet(noCompilerRunTimeOption))
         options->compilerRunTime = false;
@@ -1105,7 +1102,7 @@
      QStringList result;
     switch (platform) {
     case WindowsDesktopMinGW: { // MinGW: Add runtime libraries
-        static const char *minGwRuntimes[] = {"*gcc_", "*stdc++", "*winpthread"};
+        static const char *minGwRuntimes[] = {"*gcc_s_", "*stdc++", "*winpthread"};
         const QString gcc = findInPath(QStringLiteral("g++.exe"));
         if (gcc.isEmpty()) {
             std::wcerr << "Warning: Cannot find GCC installation directory. g++.exe must be in the path.\n";
@@ -1300,7 +1297,7 @@
         *errorMessage = QDir::toNativeSeparators(options.binaries.first()) +  QStringLiteral(" does not seem to be a Qt executable.");
         return result;
     }
-
+#if 0
     // Some Windows-specific checks: Qt5Core depends on ICU when configured with "-icu". Other than
     // that, Qt5WebKit has a hard dependency on ICU.
     if (options.platform.testFlag(WindowsBased))  {
@@ -1340,7 +1337,7 @@
             } // !icuLibs.isEmpty()
         } // Qt6Core/Qt6WebKit
     } // Windows
-
+#endif
     // Scan Quick2 imports
     QmlImportScanResult qmlScanResult;
     if (options.quickImports && usesQml2) {
